---
title: "Die Anatomie eines Roguelikes"
author: "Jörg Kantel"
date: "2022-12-14 16:40:00"
categories: [Spieleprogrammierung, Retrogaming]
image: "images/gameanatomie-s.jpg"
---

[![](images/gameanatomie.jpg)](https://miro.medium.com/max/720/1*ZkuU9e54so2oDn9obI9g9g.webp)

Manche Aufsätze sind einfach solch phantastische Fundgruben und Wissensquellen, daß man sie einfach nicht übergehen kann -- selbst wenn sie auf Medium.com hinter einer Bezahlschranke verborgen sind. Und in diese Kategorie gehört eindeutig der Beitrag »[The Anatomy of a Game: Sprites and Objects](https://javascript.plainenglish.io/objects-sprites-in-a-javascript-game-f378090a1d82) von *Nevin Katz*. Denn -- wie regelmäßige Leserinnen und Leser sicher wissen -- gehört meine stille Liebe den [Roguelikes](http://cognitiones.kantel-chaos-team.de/medien/retrogames/rogue.html), jenen Retro-Spielen, in denen kleine Sprites (manchmal sogar nur repräsentiert durch simple ASCII-Zeichen) über den Bildschirm wuseln und prozedural erzeugte Labyrinthe voller Monster, aber auch voller Schätze, erkunden müssen.

Und wer stirbt, der stirbt: Es gibt keine Extra-Leben. Der Spieler kann nur ein neues Labyrinth durchstreifen und die Hoffnung hegen, daß der Gott des Zufalls es dieses Mal besser mit ihm meint.

*Nevin Katz* hat sich also *Rogue of Rhondar* vorgeknöpft, ein Spiel, das ursprünglich in Cocos-2D für iOS (von ihm?) entwickelt wurde. Gegenstand seines Aufsatzes ist aber eine JavaScript-Version dieses Spieles. Er untersucht die einzelnen Elemente des Spieles wie Tiles und Sprites und die Canvas-API, seziert die einzelnen Klassen und alles so ausführlich und gründlich, daß ich mich frage, warum ich eigentlich noch kein Roguelike in Python implementiert habe. Ja, warum eigentlich nicht?

Wer dann -- wie ich -- Blut geleckt hat, für den gibt es auch noch die Aufsätze »[Building a Better Dungeon Level](https://betterprogramming.pub/building-a-better-dungeon-level-b04d133a6ca)« und »[Creating a Game Loop in JavaScript](https://betterprogramming.pub/creating-a-game-loop-in-javascript-4b4d51c18f67)«, beide ebenfalls von *Nevin Katz*.

Basis für *Nevin Katz* eigene Sprites war dieses freie »[Simple Dungeon Crawler 16x16 Pixel Art Asset Pack](https://o-lobster.itch.io/simple-dungeon-crawler-16x16-pixel-pack)« von *O_Lobster*. Sollte man sich ebenfalls merken, denn wer -- wieder wie ich -- noch nie von der Muse der Pixel-Artisten geküßt wurde, kann von frei verwendbaren Tiles und Sprites nicht genug besitzen.