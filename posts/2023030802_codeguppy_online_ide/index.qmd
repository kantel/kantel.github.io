---
title: "Neu in meinem Wiki: CodeGuppy -- JavaScript (nicht nur) für Kids"
author: "Jörg Kantel"
date: "2023-03-08 19:30:00"
categories: [CodeGuppy, JavaScript, P5.js, Creative Coding, Spieleprogrammierung]
image: "images/codeguppy.jpg"
---

[![](images/codeguppy-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/52734214151/)

Nachdem ich mir nun ein paar der [gestern vorgestellten](https://kantel.github.io/posts/2023030701_code_guppy/) Videos reingezogen habe, muß ich ein paar Angaben präzisieren: Der Mensch hinter dem YouTube-Kanal »[Coding Adventures](https://www.youtube.com/@CodingAdventures)« ist nicht der *Code Guppy* (auch wenn er unter diesem Namen in der Processing-Mailingliste auftritt), sondern es ist *[Marian Veteanu](https://mveteanu.me/)*, ein Programmierer aus Florida und er ist so etwas wie der Botschafter der (freien) Online-IDE »[CodeGuppy](https://codeguppy.com/)«, die es sich zur Aufgabe gemacht hat, Kindern und Jugendlichen sowie allen anderen an Informatik interessierten das Programmieren auf spielerische Weise beizubringen.

Dafür setzt CodeGuppy auf JavaScript, und zwar ein JavaScript, bei dem -- soweit ich das bisher herausbekommen habe -- eine aufgeborte Version von [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html), eine JavaScript Turtle-Bibliothek und eine ziemich ausgefeilte Game Engine (welche weiß ich noch nicht) werkelt. Der CodeGuppy kann als Online-IDE für JavaScript ungefähr das, was auch [Trinket](http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html) für HTML5 und Python kann, auch die Benutzeroberfläche ist ähnlich gestrickt.

Nur eines scheint nicht möglich zu sein: CodeGuppy besitzt eine große Sammlung an Assets (Bilder, Sprites und Sounds), die man in den Projekten nutzen kann, aber ich habe bisher noch keinen Weg gefunden, eigene Assets hochzuladen und mit CodeGuppy zu nutzen. Zwar könnte man die Bilder und Töne irgendwo sonst im Netz hochladen und dann via HTTP(S) in seine Skripte einbinden, aber dafür müßte man die *same origin policy* von JavaScript aushebeln, ein Vorgehen, das ich guten Gewissens nicht empfehlen kann.

<iframe width="560" height="315" src="https://www.youtube.com/embed/a4nNNF4SWj8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Aber vielleicht habe ich hier nur etwas übersehen? Was auf jeden Fall geht: CodeGuppy besitzt ein Modul, mit dem man eigene Sprites und Bilder als **Code** Pixel für Pixel erstellen und nutzen kann. Und zwar wird dafür ein Format benötigt, das offensichtlich auch auf [anderen Plattformen](https://arcade.makecode.com/) Verwendung findet. Nähere Einzelheiten findet Ihr in dem Video »[Makes games with custom sprites](https://www.youtube.com/watch?v=a4nNNF4SWj8)« aus der gestern schon vorgestellten Playlist »[JavaScript Coding Course](https://www.youtube.com/playlist?list=PLZld0zbNGbZRfjut6JI7ZLx8ZbTDa5zn-)«.

Der CodeGuppy muß früher schon mal durch meinen Feedreader geschwommen sein, denn ich hatte dort schon einen Account, dessen Existenz ich aber völlig vergessen hatte. Aber ich habe ihm heute **[eine Seite](http://cognitiones.kantel-chaos-team.de/programmierung/ides/codeguppy.html)** in [meinem Wiki](http://cognitiones.kantel-chaos-team.de/) spendiert, denn im Rahmen [meiner Chromebook-Nutzung](http://blog.schockwellenreiter.de/2021/12/2021120701.html) bekommen Online-IDEs wie Trinket oder eben der CodeGuppy einen ganz neuen Stellenwert.