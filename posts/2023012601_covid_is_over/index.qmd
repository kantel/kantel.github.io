---
title: "Covid is over -- oder? Simulationen mit Python, Pygame und Pymunk"
author: "Jörg Kantel"
date: "2023-01-26 18:35:00"
categories: [Simulation, Pygame, Pymunk, Python]
image: "images/hqdefault.jpg"
---

[![](images/hqdefault-b.jpg)](https://www.youtube.com/watch?v=yJK5J8a7NFs)

Auch wenn es nun von überall aus dem Blätterwald tönt, daß die Corona-Epidemie vorbei und das Virus besiegt sei -- ich bin da noch skeptisch. Und es schadet ja nicht, sich in einer Simulation den Verlauf einer Epidemie anzeigen zu lassen. Denn auch wenn eine Simulation immer nur ein (schwaches) Abbild der Realität ist, kann sie doch strukturelle Gesetzmäßigkeiten aufzeigen. Und sie ist -- speziell im Fall einer Epidemie -- oft das einzige Vorhersage- und Analyse-Instrument, das wir haben.

<iframe width="560" height="315" src="https://www.youtube.com/embed/yJK5J8a7NFs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Das hat sich auch der Pythonista und YouTuber mit dem schönen Screennamen *Ear of Corn* gedacht und mit [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) und der freien (MIT-Lizenz) Python-2D-Physikbibliothek [Pymunk](http://cognitiones.kantel-chaos-team.de/programmierung/python/pymunk.html) eine (einfache) Simulation einer Epidemie programmmiert. Seine Simulation ist für mich vor allem deshalb interessant, weil er darin Pygame mit der [Matplotlib](http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html) verbandelt hat -- ein Vorhaben, das schon lange auch auf meiner Agenda steht.

Außerdem nutzt er das freie (ebenfalls MIT-Lizenz) [Spyder](http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html) als Entwicklungsumgebung -- ein Werk- und Spielzeug, das ich auch mal wieder hervorkramen sollte.

Und wer jetzt Blut geleckt hat und mehr über Pymunk wissen will: Von *Ear of Corn* gibt es noch die Playlist »[Pymunk Basics](https://www.youtube.com/playlist?list=PL_N_kL9gRTm8lh7GxFHh3ym1RXi6I6c50)« mit sieben Videos je zwischen fünf und dreissig Minuten Spieldauer (Gesamtlaufzeit etwa eindreiviertel Stunde), die Euch alles über Pygame und Pymunk beibringen möchte, was Ihr jemals wissen wolltet, aber nie zu fragen wagtet.

<iframe width="560" height="315" src="https://www.youtube.com/embed/tLsi2DeUsak" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Und natürlich darf zu diesem Thema der omnipräsente Tim nicht fehlen. Denn auch von ihm gibt es ein etwa einstündiges Video-Tutorial »[Physics Simulations With Python and Pymunk](https://www.youtube.com/watch?v=tLsi2DeUsak)«. Ich habe es mir selber noch nicht angeschaut, aber die Marke *Tech With Tim* bürgt für Qualität.

<iframe width="560" height="315" src="https://www.youtube.com/embed/KAmZe5D3v5I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Weniger sicher bin ich mir bei dem etwa halbstündigen Tutorial »[Simulating COVID-19 using Python, NumPy and Matplotlib](https://www.youtube.com/watch?v=KAmZe5D3v5I)«. Aber es verspricht, in die »Tiefe zu gehen« und kommt ohne Pygame aus. Der Zugang ist daher vermutlich mathematischer. Das Video ist Teil der Playlist »[Let's Visualize Data](https://www.youtube.com/playlist?list=PLDBeG9ubvsktYoxLAYHp-NdJ4faa_m8Z7)« mit einer Gesamtlaufzeit von knapp einer Stunde (dort gibt es unter anderem auch noch das zur Thematik passende Tutorial »[The Spread of Seven Epdemics (Python animated visualization)](https://www.youtube.com/watch?v=uNs8cb8V-5c)«. Schaun wir mal, was das bringt und ob uns das schlauer macht …