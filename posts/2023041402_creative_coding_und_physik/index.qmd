---
title: "Creative Coding und Physik-Simulationen -- Video-Tutorials am Freitag"
author: "JÃ¶rg Kantel"
date: "2023-04-14 16:45:00"
categories: [Creative Coding, P5.js, Pymunk, Pygame, Physik, Simulation]
image: "images/softbody.jpg"
---

[![](images/softbody-b.jpg)](https://en.wikipedia.org/wiki/File:Blender3D_HiddenTextSoftbody.ogv#/media/File:Blender3D_HiddenTextSoftbody.jpg)

Auch fÃ¼r den heutigen Freitag habe ich wieder einen Bunch von Video-Tutorials fÃ¼r Euch (und fÃ¼r mich) herausgesucht, damit Ihr am dem zu erwartenden verregneten Wochenende nicht von Langeweile geplagt wird und Ihr aus lauter Verzweiflung in die Kirchen rennt. Das Thema an diesem Wochenende ist einmal Â»Creative Coding mit [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html)Â« und zum zweiten -- inspiriert von *Daniel Shiffman* -- Â»Physiksimulationen und Physik-EnginesÂ«.

<iframe width="560" height="315" src="https://www.youtube.com/embed/4fkRdKQ3DSM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Ich beginne mir Creative Coding und P5.js: Die Playlist Â»[P5.js Projects & Programming](https://www.youtube.com/playlist?list=PLnJOmsprq3bErSNvxK0OV-Adh1uxRhVdo)Â« von *Steve`s Makerspace* ist eine Monsterplaylist mit 52 im Schnitt etwa viertelstÃ¼ndigen Videos, die sich um Creative Coding mit P5.js drehen. Nachdem ich in die ersten Videos hineingeschaut habe, bekomme ich groÃŸe Lust, den [P5.js-Webeditor](https://editor.p5js.org/) anzuwerfen und mich selber endlich intensiver mit P5.js auseinanderzusetzen. *So viel zu spielen, so wenig Zeit*.

<iframe width="560" height="315" src="https://www.youtube.com/embed/-YhzDuF_kLs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Der [YouTube-Kanal von *Jeff Thompson*](https://www.youtube.com/@jeffkthompson) zu *Creative Programming* will auch noch von mir erforscht werden.

<iframe width="560" height="315" src="https://www.youtube.com/embed/-CzNlgpOVgs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Das gleiche gilt fÃ¼r den Workshop Â»[Procedural pattern programming with p5.js](https://www.youtube.com/watch?v=-CzNlgpOVgs)Â« und fÃ¼r die Playlist Â»[P5.js Spirals](https://www.youtube.com/playlist?list=PLyhIajiyZLlPhrFYJqOFRq9aoY-Q0AYjU)Â« (fÃ¼nf Videos Ã¡ etwa 15 Minuten Spieldauer).

<iframe width="560" height="315" src="https://www.youtube.com/embed/IxdGyqhppis" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Einen eleganten Ãœbergang zur Physik schafft dann -- wie angekÃ¼ndigt -- *Daniel Shiffman* mit seiner 177. Coding Challenge Â»[Soft Body Physics](https://www.youtube.com/watch?v=IxdGyqhppis)Â«, in der er zeigt, was er alles mit der Physik Engine Â»[Toxiclibs.js](http://haptic-data.com/toxiclibsjs/)Â« anstellen kann. Ein weiterer Grund fÃ¼r mich, den P5.js-Webeditor wieder hervorzukramen. Dazu gibt es auch eine nette [Seite in der englischsprachigen Wikipedia](https://en.wikipedia.org/wiki/Soft-body_dynamics), in der auch eine Reihe von *Physik Engines* und -Spielen vorgestellt werden.

In diesem Video erzÃ¤hlt *Shiffman* auch, daÃŸ seine [Neuauflage von Â»The Nature of CodeÂ«](https://nature-of-code-2nd-edition.netlify.app/) kurz vor der Fertigstellung steht. Ich bin gespannt wie ein Flitzebogen.

<iframe width="560" height="315" src="https://www.youtube.com/embed/alhpH6ECFvQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

In seiner 132. Coding Challenge programmierte *Daniel Shiffman* eine Â»[Fluid Simulation](https://thecodingtrain.com/challenges/132-fluid-simulation)Â« in knallbunt und mit [Processing (Java)](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html). Physik kann so schÃ¶n (bunt) sein.&nbsp;ðŸ¤“

<iframe width="560" height="315" src="https://www.youtube.com/embed/tLsi2DeUsak" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Doch es gibt natÃ¼rlich auch andere Physik (2D) Engines, die interessante Projekte erlauben. Eine sehr populÃ¤re Engine ist [Pymunk](http://cognitiones.kantel-chaos-team.de/programmierung/python/pymunk.html), die auf der auf die sehr leistungsfÃ¤higen, in C geschriebenen 2D-Physikbibliothek [Chipmunk](https://chipmunk-physics.net/) basiert. Pymunk arbeitet unter anderem auch sehr schÃ¶n mit [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) zusammen, wie *Tech With Tim* in obigem, einstÃ¼ndigen Video Â»[Physics Simulations With Python and PyMunk](https://www.youtube.com/watch?v=tLsi2DeUsak)Â« demonstriert.

<iframe width="560" height="315" src="https://www.youtube.com/embed/cCiXqK9c18g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Da aber auch andere MÃ¼tter schÃ¶ne TÃ¶chter haben, mÃ¶chte ich Euch auch [noch einmal](https://kantel.github.io/posts/2023012601_covid_is_over/) die Playlist Â»[Pymunk Basics](https://www.youtube.com/playlist?list=PL_N_kL9gRTm8lh7GxFHh3ym1RXi6I6c50)Â« des YouTubers *Ear Of Corn* vorstellen, die aus sieben Videos zwischen fÃ¼nf und dreissig Minuten Spieldauer besteht.

Und dann habe ich kÃ¼rzlich [VPython](http://cognitiones.kantel-chaos-team.de/programmierung/python/vpython.html), genauer [WebVPython/GlowScript](https://glowscript.org/) (wieder-) entdeckt, eine Python-3D-Physics-Engine, die auch mit [Trinket](http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html) zusammenspielt. Doch das ist eine ganz andere, neue Geschichte, Ã¼ber die ich in einem separaten Beitrag berichten mÃ¶chte. Da will ich erst noch eine Weile selber experimentieren.

<iframe width="560" height="315" src="https://www.youtube.com/embed/5ncQDRvkpP8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**War sonst noch was?** Ach ja, *Wassily Kandinskys* brachte in Â»[Circles in a Circle](https://shop.bauhaus-movement.com/poster-wassily-kandinsky-circles-de)Â« von 1923 erstmals seine Kreise in den Vordergrund. Es ist ein besonders ordentliches Werk, in dem die meisten Elemente sauber in einem groÃŸen dicken Kreis platziert sind. Das schreit nach einem Re-enactment. Aber ich wiederhole mich: *So viel zu spielen, so wenig Zeit!*