---
title: "Nächste Schritte mit microStudio"
author: "Jörg Kantel"
date: "2024-03-06 19:10:00"
categories: [microStudio, Spieleprogrammierung, Tiles und Sprites]
image: "images/deepnight.jpg"
---

[![](images/deepnight-b.jpg)](https://img.itch.zone/aW1hZ2UvMzI5NTU2LzI5NjI4OTkucG5n/original/4K06O%2B.png)

Die kleine, freie (MIT-Lizenz) Spieleengine [microStudio](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html) ist meiner Meinung nach leider völlig unterbewertet. Das drückt sich auch darin aus, daß es kaum verwendbare Tutorials im Netz dafür gibt. Umsomehr habe ich mich daher über dieses Video gefreut, das mich sofort motivierte, [meine eigenen microStudio-Experiemente](https://kantel.github.io/posts/2024022001_microstudio_1st_steps/) fortzusetzen:

<iframe class="if16_9" src="https://www.youtube.com/embed/Vbngp4hF1nM?si=JOHNyVD7VHFCZIcG" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Es heißt »[From asset pack to working prototype in 5 minutes](https://www.youtube.com/watch?v=Vbngp4hF1nM)« und zeigt tatsächlich, wie man in dieser kurzen Zeit einen netten, kleinen Prototypen in microStudio zusammenstoppelt. Als Asset Pack wurde das freie ([CCO](https://itch.io/game-assets/assets-cc0)) Pack [Deep Night](https://v3x3d.itch.io/deep-night) des schon mehrfach in diesem ~~Blog~~ Kritzelheft lobend erwähnten, auf Itch.io unter dem Screennamen *[V3x3d](https://v3x3d.itch.io/)* zu findenden Pixelartisten ausgewählt. Die Figur des Spielers ist hier 16x16 Pixel groß, alle übrigen Tiles und Sprites passen in ein Raster von 8x8 Pixeln.

Da microStudio ja sein eigenes, virtuelles Koordinatensystem nutzt und dies automatisch auf die gerätespezifischen Screenkoordinaten umrechnet, brachte mich dies auf die Idee, hierfür doch mal die im ungewöhnlichen 10x10-Pixel-Raster gezeichneten Assets der zusammengehörenden, ebenfalls unter der freien CC0-Lizenz stehenden Bilder-Sammlung [Bountiful Bits](https://v3x3d.itch.io/bountiful-bits) und [Bit Bonanza](https://v3x3d.itch.io/bit-bonanza) (beide ebenfalls von *V3x3d*) zu verwenden. Denn eines ist wohl klar: Wenn es keine Tutorials zu microStudio gibt, muß ich sie mir wohl selber schreiben.

Im obigen Tutorial wird massiv Gebrauch von der Bibliothek [QuickEngine](https://microstudio.dev/i/gilles/quickengine/) des microStudio-Autors *[gilles](https://microstudio.io/gilles/)* gemacht. Zusammen mit der [games-prog library v.02](https://microstudio.dev/i/mrLman/gamesproglibrary/) von *[mrLman](https://microstudio.io/mrLman/)* sind das wohl die am häufigsten genutzten Zusatz-Bibliotheken (auf die ich hier verlinke, damit ich sie immer parat habe).

Daneben lockt mich auch immer noch die Möglichkeit, microStudio mit Python (genauer: mit [Brython](https://brython.info/)) zu programmieren. Da ich aber momentan keinen wirklichen Vorteil gegenüber [microScript](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microscript.html) sehe, werde ich mich erst einmal mit diesem Lua-Dialekt vertraut machen (der scheint mir am besten dokumentiert), bevor ich mich in das Abenteuer Brython stürze.

Und jetzt bitte nicht mehr stören, ich muß weiter mit microStudio experiementieren. *Still digging!*