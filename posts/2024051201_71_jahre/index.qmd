---
title: "71 Jahre -- und immer noch im Unruhestand"
author: "Jörg Kantel"
date: "2024-05-12 16:00:00"
categories: [Interna]
image: "images/mebritzergarten.jpg"
---

[![](images/mebritzergarten-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53709611965/)

Gestern bin ich (mehr unheimlich als heimlich) 71 Jahre alt geworden. Wegen des [traurigen Ereignisses vor zwei Wochen](https://kantel.github.io/posts/2024041901_rip_gabi/) war mir nicht nach Feiern zumute und so habe ich den Tag im stillen Nachdenken verbracht.

71 Jahre -- das ist ein Alter, in dem die »Restlebenserwartung« wieder nach oben schnellt[^1]. (Leider wird sie nie 100 Prozent, aber wollen wir wirklich ewig leben?) Ich habe also gute Chancen, der Rentenversicherung noch ein paar Jahre oder gar Jahrzehnte auf den Wecker zu gehen. Natürlich will ich diese Zeit nicht mit bloßem Herumsitzen verplempern.

[^1]: Vergleiche Walter Krämer: *Statistik verstehen. Eine Gebrauchsanweisung*, München/Zürich (Piper), 2001, Seiten 167ff. Wer noch mehr von Walter Krämer über Statistik (und ihre Fallstricke) lesen will, dem sie auch noch *Denkste! Trugschlüsse aus der Welt der Zahlen und des Zufalls*, München/Zürich (Piper) 1998, empfohlen.

Ein paar Projekte habe ich schon auf der Pfanne. Da wären zu Beispiel:

1. Eine Einführung in [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) (nicht nur) für JavaScript-Anfänger wie mich, unter besonderer Berücksichtigung des P5.js-Webeditors. Aber da ich ja bekanntlich ein Spielkalb bin und auch dazu stehe, darf in diesem Zusammenhang [P5.play](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html) nicht fehlen.
2. Meine Tutorialreihe mit [MicroScript](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html) und Python/[Brython](https://brython.info/) fortsetzen.
3. Weitere Tutorial zu *Creative Coding mit [Py5](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html)* schreiben. Denn Py5 geht dank der kompletten Python-3-Integration weit über das hinaus, was mit [Processing (Java)](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html) möglich ist (ich denke da vor allem an den *Scientific Stack* mit [JupyterLab](http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html) ([Desktop](http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html)), aber auch in andere Umgebungen -- denn es muß nicht immer [Thonny](http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html) sein).

Diese drei Projekte sind stark von der unvergleichlichen und wunderbaren *[Patt Vira](https://www.pattvira.com/)* beeinflußt, die kürzlich anläßlich ihres 100. YouTube-Videos »[5 Lessons I Learned From Making 100 Coding Tutorials](https://www.youtube.com/watch?v=1C6FQOzDmjg)« hochgeladen hat. Dieses Video hat mich in meiner derzeitigen schweren Phase motiviert.

Doch weiter: Neben meinem unverändert starken Interesse an *Interactive Fiction* mit [Twine](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html), [Ren'Py](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html) und [Bitsy](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html) sowie der [Tuesday JS Visual Novel Engine](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html), rückten die [jüngst entdeckten](https://kantel.github.io/posts/2024050901_monogatari_renjs/) Engines [Monogatari](https://monogatari.io/) und [RenJS](https://renjs.net/) in meinen Fokus:

4. Nach ersten Tests habe ich entschieden, erst einmal RenJS den Vorzug zu geben (Begründung folgt in einem separaten Beitrag[^2]). Daher könnt Ihr zu RenJS in der nächsten Zeit in paar Tutorials erwarten.

[^2]: Ganz kurz vorab: In Monogatari werden die Skripte in JSON (mit vielen geschweiften Klammern) erstellt, in RenJS in YAML. Das ist kompakter und in meinen Augen für Menschen besser lesbar.

5. Bleibt abschließend noch die Frage nach der Zukunft meines »zweiten Gehirns«. Neben den [hier schon erwähnten](https://kantel.github.io/posts/2024050802_foam_dendron/) Obsidian-Alternativen [Foam](https://foambubble.github.io/foam/) und [Dendron](https://wiki.dendron.so/) machte mich ein Leser des Schockwellenreiters auf [SiYuan](https://b3log.org/siyuan/en/) aufmerksam, das speziell für Mausschubser wie mich sehr interessant aussieht. Hier stehen also in den nächsten Tagen auch noch neue Tests an.

Das Problem hat allerdings etwas von seiner Dringlichkeit verloren. Denn zum einen sieht es so aus, daß bei [Logseq](http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html) der Wechsel auf die datenbankbasierte Version noch ein paar Jahre in Anspruch nehmen wird. Und bis dann -- höhere Restlebenserwartung hin oder her -- ist das vielleicht kein Problem mehr für mich.

Zum anderen -- das hatte ich im Streß und der Trauer der letzten Tage erfolgreich verdrängt -- hatte ich Gabi kurz nach meiner Pensionierung einen halbwegs aktuellen Mac mini (Baujahr 2018) mit einer (für meine Bedürfnisse) riesigen internen Festplatte (512 GB) geschenkt. Das Rechnerchen ist ja jetzt freigeworden. Ich habe meinen gestrigen Geburtstag unter anderem damit verbracht, ihn mit dem aktuellsten macOS (Sonoma 14.4.1) zu versorgen. Es wird sicher noch ein paar Tage (vielleicht sogar Wochen) dauern, bis ich alle Daten und Programme integriert habe. Aber dann kann ich mein betagtes MacBook Pro in Rente schicken[^3]. Es hat es verdient.

[^3]: Dann ist es ja nur noch ein (Notfall-) Backup-Rechner und ich kann es endlich wagen, auszuprobieren, ob der [Open Core Legacy Patcher](https://dortania.github.io/OpenCore-Legacy-Patcher/) damit läuft. Ich kann dann ja nichts mehr zerschießen.

Und damit ist dann auch [Zettlr](http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/zettlr.html) nicht endgültig [aus dem Rennen](https://kantel.github.io/posts/2024050501_zettlr_catalina/). Nicht unbedingt als Ersatz für mein zweites Gehirn, aber als Editor, um größere Texte über einen längeren Zeitraum zu entwerfen und zu schreiben. Dafür ist Zettlr gebaut und das kann das Teil hervorragend. Zwar ist das Problem eines möglicherweise veralteten Betriebssystems damit nur nach hinten verschoben, aber hier gilt, was ich oben schon über meine Restlebenserwartung schrieb.

Aber auf jeden Fall ist klar: Ruhestand ist trotz des Schicksalsschlags keine Alternative für mich, denn ich habe zu tun. Und ich freue mich darauf. *Still digging!*

---

**Photo** (&copy; 2024): *Kirsten Heidler* 