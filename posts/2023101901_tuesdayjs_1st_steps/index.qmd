---
title: "Erste Schritte mit der Tuesday JS Visual Novel Engine"
author: "Jörg Kantel"
date: "2023-10-19 15:45:00"
categories: [Tuesday JS, Interactive Fiction, Spieleprogrammierung]
image: "images/tuesdayjs1ststeps.jpg"
---

[![](images/tuesdayjs1ststeps-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53268506845/)

Ich konnte den [Beitrag gestern](https://kantel.github.io/posts/2023101802_tuesdayjs/) nicht so auf sich beruhen lassen, ich mußte unbedingt mit meinen Tests zu der [Tuesday JS Visual Novel Engine](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html) beginnen. Hier sind also meine ersten Anmerkungen (von »Ergebnissen« oder »Erfahrungen« zu sprechen, wäre eindeutig verfrüht):

Ich habe meine ersten Schritte mit der Desktop-Version für macOS unternommen. Die Installation verlief ohne Schwierigkeiten und das Programm startete sofort (nach der überfürsorglichen, macOS-üblichen Sicherheitswarnung). Und es war kein Problem, dem Programm als Projektverzeichnis (m)ein GitHub-Repositorium unterzujubeln (etwas, das bei dem sich [Twine](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html) immer ein wenig zickig anstellt). 

Für einen Coder wie mich, der sich am liebsten innerhalb eines [Texteditors seines Vertrauens](http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html) austobt, ist so eine *Point-and-Click*-Umgebung, wie sie Tuesday JS bietet, stark gewöhnungsbedürftig. Zumal auch die GUI auf jeden Fall noch verbesserungsfähig ist: So habe ich zum Beispiel lange gebraucht, bis eine Änderung vom Programm akzeptiert wurde. Es bringt nämlich nicht, das wie ein *Button* gestaltete »Apply« anzuklicken, sondern erst, wenn der Kreis **neben** dem »Apply« einen Klick erhält, wird die Änderung übernommen.

Ansonsten macht das Programm, was es soll: Man kann fast alles mit Mausklicks und den gewünschten Parametern in das GUI eingeben. Und da das viel ist, macht das das GUI recht unübersichtlich -- ohne häufige Konsultation der [Dokumentation](https://kirilllive.github.io/tuesday-js/doc_editor.html) (und da ist ein Blick in das »[Quick Tutorial](https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial)« nicht ausreichend) ist man als Anfänger schnell überfordert. Aber die Tutorials sind sehr umfangreich und wenn ich sie noch ein wenig studiert habe, werden meine Anfangsschwierigkeiten sicher bald überwunden sein.

Wie gesagt, die Lernkurve ist erst einmal steil, von der Schwierigkeit liegt das Programm irgendwo zwischen Twine und einem [Ren'Py](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html) für fortgeschrittene (Python-) Programmierer. Wobei mein Vergleich mit Twine eher ein Twine mit dem Storyformat [Snowman](https://github.com/videlais/snowman) meint: Denn ohne ein hinreichendes Verständnis von HTML5 und vor allem von CSS ist man schnell aufgeschmissen.

Ich habe eigentlich keine Zeit, noch eine neue Baustelle aufzumachen. Neben meinen Ausflügen ins Wunderland mit Twine und meiner Räuberpistole mit Ren'Py warten ja auch noch meine Experimente mit Python und [Py5](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html) auf Fortsetzung. Aber beim derzeitigen Stand meiner Erkenntnisse ist Tuesday&nbsp;JS einfach zu verführerisch. Sobald ich dafür eine Projektidee habe (und durch mein Hirn geistern schon viele mögliche Ideen), wird es sicherlich weitere Beiträge hier in diesem ~~Blog~~ Kritzelheft zu dieser Engine für interaktive Geschichten geben. *Still digging!*

---

**Bilder**: Die beiden verwendeten Bilder sind  ein Ergebnis meiner Experimente mit [DreamStudio](https://beta.dreamstudio.ai/generate). Der verwendete Prompt lautet »*Alice, blue eyes, long blonde hair with pigtails, blue coat, white apron, full body, looks at a beautiful landscape with balloon like trees*« mit einem negativen Prompt von »*additional hands, additional arms, additional legs*«.