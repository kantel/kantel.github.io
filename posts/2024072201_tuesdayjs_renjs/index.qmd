---
title: "Wie weiter mit Interactive Fiction: Tuesday JS oder RenJS?"
author: "J√∂rg Kantel"
date: "2024-07-22 17:25:00"
categories: [Tuesday JS, RenJS, Twine, Interactive Fiction, Spieleprogrammierung]
image: "images/tuesdayjsitchio.jpg"
---

[![](images/tuesdayjsitchio-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53873925419/)

Auch wenn es so aussah, als ob ich in der letzten Woche eine Pause eingelegt h√§tte -- v√∂llig ohne Aktivit√§ten aus dem Bereich der Spieleprogrammierung und dem Erz√§hlen interaktiver Geschichten lief es bei mir nicht ab (obwohl das mit der Pause auch ein wenig stimmt). Mich treibt n√§mlich die Frage um, ob ich als Werkzeug f√ºr *Interactive Fiction* eher auf [Tuesday JS](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html) oder besser auf [RenJS](https://renjs.net/index.html) setzen soll?

F√ºr **Tuesday JS** spricht, da√ü ich damit zumindest schon einmal einen [Prototypen einer Geschichte zusammengestrickt](https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/) habe, und das mir die Oberfl√§che, die ein wenig an [Twine](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html) erinnert, gef√§llt. Dagegen spricht, da√ü die [offizielle Dokumentation](https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial) doch manchmal ein wenig verworren und es keine weiteren Tutorials im Netz zu geben scheint ([ich habe zumindest keine gefunden](https://kantel.github.io/posts/2024020801_tuesdayjs_update/)). Mein Prototyp ist daher auf Basis von viel *Trial and Error* entstanden.

F√ºr Tuesday JS spricht aber wieder, da√ü man mit Hilfe von *[Web2Executable](https://github.com/nwutils/Web2Executable)* Binaries f√ºr macOS, Windows und Linux erzeugen kann.

F√ºr **RenJS** spricht die [hervorragende Dokumentation](https://renjs.net/docs-page.html), die kaum Fragen offen l√§√üt und einem daher viel *Trial and Error* erspart und die Anlehnung an [Ren'Py](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html), so da√ü ich nicht bei Null anfagen mu√ü. Au√üerdem werkelt hier [Phaser](https://phaser.io/) als etablierte (JavaScript-) Game Engine hinter den Kulissen, so da√ü RenJS -- √§hnlich wie Ren'Py -- nur von den Grenzen der eigenen Phantasie gestoppt wird. Und auch RenJS kann neben einer Webversion Binaries f√ºr macOS, Windows und Linux erstellen.

Erw√§hnen sollte ich vielleicht auch [noch einmal](https://kantel.github.io/posts/2024062401_neustart_updates/), da√ü bei meinem internen Rennen zwischen RenJS und [Monogatari](https://monogatari.io/) RenJS gewonnen hat, weil RenJS-Skripte in YAML geschrieben werden, w√§hrend Monogatari auf JSON setzt. Da√ü mir YAML mehr liegt als JSON ist aber eher eine Geschmacksfrage, daher solltet Ihr da drau√üen Euch vielleicht Monogatari auch noch genauer anschauen.

Ich habe zur Vorbereitung weiterer Aktivit√§ten erst einmal meinem [Tuesday-JS-Prototypen auf Itch.io](https://kantel.itch.io/poirots-abenteuer) eine im Browser spielbare Version spendiert, damit ich sie sp√§ter mit RenJS -- vor allem bei der Zeit, die die Initialisierung und das Laden ben√∂tigt -- vergleichen kann denn (hier bekleckert sich die Webversion von Ren'Py nicht gerade mit Ruhm).

Und als N√§chstes werde ich mich durch RenJS w√ºhlen und damit auch einen kleinen Prototypen basteln. Ich habe also zu tun!

[![](images/smashingpumpkins04.jpg)](https://www.flickr.com/photos/schockwellenreiter/53866247432/)

**War sonst noch was?** Ach ja, auch meinem kleinen [Spiel mit der kleinen Hexe und dem wahnsinnigen, K√ºrbisse vernichtenden Priester](https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/) -- erstellt mit Twine und [SugarCube](https://www.motoslave.net/sugarcube/2/docs/) -- habe ich ein lange √ºberf√§lliges Update verpasst und dieses [auf Itch.io hochgeladen](https://kantel.itch.io/smashing-pumpkins). Die kleine Hexe kann jetzt nicht nur Items sammeln, sondern diese verschwinden nach der Aufnahme auch aus den Bildern. Dem Spiel fehlt jetzt eigentlich nur noch eine Inventarliste (eine Spzialit√§t von SugarCube) und ein angedachtes *Bad Ending* (der Priester t√∂tet die Hexe -- frau mu√ü schlie√ülich auch mal verlieren k√∂nnen&nbsp;ü§ì). Das sollte schaff- und machbar sein. *Still digging!*