---
title: "Creative Coding mit Python"
author: "Jörg Kantel"
date: "2023-02-15 20:05:00"
categories: [Python, Processing.py, Trinket, Pygame, Simulation, Creative Coding]
image: "images/seltsamerattraktor.jpg"
---

[![](images/seltsamerattraktor-b.jpg)](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Thomas%27_cyclically_symmetric_attractor.png/1024px-Thomas%27_cyclically_symmetric_attractor.png)

Nein, das hat nicht Zeit bis Freitag: Beim wilden Durchstöbern und Aufräumen meinens Feedreaders sind mir vier Playlists mit Video-Tutorials von *Coding Cassowary* untergekommen, die alle mehr oder weniger zum Themenkomplex »Creative Coding mit Python« gehören. Ich halte sie für so interessant, daß ich sie nicht nur Euch sofort vorstellen möchte, sondern ich werde mich in den nächsten Tagen auch inhaltlich damit beschäftigen und Euch sicher dann ein paar Ergebnisse präsentieren.

Das Besondere an diesen Playlists ist, daß jede von ihnen ein anderes graphisches Toolkit nutzt, um die Ergebnisse optisch zu präsentieren und gegebenenfalls zu animieren. Damit decken sie so ziemlich die gesamte Bandbreite dessen ab, was in Python möglich ist.

<iframe width="560" height="315" src="https://www.youtube.com/embed/AzdpM-vfUCQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Ausschlaggebend für diesen Post war die Playlist »[Chaostheorie in Python](https://www.youtube.com/playlist?list=PLBLV84VG7Md8RMWQEzDOFSyrv14-9lMxn)«, die in zwei Videos und knapp einer Stunde zeigt, wie man einen [seltsamen Attraktor](https://de.wikipedia.org/wiki/Seltsamer_Attraktor) in Python programmiert. Für die graphische Ausgabe muß in diesem Beispiel noch ganz konventionell die [Matplotlib](http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html) herhalten.

<iframe width="560" height="315" src="https://www.youtube.com/embed/Cm_SzDlQ2cM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Die Liste »[Generative Art in Python](https://www.youtube.com/playlist?list=PLBLV84VG7Md9oO4MUOhyqz7gBFOzx8XIw)« umfaßt sechs Videos mit einer Lauflänge von im Schnitte je etwa eine Viertelstunde. Für die graphische Ausgabe auf dem Monitor ist in diesem Falle immer [Pythons Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html) zuständig.

<iframe width="560" height="315" src="https://www.youtube.com/embed/BSAU34E1sm4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Aus ebenfalls sechs Videos besteht die Playlist »[Pandemic Simulation](https://www.youtube.com/playlist?list=PLBLV84VG7Md_JGMCHNOqvAvsTPc7zi1xB)«. Hier sind die Videos aber etwas länger (im Schnitt je zwanzig Minuten) und die (animierte) graphische Ausgabe wird mit Hilfe von [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) erzeugt.

<iframe width="560" height="315" src="https://www.youtube.com/embed/YsQZ9f_rGwM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Besonders interessant fand ich jedoch die Playlist »[Python and Processing](https://www.youtube.com/playlist?list=PLBLV84VG7Md8aSk89G-uUr48dUXGNYOTV)« (bisher fünf je etwa halbstündige Videos), da hier das [Processing.py](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html) von [Trinket](http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html) verwendet wird und das steht ja schon [seit Ende Januar dieses Jahres](https://kantel.github.io/posts/2023012801_trinket_in_space/) auf meiner Testliste.

Ich werde daher vermutlich erst einmal mit Trinket spielen, bevor ich mir die anderen Listen und Tutorials vorknöpfe. Auf jeden Fall gilt: Ich habe zu tun!