---
title: "Spielereien mit Py5: Geisterscheiben ziehen vorbei"
author: "J√∂rg Kantel"
date: "2023-08-06 20:15:00"
categories: [Py5, Processing, Python, Creative Coding]
image: "images/ghostlydisks.jpg"
---

[![](images/ghostlydisks-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53097641941/)

Da hatte ich mir ja gestern etwas eingebrockt. Es war nicht so sehr die Tatsache, da√ü es mir gelungen war, [mein Quarto in wenig aufzumotzen](https://kantel.github.io/posts/2023080502_pimp_quarto/), sondern mir ging das eher zuf√§llig und auf die Schnelle ausgew√§hlte Beispielprogramm nicht mehr aus dem Kopf. Dazu fiel mir aus meinen Regalen die fast tausendseitige Schwarte ¬ª[Processing for Visual Artists](https://www.glassner.com/portfolio/processing-for-visual-artists/)¬´ von *[Andrew Glassner](https://www.glassner.com/bio-cv-contact/biography/)* in die H√§nde und der verwandelte dort die *Bouncing Balls* in geisterhafte Pucks, die bei einem virtuellen Airhockey √ºber den Bildschirm schweben *(Seiten 341ff)*.

Das mu√üte ich nat√ºrlich sofort in [Py5](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html), dem netten Python3-Port von [Processing](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html) implementieren und ein wenig aufmotzen. Im Gro√üen und Ganzen entspricht das dem [Bouncing-Ball-Beispiel](http://blog.schockwellenreiter.de/2021/09/2021091501.html) von gestern. Ich habe lediglich den Scheiben einen Trail spendiert und -- das habe ich bei *Andrew Glassner* geklaut -- das Abprallen an den Fensterr√§ndern etwas realistischer gestaltet:

~~~python
# Bouncing Balls w/ Classes (improved)
# nach Andrew Glassner: Processing for Visual Artists, p. 341pp
from random import randint

WIDTH = 600
HEIGHT = 400
BG_COLOR = color(240, 215, 175)  # color(164, 164, 164)
a = 50              # apha
BORDER = 50
NO_GHOSTS = 30

class Disk():
    
    def __init__(self, _x, _y, _vx, _vy, _radius, _col):
        self.r = _radius
        self.d = self.r*2
        self.c = _col
        self.pos = Py5Vector(_x, _y)
        self.vel = Py5Vector(_vx, _vy)
    
    def check_boundaries(self):
        if self.pos.x > width - self.r or self.pos.x < self.r:
            self.vel.x *= -1
            self.pos.x += 2*self.vel.x
        if self.pos.y > height - self.r or self.pos.y < self.r:
            self.vel.y *= -1
            self.pos.y += 2*self.vel.y
    
    def update(self):
        self.pos.x += self.vel.x
        self.pos.y += self.vel.y
    
    def show(self):
        stroke(0)
        stroke_weight(1)
        fill(self.c)
        circle(self.pos.x, self.pos.y, self.d)
        
ghosts = []

def build_ghosts(n):
    border = BORDER
    for _ in range(n):
        xpos = randint(border, width - border)
        ypos = randint(border, height - border)
        xvel = randint(-2, 2)
        # no vertical move
        if xvel == 0: xvel = -1
        yvel = randint(-2, 2)
        # no horizontal move
        if yvel  == 0: yvel = 1
        radius = randint(10, 20)
        clr = color(randint(20, 230), randint(20, 230), randint(20, 230), a)
        ghost = Disk(xpos, ypos, xvel, yvel, radius, clr)
        ghosts.append(ghost)
                    
def setup():
    size(WIDTH, HEIGHT)
    window_move(1400, 30)
    window_title("Bouncing Ghosts")
    build_ghosts(NO_GHOSTS)
    
def draw():
    no_stroke()
    fill(BG_COLOR, 30)
    rect(0, 0, width, height)
    for ghost in ghosts:
        ghost.show()
        ghost.check_boundaries()
        ghost.update()
~~~

Aus irgendeinem Grund kann man dem `background` in Processing keine Transparenz mitgeben. Damit die Scheiben eine Spur hinter sich herziehen k√∂nnen, habe ich mich daher mit einem fenstergro√üen Rechteck beholfen, das ich als erstes zeichnen lasse. Diesem Rechteck habe ich mit `alpha = 30` eine Transparenz spendiert. Dadurch verblassen die in den Frames vorher gezeichneten Scheiben nur sehr langsam und vermitteln die Illusion, da√ü sie eine Spur hinterlassen.

Und wenn der Geisterpuck auf die R√§nder trifft, wird nicht nur die Richtung umgekehrt, sondern die Position wird auch mit `self.pos.x += 2*self.vel.x` respektive `self.pos.y += 2*self.vel.y` soweit korrigiert, da√ü ein Hinausschie√üen der Scheiben √ºber den Rand unm√∂glich ist.

<div style="float: right; margin-left: 12px; margin-top: 6px;">[![](images/pvacover.jpg)](https://www.glassner.com/portfolio/processing-for-visual-artists/)</div>

Dadurch gewinnen die simplen, springenden B√§lle eine ganz neue, spirituelle Qualit√§t. *Andrew Glassner* schrieb dazu:

>Mir gef√§llt, wie das aussieht: Gespenstische Airhockey-Pucks, die umherh√ºpfen und nach der geheimen Wahrheit suchen, die es ihnen erm√∂glicht, ihre sterbliche H√ºlle zu verlassen und zur n√§chsten Stufe des spirituellen Airhockey-Puck-Lebens aufzusteigen.

Allein wegen dieses Zitats sollte man [Website](https://www.glassner.com/) und [Blog](https://imaginary-institute.com/) von *Andrew Glassner* auf seine Leseliste setzen. Es gab zwar schon lange keine Updates mehr, aber wer wei√ü, welche ewigen Weisheiten in seinen Texten noch meiner Entdeckung harren.&nbsp;ü§ì
