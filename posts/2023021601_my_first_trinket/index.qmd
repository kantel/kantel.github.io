---
title: "Mein erstes Trinket mit Processing (Python)"
author: "Jörg Kantel"
date: "2023-02-16 20:15:00"
categories: [Python, Processing, Trinket, Creative Coding]
image: "images/myfirsttrinket.jpg"
---

[![](images/myfirsttrinket-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/52692808566/)

Yeah, I did it! Wie gestern angekündigt, habe ich heute mein erstes [Trinket](http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html) mit Trinkets Version von Processing und Python erstellt. Wie [hier schon vermutet](https://kantel.github.io/posts/2023012801_trinket_in_space/) lief dies bedeutend [scmerzfreier](https://kantel.github.io/posts/20221222802_processingpy_replit/) als mit [Replit](http://cognitiones.kantel-chaos-team.de/programmierung/ides/replit.html) ab. Als Beispielprogramm mußten mal wieder die hüpfenden Bälle herhalten und schon nach kurzer Zeit füllten sie den Monitor mir buntem Konfetti:

<iframe src="https://trinket.io/embed/python/eda7e2ea31?outputOnly=true&runOption=run&start=result" width="80%" height="560" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

Wirklich nett ist, daß man den fertigen Sketch -- wie bei [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) -- in eine Webseite einbinden kann. Trinket bietet dazu eine Fülle von Alternativen (mit Quellcode, ohne Quellcode, Autostart etc.). Überhaupt scheint das verwendete [Processing](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html) eher ein Port von P5.js nach Python denn ein Port von [Processing.py](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html) zu sein. Doch was für eine Kombination von JavaScript und Python bei Trinket hinter den Kulissen werkelt, habe ich noch nicht herausgefunden. Aber egal, es funktioniert und es funktioniert nach meinen ersten Tests verdammt gut.

Natürlich könnt Ihr Euch das Skript auch [auf Trinket anschauen](https://trinket.io/python/eda7e2ea31) und damit rumspielen. Ein GitHub-Repositorium dafür habe ich aus diesem Grund noch nicht angelegt, aber es soll möglich sein (man kann seine Quellen herunterladen).

Auf jeden Fall ist Trinket ein nettes Spielzeug, besonders wenn man ohne Klimmzüge kleinere Python-Prrojekte auf einem Chromebook zusammenbasteln will. Für zahlende Gäste soll sogar mehr möglich sein (unter anderem [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) und der *Scientific Stack* mit [Numpy](http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html) und der [Matplotlib](http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html)), aber auch Zaungästen wie mir wird schon reichlich etwas geboten.

Bleibt mir nur noch anzumerken, daß ich für die Farben einen Ausschnitte aus der [Pyxel Farbpalette](http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pyxelpal.html) gewählt hatte. Und natürlich habe ich Blut geleckt -- Ihr könnt daher noch weitere Experimente mit Trinket von mir erwarten. *Still digging!*