---
title: "Neu in meiner Bibliothek: Code the Classics Volume&nbsp;II"
author: "Jörg Kantel"
date: "2024-11-21 13:05:00"
categories: [Retrogaming, Spieleprogrammierung, Pygame Zero, Thonny]
image: "images/humptydumptyjumpnrun.jpg"
---

[![](images/humptydumptyjumpnrun-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/54071240917/)

Fast [fünf Jahre](http://blog.schockwellenreiter.de/2019/12/2019121402.html) mußte ich warten, bevor ich nach dem [von mir mit einer ulitmativen Lobudelei bedachten](http://blog.schockwellenreiter.de/2020/02/2020022601.html), wunderbaren Buch »[Code the Classics Volume 1](https://magpi.raspberrypi.com/books/code-the-classics1)« endlich auch den Nachfolgeband »[Code the Classics Volume II](https://www.raspberrypi.com/news/code-the-classics-volume-ii-from-raspberry-pi-press/)« in meinen begehbaren Zettelkasten (sprich: in meine Bibliothek) einsortieren konnte.

Auch dieser Band nimmt sich wieder Computerspiel- und Arcade-Klassiker der 1980er Jahre vor, erzählt reich bebildert ihre Geschichte und als Hommage werden diese Klassiker in [Pygame Zero](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html) nicht einfach nur nach-, sondern neu programmiert und interpretiert. Dieses Mal geht es um den Arcade-Klassiker *Arkanoid*, der unter dem Namen *Kinetix* eine moderne, gutaussehende Version bekam, den horizontalen Side Scroller *Defender*, der als *Avenger* wieder auferstand, und um das Jump 'n' Run Adventure *Dizzy* mit seinem eiförmigen, an Humpty Dumpty erinnernden Helden, der neu interpretiert als *Eggzy*, phantastische, gut aussehende Welten erkunden muß. Außerdem hat das Beat-'em-up *Double Dragon* unter dem Namen *Beat Streets* eine moderne Neuaflage erfahren und der Arcade Racer *Pole Position* rast als *Leading Edge* über eine moderne, leicht surreal anmutende Rennstrecke. Wie schon im ersten Band zeichnet *Dan Malone* für die wunderbaren Graphiken, Tiles und Sprites der »neuen« Spiele verantwortlich und den Code hat wieder *Eben Upton* (dieses mal zusammen mit *Andrew Gillet*) »verbrochen«. Die kurzweiligen, aber dennoch lehrreichen Beiträge zur Computer- und Spielegeschichte stammen aus den Federn von *David Braben*, *Simon Brew*, *David Crookes*, *Andrew Gillet* und *Liz Upton*. *Last but not least* hat *Allister Brimble* den Sound für die Spiele produziert.

[![](images/codetheclassics1.jpg)](https://magpi.raspberrypi.com/books/code-the-classics1)&nbsp;[![](images/codetheclassics2.jpg)](https://www.raspberrypi.com/news/code-the-classics-volume-ii-from-raspberry-pi-press/)

Den [Quellcode mit sämtlichen Assets](https://github.com/raspberrypipress/Code-the-Classics-Vol2) für die Spiele könnt Ihr auch dieses Mal wieder von der GitHub-Seite des Projekts herunterladen.

Wie oben schon erwähnt, sind die Neuinterpretationen der Spiele in Pygame Zero geschrieben. Nachdem ich Anfang 2019 diese auf [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) aufbauende *Zero Boilerplate* Engine [entdeckt](http://blog.schockwellenreiter.de/2019/03/2019031703.html) [hatte](http://blog.schockwellenreiter.de/2019/03/2019031803.html), hatte ich kurz darauf kritisiert, daß sie zu einem (schlechten) Programmierstil mit vielen globalen Deklarationen verführe. Obwohl ich dagegen eine Lösung fand, nämlich einen [objektorientierten](http://blog.schockwellenreiter.de/2019/06/2019062701.html) [Programmierstil](http://blog.schockwellenreiter.de/2019/07/2019070102.html), hatte ich diese leider bald wieder vergessen: Während [dieses Tutorial](http://blog.schockwellenreiter.de/2019/07/2019072202.html) eher versehentlich noch ohne global deklarierte Variablen auskommt, sind die [beiden](http://blog.schockwellenreiter.de/2019/07/2019072402.html) [Nachfolger](http://blog.schockwellenreiter.de/2019/08/2019080701.html) wieder voll davon. Und danach hatte ich Pygame Zero aus heute mir nicht mehr nachvollziehbaren Gründen (eventuell hing das mit meinem Schlaganfall zusammen?) komplett aus den Augen verloren.

Motiviert durch den Neuzugang in meinen Bücherregalen habe ich mir vorgenommen, Pygame Zero eine neue Chance zu geben. Es gibt ein »offizielles« [deutschsprachiges Tutorial](https://pygame-zero.readthedocs.io/de/latest/index.html) und eine interessante [Helferbibliothek](https://www.aposteriori.com.sg/pygame-zero-helper/), die einige nützliche Methoden nachliefert. Als IDE eignet sich in meinen Augen [Thonny](http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html) hervorragend, weil es in einer eigenen Python-Umgebung läuft und daher die Spieleprogrammierung ein wenig von den anderen Projekten isoliert, ohne daß ich dafür gleich wieder eine virtuelle Umgebung anlegen muß.

<iframe class="if16_9" src="https://www.youtube.com/embed/C06S7gf-LpU?si=6z71L2JzGcIWJnhj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Wie fast immer, wenn ich eine neue oder frisch wiederentdeckte Idee verfolge, habe ich mir auch ein paar Tutorials zum Einstieg rausgesucht:

- Trinket: *[Game Development with Pygame Zero](https://aposteriori.trinket.io/game-development-with-pygame-zero#/intro-to-pygame-zero/intro-and-installation)*
- Trinket: *[Intermediate Game Development with Pygame Zero](https://aposteriori.trinket.io/intermediate-game-development-with-pygame-zero#/introductions/before-you-begin)*
- Tim Golden: *[Wall Ball 1.0 documentation](https://wall-ball.readthedocs.io/en/latest/index.html)*, ReadTheDocs 2016
- Soumya Somasunadaran: *[Build a Catching Game using Pygame Zero](https://medium.com/@soumyas567/build-a-catching-game-using-pygame-zero-7c7ade93cbbd)*, Medium.com vom 8. Juli 2022
- Amit Yadav: *[Pygame Zero](https://medium.com/@amit25173/pygame-zero-beb3fd66e34e)*, Medium.com vom 30. Juni 2024

Und wer weiß, vielleicht ist Pygame Zero doch das Framework für mein leider etwas vernachlässigtes Projekt »[Retrogaming und Künstliche Intelligenz](https://kantel.github.io/posts/2023120301_retrogaming_ki/)«? *Still digging!*

---

**Bild**: *[Humpty Dumpty Jump 'n' Run](https://www.flickr.com/photos/schockwellenreiter/54071240917/)*, erstellt mit [Scenario](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html). Prompt: »*Egg shaped Humpty Dumpty, wearing blue jacket, rust-red vest and red bow tie, falls from the top of a huge wall  in a little village with strange looking buildings. He looks surprised and frightened*«. Modell: Flux LoRA, Style: Expressive Comic Characters.