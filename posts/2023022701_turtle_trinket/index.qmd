---
title: "Trinket, die Turtle und die Bildchen"
author: "Jörg Kantel"
date: "2023-02-27 20:15:00"
categories: [Python, Processing, Trinket, Turtle]
image: "images/dungeonsample.jpg"
---

[![](images/dungeonsample-b.jpg)](https://kenney.nl/assets/tiny-dungeon)

Wie [gestern angekündigt](https://kantel.github.io/posts/2023022601_aquarium_trinket/), erkunde ich gerade die Möglichkeiten, die [Trinkets](http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html) Turtle bietet. Die gute Nachricht ist, daß sie sich anscheinend wenn überhaupt, dann nur in Nuancen von [Pythons Standard-Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html) unterscheidet (irgendwo muß sie es vermutlich, denn Pythons Turtle basiert auf Tkinter, während Trinkets Schildkröte in den Canvas von HTML5 zeichnet). Denn so wie es auf den ersten Blick aussieht, sind die Befehle Eins-zu-Eins von Python nach Trinket übersetzt, so daß ich auf Pythons [Turtle-Dokumentation](https://docs.python.org/3/library/turtle.html) zurückgreifen kann.

<iframe width="560" height="315" src="https://www.youtube.com/embed/inocKE13DEA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Das gibt mir Mut für mein Vorhaben, *Christian Thompsons* (aka *Tokyo Edtech*) Turtle-Programme nach Trinket zu portieren. Einmal, um Trinket besser kennenzulernen, aber auch, um mein Projekt »[Retrogaming und Künstliche Intelligenz](http://blog.schockwellenreiter.de/2022/04/2022041401.html)« wieder aufzunehmen. Denn dafür mußte ja schon einmal das »[Python Maze Game](https://www.youtube.com/playlist?list=PLlEgNdBJEO-lNDJgg90fmfAq9RzORkQWP)« von *Tokyo Edtech* herhalten und genau dafür habe ich es auch wieder hervorgekramt.

<iframe width="560" height="315" src="https://www.youtube.com/embed/GLQ0Ord1TRI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Nur mit dem Unterschied, daß dieses Mal die Implementierung des Templates nicht in [Pygame Zero](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html), sondern eben in Trinkets Turtle stattfinden soll. Und da ich aus nostalgischen Gründen das freie ([CC0 1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/)) [Tiny Dungeon Tileset](https://kenney.nl/assets/tiny-dungeon) inklusive der [Tiny Town Erweiterung](https://kenney.nl/assets/tiny-town) von [Kenney.nl](https://kenney.nl/) einsetzen möchte, sind Anpassungen an *Christian Thompsons* Code notwendig. Denn bei ihm sind die einzelnen Sprites, Tiles, Akteure oder Turtles je 25x25 Pixel groß, während die Tiny Sprites von Kenney eine Größe von je 16x16&nbsp;Pixel aufweisen.

Doch wie man dies in Trinket handelt, wird in dem Video »[An Intro to Trinket](https://www.youtube.com/watch?v=GLQ0Ord1TRI)« erklärt, auf das ich daher hier [noch einmal](https://kantel.github.io/posts/2023012801_trinket_in_space/) hinweisen möchte.

Doch jetzt muß ich wieder zu meinen Experimenten mit Trinket und der Schildkröte zurückkehren. Denn ich habe zu tun. *Still digging!*