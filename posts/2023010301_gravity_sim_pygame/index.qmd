---
title: "Gravity-Simulator in Pygame"
author: "J√∂rg Kantel"
date: "2023-01-03 16:30:00"
categories: [Simulation, Pygame]
image: "images/orbitsimulator.jpg"
---

[![](images/orbitsimulator-b.jpg)](https://camo.githubusercontent.com/b21465f9d3c943ceb143be4b29eea89280ff011883b9694dbb78e24dcfdcb563/68747470733a2f2f692e696d6775722e636f6d2f78794a4e5877532e706e67)

Jetzt mit mehr Physik: [Gestern](https://kantel.github.io/posts/2023010202_earth_moon_orbit_sim/) hatte ich doch diese simple Simulation eines Erde-Mond-Systems hier im *Schockwellenreiter*, die *Kevin Workman* im Rahmen des *Genuary 2023* in [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) programmiert hatte. Daraufhin sp√ºlte mit heute der mitlesende und daher allwissende Bot von Google [diesen Gravity-Simulator](https://www.youtube.com/watch?v=GwhXc78a0QY) -- programmiert in [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) -- in meine Zeitleiste.

<iframe width="560" height="315" src="https://www.youtube.com/embed/GwhXc78a0QY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

Und dieser Simulator nimmt -- im Gegensatz zu *Kevin Workman* -- auch mehr R√ºcksicht auf die dahinterstehende Physik. Also ein guter Startpunkt f√ºr eigene Experimente.

Der Screenshot im Banner oben ist von einem in C++ geschriebenen [Orbit-Simulator](https://github.com/jasonxia17/orbit-simulator), den *[Jason Xia](https://github.com/jasonxia17)* im Quellcode auf GitHub hochgeladen hat. Dieser soll explizit die [Keplerschen Gesetze](https://de.wikipedia.org/wiki/Keplersche_Gesetze) ber√ºcksichtigen. Auch wenn ich es mit C++ so nicht habe, den Quellcode werde ich wohl noch lesen k√∂nnen. Also ein weiterer Ausgangspunkt f√ºr eigene Erkundungen.

Das [GitHub-Repositorium](https://github.com/jasonxia17?tab=repositories) von *Jason Xia* enth√§lt √ºbrigens noch weit mehr Physik-Spielereien, teilweise auch in Python geschrieben. Sollte ich mir daher unbedingt noch genauer anschauen.

<iframe width="560" height="315" src="https://www.youtube.com/embed/yBVeCXnxQYs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

**War sonst noch was?** Ach ja, der *Genuary 2023* hat ja gerade erst begonnen. Und als zweiten Beitrag hat *Kevin Workman* im Schnellverfahren einen [Random Walker](https://www.youtube.com/watch?v=yBVeCXnxQYs) ebenfalls in P5.js implementiert und auf YouTube hochgeladen. *Cool!*

Dazu schlug mir nat√ºrlich der allwissende Google-Bot ebenfalls eine Erg√§nzung vor: [White Noise and Random Walk](https://www.youtube.com/watch?v=Q7vY__nghc4) aus der Reihe ¬ªTime Series from Scratch¬´. Manchmal ist mir der Bot schon etwas unheimlich.&nbsp;ü§ì