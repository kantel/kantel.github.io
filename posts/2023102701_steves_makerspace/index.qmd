---
title: "Creative Coding und Physik-Simulationen mit Steve's Makerspace"
author: "Jörg Kantel"
date: "2023-10-27 16:15:00"
categories: [Creative Coding, Generative Art, Simulation, Physik, Künstliche Intelligenz, P5.js, P5.play, Py5, PoseNet, Tiles und Sprites]
image: "images/shapecharacter.jpg"
---

[![](images/shapecharacter-b.jpg)](https://kenney.nl/media/pages/assets/shape-characters/1c8e020cfb-1698339460/sample.png)

**[Steve](https://linktr.ee/steves_mspace)** von [Steve's Makerspace](https://www.youtube.com/@StevesMakerspace)  ist ein noch größeres Spielkalb als ich (und das will schon was heißen). Was immer ihm aus dem Bereich *Creative Coding* und *Generative Art* in die Finger gerät, das muß er ausprobieren und in Videos auf YouTube vorstellen. So ist sein Kanal eine wahre Fundgrube und seine [Playlists](https://www.youtube.com/@StevesMakerspace/playlists) quellen über. Meine Empfehlung für den Anfang ist erst einmal die Liste »[Steve's Coding Fun](https://www.youtube.com/playlist?list=PLnJOmsprq3bErSNvxK0OV-Adh1uxRhVdo)« mit zur Zeit 61 im Schnitt viertelstündigen Videos zu [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html). Damit seid Ihr und damit bin ich erst einmal auf Wochen beschäftigt.

Auch wenn es mich natürlich in den Fingern juckt, vieles daraus in [Py5](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html) zu implementieren, bei einigen der vorgestellten Projekte muß man wohl auf P5.js zurückgreifen, so zum Beispiel bei seinen jüngsten drei Videos:

- **Introducing P5.play**: [A Physics and Game Engine for P5.js - with coding example](https://www.youtube.com/watch?v=IQmFqhZ11K8).
- [Replacing P5.play Blocks with Custom Generative Blocks](https://www.youtube.com/watch?v=Q92oJ7qFx7w).
- **Und als (vorläufigen) Höhepunkt der Reihe**: [Combining ml5 PoseNet and P5.play to manipulate objects with my body - P5.js](https://www.youtube.com/watch?v=bPD8lL0hiLs).

<iframe width="560" height="315" src="https://www.youtube.com/embed/Q92oJ7qFx7w?si=mqMfpTe28tnBNzkz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Wer – wie ich – so etwas auch einmal implementieren will**, der oder dem sei *Kenneys* freies ([CC0](https://creativecommons.org/publicdomain/zero/1.0/))  [Physics Assets Pack](https://kenney.nl/assets/physics-assets) und das brandneue [Shape Characters Pack](https://kenney.nl/assets/shape-characters) empfohlen, denn damit können die Ergebnisse noch ganz gewaltig aufgehübscht werden.

**War sonst noch was?** Ach ja, auch vor gekünstelter Intelligenzia hat Steve natürlich keine Angst. Seine vierteilige [Playlist zum Deep Dream Generator](https://www.youtube.com/playlist?list=PLnJOmsprq3bGmPp8oq-BTlQTOl_x0kb7I) zeugt davon. Die ersten beiden Videos führen in die Nutzung des [Deep Dream Generators](https://deepdreamgenerator.com/) (ein Bildgenerator, der auf Googles [Deep Dream](http://blog.schockwellenreiter.de/2017/01/2017011202.html) aufsetzt) ein, die letzten beiden Videos zeigen Ergebnisse, die Steve mit der Software erzielt hat.

Da mir YouTube -- obwohl ich einen Adblocker nutze (Hey Google, Adblocker sind Notwehr) -- den Kanal noch nicht zugedreht hat, betrachtet diesen Beitrag als einen (eventuell) letzten Beitrag der Reihe »Video-Tutorials am Freitag«. Denn wer weiß, wie lange ich YouTube noch nutzen kann?