---
title: "Zurück ins Wunderland: Künstliche Intelligenz und interaktive Geschichten"
author: "Jörg Kantel"
date: "2024-01-24 19:30:00"
categories: [Twine, Harlowe, Interactive Fiction, Spieleprogrammierung, Bilder, Künstliche Intelligenz, Stable Diffusion, DreamStudio, Scenario]
image: "images/twine281.jpg"
---

[![](images/twine281-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53485093685/)

Nach einer längeren, krankheitsbedingten Pause hat *[Dan Cox](https://videlais.com/)* die Arbeit an seinen [Twine-Tutorials](https://videlais.com/twine-tutorials/) wieder aufgenommen. Da er ein überaus korrekter Mensch ist, hat er sie in seiner Playlist [Twine Handbook: Vol 1: Harlowe](https://www.youtube.com/playlist?list=PLlXuD3kyVEr662CjQjQHOVJhmdsl2TgYk) penibel mit »Twine 2.8, Harlowe 3.3« gelabelt[^1]. Dadurch wurde ich darauf gestoßen, »meiner« [Twine-Desktop-App](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html) ebenfalls ein Update zu spendieren (ich fuhr noch Twine 2.7.1 mit Harlowe 3.3.7). Jetzt habe auch ich ein aktuelles [Twine 2.8.1](https://twinery.org/reference/en/release-notes/2-8.html#twine-281) mit einem [Harlowe 3.3.8](https://twine2.neocities.org/) (die beiden anderen Storyformate, die ich nutze -- [Chapbook](https://klembot.github.io/chapbook/guide/) und [SugarCube](https://www.motoslave.net/sugarcube/2/#documentation) -- waren von dem Update nicht betroffen) auf meinem Rechner.

[^1]: Wo ein »Volume 1« (bisher 34 Video-Tutorials) ist, gibt es (meistens) auch (mindestens) ein »Volume&nbsp;2«. Wohl denn: [Twine Handbook: Vols 2: SugarCube](https://www.youtube.com/playlist?list=PLlXuD3kyVEr5JmCL3GbEAd0jPsDVcuge7) (bisher 32 Video-Tutorials).

Die erste Erkenntnis, die ich aus dem Update gewonnen habe -- Twine ab Version 2.8 besitzt endlich ein lang gewünschtes Feature: Der »Geschichtsbibliotheksordner« ist nicht mehr fest verdrahtet, sondern kann jetzt über das Menü `Twine -> Setze den Geschichtsbibliotheksordner` angepaßt werden (nur bei der Desktop-App). Dadurch entfällt das bisherige, umständliche Herumgehampel mit Aliassen, wenn man auch diesen Ordner in seinem GitHub-Repositorium persistent unterbringen will.

Die zweite Erkenntnis: [Harlowe 4.0 steht in den Startlöchern](https://twine2.neocities.org/#introduction_unstable-4.0-builds-now-available!) und wird nicht (mehr) mit Harlowe 3 kompatibel sein. Die bisherige [ChangeLog](https://twine2.neocities.org/#changes_4.0.0-changes-(unreleased)) dazu ist aber noch sehr wenig aussagekräftig, also warte ich erst einmal ab, was die Zukunft bringt.

Auf jeden Fall wurde ich durch dieses Update an meine noch an- und ausstehenden Vorhaben erinnert:

**Vorhaben 1**: [Smashing Pumpkins](https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/) fertigstellen. Diese Geschichte[^2] -- die ich mit dem Storyformat SugarCube realisiert hatte -- war mein erster Versuch, Bilder, die ich mit einer gekünstelten Intellligenzia (in diesem Falle [Clipdrop](https://clipdrop.co/stable-diffusion)) generiert hatte, in einer interaktiven Geschichte einzusetzen. Ich betrachte dieses Experiment als gelungen, allerdings gibt es in der eigentlichen Geschichte noch ein paar logische Ungereimtheiten, die es auszuräumen gilt. Und ich möchte pickbare *Assets*, die der Spieler für die kleine Hexe aufnehmen kann, nicht nur in einem Inventory-Menü, sondern auch in den Bildern sichtbar machen.

[^2]: Eine spielbare Version dieser frühen Fassung habe ich [auf Itch.io hochgeladen](https://kantel.itch.io/smashing-pumpkins).

**Vorhaben 2**: [Zurück ins Wunderland, zurück zu Harlowe](https://kantel.github.io/posts/2023102801_tweego_reloaded/). Ich möchte meine Tutorialreihe zu Twine und Harlowe, die sich an [Alices Ausflügen ins Wunderland](https://kantel.github.io/#category=Alice) entlanghangeln, wieder aufnehmen. Auch hier hatte ich ja schon einmal eine gekünstelte Intelligenzia [bemüht](https://kantel.github.io/posts/2023102801_tweego_reloaded/)[^3] (damals die [AI Comic Factory](http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/comicfactory.html)), Bilder für diese Geschichte zu erstellen, doch in der Zwischenzeit hatte ich viel mit [DreamStudio](https://beta.dreamstudio.ai/generate) experimentiert und mit dieser [Stable Diffusion](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html)-Anwendung bisher schon [Unmengen](https://kantel.github.io/posts/2023101602_alice_raupe/) [an](https://kantel.github.io/posts/2023112602_dreamstudio_party/) [Bildern](https://kantel.github.io/posts/2023120302_white_rabbit/) [generiert](https://kantel.github.io/posts/2023121802_humpel_pumpel/) (jüngst auch noch [diese](https://kantel.github.io/posts/2023122402_stoned_santa/) und [diese](https://kantel.github.io/posts/2024010202_midnight_special/))[^4], die meiner Meinung nach besser in die Geschichte passen. Also wird hier wohl DreamStudio die Künstliche Intelligenz meines Vertrauens werden.

[^3]: Auch dieses kurze *Proof of Concept* hatte ich [auf Itch.io eingestellt](https://kantel.itch.io/zurck-ins-wunderland). Dazu gibt es noch die Version [Alice im Reich der Ringe](https://kantel.github.io/posts/2023091101_alice_humpel_pumpel/), die ich zwar mit Chapbook als Storyformat realisiert hatte (und die mit »konventionell« erstellt (freien) Bildern illustriert war), aber deren Storyline die Grundlage für die geplante Tutoralreihe bilden soll. Auch von dieser Geschichte [gibt es eine Fassung auf Itch.io](https://kantel.itch.io/alice-und-chapbook-stage-1).
[^4]: Und ein paar weitere habe ich auch schon auf Flickr hochgeladen und werde sie in den nächsten Tagen in diesem ~~Blog~~ Kritzelheft vorstellen.

**Vorhaben 3**: *Last but not least* ist da ja auch noch meine »wüste Räuberpistole« [Alien Attack](https://kantel.github.io/posts/2023061001_renpy_81_web/)[^5], für die ich ebenfalls noch eine Künstliche Intelligenz nach Bildern befragen möchte. Nach meinem derzeitigen Kenntnisstand bietet sich hierfür [Scenario](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html) an, da diese Engine explizit für die Erzeugung von *Game Assets* geschaffen wurde. Aber hier stehe ich erst am Anfang meiner Erkundungen, [Playground AI](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html), [SeaArt AI](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/seaart.html) und [Tensor Art](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html) stehen ebenfalls noch auf meiner Testliste. Die ganze Geschichte mit den KI-Bildgeneratoren ist ja noch recht jung (selbst solche (gefühlt) »alteingesessenen« Dienste wie [Leonardo AI](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/leonardoai.html) existieren gerade mal erst seit einem Jahr) und daher spülen auch täglich neue Anwendungen in meinen Feedreader.

[^5]: Auch davon gibt es je einen Prototypen auf Itch.io: Einmal in einer [Fassung mit Twine und Chapbook](https://kantel.itch.io/berlin-attack) und einmal die [Version mit Ren'Py](https://kantel.itch.io/alien-attack-renpy-test).

Aber an Charaktere in [Ren'Py](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html) werden noch ganz andere Anforderungen gestellt, als an Illustrationen in interaktiven Geschichten. Und Scenario hat hier -- wenn auch an [Unity](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html) orientiert -- schon [ein](https://www.youtube.com/watch?v=-co2CLGsCpc) [paar](https://www.youtube.com/watch?v=escLL8dRtq4) [Lösungen](https://www.youtube.com/watch?v=0_KAF4TziUY) [vorgestellt](https://www.youtube.com/watch?v=gWOAO1ltZ_Y), daher steht das Teil zur Zeit bei mir ganz oben auf der Liste.

Auf jeden Fall möchte ich mit diesem letzten Projekt auch testen, wie und ob [Twine mit Chapbook](https://kantel.github.io/posts/2023082601_twine_und_hypermedia/) als Werkzeug für eine Prototyperstellung für ein Spiel taugt, das als Endprodukt in [Ren'Py](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html) laufen soll. Vom eingangs erwähnten *Dan Cox* gibt es einen schönen Beitrag »[How can I use Twine with Unity?](https://videlais.com/2021/02/28/how-can-i-use-twine-with-unity/)«, der tief in die inneren Geheimnisse von Twine einführt. Und *Dan Cox* weiß, worüber er schreibt, immerhin ist er auch der Autor eines [Twee-Compilers](https://github.com/videlais/extwee/). Es gibt also noch viel zu spielen, viel zu testen und viel zu entdecken. *Still digging!*

Eine ganz andere Geschichte ist da noch mein Projekt »[Retrogaming und Künstliche Intelligenz](http://blog.schockwellenreiter.de/2022/04/2022041401.html)« ([Nachschlag](http://blog.schockwellenreiter.de/2022/04/2022041502.html)), das ich ja ursprünglich in [Pygame Zero](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html) (und später dann erst mit [Pythons Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html) und dann in [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html)) realisieren wollte. Das hat mit meiner jüngst frisch erwachten Liebe zu JavaScript/[P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) eine ganz neue Stoßrichtung bekommen. Doch das ist Stoff für einen eigenen Beitrag.