---
title: "P5.play und Matter.js: Video-Tutorials am Freitag"
author: "Jörg Kantel"
date: "2024-06-07 17:35:00"
categories: [P5.js, P5.play, Matter.js, Spieleprogrammierung, JavaScript]
image: "images/matterjsp5play.jpg"
---

[![](images/matterjsp5play-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53412937770/)

Das Abenteuer JavaScript mit [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) geht weiter. Und wie ich hier schon einmal [angedeutet hatte](https://kantel.github.io/posts/2024052903_octopussy/), würde ich dabei gerne auch Bibliotheken wie [Matter.js](https://brm.io/matter-js/), vor allem aber [P5.play](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html) berücksichtigen. Zur Vorbereitung habe ich daher meine kleine Reihe »Video-Tutorials am Freitag« wiederbelebt, die heute Tutorials zu diesen beiden Bibliotheken vorstellt.

<iframe class="if16_9" src="https://www.youtube.com/embed/TDQzoe9nslY?si=qIBqS83iPN7QULye" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Ich beginne mal mit **Matter.js**, eine freie (MIT-Lizenz) *Rigid Body Physik Engine* für JavaScript. *Daniel Shiffman* hatte sie schon vor sieben Jahren mit P5.js vermählt und unter dem Titel »[Matter.js Physics](https://www.youtube.com/playlist?list=PLRqwX-V7Uu6bLh3T_4wtrmVHOrOEM1ig_) eine neun Videos umfassende Playlist dazu veröffentlicht. Aber auch in seiner (P5.js/JavaScript) Neuauflage von »The Nature of Code« spielt Matter.js eine Rolle, daher hat er auch im *Coding Train* einen aktualisierten, [kompletten Track zu Matter.js](https://thecodingtrain.com/tracks/lang/all/topic/matter-js) veröffentlicht.

Auch der YouTuber *flanniganable* (von dem auch die Playlist »[P5.js JavaScript for Beginners](https://www.youtube.com/playlist?list=PLuywqn95st9S2ciAgQw32ID3xBmxZBYQl)« (22 kurze Videos) erwähnenswert ist) hat eine Playlist »[Matter.js on P5.js](https://www.youtube.com/playlist?list=PLuywqn95st9THjyjehRn3epVUdjbcYIAT)« (18 ebenfalls recht kurze Videos) online gestellt.

Matter.js verdient zusätzlich eine Erwähnung, weil die Engine auch mit [microStudio](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html) -- zumindest in der JavaScript-Version -- [zusammenspielt](https://microstudio.dev/community/questions/matterjs-and-microstudio-javascript/682/). Und wenn man der [Dokumentation](https://microstudio.dev/documentation/Matter/) glaubt, soll es auch mit Python/[Brython](http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html) funktionieren. Das sollte ich unbedingt im Hinterkopf behalten.

<iframe class="if16_9" src="https://www.youtube.com/embed/6E8hJOuGOkE?si=_pfFOx61XEF9fZiK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Doch nun zu **P5.play**, das ich ja [schon einmal](http://blog.schockwellenreiter.de/2022/10/2022100401.html) auf diesen Seiten besprochen hatte: Seit der Version 3 hat diese direkt auf P5.js aufsetzende Game-Enginge von Matter.js zu [Planck.js](https://piqnt.com/planck.js/docs) als zugrundeliegende Physik-Engine gewechselt. Das ist ein JavaScript-Port von [Box2D](https://box2d.org/), einer populären C++ Engine.

Es gibt dazu von *Teach Head Online* -- von dem es unter dem Namen »[P5.js Programming](https://www.youtube.com/playlist?list=PLoHS9P-kC-26y6dOZnv2sM0Cz0_8ean4N)« eine Monsterplaylist von 29 Videos zu P5.js gibt -- eine Playlist »[JavaScript Games Development](https://www.youtube.com/playlist?list=PLoHS9P-kC-252Pd9MJD_ItfaVuYV2kTCE)«, die mit 38 Video-Tutorials noch monstermäßiger daherkommt. Zwischen diesen beiden Playlists gibt es aber Überschneidungen.

Und dann hat auch noch der oben schon erwähnte *flanniganable* mit »[P5.play on P5.js](https://www.youtube.com/playlist?list=PLuywqn95st9SA2Ka1misPHt84WxqRX3Uj)« eine Playlist mit zwanzig wieder eher kurzen Videos hochgeladen.

Wer lieber liest statt schaut: Von *Allison Parrish* gibt es den ausführlichen Beitrag »[Making Games with P5.play](https://creative-coding.decontextualize.com/making-games-with-p5-play/)« und *brifetterley* hat auf Medium.com den zwar kürzeren, aber nett zu lesenden Artikel »[Using the P5.play Library for a JS Game](https://medium.com/@brifetterley/using-the-p5-play-library-for-a-js-game-4df01708dd81)« veröffentlicht, der sich aber eventuell hinter einer Bezahlschranke versteckt.

Das dürfte mich und Euch mindestens über das Wochenende -- vermutlich auch darüber hinaus -- beschäftigen. Wenn dann noch Luft bleibt: P5.js fehlt es meiner Meinung nach an einer Turtle-Bibliothek. [TurtleGFX](https://github.com/CodeGuppyPrograms/TurtleGFX) und darauf aufbauend [Numero](https://github.com/nickmcintyre/numero) wollen dem abhelfen. Sollte ich mir daher auch mal genauer anschauen. *Still digging!*

---

**Bild**: *[Steampunk Reptils](https://www.flickr.com/photos/schockwellenreiter/53412937770/)*, erstellt mit [DreamStudio](https://beta.dreamstudio.ai/generate). Prompt: »*A turtle and a python paint together at an easel, colored steampunk style*«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.