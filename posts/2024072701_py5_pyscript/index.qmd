---
title: "Py5, PyScript und mehr: Video-Tutorials zum Wochenende"
author: "Jörg Kantel"
date: "2024-07-27 17:10:00"
categories: [Python, Py5, PyScript, pyp5js, MkDocs]
image: "images/py5undpyscript.jpg"
---

[![](images/py5undpyscript-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53828460994/)

Im Mai dieses Jahres fand die [PyCon US 2024](https://us.pycon.org/2024/) in Pittsburgh, Pennsylvania statt. Und vor wenigen Tagen wurde die dazugehörende [Playlist](https://www.youtube.com/playlist?list=PL2Uw4_HvXqvYhjub9bw4uDAmNtprgAvlJ) mit 156 Videos von Vortragsmitschnitten und Tutorials veröffentlicht. Darunter gab es auch einige Perlen, die ich Euch nicht vorenthalten möchte:

### Py5

Von *James Schmitz*, dem Schöpfer von [Py5](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html), der (erweiterten) Python3-Implementierung von [Processing](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html), gab es einen halbstündigen Vortrag »[Creative Coding with Py5, the Python version of Processing](https://www.youtube.com/watch?v=pNVn3FPi5PU)«, der nicht nur zeigt, was mit Py5 jetzt schon alles möglich ist, sondern auch, was für die Zukunft noch geplant ist. Die [Folien zu dem Vortrag](https://pycon-assets.s3.amazonaws.com/2024/media/presentation_slides/167/2024-05-18T05%3A49%3A20.883215/Creative_Coding_with_py5.pdf) (PDF) findet Ihr hier.

<iframe class="if16_9" src="https://www.youtube.com/embed/h5t522FnAMc?si=71-Lf8XcEyGNMNcR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Passend dazu gab es von *Alexandre B A Villares* ein zweieinhalbstündiges Tutorial »[First Steps in Creative Coding. Learning Python while making Drawings and Animations](https://www.youtube.com/watch?v=h5t522FnAMc)«. Er zeigte darin, wie man mit [Py5](https://abav.lugaralgum.com/como-instalar-py5/index-EN.html) und/oder [pyp5js](https://berinhard.github.io/pyp5js/) kreative Anwendungen erstellt (auch zu diesem Tutorial gibt es die [Slides (PDF) online](https://pycon-assets.s3.amazonaws.com/2024/media/presentation_slides/116/2024-05-27T01%3A56%3A36.631946/Creative_Coding_-_Alexandre_B_A_Villa_6lPWf72.pdf)). *Alexandre B A Villares* nutzte für dieses Tutorial einen eigenen, [angepaßten Editor (»Py5 Mode«) von pyp5js](https://abav.lugaralgum.com/pyp5js/py5mode/), der die Syntax von Py5 *(snake_case)* statt der Syntax von [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) *(CamelCase)* nutzt und eine Konsole für den Python Output anzeigt. Leider habe ich keinen Link zum Quellcode gefunden und auch keinen Hinweis, ob und wie man diesen Editor auf den eigenen Seiten nutzen kann.

### pyp5js

Dahingegen findet man zu [pyp5js](https://berinhard.github.io/pyp5js/) ein wenig mehr (auch in [meinem Wiki](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/pyp5js.html)). Es ist nach eigenen Angaben in P5.js-Port nach Python, der die Übertragung mit [Transcrypt](https://www.transcrypt.org/) und [Pyodide](http://cognitiones.kantel-chaos-team.de/programmierung/python/pyodide.html) vornimmt. Es kommt ebenfalls mit einem eigenen [Online-Editor](https://berinhard.github.io/pyp5js/pyodide/), den man auch [lokal selber hosten](https://berinhard.github.io/pyp5js/#installation) kann (das Teil steht unter der LGPL-3.0-Lizenz und ist auf [GitHub](https://github.com/berinhard/pyp5js) wie auch auf [PyPI](https://pypi.org/project/pyp5js/) zu finden).

### Py5.js

[Py5.js](https://github.com/Luxapodular/Py5.js) ist ein weiteres Experiment, einer Python-(Browser-)Version von P5.js, die ebenfalls auf Pyodide aufsetzt. Auch dieses Teil, das von der [Clinic for Open Source Arts](https://liberalarts.du.edu/emergent-digital-practices/open-source-arts) der Universität Denver unterstützt wird, kommt mit einem [Online-Editor](https://luxapodular.github.io/Py5.js/), den Ihr ebenfalls auch lokal hosten könnt. Allerdings scheint es seit drei Jahren verwaist zu sein, so daß ich momentan von einer Nutzung eher abraten würde.

[![](images/wickeditor.png)](https://github.com/Wicklets/wick-editor/tree/master)

Außerdem scheint Py5.js nur ein Nebenprodukt des [Wick-Editors](https://www.wickeditor.com/#/) zu sein ([Quellcode](https://github.com/Wicklets/wick-editor/tree/master) auf GitHub), ein zwar ebenfalls interessantes Projekt, das aber auch seit 2020 keine Updates mehr erfahren hat.

### PyScript

Aber zurück zur PyCon US 2024. [PyScript](http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html), das von [Anaconda](http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html) unterstützte »Python im Browser«-Framework, das nicht nur ebenfalls auf Pyodide aufsetzt, sondern eine große Anzahl von Modulen aus dem Python-Ökosystem unterstützt (unter anderem den wissenschaftliche Stack mit [Numpy](http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html), [pandas](http://cognitiones.kantel-chaos-team.de/programmierung/python/pandas.html), [Matplotlib](http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html) und mehr) scheint den [Kinderschuhen entwachsen](https://kantel.github.io/posts/2023032902_pyscript_saas/) und für »echte Anwendungen« geeignet zu sein.

<iframe class="if16_9" src="https://www.youtube.com/embed/Vh77_2-Z0vc?si=g0m1gqKy3Cl87x6l" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Davon zeugt zum Beispiel der Vortrag on *Jeff Glass* »[Making Your Documentation Interactive with PyScript](https://www.youtube.com/watch?v=Vh77_2-Z0vc)«, der nicht nur zeigt, wie man mit PyScript Notebook-ähnliche Webseiten mit interaktivem Quellcode erzeugt, sondern wie man diese auch zusammen mit Frameworks wie [Sphinx](http://cognitiones.kantel-chaos-team.de/webworking/staticsites/sphinx.html), [MkDocs](http://cognitiones.kantel-chaos-team.de/webworking/staticsites/mkdocs.html) oder [GitHub Pages](http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html) nutzt. Das ist nicht nur wegen meiner [jüngsten Wiederentdeckung von MkDocs](https://kantel.github.io/posts/2024070602_mkdocs_reloaded/) für mich hochinteressant, sondern auch, weil *James Schmitz* im ersten Video oben über einen Port von Py5 nach PyScript spekulierte. Ich glaube, ich sollte mein [Programm zu Python und Processing](http://blog.schockwellenreiter.de/2022/08/2022080303.html) neu überdenken.

Was sonst noch alles mit PyScript möglich ist, zeigt *Łukasz Langa* in seinem halbstündigen Videovortrag »[Build in-browser 3D experiences with WebGL and PyScript](https://www.youtube.com/watch?v=Af9DwG0WF24)«. Er schlägt einen Bogen von [Zope](http://cognitiones.kantel-chaos-team.de/webworking/frameworks/zope.html) zu PyScript, indem er zeigt, wie man mit PyScript WebGL nutzen kann, um die graphischen Fähigkeiten moderner Webbrowser mit Python zu nutzen.

**War sonst noch was**? Ach ja, hat zwar weder was mit Py5 noch mit PyScript zu tun, aber im weitesten Sinne mit *Creative Coding*: Von *Esther Alter* gab es den Talk »[Procedurally Generated Monsters! A complete example of Python game development](https://www.youtube.com/watch?v=TOj7mMeYZ8Y). Die [Vortragsfolien](https://pycon-assets.s3.amazonaws.com/2024/media/presentation_slides/76/2024-05-12T17%3A38%3A02.264759/Procedurally_Generated_Monsters.pdf) (PDF) findet Ihr hier online.

---

**Bild**: *[Die doppelten Python](https://www.flickr.com/photos/schockwellenreiter/53828460994/)*, erstellt mit [Scenario](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html). Prompt: »*A python with glasses+ and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning*«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.