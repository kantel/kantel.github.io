---
title: "Spieleprogrammierung und das Web: Trinket und der P5.js-Webeditor"
author: "Jörg Kantel"
date: "2023-03-17 21:15:00"
categories: [Spieleprogrammierung, Python, Trinket, P5.js]
image: "images/pizzaplanetrinket.jpg"
---

[![](images/pizzaplanetrinket-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/52754091110/)

Auch wenn die Entdeckung des [Bugs in Trinkets Turtle](https://kantel.github.io/posts/2023031101_trinket_turtle_ontimer/) meiner (Entdecker-) Freude an [Trinket](http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html) erst einmal einen Dämpfer verpaßt hat -- so schnell gebe ich Trinket nicht auf. Zum einen will ich noch testen, wie sich Trinkets Schildkröte mit dem `time`-Modul aus [Pythons Standardbibliothek schlägt](https://kantel.github.io/posts/2023031202_juggling_ball_turtle/) und zum anderen ist da ja auch noch die [Processing (Python) Bibliothek in Trinket](https://kantel.github.io/posts/2023021601_my_first_trinket/), die weiteren Entdeckungen harrt.

Denn ich bin ehrlich: Die Möglichkeit, mit Python direkt für das Web zu schreiben, fasziniert mich. Daher habe ich zum einen gestern angefangen, meinen [kleinen Pizza-Flieger](https://kantel.github.io/posts/2023010701_pygame_oop/) von [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) nach Trinket zu portieren -- natürlich objektorientiert. Und zum anderen läßt mich die Idee eines Maze Games mit der Turtle keine Ruhe. Und auch dieses Experiment würde ich natürlch gerne im Browser sehen.

Daher habe ich nicht nur Trinket noch nicht aufgegeben, sondern auch -- weil heute Freitag ist und ich Euch endlich wieder mit Video-Tutorials versorgen will, damit Ihr mir (was Gott behüten möge) am Wochenende nicht in die Kirchen rennt -- ein paar Videotutorials zusammengestellt, die mich und Euch (hoffentlich!) weiterbringen:

### Labyrinthe und Irrgärten

<iframe width="560" height="315" src="https://www.youtube.com/embed/eZnFV2vWVJE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Den Anfang macht die Playlist »[Build a Maze based Game in Python](https://www.youtube.com/playlist?list=PL9gnJgSxuivFDrB4xGnjbsw8PtaYCsDia)« (vier Videos, Gesamtlaufzeit etwa anderthalb Stunden), die eigentlich kein »Spiel« im eigentlichen Sinne implementiert, sondern Euch zeigt, wie Ihr einen Irrgarten in Python bastelt.

<iframe width="560" height="315" src="https://www.youtube.com/embed/HyK_Q5rrcr4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Darauf aufbauend empfehle ich *Daniel Shiffman* und seine Videos »[Maze Generator with P5.js](https://www.youtube.com/watch?v=HyK_Q5rrcr4)«. Leider keine separate Playlist, daher mußt ich die Folgen [Teil 2](https://www.youtube.com/watch?v=D8UgRyRnvXU), [Teil 3](https://www.youtube.com/watch?v=8Ju_uxJ9v44) und [Teil 4](https://www.youtube.com/watch?v=_p5IH0L63wo) hier einzeln verlinken.

Auch diese Videos entwickeln kein Spiel, sondern zeigen einen etwas mehr [elaborierten Algorithmus](https://en.wikipedia.org/wiki/Maze_generation_algorithm#Randomized_depth-first_search), um einen Irrgarten zu implementieren.

<iframe width="560" height="315" src="https://www.youtube.com/embed/nHjqkLV_Tp0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Den gleichen Algorithmus in reinem JavaScript implementiert hat *Conor Bailey*. In seinem [einstündigen Video](https://www.youtube.com/watch?v=nHjqkLV_Tp0) zeigt er, wie, und den [Quellcode](https://github.com/conorbailey90/Javascript-DFS-Maze) findet Ihr in diesem GitHub-Repositorium.

<iframe width="560" height="315" src="https://www.youtube.com/embed/8Hs5gptvBxU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Natürlich geht das auch alles mit [Pythons Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html). Ein sehr schönes Beispiel ist das obige Video »[Python maze solving program using the Left Hand Rule algorithm](https://www.youtube.com/watch?v=8Hs5gptvBxU)«. Dieses Video hat noch zwei Nachfolger, die ebenfalls den Weg durch einen Irrgarten mit Hilfe von Pythons Schildkröte finden:

- [Python Breadth First Search Maze solving program](https://www.youtube.com/watch?v=ZuHW4fS60pc) (25 Minuten) und
- [Depth First Search maze solving program written in Python](https://www.youtube.com/watch?v=1NW9wWswaMk) (30 Minuten).

Das wäre doch ein ideales Experimentierfeld für meine eigenen Turtle-Maze-Game-Versuche.

**War sonst noch was?** Ich will Euch nicht verheimlichen, daß der gleiche Kanal auch noch das Video »[Python maze generator with path solution](https://www.youtube.com/watch?v=Xthh4SEMA2o)« hochgeladen hat, in dem der Autor nicht mit der Schildkröte, sondern mit Pygame experimentiert.

### Python, Pygame und RPGs

<iframe width="560" height="315" src="https://www.youtube.com/embed/Vg83OtRkevE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**Und last but not least** ist da ja auch noch meine heimliche Liebe zu RPGs. Und dafür ist die zwöfteilige Playlist »[Pygame RPG Tutorial](https://www.youtube.com/playlist?list=PLywhTYI3VhfJCkp_aQXFj_8-Ac496LmUm)« des Users *EdZoft* mit je im Schnitt etwa viertelstündigen Videos eine echte Entdeckung -- jedenfalls wenn ich meinem Eindruck beim Anschauen des obigen Startvideos trauen darf.

### Mehr nächstes Wochenende

Mir sind in den letzten Tagen noch ein paar weitere Videos und Playlists zu den Themen Retrogaming (mit Python und [Processing](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html)) und Creative Coding (mit P5.js) untergekommen. Damit ich nicht wieder an einem Wochenende ohne Video-Tutorials dastehe und Ihr mir dann doch aus lauter Langeweile in eine Kirche rennt, habe ich diese für den nächsten Freitag vorgesehen. *Still digging!*