---
title: "Frogger: Ein Spiel -- vier Implementierungen"
author: "Jörg Kantel"
date: "2023-03-24 17:45:00"
categories: [Spieleprogrammierung, Processing, Python, Pygame, Godot]
image: "images/froggerturtle.jpg"
---

[![](images/froggerpygame-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/52768661945/)

[Frogger](https://de.wikipedia.org/wiki/Frogger) ist ein Videospiel-Klassiker, der erstmals 1981 für Spielhallen veröffentlicht wurde. Später wurde es auch auf Heimcomputer wie den Commodore C64, den Sinclair ZX Spectrum, den IBM PC, den Apple II und auf viele Spielekonsolen portiert und es besitzt bis heute große Popularität. In dem Spiel geht es darum, einen Frosch sicher über eine stark befahrene Straße und anschließend über einen Fluß zu führen. Auf der fünfspurigen Straße muß er verschiedenen Kraftfahrzeugen ausweichen. Da der Frosch nicht schwimmen kann, überquert er den Fluß, indem er Schildkröten und treibende Baumstämme als Plattformen nutzt. Ziel ist es, eine der sicheren Buchten am oberen Rand des Bildschirms zu erreichen.

In den Video-Tutorials, die ich am heutigen Freitag vorstelle, damit Ihr -- wenn Euch an dem zu erwartenden, verregneten Wochenende die Langeweile bedrohen sollte und Ihr in die Kirchen rennen wollt -- etwas Besseres vorhabt, wird Frogger für vier verschiedene Plattformen implementiert: Einmal in [Processing (Java)](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html), dann in [Pythons Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html), schließlich in [Godot](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/godot.html) und *last but not least* stelle ich auch noch eine Version für [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) vor.

<iframe width="560" height="315" src="https://www.youtube.com/embed/giXV6xErw0Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Den Anfang macht jedoch *Daniel Shiffman*, der -- vergnügt wie immer -- in seiner 72.&nbsp;Coding Challenge in vier Teilen eine graphisch minimalistische Frogger-Variante  in Processing (Java) implementiert ([Teil 1](https://www.youtube.com/watch?v=giXV6xErw0Y), [Teil 2](https://www.youtube.com/watch?v=06-ZvYmSeus), [Teil 3](https://www.youtube.com/watch?v=hk326ZHlENQ) und [Teil 4 (Refactoring)](https://www.youtube.com/watch?v=c6WdJltqEtM)). Der Vorteil dieses Minimalismus liegt darin, daß die Programmierin oder der Programmierer sich auf die Spielemechanik konzentrieren kann, ohne von dem graphischen Brimborium drumherum abelenkt zu werden.

<iframe width="560" height="315" src="https://www.youtube.com/embed/CDM4U5A7BX8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Wenn in diesem ~~Blog~~ Kritzelheft ein Tutorial von *Daniel Shiffman* auftaucht, dann ist meist auch *Christian Thompson* (aka *TokyoEdtech*) nicht weit. Der Mann, der Unglaubliches mit Pythons Turtle anstellt, hat natürlich auch (s)eine Frogger-Version im Portfolio: In [fünf je knapp einstündigen Live-Coding-Videos](https://www.youtube.com/playlist?list=PLlEgNdBJEO-lR6IChlbqU1E00vpN3GBM6) zeigt er mir und Euch, wie er Pythons Schildkröte überredet hat, Frogger zu spielen (mit allem graphischen Drum und Dran).

Den [Quellcode mit allen Assets](https://github.com/wynand1004/Projects/tree/master/Frogger) findet Ihr in seinem GitHub-Repositorium.

<iframe width="560" height="315" src="https://www.youtube.com/embed/P5_hnig7n5w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Sollte es mich überkommen und ich doch einmal etwas mit Godot und GDScript anstellen zu wollen (was ich immer noch nicht ausschließe, denn Godot scheint eine vielversprechende Spiele-Engine zu sein), dann ist sicher [dieses Tutorial](https://www.youtube.com/watch?v=P5_hnig7n5w), das in dreieinhalb Stunden mit Hilfe einer Frogger-Variante, die starke Anleihen an Sci-Fi-Klassikern genommen hat, in die 2D-Programmierung mit Godot einführt, ein vielversprechender Einstieg.

Ich habe mir jedenfalls die erste halbe Stunde mal reingezogen und hatte nicht nur viel Spaß daran, sondern auch das Gefühl, etwas gelernt zu haben.

<iframe width="560" height="315" src="https://www.youtube.com/embed/KQz6lXI_5fI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**War sonst noch was?** Ach ja, für Pygame gibt es auch noch ein 45-minütiges Tutorial: »[Creating a Basic Frogger in Pygame](https://www.youtube.com/watch?v=KQz6lXI_5fI)«, dieses Mal wieder mit der »klassischen« Graphik. Und auch wie Ihr an die Assets kommt, wird in dem Video gezeigt.