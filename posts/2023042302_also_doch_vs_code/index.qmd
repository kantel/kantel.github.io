---
title: "Also doch Visual Studio Code?"
author: "Jörg Kantel"
date: "2023-04-23 16:15:00"
categories: [Python, Visual Studio Code]
image: "images/pizzaplaneinvscode.jpg"
---

[![](images/pizzaplaneinvscode-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/52838686227/)

Der Grund, warum ich gestern [noch ein wenig mit Python spielte](https://kantel.github.io/posts/2023042301_thonny_4_0_2/) war der Versuch, meine [Begeisterung für Spyder](https://kantel.github.io/posts/2023041603_spyder/) zu retten. Denn nach einem anfänglichen Hoch zeigte sich doch, daß die Python-IDE mit Ihrerer Bevormundungsstrategie (kein `pip` und damit auch keine Zusatzmodule) mich mehr einschränkte, als ich bereit war zu akzeptieren.

In meiner Verzweiflung hatte ich sogar mein [Anaconda-Python](http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html) komplett neu installiert und das darin mitgelieferte Spyder angeworfen. Nachdem dieses sich aber ebenfalls weigerte, [Pythons Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html) -- obwohl in der Anaconda-Distribution enthalten -- zu starten und zudem (nach einem Update auf das aktuelle Spyder 5.4.3) eine fehlende Abhängigkeit beklagte und die Installation von `pylsp` verlangte (ein Modul, das `conda` aber nicht kannte), hatte ich es aufgegeben.

Also habe ich zum wiederholten Mal in den sauren Apfel gebissen und [Visual Studio Code](http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html) angeworden. Denn eigentlich benötige ich ja, um der *Mac-Only-Falle*, in die ich mit meinem Leib-und-Magen-Editor [TextMate](http://cognitiones.kantel-chaos-team.de/produktivitaet/textmate.html) geraten war, auch und gerade wegen meiner verstärkten Hinwendung zum Chromebook, zu entkommen, einen plattformübergreifenden *all purpose* Editor, der mehr kann, als nur Python.

Und da hatte ich zähneknirschend für [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) und [Ren'Py](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html) sowieso schon Microsofts (Open Source) Boliden akzeptiert. Warum sollte ich mich also weiter verzetteln?

Nachdem ich Visual Studio Code mitgeteilt hatte, daß mein aktuelles Anaconda-Python in `~/anaconda3/bin/python` zu finden sei und ich mit `pip install pgzero` [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) inklusive [Pygame Zero](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html) nachinstalliert hatte, konnte ich neben Programmen aus dem üblichen *Python Scientific Stack* auch Pygame- (Zero-) und Turtle-Apps problemlos aus Visual Studio Code heraus starten.

Jetzt habe ich folgendes Programmier-Szenario für Desktop-Applikationen: Für [Py5](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html)-Apps werde ich weiterhin ausschließlich auf Thonny setzen, für andere Python-Apps habe ich die Wahl zwischen Thonny und Visual Studio Code (wobei ich für Pygame (Zero)-Anwendungen und Pythons Turtle wohl eher zu Thonny neige, Anwendungen, die den *Scientific Stack* betreffen aber Visual Studio Code und meinem Anaconda-Python überlasse). Und für Ren'Py und P5.js hat sich VS Code sowieso schon bewährt.

Manchmal werden die Probleme doch zu groß, wenn man unbedingt gegen den Strom schwimmen will …