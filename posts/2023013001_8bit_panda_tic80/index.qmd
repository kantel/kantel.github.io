---
title: "Retrocomputing: 8-Bit Panda und andere TIC-80-Tutorials"
author: "Jörg Kantel"
date: "2023-01-30 19:40:00"
categories: [Spieleprogrammierung, Retrogaming, TIC-80]
image: "images/8bitpanda.jpg"
---

[![](images/8bitpanda-b.jpg)](https://miro.medium.com/max/720/1*zwK8FhuXXJOZ6DP-ghqZNA.gif)

Auch auf die Gefahr hin, daß ich mich noch weiter verzettel: Der [gestrige Beitrag](https://kantel.github.io/posts/2023012902_four_devs_one_art_pack/) über die Kreativität der vier [Godot](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/godot.html)-Entwickler hat mich an ein altes Vorhaben erinnert: In Anlehnung an das [hier vorgestellte](https://kantel.github.io/posts/20221222803_stolen_crown/) Spiel »[The Stolen Crown](https://www.youtube.com/watch?v=MkZXaDQfTSo)« wollte ich doch ebenfalls ein Mini-RPG zusammenbasteln -- und zwar mit der Fantasy-Console [TIC-80](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html).

In Anbetracht der vielen Filmchen auf YouTube gibt es erstaunlich wenige geschriebene Tutorials zu der kleinen, freien Engine. Das mag der Tatsache geschuldet sein, daß man die Funktionen der kleinen Konsole besser zeigen als beschreiben kann. Daher möchte ich die, die ich aufgetrieben habe, hier vorstellen:

Da ist vor allem *Bruno Olveira*. Ihn hatte ich im Dezember 2020 in einer meiner berüchtigten Riesenlinkschleuder schon einmal [vorgestellt](http://blog.schockwellenreiter.de/2020/12/2020120802.html). Sein 8-Bit-Panda ist in der TIC-80-Szene eine Legende und in »[Writing a platformer for the TIC-80 fantasy console](https://medium.com/@btco_code/writing-a-platformer-for-the-tic-80-virtual-console-6fa737abe476)« hat er ausführlich vorgestellt, wie er das Teil programmiert hat.

Aber ich möchte ja ein RPG programmieren. Auch dafür hat *Bruno Olveira* ein Tutorial parat: In »[Why I spent almost a year building an RPG game for a fantasy console](https://medium.com/@btco_code/why-i-spent-almost-a-year-building-an-rpg-game-for-a-fantasy-console-2bbe2e1d8cb8)« zeigt er, wie er »[Shadow Over the Twelve Lands](https://btco.itch.io/shadow-over-the-twelve-lands)« mit und auf dem TIC-80 entwickelt hat.

Hat er in diesen zwei Spielen die Möglichkeiten der kleinen Konsole schon fast ausgereizt, geht er mit »[Writing a retro 3D FPS engine from scratch](https://medium.com/@btco_code/writing-a-retro-3d-fps-engine-from-scratch-b2a9723e6b06)« ans Äußerste.

**Caveat**: Die Artikel von *Bruno Olveira* sind auf Medium.com erschienen. Ich hatte irgendwann einmal in den sauren Apfel gebissen und mir ein Medium-Abo zugelegt. Daher weiß ich nicht, ob die Beiträge hinter einer Bezahlschranke verstreckt sind. Aber er hat auch noch eine [Seite auf TIC-80](https://tic80.com/dev?id=6054). Dort findet Ihr weitere Tutorials von ihm.

Auch *Bytes'n'Bits* hat [Seiten für den TIC-80](https://bytesnbits.co.uk/learn-to-code/). Dort findet Ihr unter anderem zwei [einführende](https://bytesnbits.co.uk/getting-ready-to-learn-to-code/) Tutorials, ein [Tutorial zu Space Invaders](https://bytesnbits.co.uk/space-invaders-coding-course-introduction/) in 25 Lektionen, ein [Tutorial zu Asteroids](https://bytesnbits.co.uk/asteroids/) in neun Lektionen, das obligatorische [Snake Game](https://bytesnbits.co.uk/snake/) in zwei Lektionen und *last but not least* dürft Ihr als Höhepunkt [im Weltraum ballern](https://bytesnbits.co.uk/space-commander/) (drei Lektionen).

»**Hattu Möhrchen?**« Jugend hackt[^1] hat einen »[Einstieg in die Spieleentwicklung mit TIC-80](https://jugendhackt.org/oer/projekte/spieleentwicklung-tic-80/) veröffentlicht, in dem ihr einen niedlichen Hasen auf der Jagd nach Möhren programmiert.

[^1]: Auf deren Seiten gibt es auch noch ein Tutorial »[Textadventures mit Twine erschaffen](https://jugendhackt.org/oer/projekte/textadventures-mit-twine-erschaffen/)«, doch das ist eine meiner anderen Baustellen.

Nicht unerwähnt bleiben soll, daß man mit TIC-80 erstellte Spiele als im Browser spielbar zum Beispiel auf Itch.io oder [Glitch](http://cognitiones.kantel-chaos-team.de/webworking/staticsites/glitch.html) hochladen kann. Ein großer Vorteil gegenüber den mit [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) ([Zero](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html)) zusammengeschraubten Spielen.

Ansonsten -- damit alles auf einer Seite zusammengefaßt zu finden ist -- möchte ich noch auf meine gesammelten 8x8 und 16x16 großen [freien Tiles- und Spritesets](https://kantel.github.io/posts/2023011401_freie_tiles_und_sprites/) hinweisen und noch einmal auf den Beitrag »[Die Anatomie eines Roguelikes](https://kantel.github.io/posts/2022121402_anatomie_roguelike/)« verlinken. Das wäre dann erst einmal alles, was ich gefunden habe. *Still digging!*