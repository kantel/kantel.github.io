---
title: "Es lebe die Schildkröte: TurtleGFX und P5.js"
author: "Jörg Kantel"
date: "2024-06-09 18:20:00"
categories: [P5.js, Turtle, TurtleGFX, JavaScript, Creative Coding, CodeGuppy]
image: "images/turtlegfx1.jpg"
---

[![](images/turtlegfx1-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53412499596/)

Da habe ich mir [am Freitag etwas eingebrockt](https://kantel.github.io/posts/2024060701_p5play_matterjs/): Die beiläufig in einem Nebenabsatz eingefügte Bemerkung, daß mir in [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html) so etwas wie [Pythons Turtle](http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html) fehlen würde, hat mir keine Ruhe gelassen und mich zum Sammeln von Material animiert, das mir helfen soll, [CodeGuppys](https://codeguppy.com/index.html) Bibliothek [TurtleGFX](https://github.com/CodeGuppyPrograms/TurtleGFX/tree/master), die Pythons Schildkröte in P5.js (und in [CodeGuppy](https://codeguppy.com/) selber) implementieren will (und die auch in [Numero](https://github.com/nickmcintyre/numero) Einzug gehalten hat), zu verstehen und in P5.js anzuwenden.

<iframe class="if16_9" src="https://www.youtube.com/embed/_OG4YTs8h3c?si=VghcYUvZcDi1iN6P" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Die Beispielanwendungen, die ich gefunden habe, sind alle von Mr. CodeGuppy itselfs, *Marian Veteanu*, und in CodeGuppy implementiert. Da diese IDE doch in Teilen sehr stark von P5.js abweicht, ist erst einmal die Lektüre des Beitrags »[Getting started with CodeGuppy.com for P5.js Developers](https://codeguppy.com/code.html?t=_p5)« zu empfehlen. Danach kann man sich die übrigen Beiträge zu TurtleGFX eigentlich (mit einer Ausnahme) in beliebiger Reihenfolge reinziehen. Ich empfehle diese Abfolge:

1. [Turtle Lines](https://codeguppy.com/code.html?t=turtle_lines): A simple line rotated using the turtle graphics library creates amazing patterns.
2. [Hilbert Curve](https://codeguppy.com/code.html?t=hilbert_curve): Generate Hilbert curve using turtle graphics.
3. [Turtle Polygons](https://codeguppy.com/code.html?t=turtle_polygons). Generate polygons using turtle graphics.
4. [Sierpinsky Triangle](https://codeguppy.com/code.html?t=turtle_sierpinski). Draw Sierpinski triangle using turtle graphics.
5. [Etch with Turtle](https://codeguppy.com/code.html?t=turtle_etch). This is an implementation with Turtle Gfx of the famous Etch a Sketch.
6. [Fractal Tree](https://codeguppy.com/code.html?t=fractal_tree). This program will show you how to generate a fractal tree using turtle graphics.
7. [Forest Walk](https://codeguppy.com/code.html?t=forest_walk). Explore a virtual forest of fractal trees generated using turtle graphics. (Dieser Beitrag ist die oben erwähnte Ausnahme, er setzt die Lektüre von »Fraktal Tree« voraus.)

Danach solltet Ihr und auch ich in der Lage sein, TurtleGFX in Eure (und ich in meine) P5.js-Sketche einzubauen. Wer dann Blut geleckt hat und wissen will, wie man eine eigene Turtle-Bibliothek implementiert, dem oder ihr sei noch dieser Beitrag empfohlen:

8. [Turtle Graphics](https://codeguppy.com/code.html?t=turtle_graphics): Turtle graphics is the flagship feature of Logo programming language. See how easy is to add Logo like commands to your favorite JavaScript language.

Jetzt fehlt mir eigentlich nur noch eine Bibliothek für die Mathematik mit komplexen Zahlen. Hier [empfiehlt das Processing-Forum](https://forum.processing.org/two/discussion/22883/complex-numbers-in-p5.html) die JavaScript-Library [Math.js](https://mathjs.org/index.html) mit dem Modul [Complex Numbers](https://mathjs.org/docs/datatypes/complex_numbers.html), das man via NPM auch [lokal installieren](https://mathjs.org/download.html) kann. Das sollte ich auch noch testen. Aber erst einmal ist die Schildkröte an der Reihe. *Still digging!*

---

**Bild**: *[Two Turtles drawing together](https://www.flickr.com/photos/schockwellenreiter/53412499596/)*, erstellt mit [DreamStudio](https://beta.dreamstudio.ai/generate). Prompt: »*A turtle and a python paint together at an easel, colored steampunk style*«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.