---
title: "Spieleprogrammierung, Creative Coding und Game Design: Video-Tutorials am Freitag"
author: "Jörg Kantel"
date: "2024-02-23 17:35:00"
categories: [Spieleprogrammierung, Pygame, Game Design, Creative Coding, Computergraphik, P5.js]
image: "images/hinterhof.jpg"
---

[![](images/hinterhof-b.jpg)](https://www.flickr.com/photos/schockwellenreiter/53500755471/)

Solange mir YouTube den Hahn noch/doch nicht endgültig abdreht, weil ich nicht auf meinen [Adblocker](https://de.wikipedia.org/wiki/UBlock_Origin) verzichten will (ich erinnere daran: Adblocker sind Notwehr!), werde ich in unregelmäßigen Abständen Freitags wieder Video-Tutorials vorstellen, die mir während der Woche untergekommen sind und die ich für bemerkenswert halte.

Eine Bemerkung jedoch vorweg: Ich habe -- speziell bei Playlisten -- oft in die Tutorials nur kurz reingeschaut und sie auf meine »Später Ansehen«-Liste gesetzt. Die Nutzung geschieht daher auf Eure eigene Gefahr. Doch jetzt die Auswahl für diese Woche:

<iframe class="if16_9" src="https://www.youtube.com/embed/Bxdt6T_1qgc?si=vQeVqdPmKWLwyvdT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

*Daniel Shiffman* ist wieder da und er hat sich in seiner [181. Coding Challenge](https://www.youtube.com/watch?v=Bxdt6T_1qgc) einen harten Brocken vorgenommen. Er programmiert nämlich eine ganz besondere Dithering-Technik, das [Weighted Voronoi Stippling](https://www.cs.ubc.ca/labs/imager/tr/2002/secord2002b/secord.2002b.pdf) in [P5.js](http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html). Damit er das Rad nicht neu erfinden muß, nimmt er die [D3-Delauny](https://d3js.org/d3-delaunay)-Bibliothek zu Hilfe. Trotzdem habe ich alle Erläuterungen und Links auf der [Webseite zu diesem Video](https://thecodingtrain.com/challenges/181-image-stippling) gebraucht, um auch nur ansatzweise zu kapieren, was *Shiffman* da anstellt.

<iframe class="if16_9" src="https://www.youtube.com/embed/lpCVn7tQYas?si=EQtdQPNdvrZ3L7kW" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Nicht viel einfacher macht es mir und Euch *Matt Owen* mit seiner [Pygame ARPG Tutorial-Reihe](https://www.youtube.com/playlist?list=PLLdd2IQ6qKU7OAOpVdaK304D_BGSOw3iW) (bisher sieben im Schnitt halbstündige Videos, letzte Aktualisierung vorgestern, wird daher vermutlich noch fortgeführt). Sein in [Pygame](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html) programmiertes [Action-Rollenspiel](https://de.wikipedia.org/wiki/Action-Rollenspiel) ist so etwas wie eine 2D-Version von [Quake](https://de.wikipedia.org/wiki/Quake). Ich habe bisher nur in die erste Folge kurz reingeschaut, aber das Programm der Reihe scheint sehr ambitioniert zu sein.

Ein Problem sind die Assets. Zwar kann man auf dem Itch.io-Account von *Matt Owen* sein Spiel [Quake&nbsp;2D](https://mowen88.itch.io/quake-2d) kostenlos herunterladen und in dem Paket sind dann auch die Assets zu finden, doch über die Lizenz wird nirgendwo ein Wort verloren. Daher verwendet -- falls Ihr das Tutorial nachvollziegen wollt -- lieber Assets, deren Lizenz klar ist. Die Gefahr, sonst unerwünschte Post von einer Anwaltskanzlei zu bekommen, ist andernfalls nicht von der Hand zu weisen.

<iframe class="if16_9" src="https://www.youtube.com/embed/zLW0AYVa_3o?si=qAHBD9Kco9CXOiiC" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Gänzlich unproblematisch ist dagegen die Reihe »[Storytelling Through Game Design 2024](https://www.youtube.com/playlist?list=PLmonVfPLgWYkiaw9_9Wu9wJEX30zLj8m5)« des *Edith Lando Virtual Learning Centre* (vier je etwa einstündige Videos). Sie ist zum einen bewußt anfängerfreundlich gehalten (sie wendet sich direkt an Jugendliche ohne Vorkenntnisse), zum anderen nutzt sie als (Online-) Game Engine [Microsoft MakeCode Arcade](https://arcade.makecode.com/) und darin werden alle Bilder und Sprites von Euch selber gezeichnet.

Microsoft MakeCode Arcade ist eine visuelle, [Scratch](http://cognitiones.kantel-chaos-team.de/programmierung/scratch.html)-ähnliche Umgebung, also nicht unbedingt mein Ding. Aber als Ideengeber taugt die Playlist allemal (ich denke da an eine Umsetzung eines von dieser Reihe inspiriertem Spiel in [microStudio](http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html) -- das Teil steht ja auch noch auf meiner [Todo-Liste](https://kantel.github.io/posts/2024022001_microstudio_1st_steps/)). *Still digging!*

---

**Bild**: *[Neuköllner Hinterhofparty](https://www.flickr.com/photos/schockwellenreiter/53500755471/)*, erstellt mit [Scenario](http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html). Prompt: »*abandoned (((sofas))) and (((armchairs))) party and dance happily along with plastic bags filled with household waste on the streets of a suburb*«, Modell: Stable Diffusion XL, Style: Surreal + 2010s Cartoon.