<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Fri, 09 Feb 2024 19:45:00 GMT</lastBuildDate>
<item>
  <title>Konsistente Charaktere und Künstliche Intelligenz</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020902_ki_kons_char/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53518059577/"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/entrancehallmockup-b.jpg" class="img-fluid"></a></p>
<p>Es ist ziemlich schwierig, mit den derzeitigen Werkzeugen der gekünstelten Intelligenzia wenigstens einigermaßen konsistente Charaktere zu generieren. Zwar gibt es auf YouTube eine große Anzahl von Videos, die behaupten, Lösungen für das Problem gefunden zu haben, jedoch ist das, was sie unter »Charakterkonsistenz« verstehen, meist weit von dem entfernt, was man zum Beispiel bei Avataren für eine <em>Visual Novel</em> benötigt.</p>
<p>Bei interaktiven Geschichten, die man etwa mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erstellt, kann man das Problem meistens großzügig ignorieren und einfach hoffen, daß der Leserin/Spielerin oder dem Leser/Spieler die Brüche in den Zeichnungen nicht störend auffallen, da meist in der Regel die Abbildung je auf einer separaten Seite für sich alleine steht (vergleiche die <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Smashing Pumpkins</a>, wo ich wild Bilder zusammengemixt hatte). Aber zum Beispiel bei <em>Visual Novels</em> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a> sieht die Sache schon anders aus.</p>
<p>Und da ich momentan an <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">ersten Tests mit Tuesday&nbsp;JS</a> arbeite, wurde ich mit dem Problem konfrontiert, und ich glaube, eine Lösung gefunden zu haben, die mich erst einmal zufriedenstellt. Für diesen Prototypen habe ich zwei Charaktere (einen Privatdetektiv und ein Zimmermädchen) mit <a href="https://app.scenario.com/">Scenario</a> generiert (ich habe jeweils bestimmt je 100 Versuche gestartet, bis ich endlich mit den Ergebnissen zufrieden war).</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53515278291/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid_orig.jpg" class="img-fluid" alt="Zimmermädchen"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53517612235/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye_orig.jpg" class="img-fluid" alt="Privatdetektiv"></a></p>
<p>Diese Bilder habe ich dann in <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> importiert und als Grundlage für ein <em>»Image to Image« Refinement</em> genommen (das geht auch in Scenario, aber ich bin momentan einfach mit DreamStudio vertrauter – die vielen LoRAS in Scenario verwirren mich einfach, da greife ich doch lieber auf das gewohnte <em>Comic Book</em> zurück). Dort habe ich dann mit dem gleichen Prompt Variationen generiert, in dem ich an zweiter Position den Prompt um die gewünschten <em>facial expressions</em> ergänzt hatte (zum Beispiel <em>angry</em>, <em>confused</em>, <em>sad</em>, <em>smiling</em> oder <em>talking</em>). Und weil ich den Detektiv eigentlich ohne Brille haben wollte, habe ich seinem Negativ-Prompt noch ein <em>looking glass</em> spendiert. Nicht alle Bilder waren produktionsreif, aber die besten sahen so aus – bei dem Zimmermädchen (Auswahl):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53519145519/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid01.jpg" class="img-fluid" alt="Zimmermädchen sehr traurig"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519142594/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid02.jpg" class="img-fluid" alt="Zimmermädchen sprechend"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53518827531/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid03.jpg" class="img-fluid" alt="Zimmermädchen fröhlich"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53519248330/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid04.jpg" class="img-fluid" alt="Zimmermädchen verwirrt"></a>&nbsp;<span class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid05.jpg" class="img-fluid" alt="Zimmermädchen verärgert"></span></p>
<p>Oder bei dem Detektiv (ebenfalls nur eine Auswahl):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53519169229/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye01.jpg" class="img-fluid" alt="Privatdetektiv sehr traurig"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519168809/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye02.jpg" class="img-fluid" alt="Privatdetektiv sprechend"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53517964722/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye03.jpg" class="img-fluid" alt="Privatdetektiv fröhlich"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53519012558/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye04.jpg" class="img-fluid" alt="Privatdetektiv verwirrt"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519156939/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye05.jpg" class="img-fluid" alt="Privatdetektiv verärgert"></a></p>
<p>Diese Bilder habe ich dann mit dem <a href="https://kantel.github.io/posts/2024020702_rembg/">kürzlich entdecken Rembg</a> vom Hintergrund freigestellt und kann sie nun als Avatare in (m)einer <em>Visual Novel</em> nutzen. Als <em>Proof of Concept</em> habe ich zwei von ihnen in das <em>Mockup</em> des Bannerbilds oben einkopiert.</p>
<p>Ich will ehrlich sein: Erstens ist es mit Sicherheit nicht das, was versierte Pixelartisten daraus hätten machen können (aber hey, es ist nur eine Maschine ohne Kreativität und Verstand, die ich damit beauftragt habe). Zweitens sind trotz aller Auswahl und vieler verworfener Versuche noch immer einige Inkonsistenzen zu entdecken. Einige davon habe ich schon für das obige Mockup mit der Bildbearbeitung meines Vertrauens zu eliminieren versucht, aber noch einmal – ich bin kein Pixelartist.</p>
<p>Trotzdem bin ich mit dem Ergebnis recht zufrieden und werde die Bildchen in meinem geplanten Tuesday&nbsp;JS Test einsetzen. Denn erst in der Anwendung zeigt sich, ob das Erreichte wirklich etwas taugt. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53518059577/">Mockup für eine Visual Novel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> und <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>.</p>



 ]]></description>
  <category>Künstliche Intelligenz</category>
  <category>Bilder</category>
  <category>Stable Diffusion</category>
  <category>DreamStudio</category>
  <category>Scenario</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <category>Tuesday JS</category>
  <guid>https://kantel.github.io/posts/2024020902_ki_kons_char/</guid>
  <pubDate>Fri, 09 Feb 2024 19:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020902_ki_kons_char/images/entrancehallmockup.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apple Patchday Februar 2024 – erste Lieferung</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020901_apple_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53482831798/"><img src="https://kantel.github.io/posts/2024020901_apple_patchday/images/apple20240201-b.jpg" class="img-fluid"></a></p>
<p>Die Firma aus Cupertino mit dem angebissenen Apfel im Logo hatte gestern ihren monatlichen Flickentag. Auch wenn sie vermutlich noch nicht alle Updates unters Volk gebracht hat, sind es doch so viele, daß ich sie wieder <em>en bloc</em> veröffentlichen möchte:</p>
<section id="apple-veröffentlicht-macos-sonoma-14.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sonoma-14.3.1">Apple veröffentlicht macOS Sonoma 14.3.1</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sonoma 14.3.1 freigegeben und korrigiert damit auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-ios-17.3.1-und-ipados-17.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.3.1-und-ipados-17.3.1">Apple veröffentlicht iOS 17.3.1 und iPadOS 17.3.1</h3>
<p>Wie angekündigt hat Apple das Update auf iOS 17.3.1 und iPadOS 17.3.1 bereitgestellt. Die Updates bieten Fehlerbehebungen und korrigieren kritische Sicherheitslücken.</p>
<p>Das Update auf auf iOS 17.3.1 iPadOS 17.3.1 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-10.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-10.3.1">Apple veröffentlicht watchOS 10.3.1</h3>
<p>Apple hat für die Apple Watch watchOS 10.3.1 bereitgestellt und behebt damit auch wieder Sicherheitsprobleme.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p>Die übrigen, noch fehlenden Updates für die älteren, noch unterstützten Betriebssystemversionen werden sicher in den nächsten Tagen folgen. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53482831798/">Schneewittchen, die Hexe und die Äpfel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>The evil witch gives Snow White a half-eaten apple in the fairytale forest</em>«, Modell: Stable Diffusion XL, Style: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020901_apple_patchday/</guid>
  <pubDate>Fri, 09 Feb 2024 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020901_apple_patchday/images/apple20240201.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kurios und kurioser: Tuesday JS v42 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020801_tuesdayjs_update/</link>
  <description><![CDATA[ 




<p><a href="https://kirilllive.github.io/tuesday-js/screenshots/script_structure.jpg"><img src="https://kantel.github.io/posts/2024020801_tuesdayjs_update/images/tuesday_script_struct-b.jpg" class="img-fluid"></a></p>
<p>Meine <a href="https://kantel.github.io/posts/2024020702_rembg/">gestrigen Experimente</a> mit dem Freistellen von Bildern hatte ich nicht grundlos durchgeführt. Denn gestern schneite in meinen Feedreader die Meldung herein, daß <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, die freie (Apache 2.0-Lizenz) JavaScript-basierte Engine für <em>Visual Novels</em> und interaktive Geschichten (und noch einiges mehr) in der <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/42.0.0">Version 4.2 erschienen</a> sei (bisher fuhr ich mit der Version 35, das (wichtige!) Update auf die <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/41.0.0">Version 41</a> vom 21. Dezember letzten Jahres hatte ich wohl im Festtagsstreß verschlafen).</p>
<p>Das erinnerte mich – unabhängig davon, daß die Engine sowieso auf meiner Testliste steht – an eine Idee von mir: Schon lange wollte ich mal so etwas wie kurze, interaktive Geschichten entwickeln, die man im Netz (also vor allem auch in diesem <del>Blog</del> Kritzelheft) einbinden und präsentieren kann, kurze, bebilderte Nachrichten, satirische Kommentare oder ähnliches. Ursprünglich hatte ich dafür <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> vorgesehen (hier der <a href="https://kantel.itch.io/neuklln-ist-arm">Link zu einem Prototyp</a> auf Itch.io), aber der Ballast, den Ren’Py in seiner HTML-Version mitschleppt, ist so fett, daß die Ladezeit länger dauert als die Zeit, die das Skript zur Ausführung benötigt. Da ist Tuesday JS doch bedeutend schlanker und schneller (hier ebenfalls ein <a href="https://kantel.itch.io/tuesday-js-test">Link zu einem Prototyp</a> auf Itch.io) und zusätzlich kann die Applikation direkt vom eigenen Server in die Webseite eingebunden werden (ohne von einem dritten Anbieter kommen zu müssen) und lädt auch recht schnell:</p>
<iframe src="anim/index.html" width="640" height="480" name="Tuesday JS Test">
</iframe>
<p>Daher will ich nun ein wenig mit Tuesday JS experimentieren und dazu gehört nicht nur, daß ich mir von einer gekünstelten Intelligenzia dafür die Bilder und Avatare erstellen lasse, sondern daß ich mir auch die Tutorials dazu reinziehe. Denn wie ich <a href="https://kantel.github.io/posts/2023101901_tuesdayjs_1st_steps/">hier schon schrieb</a>, ist für einen Menschen wie mich, der am liebsten in seinem Texteditor herumsaut, die <em>Point-and-Click</em>-Oberfläche eines Tools wie Tuesday JS doch recht gewöhnungsbedürftig.</p>
<p>Daher hier (teilweise noch einmal) die Tutorials, die mir bisher zu dieser Engine untergekommen waren:</p>
<ul>
<li><a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial">Tuesday JS Quick Guide</a></li>
<li><a href="https://kirill-live.itch.io/tuesday-js/devlog/241616/creation-html-desctop-app-for-windows-macos-and-linux">Creation html desctop app for windows macos and linux</a></li>
<li>Creating Interactive Narratives Made Easy: <a href="https://medevel.com/tuseday-js/">Introducing Tuesday JS, the Open-Source Visual Novel Engine</a></li>
</ul>
<p>Als erstes habe ich vor, ich ein <a href="http://blog.schockwellenreiter.de/2021/10/2021101202.html">frühes</a> Ren’Py-Tutorial, das ich vor Jahren mal <a href="http://blog.schockwellenreiter.de/2021/10/2021101502.html">verbrochen hatte</a>, nach Tuesday zu portieren, um ein Gefühl für die Engine zu bekommen.</p>
<p>Parallel dazu möchte ich mir mit den Bildern, die ich mit KI-Applikationen erstellen werde, eine Repertoire an Charakteren, Avataren und Hintergrundbildern zusammenstellen, die ein einigermaßen konsistentes Erscheinungsbild dieser Experimente ermöglchen. Da ich mit beiden Tools – der Bildergenerierung mit Hilfe Künstlicher Intelligenz, wie auch mit Tuesday JS – Neuland betrete, bin ich selber gespannt ob und wenn ja, was dabei herauskommen wird. <em>Still digging!</em></p>
<p><strong>Was sonst noch was?</strong> Ach ja, <a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#bot_telegram">Tuesday JS kann auch Chatbot</a>. Ein weiterer Grund, sich mit der Engine zu befassen.</p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <guid>https://kantel.github.io/posts/2024020801_tuesdayjs_update/</guid>
  <pubDate>Thu, 08 Feb 2024 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020801_tuesdayjs_update/images/tuesday_script_struct.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rembg – Bildhintergrund mit Python entfernen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020702_rembg/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53514357412/"><img src="https://kantel.github.io/posts/2024020702_rembg/images/rembgpy-b.jpg" class="img-fluid"></a></p>
<p>Als Geheimwaffe, um Bilder vom Hintergrund freizustellen, wurde mir häufig die freie (MIT-Lizenz) Python-Bibliothek <a href="https://github.com/danielgatis/rembg">Rembg</a> empfohlen. Doch auch, wenn das Teil <a href="https://pypi.org/project/rembg/2.0.28/">auf PyPI zu finden</a> und daher leicht zu installieren war, hatte ich es nicht zum Laufen bekommen. Bis ich dann heute über <a href="https://medium.com/@HeCanThink/rembg-effortlessly-remove-backgrounds-in-python-c2248501f992">diese Anleitung</a> stolperte.</p>
<p>Dort stand nämlich, daß Rembg das Bild als <code>numpy.array()</code> benötigte, um zu funktionieren. Also mein Versuchsprogramm wie folgt geändert</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> rembg</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-5"></span>
<span id="cb1-6">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images"</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maid05.png"</span>)</span>
<span id="cb1-9">output_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maid05_output.png"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the input image</span></span>
<span id="cb1-12">input_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(input_path)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input image to a numpy array</span></span>
<span id="cb1-15">input_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_image)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply background removal using rembg</span></span>
<span id="cb1-18">output_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rembg.remove(input_array)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a PIL Image from the output array</span></span>
<span id="cb1-21">output_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(output_array)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the output image</span></span>
<span id="cb1-24">output_image.save(output_path)</span>
<span id="cb1-25">output_image.show()</span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>und schon funzte das mit der Bildhintergrund-Entfernung. Zwar gibt es noch eine <code>deprecation</code>-Warnung, aber die kann ich – glaube ich – erst einmal ignorieren.</p>
<p>Warum ich so scharf auf das Teil bin, wo es doch so viele, meist kostenlose Online-Tools gibt, die vorgeben, das gleiche zu erledigen? Weil diese Tools meistens die Größe der Ausgabebilder beschränken (in der Regel auf 512 x 512 Pixel). Mein Testbild hatte aber die Größe von 4.096 x 4.096 Pixel und Rembg akzeptierte diese Größe ohne zu meckern und produzierte auch eine gleich große Ausgabe.</p>
<p>Das Testbild hatte ich mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> generiert, genaueres entnehmt Ihr bitte der Bildbeschreibung unten.</p>
<p>Wer das nachprogrammieren will: Die Pillow-Funktion <code>Image.show()</code> funtioniert nicht mit allen Betriebssystemen. Ihr könnt sie aber einfach auskommentieren, ohne daß die Funktionsfähigkeit des Skriptes beeinträchtigt wird.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53515278291/">Ein Dienstmädchen</a> (Entwurf für eine Visual Novel)</em>, erstellt mit Scenario, Prompt: »<em>A young maid with curly brown hair, green eyes and red lips, wearing a white bonnet, black dress and white apron, 2D graphic style+, point and click game character, full body shot</em>«, Negative Prompt: »<em>Background, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook</p>



 ]]></description>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Bilder</category>
  <category>Pillow</category>
  <guid>https://kantel.github.io/posts/2024020702_rembg/</guid>
  <pubDate>Wed, 07 Feb 2024 20:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020702_rembg/images/rembgpy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 121 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020701_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53500571394/"><img src="https://kantel.github.io/posts/2024020701_chrome_update/images/datenkrake20240201-b.jpg" class="img-fluid"></a></p>
<p>Das (beinahe) wöchentliche Update von unser aller Datenkrake: Google veröffentlicht ein Update der Version 121 (121.6167.160/161) seines Browsers Chrome und schließt damit auch wieder <a href="https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53500571394/">Octopussy</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020701_chrome_update/</guid>
  <pubDate>Wed, 07 Feb 2024 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020701_chrome_update/images/datenkrake20240201.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Quarto 1.4 released</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020602_quarto_1_4/</link>
  <description><![CDATA[ 




<p><a href="https://quarto.org/docs/blog/posts/2024-01-24-1.4-release/images/thumbnail.png"><img src="https://kantel.github.io/posts/2024020602_quarto_1_4/images/quarto14-b.jpg" class="img-fluid"></a></p>
<p>Auch wenn es erst heute in meinen Feedreader spülte, schon vor etwa zwei Wochen, am 24. Januar 2024, wurde von Quarto die <a href="https://quarto.org/docs/blog/posts/2024-01-24-1.4-release/">Version 1.4 freigegeben</a>. Da <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> nicht nur seit <a href="https://kantel.github.io/posts/2022120802_hello_quarto/">etwas mehr als einem Jahr</a> diese Seiten antreibt (seit <a href="https://kantel.github.io/posts/2023121602_quarto_vscode/">Dezember letzten Jahres</a> zusammen mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> als Editor) diese Seiten antreibt, sondern auch – ebenfalls zusammen mit VS Code – eine <a href="https://kantel.github.io/posts/2023081101_logseq_quarto_vscode/">Schlüsselrolle in meinem Publikationsworkflow</a> einnimmt, war das natürlich eine wichtige Nachricht für mich.</p>
<p>Zuerst einmal die übliche Entwarnung: Obwohl ich bei solchen wichtigen Updates immer ein wenig ein mulmiges Gefühl im Magen habe, verlief es auf meinem Mac problemlos. Einfach das <code>.pkg</code> <a href="https://quarto.org/docs/download/">herunterladen</a> und nach einem Doppelklick ersetzte die neue Version unsichtbar im Hintergrund meine biserige Version 1.3 (was icn nur in der Fußzeile meines Editors erkennen konnte).</p>
<p>Und was ist nun neu? Nun, einmal besitzt Quarto nun eine bessere Unterstützung für interaktive <a href="https://quarto.org/docs/dashboards/">Dashboards</a>. Diese ist die neueste Sau, die durch das Data Science Dorf getrieben wird, und so war es wirklich nur eine Frage der Zeit, bis auch Quarto auf diese neue Sau setzte.</p>
<p>Dann <a href="https://quarto.org/docs/output-formats/typst.html">unterstützt</a> Quarto in der neuen Version auch <a href="https://typst.app/">Typst</a>. Meine Meinung zu Typst hatte ich nach ersten (und vermutlich auch letzten) Tests <a href="https://kantel.github.io/posts/2023091002_typst_1st_steps/">hier unmißverständlich kundgetan</a>. Ich halte das Teil für so überflüssig wie ein Kropf. Aber man muß die Typst-Unterstützung ja nicht nutzen.</p>
<p>Kommen wir zu einem angenehmeren neuen Feature: Quarto besitzt ein neues Publikationsformat für <a href="https://quarto.org/docs/manuscripts/">Manuskripte</a> und andere (nicht nur wissenschaftliche) Artikel. Das ist eine großartige Ergänzung zum bisherigen Publikationsformat <a href="https://quarto.org/docs/books/">Books</a> und wird sicher nicht nur meinen Publikationsworkflow bereichern.</p>
<p>Weitere Neuerungen, die mir gefielen:</p>
<ul>
<li>Es gibt eine bessere <a href="https://quarto.org/docs/dashboards/interactivity/shiny-python/index.html">Unterstützung für Shiny for Python</a>.</li>
<li>Mit der Jupyter-Engine lassen sich aus Quarto heraus Python-, Julia- oder R-Skriptdateien mit Markdown-Kommentaren als eine Art »Notebook für Arme« herausschreiben.</li>
<li>Und das ist auch für den <em>Schockwellenreiter</em> nützlich: Quarto 1.4 unterstützt <a href="https://quarto.org/docs/output-formats/html-lightbox-figures.html">Lightbox-Galerien</a>, mit der Thumbnails mit Beschriftung in einer Art Galerie angzeigt und mit größeren Bildern verlinkt werden können. <em>(Notiz an mich: Unbedingt testen!)</em></li>
</ul>
<p>Quarto war schon lange kein Thema mehr auf diesen Seiten (warum auch? Es hat einfach funktioniert), aber ich möchte die Nachricht vom Update dazu nutzen, auch noch auf einige Video-Tutorials zum Thema hinzuweisen:</p>
<ul>
<li>Die Playlist »<a href="https://www.youtube.com/playlist?list=PLY9YSTWETzmq-3Qb6cmBN3nO5sPpATUl1">Introduction to Quarto</a>« (26 im Schnitt etwa zehnminütige Videos) von <em>Data&nbsp;&amp; Design</em> läßt kaum noch Fragen offen.</li>
<li>Die Monsterplaylist zur »<a href="https://www.youtube.com/playlist?list=PL9HYL-VRX0oRFZslRGHwHuwea7SvAATHp">posit::conf (2023)</a>« (108 (sic!) Videos) bringt auch schon einige <a href="https://www.youtube.com/watch?v=AbuK2F57NEs">Teaser</a> zu neuen Quarto-Version.</li>
</ul>
<p><strong>War sonst noch was?</strong> Ach ja, auch wenn die versprochene, verbesserte Quarto-Unterstützung für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> sich offensichtlich verspätet, sind das Video »<a href="https://www.youtube.com/watch?v=cKFp8DBF75Y">From Zero to Hero with Notebooks in VS Code</a>« und die Playlist »<a href="https://www.youtube.com/playlist?list=PLj6YeMhvp2S6gDMYrkDb81vneeuk_Lf3v">Jupyter Notebooks Tutorials</a>« – beide vom <a href="https://www.youtube.com/@code"><em>Visual Studio Code Kanal</em></a> – sicher meiner (und Eurer) Aufmerksamkeit wert. Denn Visual Studio Code unterstützt JupyterLab schon länger und sehr umfangreich.</p>



 ]]></description>
  <category>Quarto</category>
  <category>Statische Seiten</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2024020602_quarto_1_4/</guid>
  <pubDate>Tue, 06 Feb 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020602_quarto_1_4/images/quarto14.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schließt am »Februar-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020601_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53377940333/"><img src="https://kantel.github.io/posts/2024020601_android_update/images/android202402-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-02-01?hl=de">Sicherheitsupdate für Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-02-01?hl=de">Pixel-Geräten</a>) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro, Pixel 5 verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <a href="https://www.flickr.com/photos/schockwellenreiter/53377940333/"><em>Grüner Android</em></a>, erstellt mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a>. Prompt: »<em>a little green robot helds a mobilphone in an futuristic city. colored french comic style</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020601_android_update/</guid>
  <pubDate>Tue, 06 Feb 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020601_android_update/images/android202402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google Bard mit Imagen: New KI on the Blog</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020502_bard_imagen/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/"><img src="https://kantel.github.io/posts/2024020502_bard_imagen/images/pythonbard-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es rauscht im Blätterwald (eigentlich eine blöde Metapher – heutzutage rauscht es schon lange nicht mehr in Blättern, sondern spült in Webseiten und Feedreader), Googles als ChatGPT-Konkurrent gestarteter, aber bisher eher verborgen gebliebener Chatbot <a href="https://bard.google.com/">Bard</a> hat vor <a href="https://blog.google/intl/de-de/unternehmen/technologie/bard-mit-gemini-pro/">wenigen Tagen</a> als Update die KI-Engine <a href="https://blog.google/intl/de-de/unternehmen/technologie/gemini/">Gemini</a> verpaßt bekommen und soll damit endlich aus dem Dornröschenschlaf geweckt werden.</p>
<p>Doch das ist nicht alles: Bard kann mit diesem Update endlich das, was ChatGPT schon lange kann – nämlich Bilder generieren. Google nutzt dafür <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/imagegen.html">Imagen</a>, die bisher eigentlich nur als <a href="https://imagen.research.google/">Forschungspapier</a> existierende Antwort auf <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/dalle.html">DALL-E</a>. <a href="https://medium.com/the-generator/google-bards-new-ai-image-generator-everything-to-know-7180e52a7554">Erste Reaktionen</a> (Medium.com-Link) sind sehr positiv.</p>
<p>Google will einiges besser (oder besser: anders) machen als die Konkurrenz: Erstens soll der Dienst – im Gegensatz zu ChatGPT – auch weiterhin kostenlos bleiben. Zweitens will Google gegen <a href="https://generativeai.pub/google-bard-can-now-generate-images-this-is-huge-a98a0897ce44"><em>Deep Fakes</em> vorgehen</a> und bestimmte Prompts (zum Beispiel Photos von Personen) zurückweisen – Zeichnungen im Comic-Stil sollen aber akzeptiert werden. Wem das nach Zensur stinkt, der hat natürlich recht. Aber für bedenklicher halte ich, daß die Bilder ein unsichtbares Wasserzeichen verpaßt bekommen, das auf den Urheber zurückverfolgbar sein soll. Was autoritäre Regime damit anstellen könnten, will ich mir gar nicht erst ausmalen.</p>
<p>Wie auch immer, momentan ist das Tool in Deutschland <a href="https://www.mactechnews.de/news/article/Google-Bard-erhaelt-Update-Gemini-Pro-auf-Deutsch-aktualisiertes-KI-Bildmodell-184234.html">noch nicht verfügbar</a><sup>1</sup>. Aber wenn es da ist (eine Einführung ist angekündigt), werde ich das Teil auf jeden Fall testen.</p>
<p><strong>War sonst noch was?</strong> Ach ja, auf dem Weltwirtschaftsforum in Davos letzten Monat machte die französische Softwarefirma <a href="https://mistral.ai/">Mistral AI</a> von <a href="https://mistral.ai/">sich reden</a>. Deren KI-Modelle <em>Mistral 7B</em> und <em>Mixtral 8x7B</em> sollen nicht nur sehr leistungsfähig sein, sondern sind auch als <em>Open Source</em> für jeden frei nutzbar. Neben der aus London stammenden, ebenfalls freien KI-Software <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> ist das ein weiterer europäischer Player mit freier Software gegen die meist US-amerikanischen, kommerziellen und großen Softwareriesen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/">Schlange am Schreibtisch</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>. Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Bevor hier wieder blöde Kommentare reinschneien: Ich weiß, wie man einen Proxy-Server hochzieht, aber ich habe keine Lust darauf.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Chatbot</category>
  <category>Bilder</category>
  <category>Imagen</category>
  <category>Künstliche Intelligenz</category>
  <guid>https://kantel.github.io/posts/2024020502_bard_imagen/</guid>
  <pubDate>Mon, 05 Feb 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020502_bard_imagen/images/pythonbard.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Berlin Attack auf Itch.io hochgeladen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020501_berlinattack_itch/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53511069090/"><img src="https://kantel.github.io/posts/2024020501_berlinattack_itch/images/attackberlin_v02-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe meinen <a href="https://kantel.github.io/posts/2024020401_renpy_scenario/">gestern erstellten</a> Prototypen eines <em><a href="https://de.wikipedia.org/wiki/Point-and-Click-Adventure">Point-and-Click-Adventures</a></em>, den ich in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> entwickelt und mit Bildern und Charakteren aufgehübscht habe, die ich mit dem KI-Bildgenerator <a href="https://app.scenario.com/">Scenario</a> generiert hatte, nach <a href="https://kantel.itch.io/attack-berlin">Itch.io hochgeladen</a>, damit Ihr Euch ein Bild von dem bisherigen Ergebnis machen könnt.</p>
<p>Und da Itch.io auch das Einbinden von HTML-Games in die eigene Website ermöglicht, hier das eingebundene Spielchen:</p>
<iframe frameborder="0" src="https://itch.io/embed-upload/9663602?color=ede4d4" allowfullscreen="" width="640" height="392">
<a href="https://kantel.itch.io/attack-berlin">Play Attack Berlin on itch.io</a>
</iframe>
<p>Wohlgemerkt, es ist nicht mehr als ein <em>Proof of Concept</em>, in dem ich ausprobieren möchte, ob und wie weit mit gekünstelter Intelligenzia erzeugte Avatare als Spielcharaktere geeignet sind. Dennoch möchte ich diesen Prototypen so <em>peu a peu</em> weiterentwickeln, bis er mindestens den Stand meiner <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">Twine-Version</a> (<a href="https://kantel.itch.io/berlin-attack">Itch.io-Link</a>) erreicht hat. Dabei werde ich sicher auch noch mit anderen KI-Bildgeneratoren experimentieren. Schaun wir mal, was dabei herauskommt. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Stable Diffusion</category>
  <guid>https://kantel.github.io/posts/2024020501_berlinattack_itch/</guid>
  <pubDate>Mon, 05 Feb 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020501_berlinattack_itch/images/attackberlin_v02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf ein Neues: Ren’Py und Scenario</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020401_renpy_scenario/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53508931429/"><img src="https://kantel.github.io/posts/2024020401_renpy_scenario/images/attackscenario-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Beschäftigung mit den Bildgeneratoren der gekünstelten Intelligenzia hat natürlich einen triftigen Grund: Ich möchte herausbekommen, ob oder wie weit diese Tools mittlerweile in der Lage sind, Bilder für interaktive Geschichten und Spiele zu erzeugen, die es auch Menschen wie mir – denen bei der Geburt der Zeichenstift nicht in die Wiege gelegt worden war – ermöglicht, solche Geschichten mit Bildern zu erzählen.</p>
<p>Mein erster Versuch mit der <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Hexe und den zertrümmerten Kürbissen</a> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> verlief ja recht erfolgversprechend, wie Ihr auf meinem Itch.io-Account <a href="https://kantel.itch.io/smashing-pumpkins">nachspielen</a> könnt. Die <a href="https://www.flickr.com/photos/schockwellenreiter/albums/72177720312336247/with/53296778977">Bilder dafür</a> hatte ich – eher aus einer Laune heraus, denn aus einem wichtigen Grund – mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a> erzeugt, aber ich glaube, jeder andere einiggermaßen leistungsfähige KI-Bildgenerator hätte dies auch gekonnt.</p>
<p>Allerdings stellt solch eine Geschichte mit statischen Bildern noch keine allzu großen Anforderungen an die Konsistenz der Figuren: Bei den einzelnen Bildern, meist auch noch je auf einer eigenen Seite, verzeiht der Betrachter doch schnell leichte Abweichungen. Anders sieht es dagegen bei <em><a href="https://de.wikipedia.org/wiki/Point-and-Click-Adventure">Point-and-Click Adventures</a></em> aus, da hier die Charaktere auf <strong>einer</strong> Bühne (einem Bildschirm) auftreten und da Abweichungen eher auffallen.</p>
<p>Da meine (geplante) »Räuberpistole« <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">Berlin Attack</a> (für die ich auch schon einen Prototypen in Twine mit <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> gebastelt hatte) im Prinzp so etwas wie ein <em>Point-and-Click-Adventure</em> ist, hatte ich das Teil wieder hervorgekramt und dafür mit <a href="https://app.scenario.com/">Scenario</a> ein paar Bilder erzeugt und sie in die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>-Version dieses Prototyps testweise eingesetzt.</p>
<p>Scenario habe ich deswegen ausgewählt, weil auf dem YouTube-Kanal mehrere Videos (unter anderem »<a href="https://www.youtube.com/watch?v=gWOAO1ltZ_Y">The Arcade Hacker</a>«,»<a href="https://www.youtube.com/watch?v=-co2CLGsCpc">Murder Mystery</a>« und »<a href="https://www.youtube.com/watch?v=0_KAF4TziUY">The Stolen Necklace</a>«) damit prahlten, wie gut das Teil für die Generierung von Assets für <em>Point-and-Click-Games</em> geeignet sei. Zwar wird in diesen Tutorials <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> als Zielplattform genutzt, aber – wie ich <a href="https://kantel.github.io/posts/2023091502_renpy_statt_unity/">hier schon schrieb</a> – ist für dieses Genre Ren’Py durchaus eine gute und leistungsfähige freie Alternative.</p>
<p>Mit dem Ergebnis bin ich aber noch nicht wirklich zufrieden. Das liegt in der Hauptsache daran, daß die oben erwähnten Video-Tutorials einfach zu schnell durch die Generierung huschen und zu viel Vorwissen voraussetzen. So habe ich es zum Beispiel ums Verrecken nicht geschafft, meinen Protagonisten einen geöffneten, sprechenden Mund zu spendieren, obwohl zum Beispiel <em>The Stolen Necklace</em> zeigt, daß das geht. Aber mit der lakonischen Anweisung »Use the canvas to change your character’s facial expressions« bin ich einfach überfordert. Was muß ich wo im Canvas benutzen, um den Gesichtsausdruck meiner Figuren zu ändern?</p>
<p>Prinzipiell scheint das aber möglich zu sein, hier muß ich mich aber erst noch durch das Dickicht der (offensichtkich zu) hastig erstellten (die Tools sind alle noch recht neu) Tutorials quälen. Und vermutlich besitzt nicht nur Scenario alleine diese Fähigkeiten, ich glaube (mindestens) jede <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable-Diffusion</a>-Anwendung scheint dazu in der Lage zu sein.</p>
<p>Ich bleibe jedenfalls am Ball. Und neben Ren’Py steht ja auch noch die <em>Visual Novel Engine</em> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> in den Startlöchern und harrt einer Nutzung. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Stable Diffusion</category>
  <guid>https://kantel.github.io/posts/2024020401_renpy_scenario/</guid>
  <pubDate>Sun, 04 Feb 2024 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020401_renpy_scenario/images/attackscenario.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Blick ins Wunderland: Harlowe-Tutorials von Dan Cox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020201_harlowe_tuts/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53483103233/"><img src="https://kantel.github.io/posts/2024020201_harlowe_tuts/images/aliceballoons2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich kann nicht anders, ich muß – um meine eigene Reise ins Wunderland mit Twine und Harlowe zu planen – die <a href="https://kantel.github.io/posts/2024012402_back_to_wonderland/">neuen Tutorials</a> von <em><a href="https://videlais.com/">Dan Cox</a></em> zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine 2.8</a> und <a href="https://twine2.neocities.org/">Harlowe 3.3</a> hier einzeln aufführen, da mir seine <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr662CjQjQHOVJhmdsl2TgYk">Playlist</a> zu voluminös und in der Reihenfolge zu unorganisiert wirkt, so daß ich das Gefühl habe, die Übersicht zu verlieren.</p>
<p>Soweit ich das bisher überblicken kann, sind die Tutorials grob in zwei Bereiche eingeteilt. Einen Einführugsbereich und eine Gruppe zu den Macros. Ich fange mal mit den (neuen, in den letzten Tagen hochgeladenen) <strong>Einführungen</strong> an:</p>
<ul>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=vdjPjS78_vI">Introduction: Alignment</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=UscJF8CdmoA">Introduction: Columns</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=qxCQA_ogviU">Introduction: Bulleted and Numbered Lists</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=LXAMNFOyiwM">Introduction: Headings and Horizontal Rule</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=PdlyobN0KBs">Introduction: Using HTML</a></li>
</ul>
<p>Die Tutorialgruppe zu den <strong>Macros</strong> teilt sich wieder so auf, daß in der Regel auf ein Einführungs- ein Beispielvideo folgt. Neu sind hier:</p>
<ul>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=l-8__joO8pk">Macros: Text Input</a> und <a href="https://www.youtube.com/watch?v=Cs0on6WJDn0">Example: Entering Passwords</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=bzUHFYEezK4">Macros: Forced Input</a> und <a href="https://www.youtube.com/watch?v=nibPmcZtYOY">Example: Ghost Input</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=A4cj6U4iwBs">Macros: Dropdown and Checkbox</a> und <a href="https://www.youtube.com/watch?v=nHIx9ZImvrk">Example: Ordering Food</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=QispbRH0Dio">Macros: Cycling and Sequence Links</a> und <a href="https://www.youtube.com/watch?v=VJUxqmmJlos">Example: Choosing Equipment</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=twWglY8mim4">Macros: Box</a>, <a href="https://www.youtube.com/watch?v=bns8x9kmLCo">Macros: Float Box</a> und <a href="https://www.youtube.com/watch?v=wF4hhk8B3Cc">Example: Health and Mana</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=tQdX6M9bsBU">Macros: 2bind</a> und <a href="https://www.youtube.com/watch?v=Yi6G1DHDWaM">Macros: Bound Interactions</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=rAQD3IJ2M4I">Macros: Meter</a></li>
</ul>
<p>Die letzten beiden Videos sind erst vor wenigen Stunden hochgeladen worden, so daß hier noch mit Beispielen zu rechnen ist. Aber irgendwann muß ich ach mal einen Schnitt machen und festhalten, was ich bisher weiß. Ich werde mir jedenfalls erst einmal diese Videos reinziehen und schauen, wozu sie mich inspirieren werden. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53483103233/">Blick ins Wunderland</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>Alice, blue eyes, long blonde hair with pigtails, blue coat, white apron, full body, looks over a medieval mountainous landscape with a castle above a small village. Some hot air balloons float over it. A road with red and white tiles winds through the hills. colored french comic style</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Twine</category>
  <category>Harlowe</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024020201_harlowe_tuts/</guid>
  <pubDate>Fri, 02 Feb 2024 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020201_harlowe_tuts/images/aliceballoons2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Bitsy-Tutorials von Dan Cox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020102_bitsy_tuts/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53502647771/"><img src="https://kantel.github.io/posts/2024020102_bitsy_tuts/images/bitsybesen-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><em><a href="https://videlais.com/">Dan Cox</a></em> hat – wie ich hier vor wenigen Tagen <a href="https://kantel.github.io/posts/2024012402_back_to_wonderland/">berichtete</a> – nicht nur die Arbeit an seinen <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>-Tutorials wieder aufgenommen, sondern auch eine komplett neue <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6bprFqUBCOEWT47xqYmVQ4">Playlist zu Bitsy 8</a> gestartet. Bisher besteht sie aus sechs Videos, doch glaubt man seinen Ankündigungen, hat er noch viel damit vor. Ihr und ich dürft daher noch viel von ihm zu dieser (gewollt) <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">extrem minimalistischen Engine</a> für interaktive Geschichten und Spiele erwarten.</p>
<p>Bisher sieht das Programm so aus: In je einem, kurzen Video-Tutorial stellt <em>Dan Cox</em> eine Auswahl von Features aus Bitsy vor, um sie dann in einem zweiten Video in Beispielen anzuwenden. Bisher sind diese Themen erschienen: <a href="https://www.youtube.com/watch?v=R18Qg4KMI2I">Avatar, Tiles, Sprites, and Items</a> (Beispiel: <a href="https://www.youtube.com/watch?v=NuQEj4n3w44">Visiting the Zoo</a>), <a href="https://www.youtube.com/watch?v=bKDQXA-sXXY">Rooms and Exits</a> (Beispiel: <a href="https://www.youtube.com/watch?v=GTLth70K5PA">Maze</a>) und <a href="https://www.youtube.com/watch?v=L-v3eNluLoA">Colors</a> (Beispiel: <a href="https://www.youtube.com/watch?v=fXjK2Mkd_7g">Seasonal Rooms</a>).</p>
<p><em>Dan</em> schafft es spielend (im wahrsten Sinne des Wortes) in seinen Tutorials die Faszination herüberzubringen, die von dieser Engine ausgeht und die auch mich gepackt hat (der <a href="https://www.flickr.com/photos/schockwellenreiter/53502647771/">Screenshot</a> im Banner oben ist von meinem (noch nicht fertiggestellten, aber schon spielbaren) Bitsy »<a href="https://kantel.itch.io/nachts-im-park">Nachts im Park</a>«).</p>
<p>Dabei ist <em>Dan Cox</em> nicht nur der ultimative Spezialist zu Twine (von ihm stammt ein großer Teil des <a href="https://twinery.org/cookbook/">Twine Cookbooks</a>) und zu Bitsy, sondern er kennt sich auch ziemlich gut mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink (und Inky)</a> aus. Wenn ich mir was wünschen dürfte, wäre es, daß er auch hier seine <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6gV8jjx98eUfRkYbb3u1v6">Tutorials</a> wieder <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr5UCOV9PkoS_pJ4hq98vaK_">aufnimmt</a>. Und sei es nur, damit ich besser verstehe, wie ich Twine (mit dem Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a>) mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> verheiraten kann.</p>



 ]]></description>
  <category>Bitsy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024020102_bitsy_tuts/</guid>
  <pubDate>Thu, 01 Feb 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020102_bitsy_tuts/images/bitsybesen.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Zahlen für den Monat Januar 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020101_mediadaten_202401/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53502614983/"><img src="https://kantel.github.io/posts/2024020101_mediadaten_202401/images/pythonoffice1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der erste Monat des neuen Jahres ist recht schnell an mir vorbeigerauscht. Dennoch ist es Zeit für ein paar Zahlen, die hochtrabend manches Mal auch <em>Mediadaten</em> genannt werden: Im Monat Januar 2024 hatte der <em>Schockwellenreiter</em> laut seinem (hoffentlich!) DSGVO-konformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Goatcounter</a> immerhin <strong>5.434 Seitenansichten</strong>. Auch wenn die Exkaktheit der Ziffern eine Genauigkeit der Zahlen nur vortäuscht, freue ich mich dennoch über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> im Januar waren:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/">Bildgeneratoren und Künstliche Intelligenz</a> – ohne Zensoren</li>
<li><a href="https://kantel.github.io/posts/2024010401_rip_niklaus_wirth/">R.I.P Niklaus Wirth</a>: Niklaus Wirth ist am 1. Januar 2024 gestorben</li>
<li>Des deutschen Landwirts feuchter Traum: <a href="https://kantel.github.io/posts/2024010802_traktor_terror_2/">Traktor Terror</a></li>
<li>Neu in meinem Wiki: <a href="https://kantel.github.io/posts/2024011401_seaart_tensorart/">SeaArt AI und Tensor Art</a></li>
<li>Auch neu in meinem Wiki: <a href="https://kantel.github.io/posts/2024011101_scenario/">Scenario</a></li>
</ol>
<p>Schaut man sich dieses Ranking an, scheinen die Bildgeneratoren der gekünstelten Intelligenzia auch auf Euer großes Interesse gestoßen zu sein. Ich kann Euch versichern: Ich bin damit noch nicht durch, Ihr könnt daher noch weitere Beiträge zu diesen Tools erwarten. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53502614983/">Python in the office</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024020101_mediadaten_202401/</guid>
  <pubDate>Thu, 01 Feb 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020101_mediadaten_202401/images/pythonoffice1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 121 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013102_chrome_update/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53499384857/"><img src="https://kantel.github.io/posts/2024013102_chrome_update/images/octopussy03-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auf zum fröhlichen Fehler jagen mit unser aller Datenkrake: Google veröffentlicht das Update der Version 121 (121.6167.139/140) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_30.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53499384857/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>A sexy female robot flees from a gigantic data octopus</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024013102_chrome_update/</guid>
  <pubDate>Wed, 31 Jan 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013102_chrome_update/images/octopussy03.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Patientenfalle E-Rezept, die Zweite</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013101_erezept_2/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53498050521/"><img src="https://kantel.github.io/posts/2024013101_erezept_2/images/apothekerin2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mein Versuch, mit dem neu eingeführten <a href="https://de.wikipedia.org/wiki/Elektronisches_Rezept">E-Rezept</a> ein Medikament zu bekommen, über den ich <a href="https://kantel.github.io/posts/2024013001_patientenfalle_erezept/">gestern schon berichtet hatte</a>, geht in die zweite – genaugenommen ist es sogar schon die vierte – Runde. Zwar war, im Gegensatz zu meinen erfolglosen Apothekenbesuchen vorgestern und gestern, nun mein Medikament endlich auf meiner Gesundheitskarte gespeichert, aber … dafür war es dann in der Apotheke nicht vorrätig.</p>
<p>So darf ich morgen zum vierten Mal den Laden aufsuchen, um endlich (m)ein Rezept einlösen zu können. Das deutsche Gesundheitssystem ist genau so kaputt, wie der Rest der Republik. Zwar lag die Schuld dieses Mal nicht bei der Arztpraxis, sondern bei der Apotheke, aber jedes Glied der Kette scheint verfault.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53498050521/">Apothekerin, verstrickt in die Tücken des E-Rezeptes</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>A female pharmacist, like Laocoon, entangled in the cables of her computer, is looking for a receipt at the pharmacy. In the background shelves with medicines. It’s a sunny day. french comic style</em>«, Negative Prompt: <em>ugly, »deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Politik</category>
  <category>Digitales Leben</category>
  <guid>https://kantel.github.io/posts/2024013101_erezept_2/</guid>
  <pubDate>Wed, 31 Jan 2024 14:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013101_erezept_2/images/apothekerin2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>microStudio Update</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013002_microstudio_update/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53498746655/"><img src="https://kantel.github.io/posts/2024013002_microstudio_update/images/microstudio2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die kleine, an diverse Fantasiekonsolen erinnernde Game Engine <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a></strong> hatte ich ja schon mehrfach <em>Schockwellenreiter</em> <a href="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/">vor-</a> (<a href="http://blog.schockwellenreiter.de/2022/05/2022053001.html">2</a>), aber leider trotz aller Absichtsbekundungen nie etwas damit angestellt.</p>
<p>Dabei hat die kleine Engine durchaus ihre Vorzüge gegenüber anderen Fantasiekonsolen wie zum Beispiel <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a>. Sie kann Bilder und andere Assets ohne Umwege direkt in ihren internen Editor laden und sie kommt ohne die (gewollt) konzeptionellen, nostalgischen Berschränkungen von TIC-80 oder Pico-8 aus.</p>
<p>Gestern schneite die Nachricht vom <a href="https://microstudio.itch.io/microstudio/devlog/673273/microstudio-240129">Update</a> des Programms bei mir rein und machte mich erneut neugierig auf dieses kleine Teil. Vielleicht sollte ich mich bis zum Juli darin einarbeiten und es für meine geplante <a href="https://kantel.github.io/posts/2024012901_kenney_jam_2024/">Teilnahme</a> an der <a href="https://itch.io/jam/kenney-jam-2024">Kenney Jam 2024</a> nutzen. Denn die Assets von Kenney passen – wie man auch an einigen <a href="https://www.youtube.com/watch?v=1cd-IWCEMoI">Tutorials</a> sieht – wunderbar zu der kleinen Engine. Und vor <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microscript.html">microScript</a>/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> habe ich weniger Angst als vor JavaScript/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>.&nbsp;🤓</p>
<hr>
<p><strong>Credits</strong>: Für das Beispielprogramm im <a href="https://www.flickr.com/photos/schockwellenreiter/53498746655/">Sreenshot</a> oben habe ich folgende Assets vewendet: Für den Hintergrund das Bild »<a href="https://opengameart.org/content/space-cartoon-background">Space Cartoon Background</a>« (<a href="http://creativecommons.org/licenses/by/3.0/">CC-BY 3.0</a>) des Users <em>Aetherna</em> und für den Sprite ein Alien des »<a href="https://www.kenney.nl/assets/alien-ufo-pack">Alien UFO Pack</a>« (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) von <em>Kenney</em>.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>microStudio</category>
  <guid>https://kantel.github.io/posts/2024013002_microstudio_update/</guid>
  <pubDate>Tue, 30 Jan 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013002_microstudio_update/images/microstudio2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Patientenfalle E-Rezept</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013001_patientenfalle_erezept/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53497171197/"><img src="https://kantel.github.io/posts/2024013001_patientenfalle_erezept/images/apothekerin01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Als ältere Mensch – so wie ich –, aber nicht nur als älterer Mensch, benötigt man unter Umständen regelmäßig rezeptpflichtige Medikamente. Da die Beschaffung eines Rezeptes immer mit einem gewissen Aufwand verbunden ist, hatte ich mich wirklich über die Einführung des <a href="https://www.bundesgesundheitsministerium.de/e-rezept">E-Rezeptes</a> gefreut, denn trotz aller Datenschutzbedenken versprach es eine Erleichterung speziell für Patienten, die Dauermedikamente benötigen.</p>
<p>Aber zu früh gefreut: Wenn Deutschland etwas kann, dann ist es die Digitalisierung verkacken. Seit mehreren Tagen versuche ich, eines meiner Dauermedikamente auf E-Rezept zu bekommen. Laut mehrmaliger Aussage der Praxis meines Hausarztes ist es auf meiner »Gesundheitskarte« freigeschaltet, aber laut der bei mehreren Fehlversuchen erfolgten Aussagen der Apothekerinnen ist dort aber nichts zu sehen und sie können mir daher mein Medikament nicht herausgeben.</p>
<p>Ich weiß nicht an wem es liegt, aber offensichtlich ist irgendjemand der Beteiligten mit der Einführung es E-Rezeptes absolut überfordert. Die Einführung scheint mir auch etwas überhastet übers Knie gebrochen zu sein. Aber das kommt dabei heraus, wenn man einen <a href="https://de.wikipedia.org/wiki/Karl_Lauterbach">Pharmalobbyisten zum Gesundheitsminister</a> macht. Da bleiben die Interessen der Patienten schon mal auf der Strecke.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53497171197/">Apothekerin, verstrickt in die Tücken des E-Rezeptes</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>A female pharmacist, like Laocoon, entangled in the cables of her computer, is looking for a receipt. colored steampunk style</em>«, Negative Prompt: ugly, »<em>deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Politik</category>
  <category>Digitales Leben</category>
  <guid>https://kantel.github.io/posts/2024013001_patientenfalle_erezept/</guid>
  <pubDate>Tue, 30 Jan 2024 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013001_patientenfalle_erezept/images/apothekerin01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizzaplane Stage 3: Jetzt ohne gierige Browser</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012902_pizzaplane_3/</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>
<script src="./background.js"></script>
<script src="./plane.js"></script>
<script src="./enemy.js"></script>
<script src="./missile.js"></script>
<script src="./sprites.js"></script>




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53496037661/"><img src="https://kantel.github.io/posts/2024012902_pizzaplane_3/images/pizzaplane3-b.jpg" class="img-fluid"></a></p>
<p>So wie es aussieht, funktioniert der Workaround mit dem <code>return false</code> am Ende der Tastaturabfragen, um den Browsern das »gierige« Verhalten abzugewöhnen, nur in der Funktion <code>keyPressed()</code>. Daher habe ich der Version meines kleinen Pizzafliegers von <a href="https://kantel.github.io/posts/2024012601_pizzaplane_p5js_stage2/">letzter Woche</a> diese Funktion (und analog dazu auch ein <code>keyReleased()</code>) im Hauptsketch spendiert</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyPressed</span>() {</span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> UP_ARROW) {</span>
<span id="cb1-3">    plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">  }</span>
<span id="cb1-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> DOWN_ARROW) {</span>
<span id="cb1-6">    plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">  }</span>
<span id="cb1-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> RIGHT_ARROW) {</span>
<span id="cb1-9">    plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fire</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">  }</span>
<span id="cb1-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">}</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyReleased</span>() {</span>
<span id="cb1-15">  plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NONE"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">}</span></code></pre></div>
<p>und die <code>update()</code>-Methode der Klasse <code>Plane</code> wie folgt geändert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb2-2">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NONE"</span>) {</span>
<span id="cb2-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">      }</span>
<span id="cb2-5">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span>) {</span>
<span id="cb2-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>) {</span>
<span id="cb2-7">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">        }</span>
<span id="cb2-9">      }</span>
<span id="cb2-10">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span>) {</span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) {</span>
<span id="cb2-12">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-13">        }</span>
<span id="cb2-14">      }</span>
<span id="cb2-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> maxAnim) {</span>
<span id="cb2-17">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-21">      }</span>
<span id="cb2-22">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">firecount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-23">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> planImages[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-24">    }</span>
<span id="cb2-25">  }</span></code></pre></div>
<p>So wie es aussieht, funktionieren nun auch im Browser die Pfeiltasten wie gewünscht, ohne das der Canvas nach oben oder unten ruckelt:</p>
<div id="sketch">

</div>
<p><strong>Anleitung</strong>: <em>Mit den Pfeiltasten nach oben und unten wird der Flieger gesteuert, mit der Pfeiltaste nach rechts wird auf die Pizzen geschossen. Für einen Neustart muß momentan leider noch die Seite im Browser komplett neu geladen werden.</em></p>
<p>Zwar müßt Ihr immer noch zu Beginn möglichst schnell und ohne Rücksicht auf Verluste ein paar Pizzen abschießen, um Euch ein Punktepolster zuzulegen (aber das sollte in der nächsten Version, die dann einen Startscreen besitzt, gefixt sein), aber wenigstens reicht <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> nun die Tasten, die es konsumiert hat, nicht mehr an den Browser durch.</p>
<p>Die <a href="https://github.com/kantel/p5js/tree/master/pizzaplane">vollständige, aktualisierte Version findet Ihr mit allen Assets</a> auf GitHub. Und ich bin froh, daß ich eine Lösung gegen gierige Browser gefunden habe. Jetzt kann ich guten Gewissens das Projekt weiterführen. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024012902_pizzaplane_3/</guid>
  <pubDate>Mon, 29 Jan 2024 19:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012902_pizzaplane_3/images/pizzaplane3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Save the Date! Kenney Game Jam 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012901_kenney_jam_2024/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://kenney.nl/media/pages/assets/pixel-platformer/69c89d9e5d-1696667860/samplea.png"><img src="https://kantel.github.io/posts/2024012901_kenney_jam_2024/images/pixelplatformer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch in diesem Jahr gibt es wieder eine <a href="https://itch.io/jam/kenney-jam-2024">Kenney Jam</a>, ein Wettbewerb, in dem das teilnehmende Team oder der teilnehmende Mensch innerhalb von 48 Stunden ein Spiel zu einem vorgegebenen Thema programmieren und einreichen muß. Einzige Einschränkung ist, daß die verwendeten Assets aus dem unerschöpflichen (und freien (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>)) <a href="https://kenney.nl/assets">Fundus von Kenney</a> stammen müssen. Die diesjährige ist die achte Kenney Jam und sie startet am 19. Juli 2024, 6:00 Uhr früh und endet am 21. Juli 2024, ebenfalls um 6:00 Uhr früh. Das Thema wird zu Beginn der Jam bekanntgegeben.</p>
<p>Ich hatte ja im letzten Jahr schon einen Versuch unternommen, <a href="https://kantel.github.io/posts/2023072102_kenney_jam_2023/">an dieser Jam teilzunehmen</a> und war <a href="https://kantel.github.io/posts/2023072301_night_in_the_park/">grandios gescheitert</a>, weil ich mir einfach zu viel vorgenommen hatte. Damals wollte ich ein Spiel mit dem genialen <a href="https://www.kenney.nl/assets/1-bit-pack">1-Bit Pack</a> entwickeln. Dieses Asset Pack ist immer noch meine erste Wahl, aber auch die <a href="https://kenney.nl/assets/series:Pixel%20Platformer?sort=update">Pixel Platformer Reihe</a> mit der etwas ungewohnten Tilegröße von 18x18 Pixel, die 16x16 Pixel große <a href="https://kenney.nl/assets/series:Tiny?sort=update">Tiny-Reihe</a> und – falls es noch kleiner werden soll oder ich mich entschließe, doch mal etwas mit der Fantasiekonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> zu entwickeln – das 8x8 Pixel große <a href="https://kenney.nl/assets/micro-roguelike">Micro Roguelike</a> sind meiner Meinung nach für ein 2D-Spiel, das auch noch unter Zeitdruck entwickelt werden muß, gut geeignet.</p>
<p>Ich habe mich jedenfalls für diese Jam schon angemeldet und freue mich auf die Teilnahme. Auch wenn ich wieder scheitern sollte, kann ich daraus nur lernen. Und auf die Tile- und Spritesets von Kenney habe ich auch verlinkt, weil man auf sie gar nicht oft genug hinweisen kann. Und außerdem möchte ich dem Eindruck entgegentreten, daß ich meine Assets nun ausschließlich mit einer gekünstelten Intelligenzia generiere. Dies kann hin und wieder durchaus eine Hilfe, aber sie kann nicht wirklich kreativ sein. Dafür braucht es die Fähigkeiten eines kreativen Kopfes wie Kenney.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2024012901_kenney_jam_2024/</guid>
  <pubDate>Mon, 29 Jan 2024 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012901_kenney_jam_2024/images/pixelplatformer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>64bit Sensation: Ren’Py 8.2.0 (und Ren’Py 7.7.0) freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012801_renpy_820/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53493569703/"><img src="https://kantel.github.io/posts/2024012801_renpy_820/images/renpy820-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie <em>Ren’Py Tom</em>, der Schöpfer von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren`Py</a> auf X (vormals Twitter) <a href="https://twitter.com/renpytom/status/1751439130431455351?t=_yvnYeEbdk9fvZ80VY2OKw">stolz verkündete</a>, wurde von dieser freien (MIT-Lizenz) Engine (nicht nur) für interaktive Geschichten die Version 8.2.0 (oder die Version 7.7.0 für die, die wegen vorhandener Projekte ein Update auf Ren’Py 8 noch nicht wagen können) mit dem schönen Codenamen »64bit Sensation« freigegeben.</p>
<p>Es ist ein Hauptrelease mit etlichen neuen Features, darunter unter anderem (endlich!) der Support für farbige Emjojis und variable Fonts. Außerdem gibt es einen verbesserten <em>Android Build Process</em>, der Java 21 nutzt und einen neuen, verbesserten Ren’Py-Updater. Zudem erinnert sich neue Version nun auch an die letzte Position des Spielefensters. Eine Auflistung aller Änderungen findet Ihr im <a href="https://www.renpy.org/doc/html/changelog.html">Changelog</a>.</p>
<p>Ren’Py 7.7.0 (Codename »32Bit Sensation« 🤓) versucht bei den neuen Features möglichst mitzuziehen, so weit es das darunter liegende Python 2.x zuläßt. <a href="https://www.renpy.org/release/8.2.0">Ren’Py 8.2.0 kann hier</a> und <a href="https://www.renpy.org/release/7.7.0">Ren’Py 7.7.0 kann hier</a> heruntergeladen werden.</p>
<p>Das Update hat mich natürlich daran erinnert, daß auch meine Räuberpistole »Berlin Attack« weiterentwickelt werden möchte. Die vor einigen Monaten erfolgte Entdeckung der Bildgeneratoren der gekünstelten Intelligenzia haben dafür ja ein ganzes Bündel neuer Möglichkeiten aufgetan. Beim <a href="https://www.flickr.com/photos/schockwellenreiter/53493569703/">Bannerbild oben</a> habe ich zum Beispiel den Hintergrund mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> und den Avatar mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a> erstellt. Daneben experimentiere ich auch noch gewaltig mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> und habe da auch schon erste Erfolge bei der Generierung konsistenter Charaktere erzielt. Doch darüber kann ich erst in einem späteren Beitrag mehr erzählen, denn momentan dilettiere und übe ich noch gewaltig. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2024012801_renpy_820/</guid>
  <pubDate>Sun, 28 Jan 2024 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012801_renpy_820/images/renpy820.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
