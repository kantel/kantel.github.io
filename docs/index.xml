<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.340</generator>
<lastBuildDate>Fri, 09 Jun 2023 11:30:00 GMT</lastBuildDate>
<item>
  <title>Für das Wochenende: Pygame und Python Tutorials</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060901_pygame_python_tuts/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.kenney.nl/media/pages/assets/pixel-platformer/30068b9022-1668793752/samplea.png"><img src="https://kantel.github.io/posts/2023060901_pygame_python_tuts/images/pixelplatformer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Zwar versprechen die Wetterfrösche zumindest für Berlin und Brandenburg für die nächsten Tage sehr sommerliches, sonniges und heißes Wetter, so daß Ihr (und ich) vermutlich eher zu Freiluftaktivitäten neigt, denn dazu, Eure (oder meine) Zeit vor dem Monitor zu verbringen. Dennoch möchte ich Euch ein paar Video-Tutorials vorstellen, die ich für interessant halte. Anschauen könnt Ihr sie dann ja immer noch, sie werden schließlich durch langes liegen nicht schlecht.</p>
<p>Da <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">meine Faszination</a> für <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a>, dem kleinen Tool, das <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Spiele nach WebAssembly (WASM) kompiliert, so daß diese auch im Browser laufen können, immer noch <a href="https://kantel.github.io/posts/2023060804_pygbag_oop/">ungebrochen</a> ist, beginne ich mit zwei Tutorialreihen zu Pygame:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/UxJ2E3ZEKr0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Die Playlist »<a href="https://www.youtube.com/playlist?list=PLk64HPu_u_NOD0hC2XFZfDu1ZOr7OF1qB">Platformer</a>« von <em>Jonathan Cooper</em> behandelt in 32 maximal etwa viertelstündigen Videos genau das, was der Name verspricht: Die Programmierung eines guten, alten Side-Scrollers im <em>Mario Style</em> mit allem drum und dran (mehrere Level, Start- und Ende-Bildschirm, scrollender Bildschirmhintergrund). Hervorzuheben ist, daß die Leveldaten in JSON-Dateien gespeichert werden und <em>Jonathan Cooper</em> auch zeigt, wie man in Python/Pygame damit umgeht.</p>
<p>Wer davon noch nicht genug hat, kann sich ja auch noch die Playlist »<a href="https://www.youtube.com/playlist?list=PLk64HPu_u_NPUInmSC4Ax0RwBAkoZZNB0">Space Wars</a>« (23 Videos) des gleichen Autors reinziehen. Auch hier wird ein klassisches Videospiel programmiert.</p>
<p>In beiden Reihen werden auf Assets von <a href="https://www.kenney.nl/assets">Kenney.nl</a> zurückgegriffen. Im ersten Fall auf das <a href="https://www.kenney.nl/assets/simplified-platformer-pack">Simplified Platformer Pack</a> mit der netten, kleinen, gelben Spielekonsole als Helden und in der zweiten Playlist auf das <a href="https://www.kenney.nl/assets/space-shooter-redux">Space Shooter Pack</a> (<a href="https://www.kenney.nl/assets/space-shooter-extension">Extensions</a>). Beide Pakete scheinen echte Renner von Kenney zu sein.</p>
<p>Sollte ich einen Platformer programmieren wollen (und ich will!), tendiere ich hingegen momentan zu Kenneys <a href="https://www.kenney.nl/assets/pixel-platformer">Pixel Platformer</a> (<a href="https://www.kenney.nl/assets/pixel-platformer-farm-expansion">Farm Expansion</a>, <a href="https://www.kenney.nl/assets/pixel-platformer-industrial-expansion">Industrial Expansion</a>). Diese Bildchen haben zwar das etwas ungewöhnliche Rasterformat von 18x18 Pixeln, aber auch damit sollte ich umgehen können.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/INlog9EDd24" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Sollte dann noch etwas Zeit übrig bleiben, empfehle ich die Playlist »<a href="https://www.youtube.com/playlist?list=PLeLGx0BaYD6bsy5mfwo0mxONYWfR1VVbO">Python for Data Science</a>« des Kanals <em>Python Coding</em> (13 Videos je zwischen einer viertel- bis einer halbstündigen Laufzeit).</p>
<p>Auch auf diesem Kanal gibt es noch weitere Playlists, die vermutlich einen Blick wert sind. Ins Auge gefallen sind mir:</p>
<ul>
<li>»<a href="https://www.youtube.com/playlist?list=PLeLGx0BaYD6aKZo6qUg3a6OmeSJjGLtZI">Image Processing using Python</a>« (14 sehr kurze Videos)</li>
<li>»<a href="https://www.youtube.com/playlist?list=PLeLGx0BaYD6bOe65-bgdFzeWy_7rpqxuC">Turtle Programs</a>« (26 (meist) ebenfalls sehr kurze Videos)</li>
</ul>
<p>Damit dürfte zumindest mein Videobedarf für das Wochenende gedeckt sein. <em>Still watching!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Pygame</category>
  <category>Data Science</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2023060901_pygame_python_tuts/index.html</guid>
  <pubDate>Fri, 09 Jun 2023 11:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060901_pygame_python_tuts/images/pixelplatformer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pygbag objektorientiert – ein Template</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060804_pygbag_oop/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52958185609/"><img src="https://kantel.github.io/posts/2023060804_pygbag_oop/images/pygbagoop-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Immer noch läßt mich <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a>, das kleine Tool, das <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Spiele nach WebAssembly (WASM) kompiliert, so daß diese <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">auch im Browser</a> laufen <a href="https://kantel.github.io/posts/2023060602_pygbag_nachschlag/">können</a>, nicht los. Und da mein Ziel momentan sowohl in <a href="https://kantel.github.io/posts/2023010701_pygame_oop/">Python und Pygame</a>, wie auch in <a href="https://kantel.github.io/posts/2023050203_javascript_oop_es6_p5js/">P5.js und P5.play</a> (JavaScript) auf einer sauberen, objektorientierten Implementierung ausgerichtet ist, hatte ich mich gestern hingesetzt und ein Template erstellt, daß meiner Vorstellung von Onjektorientierung in Python entspricht und das als Basis für weitere Programme gedacht ist.</p>
<p>Ich habe mich dabei weitestgehend an mein an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/greenfoot.html">Greenfoot</a> angelehntes Pygame Framework gehalten, das ich im Januar schon einmal <a href="https://kantel.github.io/posts/2023010701_pygame_oop/">vorgestellt hatte</a>. Lediglich die Hauptschleife verlangte eine Abweichung von der reinen Lehre, da Pygbag nicht mitspielte. Denn ursprünglich hatte ich – analog zu der Pure-Pygame-Implementierung – in der Klasse <code>GameWorld</code> eine Methode <code>run()</code> vorgesehen, die die Hauptschleife wie folgt implementierte,</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-2">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife des Spiels</span></span>
<span id="cb1-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going:</span>
<span id="cb1-4">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock.tick(FPS)</span>
<span id="cb1-5">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.events()</span>
<span id="cb1-6">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.update()</span>
<span id="cb1-7">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.draw()</span>
<span id="cb1-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span></code></pre></div>
<p>die ich im Programm (nachdem ich mit <code>world = GameWorld</code> eine Instanz der Spielewelt initalisiert hatte) wie folgt aufrufen wollte:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main():</span>
<span id="cb2-2">    world.run()</span>
<span id="cb2-3"></span>
<span id="cb2-4">asyncio.run(main())</span></code></pre></div>
<p>Das funktionierte seltsamerweise zwar im Python-Interpreter, aber nicht mehr im Browser. Also habe ich die <code>run()</code>-Methode wieder gelöscht und die einzelnen <code>GameWorld</code>-Methoden hintereinander in der <code>main()</code>-Schleife aufgerufen:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main():</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb3-3">        world.clock.tick(FPS)</span>
<span id="cb3-4">        world.events()</span>
<span id="cb3-5">        world.update()</span>
<span id="cb3-6">        world.draw()</span>
<span id="cb3-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb3-8"></span>
<span id="cb3-9">asyncio.run(main())</span></code></pre></div>
<p>Das funktionierte dann sowohl im Python-Interpreter wie auch im Browser, wie Ihr an meinem auf <a href="https://itch.io/embed-upload/8067264?color=0484d1">Itch.io hochgeladenen Template</a> ausprobieren könnt.</p>
<iframe frameborder="0" src="https://itch.io/embed-upload/8067264?color=0484d1" allowfullscreen="" width="640" height="380">
<a href="https://kantel.itch.io/pygbag-oop-template">Play Pygbag OOP Template on itch.io</a>
</iframe>
<p>Es passiert noch nicht viel – es ist ja nur ein Template, aber mit den Tasten <code>a</code> (= Links), <code>d</code> (=&nbsp;rechts), <code>w</code> (= hoch) und <code>s</code> (= runter) könnt Ihr die kleine Spielekonsole durch das Fenster steuern. Damit habe ich (hoffentlich!) die Grundlagen gelegt, um mit den (teilweisen noch leeren) implementierten Methoden ein vollständiges Spiel zu entwickeln:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pg</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pygame.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">locals</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Settings</span></span>
<span id="cb4-7">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 16x16: 40, 30; 32x32: 20, 15</span></span>
<span id="cb4-8">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pygame OOP Template"</span></span>
<span id="cb4-9">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Frame per second</span></span>
<span id="cb4-10">PLAYER_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb4-11">PLAYER_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span></span>
<span id="cb4-12">PLAYER_SPEED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb4-15">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Farben</span></span>
<span id="cb4-18">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb4-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb4-24"></span>
<span id="cb4-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb4-27">        pg.init()</span>
<span id="cb4-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb4-29">        pg.display.set_caption(TITLE)</span>
<span id="cb4-30"></span>
<span id="cb4-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.time.Clock()</span>
<span id="cb4-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb4-33"></span>
<span id="cb4-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurücksetzen</span></span>
<span id="cb4-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb4-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.sprite.Group()</span>
<span id="cb4-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player()</span>
<span id="cb4-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player)</span>
<span id="cb4-40">  </span>
<span id="cb4-41">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> pg.event.get():</span>
<span id="cb4-43">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.QUIT)</span>
<span id="cb4-44">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.KEYDOWN</span>
<span id="cb4-45">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.K_ESCAPE)):</span>
<span id="cb4-46">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb4-47">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_over()</span>
<span id="cb4-48"></span>
<span id="cb4-49">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-50">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb4-51"></span>
<span id="cb4-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-53">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb4-54">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb4-55">        pg.display.flip()</span>
<span id="cb4-56"></span>
<span id="cb4-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> start_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-59">    </span>
<span id="cb4-60">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> win_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-62">    </span>
<span id="cb4-63">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> loose_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-65"></span>
<span id="cb4-66">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> game_over(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-67">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("Bye, Bye, Baby!")</span></span>
<span id="cb4-68">        pg.quit()</span>
<span id="cb4-69">        sys.exit()</span>
<span id="cb4-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Ende Class GameWorld</span></span>
<span id="cb4-71"></span>
<span id="cb4-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Player</span></span>
<span id="cb4-73"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Player(pg.sprite.Sprite):</span>
<span id="cb4-74"></span>
<span id="cb4-75">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-76">        pg.sprite.Sprite.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb4-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Image</span></span>
<span id="cb4-78">        img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"platformchar_idle.png"</span>)).convert_alpha()</span>
<span id="cb4-79">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img</span>
<span id="cb4-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb4-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-82">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_SPEED</span>
<span id="cb4-83">    </span>
<span id="cb4-84">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-85">        keys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.key.get_pressed()</span>
<span id="cb4-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> keys[pg.K_w]:     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UP</span></span>
<span id="cb4-87">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> PLAYER_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>:</span>
<span id="cb4-88">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb4-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> keys[pg.K_s]:   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DOWN</span></span>
<span id="cb4-90">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> PLAYER_HEIGHT:</span>
<span id="cb4-91">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb4-92">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> keys[pg.K_a]:   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LEFT</span></span>
<span id="cb4-93">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> PLAYER_WIDTH:</span>
<span id="cb4-94">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb4-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> keys[pg.K_d]:   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RIGHT</span></span>
<span id="cb4-96">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> PLAYER_WIDTH:</span>
<span id="cb4-97">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb4-98">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-99">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-100">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-101">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)</span>
<span id="cb4-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## End Class Player</span></span>
<span id="cb4-103"></span>
<span id="cb4-104"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptprgramm</span></span>
<span id="cb4-105">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb4-106">world.start_screen()</span>
<span id="cb4-107">world.reset()</span>
<span id="cb4-108"></span>
<span id="cb4-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb4-110"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> main():</span>
<span id="cb4-111">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb4-112">        world.clock.tick(FPS)</span>
<span id="cb4-113">        world.events()</span>
<span id="cb4-114">        world.update()</span>
<span id="cb4-115">        world.draw()</span>
<span id="cb4-116">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb4-117"></span>
<span id="cb4-118">asyncio.run(main())</span></code></pre></div>
<p>Denn <a href="https://github.com/kantel/pygameprojects/tree/master/pygbagoop_template">Quellcode für dieses Template (mit den Assets und dem <code>build</code>-Folder)</a> habe ich auch wieder auf mein GitHub-Repositorium hochgeladen und das fertige Skript könnt Ihr – wie ich oben schon erwähnte – auch <a href="https://kantel.itch.io/pygbag-oop-template">auf Itch.io spielen</a>.</p>
<p>Die kleine gelbe Spielekonsole entstammt dem <a href="https://kantel.github.io/posts/2023060702_kenney_game_jam_2023/">gestern schon erwähnten</a> freien (<a href="https://creativecommons.org/share-your-work/public-domain/cc0/">CC0</a>) »<a href="https://kenney.nl/assets/simplified-platformer-pack">Simplified Platformer Pack</a>« von Kenney.nl.</p>
<p>Jetzt habe ich die Grundlagen für weitere Experimente mit Pygame im Browser gelegt. Schaun wir mal, was sich daraus noch entwickeln wird. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Pygame</category>
  <category>Pygbag</category>
  <category>Spieleprogrammierung</category>
  <category>OOP</category>
  <guid>https://kantel.github.io/posts/2023060804_pygbag_oop/index.html</guid>
  <pubDate>Thu, 08 Jun 2023 16:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060804_pygbag_oop/images/pygbagoop.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Das dritte Update für heute: Ren’Py 8.1</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060803_renpy_8_1/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.renpy.org/static/8.1.jpg"><img src="https://kantel.github.io/posts/2023060803_renpy_8_1/images/renpy81-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da habe ich lange darauf gewartet (und dann doch beinahe übersehen, weil mich die Ankündigung nur über das Gesichtsbuch erreichte): Von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>, der freien (MIT-Lizenz) Python basierten Engine für <em>Visual Novels</em>, interaktiver Geschichten und sonstiger Spielereien (zum Beispiel Präsentationen und <em>Edu-Games</em>) ist – zusammen mit der Version 7.6 für die, die nicht upgraden können – endlich die <a href="https://www.renpy.org/release/8.1.1">Version 8.1.1 erschienen</a>.</p>
<p>Warum ist das so wichtig und warum habe ich so lange darauf gewartet? Ren’Py 8.1 bringt die Möglichkeit zurück, auch direkt für das Web zu entwickeln. Diese Publikationsmöglichkeit war beim Update von 7.x auf die Version 8.0 vorübergehend eingestellt worden. Jetzt habe ich endlich wieder die Möglichkeit, meine geplante und leider schon etwas länger ruhende »Räuberpistole« <a href="https://kantel.github.io/posts/2022122102_alien_invasion_stage_1/">Alien Invasion</a> nicht nur als downloadbare Binaries für macOS, Linux und Windows auf <a href="https://kantel.itch.io/alien-attack-renpy-test">Itch.io hochzuladen</a>, sondern sie dort auch als »im Browser spielbar« zu veröffentlichen.</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<img src="https://kantel.github.io/posts/2023060803_renpy_8_1/images/renpy-logo.png" class="img-fluid">
</div>
<p>Da ich finde, daß Räuberpistolen auch ein großes Potential <a href="https://kantel.github.io/posts/2023060702_kenney_game_jam_2023/">für Game Jams haben</a>, freut mich dies natürlich ungemein.</p>
<p><strong>Was gibt es sonst noch Neues?</strong> Neben verbesserten Synchronisationsmöglichkeiten zwischen Desktop-Computern, Mobiltelephonen und Web-Versionene sind die Macher sehr stolz darauf, daß mit Ren’Py nun <em>out of the box</em> Sprechblasen möglich sind (damit muß auch ich auf jeden Fall als nächstes spielen). Daneben gibt es viele weiteren kleinen Neuerungen und Bug-Fixes, die Ihr alle im <a href="https://www.renpy.org/doc/html/changelog.html">Change Log</a> nachlesen könnt.</p>
<p>Ich habe die neue Version heruntergeladen und kann es kaum erwarten, damit loszulegen. Doch wie ich schon im <a href="https://kantel.github.io/posts/2023060802_jupyterlab_4/">letzten Beitrag schrieb</a>: So viel zu spielen, so wenig Zeit.</p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023060803_renpy_8_1/index.html</guid>
  <pubDate>Thu, 08 Jun 2023 13:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060803_renpy_8_1/images/renpy81.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Noch ein Update: JupyterLab (Desktop) 4.0.1 ist draußen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060802_jupyterlab_4/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*Y3aNGoRED2q0pWjlHmr9wg.png"><img src="https://kantel.github.io/posts/2023060802_jupyterlab_4/images/jupyterlab401-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die <em>Jupyter Community</em> ist stolz darauf, <a href="https://blog.jupyter.org/jupyterlab-4-0-is-here-388d05e03442">JupyterLab 4.0 anzukündigen</a>, die nächste große Version dieser voll ausgestatteten Entwicklungsumgebung für <em>Scientific Computing</em> mit Python. Das Paket ist jetzt auf PyPI und Conda-Forge verfügbar. Ihr könnt ein Upgrade durchführen, indem Ihr <code>pip install --upgrade jupyterlab</code> oder <code>conda install -c conda-forge jupyterlab</code> ausführt (mein JupyterLab Desktop hat automatisch im Hintergrund die neue Version heruntergeladen und verlangte nur noch per Klick einen Neustart, um das Update zu installieren). Auch die <a href="https://jupyterlab.readthedocs.io/en/latest/index.html">JupyterLab Documentation</a> wurde für diese neue Version angepaßt.</p>
<p>Neu sind vor allen Dingen eine massive <em>Performance</em>-Verbesserung und ein Update des Texteditors auf <a href="https://codemirror.net/">Code Mirror 6</a>. Neben der höheren Geschwindigkeit erwarten die Macher dadurch eine Verbesserung der <em>Accessibility</em> und flexiblere Anpassungsmöglichkeiten.</p>
<p>Daneben erfuhr unter anderem auch der Erweiterungs-Manager ein großes Update und die Suchfunktion und das Nutzer-Interface wurden verbessert. Außerdem wurden eine Reihe von <a href="https://github.com/jupyterlab/jupyterlab/releases/tag/v4.0.0rc0">Bugs ausgemerzt</a>.</p>
<p>Ich habs ja schon lange auf meiner Liste, ich sollte auch endlich mal etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> anstellen. So viel zu spielen, so wenig Zeit!</p>



 ]]></description>
  <category>Jupyter</category>
  <category>JupyterLab Desktop</category>
  <guid>https://kantel.github.io/posts/2023060802_jupyterlab_4/index.html</guid>
  <pubDate>Thu, 08 Jun 2023 12:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060802_jupyterlab_4/images/jupyterlab401.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 102.12 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060801_thunderbird_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.mutualart.com/Artwork/Lutspelerska/7872CDFD4C460AC2"><img src="https://kantel.github.io/posts/2023060801_thunderbird_update/images/lautenspielerin1918-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie so häufig folgt <a href="https://kantel.github.io/posts/2023060701_firefox_114/">einen Tag nach dem roten Panda</a> der Donnervogel: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 102.12 freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/102.12.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Anders Zorn (1860-1920): Lutspelerska (Die Lautenspielerin), 1918)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023060801_thunderbird_update/index.html</guid>
  <pubDate>Thu, 08 Jun 2023 12:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060801_thunderbird_update/images/lautenspielerin1918.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kenney Game Jam 2023 – soll ich da teilnehmen?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060702_kenney_game_jam_2023/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://kenney.nl/media/pages/assets/simplified-platformer-pack/d5bb44c767-1677693195/preview.png"><img src="https://kantel.github.io/posts/2023060702_kenney_game_jam_2023/images/simple_platformer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mit der <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">Entdeckung</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> eröffnen sich mir ganz neue Möglichkeiten. Da es nun möglich ist, meine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Experimente im Browser spielbar zum Beispiel auf <a href="https://kantel.itch.io/">Itch.io</a> zu veröffentlichen, warum sollte ich dann nicht an einer der dort regelmäßig stattfindenden <a href="https://de.wikipedia.org/wiki/Game_Jam">Game Jams</a> teilnehmen?</p>
<p>Diese Frage stellte sich mir, nachdem ich über diese Ankündigung der <a href="https://itch.io/jam/kenney-jam-2023">Kenney Jam 2023</a> gestolpert bin. Sie findet vom 21. Juli 2023, 12:00 Uhr bis 23. Juli 2023, 12:00 Uhr, also über 48 Stunden, statt. Das Thema des Jam wird beim Start bekanntgegeben und die »Einschränkung« ist, daß nur <a href="https://kenney.nl/assets">Assets von Kenney.nl</a> verwendet werden dürfen.</p>
<p>Wenn das Thema irgendwie mein Interesse trifft, würde mich das schon reizen. Ich bin ja sowieso ein Fan von Kenney und ich finde die kleine gelbe, roboterähnliche Spielekonsole aus dem »<a href="https://kenney.nl/assets/simplified-platformer-pack">Simplified Platformer Pack</a>« ja extrem niedlich. Mit der würde ich gerne mal etwas anstellen. Ich habe ja noch nie an einer Game Jam teilgenommen (es wäre also eine Premiere für mich), aber ich habe auf jeden Fall den Termin der Jam schon einmal in meinem Kalender vermerkt. <em>Schaun wir mal.</em></p>
<p>Schon vor einem Jahr hatte Kenney in seinem Blog den Beitrag »<a href="https://kenney.nl/learn/improving-the-presentation-of-jam-games">Improving the presentation of jam games</a>« veröffentlicht, eine Kurzanleitung, wie man mit (s)einem Spiel auf einer Game Jam Eindruck schindet. Sicher nicht ohne Hintergedanken hat er auf diesen Beitrag auf Twitter vor ein paar Tagen noch einmal hingewiesen.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <category>Pygame</category>
  <category>Pygbag</category>
  <guid>https://kantel.github.io/posts/2023060702_kenney_game_jam_2023/index.html</guid>
  <pubDate>Wed, 07 Jun 2023 13:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060702_kenney_game_jam_2023/images/simple_platformer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Version</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060701_firefox_114/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Outdoors_%28Anders_Zorn%29_-_Gothenburg_Museum_of_Art_-_GKM_0256.tif/lossy-page1-1024px-Outdoors_%28Anders_Zorn%29_-_Gothenburg_Museum_of_Art_-_GKM_0256.tif.jpg"><img src="https://kantel.github.io/posts/2023060701_firefox_114/images/outdoors-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/114.0/releasenotes/">Version 114.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/102.12.0/releasenotes/">Version ESR 192.12</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Anders Zorn (1860-1920): Outdoors, 1888, Bildquelle (<a href="https://creativecommons.org/licenses/by/4.0/deed.en">CC BY 4.0</a>): Gothenburg Museum of Art via <a href="https://commons.wikimedia.org/wiki/File:Outdoors_(Anders_Zorn)_-_Gothenburg_Museum_of_Art_-_GKM_0256.tif">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023060701_firefox_114/index.html</guid>
  <pubDate>Wed, 07 Jun 2023 12:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060701_firefox_114/images/outdoors.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wie man eine Zombie-Apokalypse überlebt – mit Pygame</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060603_pygame_zombie_attacke/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="http://kidscancode.org/img/zombie_sample.gif"><img src="https://kantel.github.io/posts/2023060603_pygame_zombie_attacke/images/zombie_sample-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Playlist »<a href="https://www.youtube.com/playlist?list=PLsk-HSGFjnaGQq7ybM8Lgkh5EMxUWPm2i">Tile-based Game</a>« des Youtube-Kanals <em><a href="https://www.youtube.com/@Kidscancode">KidsCanCode</a></em> hat zwar schon einige Jahre auf dem Buckel (sechs um genau zu sein), aber dieser Zombie-Shooter gehörte seinerzeit zu den besten Tutorialreihen zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>, die mir untergekommen waren. Zusätzlich gab es eine <a href="http://kidscancode.org/lessons/">Webseite</a> für alle Python-Tutorials, teilweise noch einmal als Textversion (leider nicht für das »Tile-based Game«).</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/3UxnelT9aCo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Da ich durch meine <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">jüngste Entdeckung</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> motiviert bin, etwas mit Pygame anzustellen, das im Web lauffähig ist, habe ich diese Tutorials wieder hervorgekramt: Eine modernisierte, objektorientierte Fassung dieses Spiels zu programmieren (eventuell auch mit anderen Tiles und Sprites), ist seit gestern genau die Herausforderung, die ich brauche.</p>
<p>Wieso ich genau auf dieses Thema komme? Vor ein paar Tagen veröffentlichte die Berliner Zeitung, <a href="https://www.berliner-zeitung.de/panorama/marzahn-top-neukoelln-flop-die-sichersten-bezirke-waehrend-einer-zombie-apokalypse-in-berlin-li.354528">welche Berliner Ortsteile im Falle einer Zombie-Aokalypse sicher seien und welche nicht</a>. Das Marzahn der sicherste Berliner Ort sei, überraschte mich ein wenig, daß die Überlebenschancen in Neukölln nahe Null liegen, hingegen eher nicht. Und da will man doch vorbereitet sein.</p>



 ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023060603_pygame_zombie_attacke/index.html</guid>
  <pubDate>Tue, 06 Jun 2023 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060603_pygame_zombie_attacke/images/zombie_sample.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pygbag (2): Nachschlag zu »Pygame im Browser«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060602_pygbag_nachschlag/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52955310235/"><img src="https://kantel.github.io/posts/2023060602_pygbag_nachschlag/images/pizzaplaneitchioupdate-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Natürlich hat mich das <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">gestern vorgestellte</a> Paket »<a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a>«, mit dem es möglich ist, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Skripte im Browser auszuführen, nicht in Ruhe gelassen, ich mußte noch ein wenig damit spielen. Dabei sind mir noch folgende Einzelheiten aufgefallen:</p>
<iframe frameborder="0" src="https://itch.io/embed-upload/8059129?color=00507d" allowfullscreen="" width="640" height="380">
<a href="https://kantel.itch.io/pygbag-test">Play Pygbag Test on itch.io</a>
</iframe>
<p>Die einfachste Möglichkeit, die Skripte in den eigenen Seiten – wie hier in diesem <del>Blog</del> Kritzelheft – auszuführen, ist die, nach dem <a href="https://kantel.itch.io/pygbag-test">Hochladen auf Itch.io</a> das dortige <em>Embed</em>-Widget zu nutzen (unter <code>Widgets -&gt; Embed Game</code>). Wer einen <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html">GitHub Pages</a>-Account besitzt, kann sie auch von dort hosten (hier eine <a href="https://pygame-web.github.io/wiki/pygbag/github.io/">Anleitung</a>). Wie man sie ohne einen Dienst dazwischen zu schalten direkt in seine Webseite einbindet, habe ich noch nicht herausgefunden (einfach den Folder <code>web</code> hochzuladen und dann die dortige <code>index.html</code> per HTTP(S) aufzurufen, funktioniert nicht). Hier muß ich noch recherchieren, aber das Einbetten des Itch.io-Widgets hat ja auch seinen Charme (siehe oben).</p>
<p>Ähnlich wie bei <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> gibt es auch bei von Pygbag erzeugten Skripten bei bestimmten Tasten (Pfeiltasten, Space, etc.) Konflikte mit dem Browsern, die diese Tastatureingaben einfach an sich reißen. Ich habe daher für den kleinen Pizzaflieger oben die Tasten <code>a</code> (für <strong>aufwärts</strong>) und <code>d</code> (für <strong>down</strong>) als Steuerung implementiert (später soll auch noch <code>s</code> (für <strong>shoot</strong>) hinzukommen). Es empfiehlt sich, bevor man Tastatur- oder Mauskommandos implementiert, zu testen, ob sie sich mit den Browsern vertragen.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/tLsi2DeUsak" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Einer Fußnote habe ich entnommen, daß die Unterstützung der Physikbibliothek <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pymunk.html">Pymunk</a> schon in Pygbag implementiert sein soll. In diesem Zusammenhang ist daher das Video »<a href="https://www.youtube.com/watch?v=tLsi2DeUsak">Physics Simulations With Python and PyMunk</a>« von großem Interesse, denn dann wären nicht nur Spiele, sondern auch Physik-Simulationen mit Pygame und Pymunk im Browser möglich.</p>
<p><strong>War sonst noch was?</strong> Ach ja, auch <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> möchte in seiner <a href="https://vscode.dev/">Browser-Version</a> WebAssembly und die Ausführung von <a href="https://github.com/brettcannon/cpython-wasi-build/releases">Python-Code via WASM</a> unterstützen. Dazu gibt es in dem Beitrag »<a href="https://code.visualstudio.com/blogs/2023/06/05/vscode-wasm-wasi">Run WebAssemblies in VS Code for the Web</a>« so etwas wie eine Roadmap und eine Beschreibung, was aktuell schon möglich ist. Sicher nicht nur für Chromebook-Nutzer eine hochinteressante Entwicklung.</p>



 ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <category>Pygbag</category>
  <category>WASM</category>
  <guid>https://kantel.github.io/posts/2023060602_pygbag_nachschlag/index.html</guid>
  <pubDate>Tue, 06 Jun 2023 12:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060602_pygbag_nachschlag/images/pizzaplaneitchioupdate.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google Updates zum Juni-Patchday</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060601_google_juni_patchday/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://arthive.net/res/media/img/oy800/work/619/544059.webp"><img src="https://kantel.github.io/posts/2023060601_google_juni_patchday/images/grauessofa-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Zum üblichen, monatlichen Google-Patchday trudelten dieses Mal die Updates sowohl für Android wie auch für den Chrome-Browser kurz hintereinander in meiner Mailbox ein, so daß ich sie auch einmal <em>en bloc</em> abhandeln kann:</p>
<section id="google-schließt-am-juni-patchday-wieder-sicherheitslücken-in-android" class="level3">
<h3 class="anchored" data-anchor-id="google-schließt-am-juni-patchday-wieder-sicherheitslücken-in-android">Google schließt am »Juni-Patchday« wieder Sicherheitslücken in Android</h3>
<p>Google hat mit seinem <a href="https://source.android.com/docs/security/bulletin/2023-06-01?hl=en">monatlichen Sicherheitsupdate</a> für Android (und damit auch auf seinen Pixel-Geräten) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro, Pixel 5,Pixel 4a 5G, Pixel 4a verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten.</p>
</section>
<section id="google-korrigiert-erneut-version-114-114.0.5735.106110-seines-browsers-chrome-kritische-sicherheitslücken" class="level3">
<h3 class="anchored" data-anchor-id="google-korrigiert-erneut-version-114-114.0.5735.106110-seines-browsers-chrome-kritische-sicherheitslücken">Google korrigiert erneut Version 114 (114.0.5735.106/110) seines Browsers Chrome kritische Sicherheitslücken</h3>
<p>Google veröffentlicht ein weiteres Update der Version 114 (114.0.5735.106/110) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2023/06/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://de.wikipedia.org/wiki/Anders_Zorn">Anders Zorn</a> (1860-1920): <a href="https://arthive.com/de/anderszorn/works/527757~Nackt_auf_einem_grauen_Sofa">Nackt auf einem grauen Sofa</a>, 1916)</em></p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023060601_google_juni_patchday/index.html</guid>
  <pubDate>Tue, 06 Jun 2023 10:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060601_google_juni_patchday/images/grauessofa.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wie geil ist das denn? Pygame im Browser!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060501_pygame_im_browser/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52952596471/"><img src="https://kantel.github.io/posts/2023060501_pygame_im_browser/images/pizzaplane_pygbag.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da experimentiere ich doch schon so lange mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> herum, um Python-Skripte im Browser ablaufen zu lassen, und dann macht mich der <a href="https://www.youtube.com/watch?v=HDClvz3h4Xc">Python-Enthusiast</a> auf <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> aufmerksam, ein Programm, das <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Spiele, aber auch andere aber auch andere Python-Programme nach WebAssembly (WASM) übersetzt und sie so im Browser spielbar macht. Momentan (Stand Juni&nbsp;2023) kann Pygbag außer Pygame nur Module aus der Python-Standard-Bibliothek übersetzen, aber die Einbindung weiterer Pakete ist geplant.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/6PhDmpBcezQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Pygbag ist eine freie (MIT-Lizenz) Anwendung und der <a href="https://github.com/pygame-web/pygbag">Quellcode</a> ist auf GitHub zu finden. Das Programm ist noch jung (das erste Release ist vom Juni 2022, also gerade einmal ein Jahr alt) und wird ständig weiterentwickelt (das <a href="https://github.com/pygame-web/pygbag/releases">aktuelle Release</a> ist die Version 0.6.7). Pygbag ist auch auf <a href="https://pypi.org/project/pygbag/0.1.5/">PyPI zu finden</a>, eine Installation ist also mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pygbag</span></code></pre></div>
<p>leicht zu erledigen. <a href="https://pygame-web.github.io/">Ein Wiki</a> erläutert die weiteren Schritte: Das Hauptprogramm muß <code>main.py</code> heißen und zusätzlich <code>asyncio</code> importieren. Dann muß die Pygame-Hauptschleife in die Funktion <code>async def main()</code> geklammert werden, die als (zusätzlichen) letzten Befehl im einfachsten Fall noch die Zeile</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>erhält (das <code>sleep(0)</code> ist wichtig, sonst funktioniert das Skript nicht).</p>
<p>Als allerletzten Befehl (ohne Einrückung) muß das Programm mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">asyncio.run(main())</span></code></pre></div>
<p>beendet werden (danach dürfen keine weiteren Programmbefehle mehr folgen). Ich habe das mit einer abgespeckten Version meines Pizzafliegers getestet (<a href="https://github.com/kantel/pygameprojects/tree/master/pizzaplane_browser">Quellcode und Assets (inclusive <code>build</code>-Folder)</a> auf GitHub) und wie Ihr auf <a href="https://www.flickr.com/photos/schockwellenreiter/52952596471/">obigem Screenshot</a> bewundern könnt, hat es funktioniert.</p>
<p>Wenn Pygbag installiert und importiert ist, können die Skripte natürlich auch im Python-Interpreter getestet werden (habe ich mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> (Achtung, hier muß Pigbag natürlich auch für die Thonny-Umgebung installiert sein) und mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> erfogreich ausprobiert). Außerdem implementiert die App unter <code>localhost:8000</code> (der (Default-) Port 8000 kann bei Bedarf geändert werden) einen lokalen Webserver, mit dem die erfolgreiche Übersetzung nach WASM ebenfalls getestet werden kann.</p>
<p>Bei der Übersetzung legt Pygbag einen <code>build</code> Folder an, der alle für das Web notwendige Daten und Skripte enthält. Dieser Folder ist erstaunlich kompakt (für mein Testprogramm inklusive Cache 25 MB). Wenn man diesen Ordner komprimiert, kann man ihn auch auf Itch.io hochladen und dort ausführen (mein <a href="https://kantel.itch.io/pygbag-test">Testprogramm könnt Ihr hier</a> finden) und laufen lassen).</p>
<p>Nach der ersten Übersetzung dauert es eine gewisse Zeit, bis das Programm startet (vermutlich weil erst noch ein Cache angelegt wird), bei jedem weiteren Start ist es dann aber »sofort« da.</p>
<p>Aprops Geschwindigkeit: WebAssembly ist schnell, aber natürlich kann es keine Wunder vollbringen. Das obige Video spricht davon, daß die pure Python-Version im Extremfall um den Faktor fünf schneller ist als die Webversion. Das dürfte bei den meisten (2D-) Anwendungen keine Rolle spielen (die »idlen« sowieso die meiste Zeit, weil sie auf die Eingaben der Nutzer warten), aber bei extrem komplexen Spielen sollte man schon testen, ob sie noch spielbar sind (außerdem haben die Macher versprochen, daß sie an der <em>Performance</em> noch arbeiten).</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/q25i2CCNvis" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das alles zwingt mich natürlich dazu, meine Strategie zu überdenken. Ich halte Pygame für ein Spieleframework, das – alleine auf Grund seines Alters und seiner Verbreitung – so ausgereift ist, wie kaum ein zweites. Lediglich die Tatsache, daß es keine vernünftige <em>Deployment</em>-Möglichkeit gab, hatte es ausgebremst. Sollte Pygbag das halten, was es verspricht (meine ersten Tests sind sehr positiv) und es auch noch weiterentwickelt werden (zum Beispiel ähnlich wie das auf <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyodide.html">Pyodide</a> aufsetzende <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html">PyScript</a> auch den <em>Scientific Stack</em>, insbesondere <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/scipy.html">SciPy</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">NumPy</a> oder die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> einbinden können), wäre das ein echter <em>Game Changer</em>.</p>
<p>Ich werde das jedenfalls mit großem Interesse weiter beobachten und habe daher <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a></strong> eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert. Und weitere Tests stehen natürlich auch noch an. Ich glaube, es warten spannende Zeiten auf Euch und (vor allem) auf mich. <em>Still digging!</em></p>



 ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023060501_pygame_im_browser/index.html</guid>
  <pubDate>Mon, 05 Jun 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060501_pygame_im_browser/images/pizzaplaneitchio.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Den Sonntag mit ein wenig JavaScript ausklingen lassen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060401_wochenendausklang/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52949457202/"><img src="https://kantel.github.io/posts/2023060401_wochenendausklang/images/ausklangsonntag-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nach einem sonnigen und warmen Wochenende möchte ich den Sonntag auf unserer Terrasse mit ein wenig JavaScript ausklingen lassen. Denn ich habe den Eindruck, daß ich, um wirklich sinnvoll mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> umgehen zu können, doch noch ein wenig tiefer wühlen und mir mehr von den JavaScript-Grundlagen reinziehen muß. Erste Ergebnisse werde ich vermutlich Anfang der Woche präsentieren können, denn ich habe da einen Plan&nbsp;🤓.</p>
<p>Warum allerdings das Buch auf dem Bild, »<a href="https://www.rheinwerk-verlag.de/programmieren-lernen-mit-javascript/">Programmieren lernen mit JavaScript</a>« von <em>Stephan Elter</em>, auch in der dritten Auflage von 2022 immer noch mit <code>var</code> statt mit <code>let</code> und <code>const</code> hantiert, wird wohl auf ewig ein Geheimnis des Rheinwerk-Verlags bleiben (immerhin wurden diese Sprachbestandteile bereits 2015 mit ES6 in JavaScript als Standard eingeführt).</p>



 ]]></description>
  <category>Garten</category>
  <category>JavaScript</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2023060401_wochenendausklang/index.html</guid>
  <pubDate>Sun, 04 Jun 2023 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060401_wochenendausklang/images/ausklangsonntag.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>650 Jahre Buckow – wie man es richtig macht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060301_buckow_650/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52947338126/"><img src="https://kantel.github.io/posts/2023060301_buckow_650/images/buckow650-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nach dem Reinfall mit der 650-Jahr-Feier in Rudow <a href="https://kantel.github.io/posts/2023052901_650_jahre_rudow_ohne_currywurst/">am letzten Wochenende</a> war meine Motivation, heute die 650-Jahr-Feier von Buckow zu besuchen, nahezu gegen Null gesunken. Nach einem kräftigen Frühstück hatte ich mich dann dennoch auf den Weg gemacht (nichts erwartend, daher vorher gut gegessen) und ich wurde so völlig unerwartet aufs Angenehmste überrascht.</p>
<p>Das begann mit den Örtlichkeiten: Statt alles auf einem engen Supermarktparkplatz zusammenzupferchen, gab es drei naheliegende Plätze: Auf dem Hof von Alt-Buckow 12 fanden die gewohnten Volksbelustigungen statt, inklusive Bierausschank, Würstchenstand und Bühne. Hier war es zwar etwas eng, aber der gemeine Berliner an sich findet so etwas ja gemütlich, und dementsprechend war es hier schon gegen halb drei nachmittags ziemlich voll.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52947338261/"><img src="https://kantel.github.io/posts/2023060301_buckow_650/images/buckow650_1.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52947800918/"><img src="https://kantel.github.io/posts/2023060301_buckow_650/images/buckow650_2.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52947801058/"><img src="https://kantel.github.io/posts/2023060301_buckow_650/images/buckow650_3.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Und auf einer Wiese am Buckower Dorfteich gegenüber dem Grundstück Alt-Buckow 16-18 waren weiträumig die Stände aufgebaut, auf denen sich die Buckower Vereine und sozialen Einrichtungen vorstellen konnten. Als letztes hatte dann die Buckower Kirchengemeinde am anderen Ende des Dorfteiches an der alten Dorfkirche ebenfalls noch ihren Platz zum Essen und Feiern gefunden.</p>
<p>Mein Fehler war, daß ich vorher schon gut gefrühstückt hatte. Denn es gab zwar keine Curry-, dafür aber Nürnberger Rostbratwurst (dafür war ich aber leider noch zu satt). Und am Getränkestand gab es Weihenstephaner Helles alkoholfrei (dafür war es mir leider noch zu früh – kein (auch alkoholfreies) Bier vor vier&nbsp;🤓).</p>
<p>Aber auf jeden Fall brauchen die Buckower sich nicht verstecken – sie verstehen zu feiern. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023060301_buckow_650/index.html</guid>
  <pubDate>Sat, 03 Jun 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060301_buckow_650/images/buckow650.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Agentenbasierte Modellierung, Python, Jupyter und mehr: Video-Tutorials zum Wochenende</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060202_abm_jupyter_and_more/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52932763645/"><img src="https://kantel.github.io/posts/2023060202_abm_jupyter_and_more/images/abmgarten-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute ist wieder Freitag und ich habe Euch ein paar Video-Tutorials herausgesucht, die Euch über die freien Tage beschäftigen können, falls Euch die Langeweile übermannen sollte. Dieses Mal ist es ein Gemischtwarenladen, der vieles von dem heraushauen soll, was sich in meinem Feedreader angestaut hat. Es beginnt mir Agentenbasierter Modellierung (ABM), behandelt <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a>/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> und <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> und endet – nach ein paar weiteren Abschweifungen – bei <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>. Kurzum: Es sollte für jeden von Euch etwas dabei sein.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/eo-BIKAu8Bc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Den Anfang macht das Video »<a href="https://www.youtube.com/watch?v=eo-BIKAu8Bc">Agent Based Modelling - Simply explained</a>« des Kanals <em>Social Complexity</em> von <em>Dino Carpentras</em>. Es ist sowohl Teil der Playlist »<a href="https://www.youtube.com/playlist?list=PLsv8cj_Tu8Ks_JKH9ZshfA6C6DO3MAG_q">Agent-based modeling - All you wanted to know</a>«, die sich eher mit den theoretischen Grundlagen von ABM beschäftigt, wie auch von »<a href="https://www.youtube.com/playlist?list=PLsv8cj_Tu8KuF54jMWP576wmRy6Obigww">NetLogo - The ultimate tutorial</a>«, die – wie der Name schon sagt – praktische Tips zur Realisierung von ABM in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/netlogo.html">NetLogo</a> gibt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/VeQkhfDYyMc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Doch zurück zu Python (und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/mesa.html">Mesa</a>): <a href="https://kantel.github.io/posts/2023052601_zombie_attack_via_abm/">Letzte Woche</a> hatte ich ja schon eine Reihe von Video-Tutorials der <em><a href="https://sites.google.com/nihr.ac.uk/hsma">Health Service Modelling Associates</a></em> (HSMA) der <em>NIHR Applied Research Collaboration South West Peninsula</em> (PenARC) vorgestellt. Heute ist mir dann noch der zweistündige Vortrag »<a href="https://www.youtube.com/watch?v=VeQkhfDYyMc">Session 9A Lecture : Agent Based Simulation using MESA</a>« untergekommen, den ich Euch ebenfalls nicht vorenthalten wollte.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/clPu6wMuLfg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Ebenfalls über zwei Stunden geht die »<a href="https://www.youtube.com/watch?v=clPu6wMuLfg">Introduction To Agent-Based Models</a>« von <em>Andrew Crooks</em> und <em>Sara Metcalf</em>. Sie benutzen wieder NetLogo als Implementierungssprache.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/EqgGTDvbofg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Dann war da noch das einstündige Webinar »<a href="https://www.youtube.com/watch?v=EqgGTDvbofg">Complexity and agent-based modelling</a>« von <em>Dr.&nbsp;Corinna Elsenbroich</em>, die ebenfalls NetLogo als Implementierungssprache einsetzte.</p>
<p>Eigentlich war ich ja der Überzeugung, daß der Zenit von NetLogo längst überschritten sei, doch das obige Webinar ist erst wenige Monate alt. Daher habe ich den (Star-) Logo-Klassiker »<a href="https://mitpress.mit.edu/9780262680936/turtles-termites-and-traffic-jams/">Turtles, Termites, and Traffic Jams – Explorations in Massively Parallel Microworlds</a>« von <em><a href="https://de.wikipedia.org/wiki/Mitchel_Resnick">Mitchel Resnick</a></em> wieder aus <del>meinem begehbaren Zettelkasten</del> meinen Bücherregalen hervorgekramt. Das <a href="https://www.flickr.com/photos/schockwellenreiter/52932763645/">Photo oben</a> ist der Beweis.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/1wa9lysIaD8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Doch zum Schluß doch noch einmal zurück zu Mesa: Das dreiviertelstündige Tutorial »<a href="https://www.youtube.com/watch?v=1wa9lysIaD8">Agent Based Modelling In Python</a>« möchte eine Einführung in Mesa sein (für den Fall, daß ich mit NetLogo doch nicht warm werde&nbsp;🤓).</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/Gzun8PpyBCo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Doch jetzt zu JupyterLab</strong>: Das Tutorial »<a href="https://www.youtube.com/watch?v=Gzun8PpyBCo">Getting Started with JupyterLab</a>« von <em>Jason Grout</em> ist eine zweistündige Einführung (ich habe es heute mit den Zweistündern) in diese Python-Arbeitsumgebung.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/BtYXPY-A9_M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Jünger (und kürzer!) ist das Tutorial »<a href="https://www.youtube.com/watch?v=BtYXPY-A9_M">How To Setup Jupyter Lab in 2022</a>«. Es gehört zur 17-teiligen Playlist »<a href="https://www.youtube.com/playlist?list=PL0JMxkVljrHrrKewN4yfZlpp-BNyYVnsU">Data Science</a>«, die noch weitere Tips und Trick zu Jupyter bereithält.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/_omZFAgT0TQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Von der <em>Python-Maus</em> gibt es die »<a href="https://www.youtube.com/watch?v=_omZFAgT0TQ">Übersicht zu JupyterLab</a>«. Auch dieses Video ist Teil einer Playlist, die ironischerweise ebenfalls »<a href="https://www.youtube.com/playlist?list=PLN0iJDXT7K2ts0plW4d9o0_Dmd19urekC">Data Science</a>« heißt, aber mit fünf Videos weniger umfangreich ist.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/TDMFsUEgRZI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Dann ist da ja auch noch <strong>Visual Studio Code</strong>, das ja unter anderem auch eine Arbeitsplatform für Jupyter Notebooks sein kann. Das Tutorial »<a href="https://www.youtube.com/watch?v=TDMFsUEgRZI">Notebooks in VS Code (2021 Demo)</a>« behandelt dies. Es ist Teil einer ebenfalls <a href="https://www.youtube.com/playlist?list=PLFjq8z-aGyQ5wC_dA9bfPqyuYPV9w5Pjh">umfangreichen Playlist</a>, die verspricht, all das zu behandeln, was Ihr über Python in Visual Studio Code je wissen wolltet, aber nie zu fragen wagtet.</p>
<p>Kompakter (und in einem Video) kommt der Crash-Kurs »<a href="https://www.youtube.com/watch?v=yjeHLSrhPao">Learn Visual Studio Code</a>« daher. Leider hat der Kanaleigner die Einbindung des Videos in andere Seiten unterbunden. Ihr müßt Euch daher selber schon zu YouTube bewegen.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/fA0ZQohiPKM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Doch nun ein ganz anderes Thema</strong>: Brandneu – erst wenige Stunden alt – ist das Video »<a href="https://www.youtube.com/watch?v=fA0ZQohiPKM">WebAssembly: From the Browser to … Everywhere?</a>« des Kanals <em>Coding Tech</em>. Dieser hat es in einer 43-teiligen Playlist »<a href="https://www.youtube.com/playlist?list=PLFjq8z-aGyQ78CQu1G3C5CT9ieiNpsnbJ">WebAssembly</a>« untergebracht, die wohl so eine Art Grabbelkiste für alles über WebAssembly (WASM) ist.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/75NtGaBys-o" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, der versprochene Ren’Py-Kurs fehlt ja noch: Das <a href="https://www.youtube.com/watch?v=75NtGaBys-o">obige Video</a> ist das erste einer bisher siebenteiligen Playlist »<a href="https://www.youtube.com/playlist?list=PL9xdFa4m3yaVaZNCFPBvpJZBn24CiCoiP">Ren’Py Course for Non-Programmers</a>«. Auch wenn die Aktualisierungen in dieser Liste eher sporadisch erfolgen, das jüngste Video ist vor drei Wochen eingestellt worden. Daher kann es durchaus weitere Aktualisierungen geben. Ich habe den Kanal jedenfalls abonniert und werde gegebenenfalls weiter berichten.</p>



 ]]></description>
  <category>Jupyter</category>
  <category>Visual Studio Code</category>
  <category>Dynamische Systeme</category>
  <category>NetLogo</category>
  <category>RenPy</category>
  <guid>https://kantel.github.io/posts/2023060202_abm_jupyter_and_more/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 17:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060202_abm_jupyter_and_more/images/abmgarten.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retro Platformer mit P5.play – Stage 4</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060201_retro_platformer_4/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52943780908/"><img src="https://kantel.github.io/posts/2023060201_retro_platformer_4/images/retroplatformer4-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mein Abenteuer »Spieleprogrammierung mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a>« geht weiter: Gemäß meiner <a href="https://kantel.github.io/posts/2023053103_retro_platformer_3/">Ankündigung vom Mittwoch</a> wollte ich als nächstes etwas mit der in P5.play eingebauten <em>2D&nbsp;Physic Engine</em>, die auf <a href="https://piqnt.com/planck.js/">Planck.js</a>, einem JavaScript-Port von <a href="https://en.wikipedia.org/wiki/Box2D">Box2D</a>, aufsetzt, anstellen. Mein erstes Fazit: Es funktioniert, aber ich weiß manchmal noch nicht wirklich warum. Da muß ich mich wohl noch ein wenig durch die <a href="https://github.com/shakiba/planck.js/wiki/">Dokumentation</a> wühlen.</p>
<p>Was habe ich also angestellt? Ich habe erst einmal mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1">  world<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gravity</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2">  ground <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">  ground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> groundImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>der Spielewelt eine Schwerkraft verpaßt (<code>World</code> ist wie <code>Sprite</code> oder <code>Turtle</code> ein in P5.play <a href="https://p5play.org/learn/world.html">»eingebautes« Objekt</a><sup>1</sup>), von dem jede Spielewelt anscheinend genau eine Instanz besitzt).</p>
<p>Damit der Spieler dann nicht ins Bodenlose fällt, habe ich in den nächste beiden Zeilen einen Boden definiert und ihn ein Bild verpaßt. Der Boden ist <code>static</code>, das heißt, er reagiert nicht auf die Kollision mit anderen Sprites, hält diese aber auf.</p>
<p>Ähnliches habe ich mit den beiden Plattformen angestellt:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1">  platform1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2">  platform1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> platformImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">  platform2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">560</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">  platform2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> platformImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>In <code>draw()</code> habe ich einmal noch eine Bedingung hinzugefügt, die den Ninja-Frosch bei Betätigung der Leertaste (<code>"space"</code>) hüpfen läßt</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">presses</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"space"</span>)) {</span>
<span id="cb3-2">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb3-3">  }</span></code></pre></div>
<p>und da die Physic Engine den Spieler, wenn er von einer Plattform fällt, purzeln läßt, richte ich ihn in der finale <code>else</code>-Anweisung mit <code>sprite.rotation = 0</code> wieder auf:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-2">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">  }</span></code></pre></div>
<p>Das – gerade das letzte <code>else</code> – ist alles noch sehr <em>brute force</em> und es geht sicher eleganter, aber ich lerne ja noch. Hier erst einmal das Ergebnis:</p>
<div id="mysketch">

</div>
<p>Wie oben schon geschrieben: Es funktioniert – irgendwie. Aber mir ist noch nicht wirklich klar, wie zum Beispiel <code>world.gravity</code> und <code>sprite.velocity</code> zusammenwirken. Die seltsamen Werte habe ich per <em>trial and error</em> zusammengebastelt.</p>
<p>Aber hier erst einmal der komplette Quellcode, den es – mit allen Assets – auch in <a href="https://github.com/kantel/p5js/tree/master/retroplatformer/stage04">meinem GitHub-Repositorium</a> gibt:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retro Platformer Stage 4</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mit P5.play und planck.js</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assets: Pixel Adventure von Pixel Frog: https://pixelfrog-assets.itch.io/pixel-adventure-1</span></span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Konstanten</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winwidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winheight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> ninjaSpeed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Globale Variablen</span></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ninjaIdleAni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ninjaWalkAni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> groundImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> platform1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> platform2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> platformImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-18"></span>
<span id="cb5-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Funktionen</span></span>
<span id="cb5-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayGround</span>() {</span>
<span id="cb5-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noStroke</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Rotbraun</span></span>
<span id="cb5-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-26">}</span>
<span id="cb5-27"></span>
<span id="cb5-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hauptprogramm</span></span>
<span id="cb5-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb5-30">  ninjaIdleAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ninjafrog/idle/ninjafrog_idle_00.png"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-31">  ninjaWalkAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ninjafrog/walk/ninjafrog_walk_00.png"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-32">  groundImage   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ground.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-33">  platformImage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/platform01.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-34">}</span>
<span id="cb5-35"></span>
<span id="cb5-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb5-37">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(winwidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> winheight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-38">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mysketch"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-39">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Welt-Eigenschaften</span></span>
<span id="cb5-40">  world<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gravity</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-41">  ground <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-42">  ground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> groundImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-43">  platform1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-44">  platform1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> platformImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-45">  platform2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">560</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-46">  platform2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> platformImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-47">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ninja-Eigenschaften</span></span>
<span id="cb5-48">  ninja <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">148</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-49">  ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ninjaWalkAni)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-50">  ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ninjaIdleAni)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-51">  ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-52">  ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-53">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end setup()</span></span>
<span id="cb5-54"></span>
<span id="cb5-55"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb5-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">215</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">156</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ocker </span></span>
<span id="cb5-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// displayGround();</span></span>
<span id="cb5-58"></span>
<span id="cb5-59">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)) {</span>
<span id="cb5-60">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-61">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) {</span>
<span id="cb5-63">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-64">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninjaSpeed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-65">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb5-66">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-67">    }</span>
<span id="cb5-68">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)) {</span>
<span id="cb5-69">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-70">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) {</span>
<span id="cb5-72">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-73">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninjaSpeed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-74">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb5-75">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-76">    }</span>
<span id="cb5-77">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">presses</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"space"</span>)) {</span>
<span id="cb5-78">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-80">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb5-81">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-82">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-83">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-84">  }</span>
<span id="cb5-85">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end draw()</span></span>
<span id="cb5-86"></span>
<span id="cb5-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Hauptprogramm</span></span></code></pre></div>
<p>Neben dem Ninja-Frosch stammen auch die Tiles für den Grund und die Plattformen aus dem <a href="https://pixelfrog-assets.itch.io/pixel-adventure-1">Pixel Adventures Set des Pixel Frog</a>. Ich habe sie mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tiled.html">Tiled</a> zusammengebastelt und daraus als Bilder exportiert.</p>
<p>Zum Schluß noch eine Frage an die Weisheit der Cloud: Wenn ich P5.play-Skripte in eine Webseite wie diese einbinde, erfreut Euch und mich die Bibliothek mit einem Splash-Screen. Nicht, daß ich ein wenig Reklame den Machern von P5.play nicht gönne (und auf einer Seite, die nur das Spiel enthält, finde ich das auch völlig okay), aber auf einer Tutorial-Seite wie hier in diesem <del>Blog</del> Kritzelheft stört es doch ein wenig. Weiß daher von Euch da draußen jemand, wie man dies abstellen kann?</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich habe bei P5.play Schwierigkeiten mit dem Objektbegriff, denn von den »eingebauten« Objekten lassen sich keine Subklassen bilden: <code>class Player extends Sprite</code> funktioniert nicht. Aber dafür weiß ich auch noch zu wenig über JavaScript-Klassen, die anscheinend nur ein Wrapper über Funktionen sind und sich daher von den Klassen, wie ich sie von Java oder Python gewohnt bin, doch gewaltig unterscheiden. <em>Still digging!</em>↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Spieleprogrammierung</category>
  <category>P5.play</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2023060201_retro_platformer_4/index.html</guid>
  <pubDate>Fri, 02 Jun 2023 13:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060201_retro_platformer_4/images/retroplatformer4.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Gonna take a sentimental journey: Der Coding Train hat eine (neue?) Website</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060102_sentimental_journey/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="http://blog.schockwellenreiter.de/g2022/b202209/images/codingtrainwebsite.jpg"><img src="https://kantel.github.io/posts/2023060102_sentimental_journey/images/codingtrainwebsite-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der »Coding Train«, <em>Daniel Shiffmans</em> YouTube-Kanal hat eine <strong><a href="https://thecodingtrain.com/">neue (?) Website</a></strong>. Das ist nicht unbedingt eine neue Meldung, das stand schon einmal <a href="http://blog.schockwellenreiter.de/2022/09/2022091402.html">am 14. September letzen Jahres</a> im <em>Schockwellenreiter</em>. Aber damals war die Site noch Beta, nun aber hält <em>Shiffman</em> diese Site für so ausgereift, daß er sie stolz in einem brandneuen Video vorstellt:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/5O2Yw_ldRjA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>In diesem Video geht er stolz durch die Features dieser neuen Website, die seinerzeit auch ein wenig Pate für die Struktur des <a href="https://kantel.github.io/posts/2022120602_schockwellenreiteronline/">»neuen« Schockwellenreiters</a> stand (auch wenn ein Großteil der Struktur natürlich von <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>, der Engine, die hinter den Kulissen dieses <del>Blogs</del> Kritzelhefts werkelt, vorgegeben war).</p>
<p>Aber gerade in Bezug auf mein frisch erwachtes Interesse an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> sollte ich mir den »neuen« Coding Train noch einmal intensiver anschauen. Denn da kann ich sicher noch einiges lernen.</p>
<blockquote class="blockquote">
<p>Got my bag, got my reservation<br>
Spent each dime I could afford<br>
Like a child in wild anticipation<br>
I long to hear that all aboard<br>
<em>(<a href="https://musikguru.de/doris-day/songtext-sentimental-journey-290044.html">Sentimental Journey</a>)</em></p>
</blockquote>
<p>Denn der <em>Coding Train</em> ist nicht nur für eine sentimentale Reise gut, sondern es gilt vielleicht auch – wie uns die Godmother of Rock’n’Roll <em><a href="https://de.wikipedia.org/wiki/Rosetta_Tharpe">Sister Rosetta Tharpe</a></em> ins Gehör hämmerte – »<a href="https://en.wikipedia.org/wiki/This_Train">This Train Is Bound for Glory</a>«.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/Z6L5grLqkA0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><em>(Creative) Coding is like Rock’n’Roll and I like it!</em> In diesem Sinne wünsche ich <em>Daniel Shiffman</em> weiterhin viel Erfolg mit seinem <em>Coding Train</em> und hoffe, bald wieder mehr von ihm auf YouTube zu sehen.</p>



 ]]></description>
  <category>Processing</category>
  <category>P5.js</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023060102_sentimental_journey/index.html</guid>
  <pubDate>Thu, 01 Jun 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060102_sentimental_journey/images/codingtrainwebsite.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Mediadaten für den Monat Mai 2023</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023060101_mediadaten_mai_2023/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52942587861/"><img src="https://kantel.github.io/posts/2023060101_mediadaten_mai_2023/images/mediadaten202305-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute beginnt mal wieder ohne Vorwarnung 🤓 ein neuer Monat und daher sind wieder die Zahlen fällig, die hochtrabend manches mal auch <em>Mediadaten</em> genannt werden. Nun denn, im Mai 2023 hatte der <em>Schockwellenreiter</em> laut seinem (hoffentlich!) datenschutzkonformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">GoatCounter</a> exakt <strong>4.891 Besucherinnen und Besucher</strong>. Dafür, daß der <em>Geißenpeter</em> erst seit einem knappen halben Jahr als Neugiertool hinter den Kulissen dieses <del>Blogs</del> Kritzelheftes werkelt und noch über keinen nennenswerten Backkatalog verfügt, sind das wieder wirklich schöne Zahlen.</p>
<p>Und wie immer täuscht die Exaktheit der Ziffern eine Genauigkeit der Zahlen nur vor. Aber ich freue mich dennoch über jeden und jede, der oder die den Weg auf diese Seiten findet, und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> des Vormonats sind dieses Mal sehr stark von lokalen Themen und Interna dominiert. Schließlich wird man nicht jeden Monat 70 Jahre oder gar 94 Jahre alt. Es sind dies (meist aufgerufenen ganz oben):</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/">16 Jahre »Platz unter der Linde«</a>: Straßenfest vor dem Sandmann.</li>
<li><a href="https://kantel.github.io/posts/2023050702_kunstzensur_in_charlottenburg/">Kunstzensur in Charlottenburg</a>.</li>
<li><a href="https://kantel.github.io/posts/2023050101_the_boy_is_back_in_town/">The Boy is back in Town</a> – der 94. Geburtstag meines Vaters.</li>
<li>Mein 70. Geburtstag: <a href="https://kantel.github.io/posts/2023051101_fleurop/">Geburtstagsgruß mit Fleurop</a>.</li>
<li><a href="https://kantel.github.io/posts/2023050601_py5_090a0/">Py5 Version 0.9.0a0 ist draußen</a>! Ein wenig Techgebabbel hat sich dann doch noch in die <em>Top Five</em> gemogelt.</li>
</ol>
<p>Das war es für den »Wonnemonat«. Nun schaue ich wieder hoffnungsvoll und hochmotiviert in den Juni und hoffe auf viele Inspirationen für neue und interessante Beiträge.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2023060101_mediadaten_mai_2023/index.html</guid>
  <pubDate>Thu, 01 Jun 2023 13:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023060101_mediadaten_mai_2023/images/mediadaten202305.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retro Platformer in P5.play – Stage 3</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023053103_retro_platformer_3/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52939931902/"><img src="https://kantel.github.io/posts/2023053103_retro_platformer_3/images/retroplatformerstage3-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine noch sehr tastenden Versuche mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a>, der Spiele- und Physik-Engine für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> haben mir erste Erfolgserlebnisse beschert. Mit wenigen Zeilen Code ist es mir gelungen, einen kleinen Ninja-Frosch mittels Tastendruck über den Bildschirm hüpfen zu lassen. Denn P5.play bietet dafür eine Reihe sehr leistungsstarker Befehle an, die die Programmierung stark vereinfachen.</p>
<p>Das beginnt mit dem Preload der Datein, die die geneigte Programmiererin oder der geneigte Programmierer nicht einzeln aufrufen und hochladen muß, sondern dies kann (am sinnvollsten in der Funktion <code>preload()</code>) in einem Rutsch erledigt werden. Das sieht dann so aus:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb1-2">  ninjaIdleAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ninjafrog/idle/ninjafrog_idle_00.png"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">  ninjaWalkAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ninjafrog/walk/ninjafrog_walk_00.png"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">}</span></code></pre></div>
<p>P5.js kennt nämlich einen Befehl <code>loadAni()</code>, der ähnlich wie <code>loadImage()</code> funktioniert, aber nicht nur eine einzelne Datei, sondern eine ganze Sequenz von Dateien hochlädt und unter einem Variablennamen abspeichert. Die Dateien müssen dafür fortlaufend numeriert sein und der zweite Parameter im Aufruf gibt die letzte Dateinummer der Animation an, nicht die Anzahl der Dateien! Die erste (<code>idle</code>) Animation besteht daher aus 11 Einzelbildern, die von <code>00</code> bis <code>10</code> durchnumeriert sind.</p>
<p>Hat man die Bildchen erst einmal hochgeladen, kann man in <code>setup()</code> ein Sprite-Objekt anlegen und diesem Objekt dann die gewünschten Animationen zuweisen:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1">  ninja <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">174</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2">  walkAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ninjaWalkAni)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">  idleAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ninjaIdleAni)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Der erste Parameter ist so etwas wie ein Schlüssel, ein Name, unter dem die Animation in <code>draw()</code> dann aufgerufen wird.</p>
<p>P5.js erledigt viel unter der Haube. So startet das Programm per Default und ohne daß der Programmierer es separat programmieren muß, mit der letzten, mit <code>sprite.addAni()</code> zugewiesenen Animation, in meinem Fall also mit der <code>"idle"</code>-Animation.</p>
<p>Relativ neu dokumentiert ist der <code>sprite.mirror.x</code>- oder <code>sprite.mirror.y</code>-Befehl. Er spiegelt das Sprite jeweils um die x- respektive y-Achse, so daß dafür keine separate Bildsequenz geladen werden muß.</p>
<p>In <code>draw()</code> kommt dann die <code>kb.pressing()</code>-Methode zum Einsatz<sup>1</sup>. Hier gibt es die Besonderheit, daß die Parameter <code>"up"</code>, <code>"down"</code>, <code>"left"</code> und <code>"right"</code> sowohl auf die Pfeiltasten als auch auf die Tasten <code>WASD</code> reagieren<sup>2</sup>.</p>
<p>Die Steuerung des Ninja habe ich mit diesen Zeilen programmiert:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)) {</span>
<span id="cb3-2">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) {</span>
<span id="cb3-5">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninjaSpeed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb3-8">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">    }</span>
<span id="cb3-10">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)) {</span>
<span id="cb3-11">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) {</span>
<span id="cb3-14">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-15">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninjaSpeed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-16">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb3-17">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-18">    }</span>
<span id="cb3-19">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb3-20">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-21">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">  }</span></code></pre></div>
<p>Das war eigentlich schon alles. Probiert es aus: Mit den Pfeiltastem rechts und links oder den Tasten <code>a</code> und <code>d</code> könnt ihr den Ninja-Frosch durch das Bildschirmfenster hüpfen lassen:</p>
<div id="mysketch">

</div>
<p>Dafür, daß der Sketch gerade einmal aus siebzig Zeilen Code besteht, passiert schon eine ganze Menge. Wie immer für alle unter Euch, die gerne Quellcode lesen und/oder ihn nachvollziehen wollen, hier noch einmal alles kompakt:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retro Platformer Stage 2</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mit P5.play und planck.js</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assets: Pixel Adventure von Pixel Frog: https://pixelfrog-assets.itch.io/pixel-adventure-1</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Konstanten</span></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winwidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winheight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> ninjaSpeed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Globale Variablen</span></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ninjaIdleAni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> ninjaWalkAni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> idleAni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> walkAni<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16"></span>
<span id="cb4-17"></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Funktionen</span></span>
<span id="cb4-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayGround</span>() {</span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noStroke</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">62</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Rotbraun</span></span>
<span id="cb4-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-25">}</span>
<span id="cb4-26"></span>
<span id="cb4-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hauptprogramm</span></span>
<span id="cb4-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb4-29">  ninjaIdleAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ninjafrog/idle/ninjafrog_idle_00.png"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-30">  ninjaWalkAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/ninjafrog/walk/ninjafrog_walk_00.png"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-31">}</span>
<span id="cb4-32"></span>
<span id="cb4-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb4-34">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(winwidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> winheight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-35">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mysketch"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-36">  ninja <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">174</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-37">  walkAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ninjaWalkAni)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-38">  idleAni <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addAni</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ninjaIdleAni)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-39">  ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-40">  ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-41">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end setup()</span></span>
<span id="cb4-42"></span>
<span id="cb4-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb4-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">215</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">156</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ocker </span></span>
<span id="cb4-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayGround</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-46"></span>
<span id="cb4-47">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)) {</span>
<span id="cb4-48">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-49">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) {</span>
<span id="cb4-51">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-52">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninjaSpeed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-53">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-54">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-55">    }</span>
<span id="cb4-56">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)) {</span>
<span id="cb4-57">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mirror</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-58">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walk"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) {</span>
<span id="cb4-60">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-61">      ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ninjaSpeed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-62">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-63">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-64">    }</span>
<span id="cb4-65">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-66">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ani</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"idle"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-67">    ninja<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-68">  }</span>
<span id="cb4-69">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end draw()</span></span></code></pre></div>
<p>Die <em>Credits</em> findet Ihr im Kopf des Quelltextes kommentiert und er ist auch wieder <a href="https://github.com/kantel/p5js/tree/master/retroplatformer/stage03">mit den verwendeten Assets in meinem GitHub-Repositorium</a> zu finden.</p>
<p>Bisher habe ich nur an der Oberfläche von P5.play gekratzt. Der Spaß kommt jedoch erst, wenn ich auch noch die eingebaute Physik-Engine nutze. Darüber beim nächsten Mal mehr. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Es gibt in dieser Gruppe die Befehle <code>presses()</code>, <code>pressing()</code>, <code>holding()</code> und <code>released()</code>. Der erste Befehl ist nach dem ersten Tastendruck verbraucht, der zweite Befehl reagiert, so lange die Taste gedrückt ist, beim dritten Kommande muß die Taste länger (per Default 12 Frames) gedrückt sein, und der letzte Befehl reagiert auf das Loslassen der Taste. Ähnliches gibt es für Interaktionen mit der Maus oder mit einem Game Controller. Hier empfiehlt sich auf jeden Fall ein <a href="https://p5play.org/learn/input_devices.html?page=0">Blick in die Dokumentation</a>.↩︎</p></li>
<li id="fn2"><p>Zusätzlich kann auch ein zweiter Sprite (über einen zweiten Spieler) mit den Tasten <code>IJKL</code> gesteuert werden. Wie man das bewerkstelligt und wie man internationale Tastaturen dafür anpaßt, <a href="https://p5play.org/learn/input_devices.html?page=1">verrät ebenfalls die Dokumentation</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Spieleprogrammierung</category>
  <category>P5.play</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2023053103_retro_platformer_3/index.html</guid>
  <pubDate>Wed, 31 May 2023 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023053103_retro_platformer_3/images/retroplatformerstage3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Freie Tiles und Sprites vom Pixel Frog</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023053102_pixel_frog/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://pixelfrog-assets.itch.io/pixel-adventure-1"><img src="https://kantel.github.io/posts/2023053102_pixel_frog/images/pixelfrog-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>So langsam habe ich mich – wie <a href="https://kantel.github.io/posts/2023050502_gamedev_p5js/">hier angekündigt</a> – vollständig durch die 22 Videos der Playlist »<a href="https://www.youtube.com/playlist?list=PLvqAGa7mJm0XgzljScjXUsbOLshmIQ7-S">p5.play v3.0</a>« von <em>Matthew Bardin</em> durchgearbeitet. Er hat die Vorschußlorbeeren wirklich verdient, denn nun verstehe ich (oder glaube ich zu verstehen), wie die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Bibliothek <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> funktioniert. Sie ist eine echte 2D-Physik-Engine, die auf <a href="https://en.wikipedia.org/wiki/Box2D">Box2D</a> (respektive den JavaScript-Port <a href="https://piqnt.com/planck.js/">Planck.js</a>) aufsetzt. Wenn man <a href="https://kantel.github.io/posts/2023041402_creative_coding_und_physik/">wie ich</a> aus der Python-Ecke kommt, sollte man sie eher mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pymunk.html">Pymunk</a> denn mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> vergleichen.</p>
<p>Aber auch als <em>Game Engine</em> scheint P5.play extrem leistungsfähig zu sein, speziell was die Animation von Sprites betrifft. Da ich dies auf jeden Fall testen möchte, werde ich meine kleine Reihe zu dem <a href="https://kantel.github.io/posts/2023052501_retrogame_p5js_p5play_stage2/">Retro-Platformer mit P5.js (ES6) und P5.play</a> (hier der <a href="https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/">Link zu Teil 1</a>) fortsetzen. Dafür habe ich mir erst einmal eine Reihe freier Sprites und Tilesets gesucht und bin über die Assets des <a href="https://pixelfrog-assets.itch.io/">Pixel Frogs</a> gestolpert, die dieser unter der <a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a> als <em>Public Domain</em> veröffentlicht hat. Es sind dies:</p>
<ul>
<li><a href="https://pixelfrog-assets.itch.io/pixel-adventure-1">Pixel Adventure 1</a> und <a href="https://pixelfrog-assets.itch.io/pixel-adventure-2">Pixel Adventure 2</a>,</li>
<li>das thematisch ähnliche <a href="https://pixelfrog-assets.itch.io/kings-and-pigs">Kings and Pigs</a>,</li>
<li>sowie die im Piraten-Milieu (Arrrghh!) angesiedelten Sets <a href="https://pixelfrog-assets.itch.io/treasure-hunters">Treasure Hunters</a> und <a href="https://pixelfrog-assets.itch.io/pirate-bomb">Pirate Bomb</a>.</li>
</ul>
<p>Sollten Euch einige der Bildchen bekannt vorkommen, sie sind sehr populär und fanden schon in einigen (Video-) Tutorials (zum Beispiel bei <em>Tech with Tim</em>) Verwendung. Und da sie alle vom gleichen Künstler stammen, lassen sich die Sprites und Tiles auch ohne Brüche miteinander kombinieren (ein Vorteil, den ich auch an den <a href="https://www.kenney.nl/assets">(2D-) Assets von Kenney.nl</a> schätze.</p>
<p>So, jetzt werde ich versuchen mit Hilfe der Assets des Pixel-Frosches meine neu gewonnenen Erkenntnisse in Code zu gießen und diese dann so <em>peu a peu</em> auf diesen Seiten veröffentlichen. Es könnte also in der nächsten Zeit etwas ruhiger im <em>Schockwellenreiter</em> zugehen, denn ich habe zu tun. <em>Still digging!</em></p>



 ]]></description>
  <category>Tiles und Sprites</category>
  <category>Spieleprogrammierung</category>
  <category>P5.play</category>
  <guid>https://kantel.github.io/posts/2023053102_pixel_frog/index.html</guid>
  <pubDate>Wed, 31 May 2023 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023053102_pixel_frog/images/pixelfrog.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023053101_sicherheitsluecken_chrome/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://image.freizeit.at/images/cfs_landscape_1232w_693h/7438869/46-192329289.jpg"><img src="https://kantel.github.io/posts/2023053101_sicherheitsluecken_chrome/images/krampus-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht ein neues Update der Version 114 (114.0.5735.90/91) seines Browsers Chrome und schließt erneut <a href="https://chromereleases.googleblog.com/2023/05/stable-channel-update-for-desktop_30.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: József Divéky (1887-1951), »Krampus«)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023053101_sicherheitsluecken_chrome/index.html</guid>
  <pubDate>Wed, 31 May 2023 11:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023053101_sicherheitsluecken_chrome/images/krampus.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
