<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Thu, 15 Aug 2024 19:20:00 GMT</lastBuildDate>
<item>
  <title>Retrogaming und KI: Pygame-CE statt Pygame?</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081502_pygame_ce/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53922387767/"><img src="https://kantel.github.io/posts/2024081502_pygame_ce/images/pygamece-b.jpg" class="img-fluid"></a></p>
<p>Von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> gibt es seit etwa einem Jahr eine Fork, die sich <a href="https://pyga.me/">Pygame-CE</a> <em>(Pygame Community Edition)</em> nennt. Grund f√ºr diese Abspaltung war wohl, da√ü sich ein nennenswerter Teil der Kernentwickler von der ¬ªPygame-F√ºhrung¬´ <a href="https://www.deusinmachina.net/p/what-is-happening-in-the-pygame-community">nicht mehr ausreichend ernst genommen f√ºhlte</a>. Normalerweise sitze ich solche Abspaltungen ja aus und hoffe auf Vers√∂hung oder einen eindeutigen Sieger.</p>
<p>In diesem Fall jedoch gibt es ein Problem, n√§mlich meine Entscheidung, mein leider lange eingeschlafenes Projekt ¬ª<strong><a href="https://kantel.github.io/posts/2023120301_retrogaming_ki/">Retrogaming und K√ºnstliche Intelligenz</a></strong>¬´ nicht ‚Äì wie urspr√ºnglich vorgesehen ‚Äì in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html">Pygame Zero</a>, sondern direkt in Pygame zu realisieren. Daf√ºr gab es verschiedene Gr√ºnde ‚Äì so hat Pygame Zero seit Februar 2018 <a href="https://pygame-zero.readthedocs.io/en/stable/changelog.html">kein Update mehr erfahren</a> und es ist leider nicht wirklich klar, ob es √ºberhaupt noch lebt. Der Hauptgrund war aber, da√ü ich mein Projekt mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> auch f√ºr das Web fit machen wollte. Und da las ich doch im <a href="https://github.com/pygame-web/pygbag/blob/main/README.md">GitHub-Readme von Pygbag</a>:</p>
<blockquote class="blockquote">
<p>pygbag only provides support for pygame-ce ( pygame community edition )</p>
</blockquote>
<p>Boing, das sa√ü! Also war Aussitzen keine Alternative mehr, sondern ich mu√üte mich mit Pygame-CE anfreunden, auch wenn es ¬ªnur¬´ 80 aktive Entwickler (statt der 313 von Pygame) besitzt. Also habe ich damit einen Test gefahren und erst einmal ein objektorientiertes <em>Boilerplate</em> geschrieben, das auch mit Pygbag laufen sollte (also die Hauptschleife des Programms <strong>nicht</strong> in eine Klasse gekapselt ist):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb1-5">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Konstanten deklarieren</span></span>
<span id="cb1-8">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb1-9">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"üêç Pygame-CE Boilerplate (OOP) üêç"</span></span>
<span id="cb1-10">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb1-13">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mittelblau</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb1-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb1-19">    </span>
<span id="cb1-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb1-22">        pygame.init()</span>
<span id="cb1-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ein √ºbler Hack, um die Position des Fensters</span></span>
<span id="cb1-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># auf meinen zweiten Bildschirm zu setzen</span></span>
<span id="cb1-25">        os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SDL_VIDEO_WINDOW_POS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1940</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>)</span>
<span id="cb1-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-27">        pygame.display.set_caption(TITLE)</span>
<span id="cb1-28">        </span>
<span id="cb1-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-32">        </span>
<span id="cb1-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Assets</span></span>
<span id="cb1-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pygame_ce_tiny.png"</span>)).convert_alpha()</span>
<span id="cb1-35">        </span>
<span id="cb1-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zur√ºcksetzen</span></span>
<span id="cb1-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb1-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.sprite.Group()</span>
<span id="cb1-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb1-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player)</span>
<span id="cb1-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-43">    </span>
<span id="cb1-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb1-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb1-47">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb1-48">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb1-49">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing:</span>
<span id="cb1-50">                    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-51">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-52">    </span>
<span id="cb1-53">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-54">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb1-55">    </span>
<span id="cb1-56">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-57">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb1-58">        </span>
<span id="cb1-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb1-60">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb1-61">        </span>
<span id="cb1-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle √Ñnderungen auf den Bildschirm</span></span>
<span id="cb1-63">        pygame.display.flip()</span>
<span id="cb1-64">        </span>
<span id="cb1-65">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-66">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-67">    </span>
<span id="cb1-68">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> end_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-70"> </span>
<span id="cb1-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Player</span></span>
<span id="cb1-73"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player(pygame.sprite.Sprite):</span>
<span id="cb1-74">     </span>
<span id="cb1-75">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb1-76">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb1-77">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb1-78">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world.player_im</span>
<span id="cb1-79">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb1-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb1-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-82">         </span>
<span id="cb1-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-84">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-85">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("update")</span></span>
<span id="cb1-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> WIDTH:</span>
<span id="cb1-87">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">214</span>           </span>
<span id="cb1-88"></span>
<span id="cb1-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb1-91">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb1-92">world.start_screen()</span>
<span id="cb1-93">world.reset()</span>
<span id="cb1-94"></span>
<span id="cb1-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb1-96"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb1-97">    world.events()</span>
<span id="cb1-98">    world.update()</span>
<span id="cb1-99">    world.draw()</span>
<span id="cb1-100">    </span>
<span id="cb1-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb1-102">    world.clock.tick(FPS)</span>
<span id="cb1-103">    </span>
<span id="cb1-104">pygame.quit()</span>
<span id="cb1-105">sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>Dann habe ich Pygame-CE (<a href="https://kantel.github.io/posts/2024063001_spyder_pygame/">wie zuvor bereits Pygame</a>) eine eigene virtuelle Umgebung spendiert. Dabei zeigte sich, da√ü zwar Pygame wie auch Pygame-CE gut in ihrer virtuellen Umgebung mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zusammenspielen, es aber mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> ein Problem gibt. Werden die Skripte aus der Spynne heraus aufgerufen, lassen sie sich nur beenden, wenn man den Python-Interpreter killt.</p>
<p>Daher habe ich ‚Äì sozusagen als zweite Alternative ‚Äì meiner <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>-Umgebung ebenfalls ein Pygame-CE spendiert, das problemlos lief (vergleiche <a href="https://www.flickr.com/photos/schockwellenreiter/53922387767/">Screenshot</a> im Bannerbild oben).</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/pYq9edSUaOw?si=sqaCgkRr5cFXHr8_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Jetzt werde ich meiner im M√§rz 2022 begonnenen, in Pygame Zero realisierten ¬ªBlaupause¬´ f√ºr ein Mazegame (<a href="http://blog.schockwellenreiter.de/2022/04/2022041701.html">Stage 1</a>, <a href="http://blog.schockwellenreiter.de/2022/04/2022041701.html">Stage 2</a>, <a href="http://blog.schockwellenreiter.de/2022/04/2022042101.html">Stage 2a</a> und <a href="http://blog.schockwellenreiter.de/2022/04/2022042501.html">Stage 3</a>, <a href="http://blog.schockwellenreiter.de/2022/08/2022081601.html">Nachschlag</a> vom August 2022) eine neue, modifizierte Version spendieren m√ºssen, die mit Pygame-CE l√§uft. Daf√ºr habe ich erst einmal alle Pygame-CE-Ressourcen zusammengesucht:</p>
<ul>
<li><a href="https://pyga.me/">Pygame-CE Home</a></li>
<li><a href="https://pyga.me/docs/">Pygame-CE Dokumentation</a></li>
<li><a href="https://pyga.me/docs/#tutorials">Pygame-CE Tutorials</a></li>
<li><a href="https://github.com/pygame-community/pygame-ce">Pygame-CE @ GitHub</a></li>
</ul>
<p>Noch sind ‚Äì f√ºr den normalen Entwickler ‚Äì die <a href="https://gist.github.com/davidpendergast/77e49f8028ce611ac478c38f77f9f72f">Unterschiede zwischen Pygame und Pygame-CE</a> kaum von Belang. Auch wenn ich hoffe, da√ü dies so bleibt, habe ich dennoch wieder zu tun und ich freue mich darauf. <em>Still digging!</em></p>



 ]]></description>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>K√ºnstliche Intelligenz</category>
  <category>Python</category>
  <category>Pygame</category>
  <category>Thonny</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024081502_pygame_ce/</guid>
  <pubDate>Thu, 15 Aug 2024 19:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081502_pygame_ce/images/pygamece.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft ver√∂ffentlicht f√ºr Office for Mac</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081501_office_mac_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53892080134/"><img src="https://kantel.github.io/posts/2024081501_office_mac_update/images/madhattresswithbooks-b.jpg" class="img-fluid"></a></p>
<p>Microsoft liefert mit dem Update auf 16.88 f√ºr Office 365, 2021 und 2019 for Mac nat√ºrlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erh√§lt man die Korrekturen am einfachsten √ºber Microsofts AutoUpdate ‚Äì in einem beliebigen Office-Programm √ºber Men√º: <code>Hilfe &gt; Auf Updates √ºberpr√ºfen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-f√ºr-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">Microsoft Office unterst√ºtzt stets nur die drei Hauptversion von macOS</a>. Momentan sind dies Sonoma, Monterey und Ventura. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53892080134/">Mad Hattress with Apples and Books</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>the mad hatter gives a sexy naked++ woman with big boops and a nice butt a apple in the summer magic forest. colored french comic style</em>¬´, Negative Prompt: ¬ª<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>¬´. Modell: SDXL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024081501_office_mac_update/</guid>
  <pubDate>Thu, 15 Aug 2024 18:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081501_office_mac_update/images/madhattresswithbooks.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate f√ºr Adobe Reader und Acrobat</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081402_adobe_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/"><img src="https://kantel.github.io/posts/2024081402_adobe_update/images/sylvia-b.jpg" class="img-fluid"></a></p>
<p>Adobe liefert mit dem Update APSB24-57 wieder <a href="https://helpx.adobe.com/security/products/acrobat/apsb24-57.html">Korrekturen f√ºr Sicherheitsl√ºcken</a> im Reader und in Acrobat (unter Windows und Mac).</p>
<p>Das Update gelingt am einfachsten √ºber den internen Update-Mechanismus. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p>Bild: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/">Bibliothekarin</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>A young woman with red lips, blue eyes, slim, brown, curly hair and glasses in a colorful checked shirt and vest, short blue skirt and high heels. full body, sitting in an office in front of a computer. In the background are shelves with files and books. The sun shines through a large window. colored french comic style</em>¬´, Negative Prompt: ¬ª<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, gloves, backpack, shoulder bag, bag, (((shoulder bag)))</em>¬´. Modell: SDXL, Style: Illustrated Anime + Creepy Nordic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024081402_adobe_update/</guid>
  <pubDate>Wed, 14 Aug 2024 15:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081402_adobe_update/images/sylvia.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Online-Petition fordert den Erhalt der Konzertreihe ¬ªSommer im Park¬´</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081401_sommer_im_park/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53840708997/"><img src="https://kantel.github.io/posts/2024081401_sommer_im_park/images/sommerimpark-b.jpg" class="img-fluid"></a></p>
<p>Seit √ºber 35 Jahren gibt es im Neuk√∂llner <a href="https://de.wikipedia.org/wiki/K%C3%B6rnerpark#">K√∂rnerpark</a> die Konzertreihe ¬ªSommer im Park¬´, immer umsonst und drau√üen. Das Programm war stets au√üergew√∂hnlich, aber nie zu elit√§r und abgehoben. Es war eben f√ºr jede und jedem im Kiez gedacht: Eltern mit Kindern, Althippies wie auch Hipster, Rentner und Rentnerinnen mit und ohne Rollator. Auch Gabi und ich waren regelm√§√üige G√§ste.</p>
<p>Nun ist ‚Äì wie so vieles in Berlin (und speziell in Neuk√∂lln) ‚Äì auch diese Konzertreihe im Kiez durch die aktionistische und unverantwortliche Rotstiftpolitik des Berliner Senats bedroht. Fanden diesen Sommer schon nur noch sechs statt der gewohnten zw√∂lf Konzerte statt, ist zu bef√ºrchten, <a href="https://www.berliner-woche.de/neukoelln/c-kultur/online-petition-fordert-den-erhalt-der-konzertreihe-sommer-im-park_a422683">da√ü die harten Sparauflagen des Senats das Aus f√ºr diese beliebte Veranstaltungsreihe bedeuten</a>.</p>
<p>Daher haben einige langj√§hrige Besucher eine <a href="https://www.change.org/p/sommer-im-park-der-konzertreihe-im-k%C3%B6rnerpark-droht-das-aus">Petition auf Change.org gestartet</a>. Sie richtet sich an <em>Dorothee Bienert</em>, Leitung Fachbereich Kultur Bezirksamt Neuk√∂lln und an <em><a href="https://de.wikipedia.org/wiki/Joe_Chialo">Joe Chialo</a></em> (CDU), Berliner Senator f√ºr Kultur und Gesellschaftlichen Zusammenhalt. Sie fordert, da√ü die Konzertreihe wie in den vergangenen Jahren mit (mindestens) zw√∂lf j√§hrlichen Konzerten auch in Zukunft erhalten bleibt.</p>
<p>Auch wenn ich ‚Äì wie regelm√§√üige Leserinnen und Leser wissen ‚Äì gewisse Vorbehalte gegen√ºber Change.org besitze (die Organisation schrappt immer sehr hart am Spam vorbei), habe ich diese Petition unterzeichnet und bitte Euch, dies ebenfalls zu tun. Denn der Sommer im Park mu√ü auch in den n√§chsten Jahren stattfinden.</p>
<hr>
<p><strong>Photo</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53840708997/">Salsa im K√∂rnerpark</a></em>, aufgenommen am 7. Juli 2024, (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024 von <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">J√∂rg Kantel</a></em></p>



 ]]></description>
  <category>Kiezfest</category>
  <category>Kultur</category>
  <category>Musik</category>
  <category>Neuk√∂lln</category>
  <category>Parks und G√§rten</category>
  <category>Politik</category>
  <guid>https://kantel.github.io/posts/2024081401_sommer_im_park/</guid>
  <pubDate>Wed, 14 Aug 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081401_sommer_im_park/images/sommerimpark.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Da, Da, Da: So geht Wahlkampf in Th√ºringen¬†ü•∏</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53920920104/"><img src="https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/images/dadadada01-b.jpg" class="img-fluid"></a></p>
<p>Der Th√ºringer Ministerpr√§sident <em><a href="https://de.wikipedia.org/wiki/Bodo_Ramelow">Bodo Ramelow</a></em> (Die Linke) ist doch immer wieder f√ºr √úberraschungen gut. Nicht nur, da√ü er vor etwa f√ºnfzehn Jahren auch einmal <a href="http://blog.schockwellenreiter.de/2014/12/20141205.html#p04">Kommentator in diesem <del>Blog</del> Kritzelheft</a> war (<a href="https://www.ats20.de/blog/index.php?/archives/1005-Urheberrecht-und-Autorenverdienst..html">Originalbeitrag</a> ‚Äì da WordPress ‚Äì leider im Nirwana des Netzes entschwunden), nein, heute √ºberraschte er mich mit einem Video, das dieses Wochenende auf YouTube hochgeladen wurde:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/EAzZ7ObcaNA?si=LxgNb-P37am-KFAK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Dort grummelt er im phlegmatischen Sprechgesang zusammen mit der Erfurter Glitzerpoppunkband <strong>Donata</strong> den Trio-Kulthit ¬ªDa Da Da¬´ aus dem Jahre 1982, unterlegt von Schlagzeilen wie ¬ªDie Brandmauer ist eingest√ºrzt¬´ (Ramelow grummelt dazu: ¬ªGeht es immer nur bergab?¬´) oder ¬ªRamelow ist gef√§hrlicher als die AfD!¬´ (Ramelows Kommentar: ¬ªGeht nur das, was du verstehst? Aha¬´). Und die Presse (vom <a href="https://www.tagesspiegel.de/politik/ich-lieb-dich-nicht-du-liebst-mich-nicht-bodo-ramelow-covert-trio-klassiker-da-da-da-fur-thuringen-wahlkampf-12180746.html">Tages</a>-<a href="https://www.spiegel.de/politik/deutschland/thueringen-bodo-ramelow-veroeffentlicht-wahlkampfsong-mit-donata-a-231d174c-d4d7-43b9-b491-d40a5dc2284a">Spiegel</a> √ºber das <a href="https://www.zdf.de/nachrichten/politik/deutschland/werbespots-politiker-landtagswahl-thueringen-100.html">ZDF</a> bis hin zum <a href="https://www.nd-aktuell.de/artikel/1184449.linke-in-thueringen-bodo-ramelow-mit-da-da-da-gegen-den-ernst-der-lage.html">Neuen Deutschland</a>) √ºberschl√§gt sich. Sie ist sich einig, da√ü es <strong>kein Deep Fake</strong> ist. Nur ob Ramelows ¬ªGesangs¬´-Partnerin die Linke-Landtagsabgeordneten <em>Donata Vogtschmidt</em> (Neues Deutschland) oder eine <em>Donata Kramarz</em> aus Erfurt (Tagesspiegel) sei, dar√ºber ist sie sich noch uneinig.</p>
<p><b style="color:red">[Update]</b>: Ein wenig googeln (aber das k√∂nnen Qualit√§tsjournalistinnen und -journalisten wohl heute immer noch nicht) brachte mir die Erkenntnis, da√ü die S√§ngerin auf keinen Fall <em><a href="https://adohraufdieohren.blog/2024/04/18/interview-mit-donata-zu-ihrem-zweiten-soloalbum/">Donata Kramarz</a></em> sein kann. Denn die ist nicht aus Erfurt, sondern aus Amsterdam und lebt in Berlin, und pa√üt auch optisch nicht zu der Person in dem Video. Dagegen ist <em><a href="https://www.donatavogtschmidt.de/">Donata Vogtschmidt</a></em> als Gesangspartnerin schon wahrscheinlicher. Blond ist sie und im <a href="https://www.facebook.com/donata.band">Gesichtsbuch gibt es auch ein paar Photos</a>, die meine Vermutung erh√§rten.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53920920359/"><img src="https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/images/dadadada02.jpg" class="img-fluid"></a></p>
<p>Wie dem auch sei, <em>Ramelow</em> ist in dem bisher doch eher von gepflegter Langeweile gepr√§gten Wahlkampt ein Coup gelungen, der ihm die dringend ben√∂tigte Aufmerksamkeit beschert. Noch cooler w√§re es nat√ºrlich, wenn er sich selber mit einer Ukulele begleitet h√§tte (ich habe eine <a href="https://beta.dreamstudio.ai/generate">KI meines Vertrauens</a> mal gebeten, dies mit einem Bild zu illustrieren).</p>
<p>Und lese nur ich etwas in den Clip hinein? Ich interpretiere jedenfalls einige Zeilen als kaum verstecktes Koalitionsangebot an das <a href="https://de.wikipedia.org/wiki/B%C3%BCndnis_Sahra_Wagenknecht">B√ºndnis Sahra Wagenknecht</a>.</p>
<p>Aber egal, Gro√üenkneten liegt ab sofort in Th√ºringen ‚Äì denn Antifaschismus ist Landarbeit. Und macht mehr Spa√ü mit <strong>Donata</strong> und Sekt.</p>
<p>Und ich habe noch ein besonderes Verh√§ltnis zu dem Clip: Gabi hatte Anfang der 1980er Jahre in Bremerhaven ihre Ausbildung zur Krankenschwester absolviert. W√§hrend dieser Zeit wurde sie auch zum absoluten <a href="https://de.wikipedia.org/wiki/Trio_(Band)">Trio</a>-Fan. Diese Liebe zu der Band hatte sie auch nach Berlin mitgenommen. Und so ist f√ºr mich Ramelows Cover auch eine <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Reminiszens an die bessere H√§lfte des Kantel-Chaos-Teams</a>.</p>
<hr>
<p><strong>Bilder</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53920920104/">Da, Da, Da</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: ¬ª<em>old politican Bodo Ramelow with sunglasses sings and plays Rock and Roll with a blond female singer. colored french comic style</em>¬´. Negative Prompt: ¬ª<em>beard</em>¬´. Modell: Stable Diffusion XL, Style:Comic Book.</p>



 ]]></description>
  <category>Musik</category>
  <category>Modernes Leben</category>
  <category>Politik</category>
  <guid>https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/</guid>
  <pubDate>Tue, 13 Aug 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/images/dadadada01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>All about Anytype ‚Äì meine neue, digitale Rumpelkammer?</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081201_anytype/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53919241040/"><img src="https://kantel.github.io/posts/2024081201_anytype/images/anytype-b.jpg" class="img-fluid"></a></p>
<p>Im <a href="https://kantel.github.io/posts/2024021301_notion/">Februar dieses Jahres</a> hatte ich testweise die Notiz- und Produktivit√§tssoftware <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/notion.html">Notion</a> auf meinem Rechner installiert. Sie war nicht nur deswegen interessant, weil sie die L√ºcke zwischen Zettelkasten und Publikationswerkzeug ausf√ºllte, sondern auch, weil sie optisch und √§sthetisch einen guten Eindruck machte ‚Äì das Auge will bei der Arbeit ja auch seinen Spa√ü haben.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/P8accXNcwjs?si=GFWlCCySQEJQaSXB" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Leider ist Notion zwar f√ºr den Privatanwender kostenlos zu nutzen, ab propriet√§r. Daher kam sie f√ºr mich f√ºr eine produktive Nutzung nicht in Frage, was ich sehr bedauerte. Nun sp√ºlte aber k√ºrzlich das Video ¬ª<a href="https://www.youtube.com/watch?v=P8accXNcwjs">Open Source alternatives to the Most popular productivity apps</a>!¬´ in meine Timeline und darin wurde <a href="https://anytype.io/">Anytype</a> nicht nur als Alternative f√ºr Notion, sondern auch noch als Alternative zu <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/obsidian.html">Obsidian</a> empfohlen. Da mich die <a href="https://kantel.github.io/posts/2024050402_logseq_oder_zettlr/">j√ºngsten Nachrichten</a> √ºber die Hinwendung von <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a> von flachen Markdown-Dateien zu einer Datenbank-basierten Version beunruhigen, wurde ich gleich doppelt aufmerksam.</p>
<p><a href="https://www.visualmakers.de/tool/anytype">Anytype.io will eine innovative und vielseitige Anwendung sein</a>, die als pers√∂nliches Daten- und Wissensmanagement-Tool dient. Sie kombiniert Elemente eines Notizbuches, eines Organizers und einer Datenbank, um Nutzern eine Plattform f√ºr die Organisation von Informationen, Ideen und Projekten zu bieten. Das Besondere an Anytype ist, da√ü es auf einem dezentralen Netzwerk basiert, wodurch die Privatsph√§re und Sicherheit der Benutzerdaten gest√§rkt wird. Die Software ist Open Source <em>(Any Source Available License 1.0)</em> und die Firma sitzt in der Schweiz.</p>
<p>Ich habe folgende Links zur Software zusammengeklaubt</p>
<ul>
<li><a href="https://anytype.io/">Anytype Home</a></li>
<li><a href="https://doc.anytype.io/anytype-docs">Anytype Docs</a></li>
<li><a href="https://github.com/anyproto/anytype-ts">Anytype (Desktop) @ GitHub</a></li>
<li><a href="https://blog.anytype.io/">Anytype Blog</a></li>
</ul>
<p>und die Desktop-Version auf meinem Mac installiert und heute den ganzen Tag damit herumgespielt. Mein erster Eindruck ist, da√ü Anytype auch von der √Ñsthetik her eine vollwertige Notion-Alternative ist, die zus√§tzlich eine Ende-zu-Ende-Verschl√ºsselung bietet, so da√ü auch bei der Synchronisation niemand mitlesen kann. Und da ‚Äì wie oben schon einmal erw√§hnt ‚Äì die Hersteller in der Schweiz sitzen, glaube ich ihnen auch, <a href="https://gnulinux.ch/anytype-die-anwendung-fuer-alles">da√ü ihre Server keine Hintert√ºrchen f√ºr die NSA oder andere (nicht nur) amerikanische Geheimdienste eingebaut haben</a>.</p>
<p>Eine (freie!) Notion-Alternative ist also Anytype auf jeden Fall, ob sie aber als Logseq- oder Obsidian-Alternative f√ºr mein zweites Gehirn taugt, m√ºssen erst noch weitere Tests zeigen. Zur Vorbereitung darauf habe ich zwei Playlists gefunden:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/Cuyh2IJDnmI?si=eev6h2r81YHn6v9_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<ol type="1">
<li>¬ª<a href="https://www.youtube.com/playlist?list=PLfibVUP3crbVx5sssO0nzaG-rIIWBXeJH">Anytype Videos</a>¬´ mit neunzehn Filmchen zwischen etwa f√ºnf und f√ºnfundzwanzig Minuten.</li>
<li>¬ª<a href="https://www.youtube.com/playlist?list=PLP4EJ6PbE99hnThgYnf-8M15l9oY625EW">Anytype Tutorials</a>¬´, bestehend aus sechs Videos mit einer Spieldauer zwischen f√ºnf Minuten und einer Viertelstunde.</li>
</ol>
<p>Anytype kann seine Inhalte nach Markdown exportieren, ist also weder ein Datensilo noch eine Sackgasse. Und die Synchonisation mit meinem Android-Smartphone funzte ebenfalls ‚Äì nachdem ich bei der Eingabe meiner Schl√ºsselphrase erst noch Autokorrektur √ºberlisten mu√üte. Ich habe also mal wieder zu tun. <em>Still digging!</em></p>



 ]]></description>
  <category>Anytype</category>
  <category>Logseq</category>
  <category>Notion</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2024081201_anytype/</guid>
  <pubDate>Mon, 12 Aug 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081201_anytype/images/anytype.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retrogaming mit Python: Pyxel-Tutorial Stage 2</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081002_pyxel_tut_2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53912110447/"><img src="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2-b.jpg" class="img-fluid"></a></p>
<p>Mein <a href="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/">Ausflug vor drei Tagen</a> zu der Retrokonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> hatte meinen Ehrgeiz angestachelt. Ich wollte herausfinden, ob ich die Integration von Maps (Karten) mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> und Python nicht √§hnlich einfach wie mit TIC-80 und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> hinbekomme. Und ich glaube, das ist mir gelungen.</p>
<p>Doch zuerst einmal den Quellcode, der nur geringf√ºgig umfangreicher und etwas weniger kompakt als die Lua-Vorlage geraten ist:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyxel</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ein paar n√ºtzliche Konstanten</span></span>
<span id="cb1-4">TS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tilesize</span></span>
<span id="cb1-5">COLKEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color Key</span></span>
<span id="cb1-6">WALL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mauer Tile No.</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tile(tile_x, tile_y):</span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyxel.tilemaps() gibt ein Tupel mit den x- und y-Koordinaten</span></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aus der Tilemap des mit pget() identifizierten Tiles zur√ºck</span></span>
<span id="cb1-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pyxel.tilemaps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pget(tile_x, tile_y)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player:</span>
<span id="cb1-14">    </span>
<span id="cb1-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TS</span>
<span id="cb1-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   </span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.imagebank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-22">        </span>
<span id="cb1-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> move(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (pyxel.btnp(pyxel.KEY_LEFT) </span>
<span id="cb1-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):            </span>
<span id="cb1-26">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_RIGHT)</span>
<span id="cb1-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):</span>
<span id="cb1-29">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_UP)</span>
<span id="cb1-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):</span>
<span id="cb1-32">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_DOWN)</span>
<span id="cb1-34">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):</span>
<span id="cb1-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> App:</span>
<span id="cb1-38">    </span>
<span id="cb1-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-40">        pyxel.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel Tutorial Stage 2"</span>, display_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-41">        pyxel.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assets/mazegame01.pyxres"</span>)</span>
<span id="cb1-42">        </span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialisiere den Spieler</span></span>
<span id="cb1-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position in Map-Koordinaten</span></span>
<span id="cb1-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-46">        </span>
<span id="cb1-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-48">        pyxel.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.update, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.draw)</span>
<span id="cb1-49">        </span>
<span id="cb1-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-51">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.move()</span>
<span id="cb1-52">        </span>
<span id="cb1-53">    </span>
<span id="cb1-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-55">        pyxel.cls(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-56">        </span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichen die Map</span></span>
<span id="cb1-58">        pyxel.bltm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-59">        </span>
<span id="cb1-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne den Player</span></span>
<span id="cb1-61">        pyxel.blt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.imagebank,</span>
<span id="cb1-62">                  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.u, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.v, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.h,</span>
<span id="cb1-63">                  COLKEY)</span>
<span id="cb1-64">                </span>
<span id="cb1-65">App().run()</span></code></pre></div>
<p>Der Trick ist, da√ü ich die Klasse <code>Player</code> mit den Map-Koordinaten initialisiere und aufrufe und alle Umrechnungen zu den Sprite-Koordinaten nur in dieser Klasse vornehme. Die einzigen Ausnahmen sind die Fenster- und Kartengr√∂√üen, die ‚Äì in diesem Fall ‚Äì je mit (<code>16*TS, 16*TS</code>) aufgerufen werden. Doch das ist nur Kosmetik, die eine sp√§tere √Ñnderung der Kartengr√∂√üe (siehe weiter unten) vereinfachen soll. Ich h√§tte genauso an dieser Stelle das Konstantenpaar (<code>128, 128</code>) einsetzen k√∂nnen.</p>
<p>Die Methoden <code>pyxel.blit()</code> f√ºr die Sprites und <code>pyxel.blitm()</code> f√ºr die Karten sind zwar nicht gerade parameterarm, aber gerade dadurch m√§chtig. Damit ich mich im Dickicht der Ziffern nicht verhaspele, habe ich den Aufruf von <code>pyxel.blit()</code> mit (hoffentlich) f√ºr sich sprechenden Parametermamen einsichtiger gemacht:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">player.x           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die x-Koordinate in Sprite-Koordinaten</span></span>
<span id="cb2-2">player.y           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die y-Koordinate in Sprite-Koordinaten</span></span>
<span id="cb2-3">player.imagebank   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Bank des Sprites in der Ressourcendatei</span></span>
<span id="cb2-4">player.u           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die x-Position des Sprites in der Imagebank</span></span>
<span id="cb2-5">player.v           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die y-Position des Sprites in der Imagebank</span></span>
<span id="cb2-6">player.w           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Breite des Sprites (in Pixeln)</span></span>
<span id="cb2-7">player.h           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die H√∂he des Sprites (in Pixeln)</span></span>
<span id="cb2-8">COLKEY             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Position der transparenten Farbe in der Farbpalette</span></span></code></pre></div>
<p>√Ñhnlich sieht es bei der Methode <code>pyxel.blitm()</code> aus. Da ich hier bisher nur eine Karte verwende und daher fast alle Parameter bis auf die H√∂he und Weite der Karte <code>0</code> sind, habe ich sie einfach mit den entsprechenden Zahlenwerten aufgerufen. In umfangreicheren Programmen empfiehlt sich nat√ºrlich, die Karten auch in einer Klasse (zum Beispiel <code>Map</code>) zu kapseln und ebenfalls sprechende Variablennamen zu verwenden.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53913356059/"><img src="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2map.jpg" class="img-fluid figure-img" alt="Der Pyxel Map-Editor"></a></p>
<figcaption>Der Pyxel Map-Editor</figcaption>
</figure>
</div>
<p>Wie Ihr im obigen <a href="https://www.flickr.com/photos/schockwellenreiter/53913356059/">Screenshot des Map-Editors</a> sehen k√∂nnt, habe ich ihn testweise mit einer weiteren, lindgr√ºnen Seite vergr√∂√üert. Wenn Ihr nun die Zeile f√ºr die Fenstergr√∂√üe mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">pyxel.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel Tutorial Stage 2"</span>, display_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<p>und die Zeile, mit der Ihr die Karte zeichnet, mit</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">pyxel.bltm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>aufruft, bekommt Ihr ein doppelt so breites Fenster mit einer doppelt so breiten Karte angezeigt:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53914774339/"><img src="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2map2.jpg" class="img-fluid figure-img" alt="Die doppelt so breite Testkarte"></a></p>
<figcaption>Die doppelt so breite Testkarte</figcaption>
</figure>
</div>
<p>Damit l√§√üt sich schon eine <a href="https://www.flickr.com/photos/schockwellenreiter/53906907263/">√§hnliche Karte</a> wie bei meinen TIC-80-Experimenten erzeugen.</p>
<p>Der zweite Trick, der daf√ºr verantwortlich ist, da√ü das Pyxel-Skript √§hnlich kompakt wie mein TIC-80-Versuch geraten ist, h√§ngt mit der Hilfsfunktion <code>get_tile(tyle_x, tile_y)</code> zusammen. Zwar kann Pyxel keine Flags setzen, wenn man jedoch die Methode <code>pyxel.tilemaps.pget(x, y)</code> mit <code>x</code> und <code>y</code> als Pixelkoordinaten aufruft, bekommt man ein Tupel mit der x- und y-Koordinate der Tilemap zur√ºck. Und da in meinem Fall die Mauer in der dritten Spalte (<code>x = 2</code>) der ersten (und einzigen) Zeile (<code>y = 0</code>) liegt, gibt der Aufruf von</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">pyxel.tilemaps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pget(tile_x, tile_y)</span></code></pre></div>
<p>dann und nur dann eine <code>2</code> zur√ºck, wenn das Tile eine Mauer ist. Das ist doch fast so gut, wie ein Flag.&nbsp;ü§ì</p>
<p>Daher frage ich in in der Methode <code>player.move()</code> jedesmal ab, ob das gew√ºnschte Zielfeld (in Map-Koordinaten) <strong>keine</strong> Mauer ist. Nur dann wird der Spieler auf das Zielfeld bewegt.</p>
<iframe src="pyxel/index.html" class="if16_9" name="Pyxel Maze Game Stage 2">
</iframe>
<p>Wie Ihr selber sehen und ausprobieren k√∂nnt, kann der Spieler mit den Pfeiltasten bewegt werden, aber die Mauern sind f√ºr ihn un√ºberwindbare Hindernisse.</p>
<p>Auch diese Version meiner hoffentlich wachsenden Pyxel-Tutorials habe ich ‚Äì wie das <a href="https://www.flickr.com/photos/schockwellenreiter/53912110447/">Bannerbild oben</a> zeigt ‚Äì wieder mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> zusammengeschraubt. Je l√§nger ich damit arbeite, um so mehr gef√§llt mir die Spynne und sie hat das Zeug dazu, <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> als meine Python-IDE zu ersetzen. Sie ist wegen ihrer Konzentration auf Python nicht so √ºberfrachtet wie die eierlegende Wollmilchsau VS Code und dadurch bedeutend √ºbersichtlicher und schlanker. Und da sie sich ja auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> wunderbar vertr√§gt, sehe ich keine Hindernisse mehr f√ºr einen Wechsel (f√ºr Spezialf√§lle habe ich ja immer noch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">Desktop</a>)).</p>
<p>Pyxel hat gegen√ºber TIC-80 und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> den Vorteil, da√ü ich auf das gesamte Python-√ñkosystem zur√ºckgreifen kann. Dadurch sollte diese Retrokonsole hervorragend daf√ºr geeignet sein, mein lange eingeschlafenes Projekt ¬ª<strong><a href="http://blog.schockwellenreiter.de/2022/04/2022041401.html">Retrogaming und K√ºnstliche Intelligenz</a></strong>¬´ (<a href="http://blog.schockwellenreiter.de/2022/04/2022041502.html">Nachschlag</a>) wieder zum Leben zu erwecken. Ich werde daf√ºr allerdings noch einige Tests und Tutorials durchf√ºhren m√ºssen. Freut Euch also auf mehr. <em>Still digging!</em></p>



 ]]></description>
  <category>Pyxel</category>
  <category>Python</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024081002_pyxel_tut_2/</guid>
  <pubDate>Sat, 10 Aug 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate des Foxit Reader (PDF Reader)</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081001_foxit_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53569651043/"><img src="https://kantel.github.io/posts/2024081001_foxit_update/images/aktenfuchs-b.jpg" class="img-fluid"></a></p>
<p>Mit der Version 2024.2.3 des nicht nur unter Windows beliebten PDF Betrachters Foxit Reader haben die Entwickler auch wieder <a href="https://www.foxit.com/support/security-bulletins.html">Schwachstellen behoben</a>.</p>
<p>Die neue Version kann <a href="https://www.foxitsoftware.com/downloads/#Foxit-Reader/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53569651043/">Aktenfuchs</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>A fox wearing a vest and glasses sits at a desk in a tree hollow and writes in a thick file. In front of him there are still open files on the desk. There are shelves on the walls with lots of file folders. The spring sun shines into the cave through a tree window. colored french comic style</em>¬´. Negative Prompt: ¬ª<em>other animals</em>¬´. Modell: Stable Diffusion XL, Style: Creepy Nordic Fairytale.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024081001_foxit_update/</guid>
  <pubDate>Sat, 10 Aug 2024 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081001_foxit_update/images/aktenfuchs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu von Kenney: Pico-8 Platformer Tileset</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080902_pico8_platformer/</link>
  <description><![CDATA[ 




<p><a href="https://kenney.nl/media/pages/assets/pico-8-platformer/7515b33357-1723028951/sample.png"><img src="https://kantel.github.io/posts/2024080902_pico8_platformer/images/pico8plat-b.jpg" class="img-fluid"></a></p>
<p>Von Kenney gibt es wieder etwas Neues: Ein <a href="https://kenney.nl/assets/pico-8-platformer">Pico-8 Platformer Asset Pack</a>. Auch wenn die 150 Tiles und Sprites in der Gr√∂√üe von 8x8 Pixeln eigentlich f√ºr die (propriet√§re) Fantasiekonsole <a href="https://de.wikipedia.org/wiki/Pico-8">Pico-8</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pyxelpal.html">deren Farbpalette</a> gezeichnet wurden, hindert einen niemand (schon gar nicht Kenney) daran, diese Bildchen auch f√ºr die freien Fantasiekonsolen <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> einzusetzen. Denn auch dieses Asset-Pack wurde ‚Äì wie (fast) alles von Kenney ‚Äì unter einer Public-Domain-Lizenz (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) ver√∂ffentlicht.</p>
<p>Da ich mein eigenes <a href="https://kantel.github.io/posts/2024080401_pyxel_tut_1/">Tutorial mit Pyxel</a> und meine eigenen <a href="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/">Versuche mit der Retrokonsole TIC-80</a> fortsetzen m√∂chte, juckt es mich nat√ºrlich gewaltig in den Fingern, (m)eine Version dieses Asset-Packs (und auch Kenneys <a href="https://kenney.nl/assets/pico-8-city">Pico-8 City</a>) an die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pyxelpal.html">Pyxel-Farbpalette</a> oder an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/sweetie16.html">SWEETIE 16</a> (das ist die von TIC-80 per Default genutzte Palette) anzupassen. Daf√ºr d√ºrfte mein bescheidenes Verm√∂gen als Pixel-Artist vielleicht gerade noch ausreichen. <em>Still digging!</em></p>



 ]]></description>
  <category>Tiles und Sprites</category>
  <category>Game Design</category>
  <category>Spieleprogrammierung</category>
  <category>Retrogaming</category>
  <category>TIC-80</category>
  <category>Pyxel</category>
  <guid>https://kantel.github.io/posts/2024080902_pico8_platformer/</guid>
  <pubDate>Fri, 09 Aug 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080902_pico8_platformer/images/pico8plat.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apples regul√§rer Flickentag</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080901_apple_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53892098970/"><img src="https://kantel.github.io/posts/2024080901_apple_update/images/madhatressteatime-b.jpg" class="img-fluid"></a></p>
<p>Obwohl die Firma mit dem angebissenen Apfel im Logo <a href="https://kantel.github.io/posts/2024073101_apple_updates/">vor etwa einer Woche</a> au√üer der Reihe ein paar Sicherheits-Releases unters Volk gebracht hat, gab es gestern zum regul√§ren <em>Patchday</em> am Monatsbeginn dennoch so viele Updates, da√ü ich sie wieder nur <em>en bloc</em> abhandeln kann. Doch wie gewohnt der Reihe nach:</p>
<section id="apple-ver√∂ffentlicht-macos-sonoma-14.6.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-ver√∂ffentlicht-macos-sonoma-14.6.1">Apple ver√∂ffentlicht macOS Sonoma 14.6.1</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sonoma 14.6.1 freigegeben, bietet Leistungsverbesserungen und korrigiert damit auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht √ºber die Systemeinstellungen zur Verf√ºgung.</p>
</section>
<section id="apple-ver√∂ffentlicht-sicherheitsupdate-f√ºr-macos-ventura" class="level3">
<h3 class="anchored" data-anchor-id="apple-ver√∂ffentlicht-sicherheitsupdate-f√ºr-macos-ventura">Apple ver√∂ffentlicht Sicherheitsupdate f√ºr macOS Ventura</h3>
<p>Apple hat auch das Sicherheitsupdate auf macOS Ventura 13.6.9 freigegeben.</p>
<p>Die Updates stehen wie √ºblich √ºber die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-ver√∂ffentlicht-ios-17.6.1-und-ipados-17.6.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-ver√∂ffentlicht-ios-17.6.1-und-ipados-17.6.1">Apple ver√∂ffentlicht iOS 17.6.1 und iPadOS 17.6.1</h3>
<p>Apple hat das Update auf iOS 17.6.1 und iPadOS 17.6.1 bereitgestellt. Die Updates bieten neue Funktionen und Fehlerbehebungen.</p>
<p>Das Update auf iOS 17.6.1 und iPadOS 17.6.1 kann √ºber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazit√§t und freien Speicherplatz sollte gedacht werden) oder √ºber iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Ger√§ts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-ver√∂ffentlicht-iosipados-16.7.10-f√ºr-√§ltere-systeme" class="level3">
<h3 class="anchored" data-anchor-id="apple-ver√∂ffentlicht-iosipados-16.7.10-f√ºr-√§ltere-systeme">Apple ver√∂ffentlicht iOS/iPadOS 16.7.10 f√ºr √§ltere Systeme</h3>
<p>Apple hat auch das Update auf iOS 16.7.10 f√ºr √§ltere iPhones und iPadOS 16.7.10 f√ºr √§ltere iPads bereitgestellt. <strong>Das Update behebt kritische Sicherheitsl√ºcken, die vermutlich bereits ausgenutzt wurden</strong>.</p>
<p>Auch dieses Update auf iOS/iPadOS 16.7.10 kann √ºber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazit√§t und freien Speicherplatz sollte gedacht werden) oder √ºber iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Ger√§ts ist wie immer sehr zu empfehlen.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53892098970/">Tea Time bei der Hutmacherin</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>the mad hatter gives a sexy naked++ woman with big boops and a nice butt a apple in the summer magic forest. colored french comic style</em>¬´. Negative Prompt: ¬ª<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>¬´. Modell: Stable Diffusion XL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080901_apple_update/</guid>
  <pubDate>Fri, 09 Aug 2024 14:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080901_apple_update/images/madhatressteatime.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Minimaze: Retrogaming mit der Retrokonsole TIC-80</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080703_smallmaze1_tic80/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53908631964/"><img src="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/images/smallmazev02-b.jpg" class="img-fluid"></a></p>
<p>Die kleinen (Retro-) Game-Engines <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> wie auch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> machen es dem Programmierer oder der Programmiererin erstaunlich schwer, eine Kollisionserkennung mit Map-Elementen zu realisieren. St√§ndig mu√ü man zwischen Map- und Sprite-Koordinaten umrechnen. Zwar verstehe ich die Motivation dahinter (man will eine Aufl√∂sungsunabh√§ngigkeit erzwingen), aber ich <a href="http://blog.schockwellenreiter.de/2022/07/2022071002.html">erinnerte mich</a>, da√ü dies in der Retrokonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> einfacher und ziemlich genial gel√∂st war.</p>
<p>Also habe ich das Teil angeworfen und in kleines Mini-RPG oder Minimaze realisiert. Schon der (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a>-) Quellcode ist erstaunlich kompakt geraten:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Player x,y position</span></span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> TIC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-8">    cls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-9">    map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-10">    spr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">257</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Player</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span></span>
<span id="cb1-13">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- UP</span></span>
<span id="cb1-14">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elseif</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span></span>
<span id="cb1-16">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- DOWN </span></span>
<span id="cb1-17">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elseif</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> </span>
<span id="cb1-19">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- LEFT</span></span>
<span id="cb1-20">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elseif</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> </span>
<span id="cb1-22">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- RIGHT</span></span>
<span id="cb1-23">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-25"></span>
<span id="cb1-26">   <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-27">     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-28">     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-29">   <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-30"> </span>
<span id="cb1-31">   <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<p>Das ganze Geheimnis dieser kompakten Realisierung liegt in dem <a href="https://itch.io/t/3076553/how-mget-and-fget-work-in-lua-please-tips-for-idiots">Zusammenspiel</a> von <code>mget()</code> und <code>fget()</code>: <code>mget(x, y)</code> gibt die ID des Tiles an der Position (x, y) (in <em>Map-Koordinaten</em>) zur√ºck, w√§hrend <code>fget(id, flag)</code> einen Boolean-Wert (<code>true</code> oder <code>false</code>) in Abh√§ngigkeit davon, ob der Flag gesetzt ist, zur√ºckgibt.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/images/tic80flags.jpg" class="img-fluid figure-img"></p>
<figcaption>Sprite-Editor</figcaption>
</figure>
</div>
<p>Den Flag setzt man im Sprite Editor im erweiterten Mode (den Schieberegler links oben aktivieren). Je Sprite/Tile k√∂nnen acht verschiedene Flags gesetzt werden. In meinen kleinen Skriptchen habe ich den Flag 0 bei den Tiles und Sprites gesetzt, mit denen der Spieler kollidieren kann. Nur wenn die Abfrage <code>false</code> ergibt, kann der Spieler auf diese Position gesetzt werden.</p>
<p>Nat√ºrlich besteht auch hier das Problem, da√ü der Spieler Sprite-Koordinaten (also ¬ªechte¬´ Pixdelkoordinaten) nutzt und die Tiles Map-Koordinaten. Da in TIC-80 die Map-Koordinaten aber entweder je 8x8, 16x16 oder 32x32 Pixel gro√ü sind, kann das (in meinem Spiel sind es 8x8 Pixel) mit einer einzigen Zeile</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb2-1">spr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">257</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Player</span></span></code></pre></div>
<p>aufgel√∂st werden (wobei das Spieler-Sprite in diesem Fall die ID <img src="https://latex.codecogs.com/png.latex?257"> besitzt).</p>
<p>Ziemlich genial ist auch der Trick, die m√∂glichen Bewegungsrichtungen f√ºr die Horizontale wie f√ºr die Vertikale je in einer Tabelle (dem Lua-√Ñquivalent f√ºr Pythons Listen) abzulegen. So kann die n√§chste Bewegung einfach mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb3-2">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<p>zugewiesen werden (diesen Trick habe ich <a href="https://www.youtube.com/watch?v=npqKlAzfIvw">beim <em>Potato Imaginator</em> geklaut</a>).</p>
<p>Mit <code>export html &lt;dateiname&gt;</code> wird ein Zip-Archiv <code>dateiname.zip</code> erzeugt, das alle Dateien enth√§lt, die f√ºr eine Webversion des Spieles notwendig sind. Entpackt kann man diese zum Beispiel wie hier in seine Seiten einbinden:</p>
<iframe src="smallmaze/index.html" class="if16_9" name="Small Maze Game">
</iframe>
<p>Allerdings hat man unter Umst√§nden mit dem Problem gieriger Browser zu k√§mpfen, die die Pfeiltasten an sich rei√üen wollen. Mein Chrome-Browser auf dem Mac verhielt sich aber anst√§ndig, er betrachtete die von TIC-80 benutzten Tastatureingaben als ¬ªkonsumiert¬´.</p>
<p>Das Zip-Archiv als Ganzes l√§√üt sich auch problemlos auf Itch.io hochladen, so da√ü Ihr dort Eure TIC-80-Spiele der staunenden √ñffentlichkeit pr√§sentieren k√∂nnt. Testweise habe ich auch <a href="https://kantel.itch.io/maze-game-tic-80-test">diesen Prototypen auf meinem Itch.io-Account</a> ver√∂ffentlicht.</p>
<p>Aber es kommt noch besser: Mit <code>export mac &lt;dateiname&gt;</code> wird das Spiel als Mac-Unis-Datei exportiert, die per Doppelklick via Terminal startet. Wenn man an den Dateinamen nach dem Export ein <code>.app</code> anh√§ngt, kann es direkt ‚Äì ohne Terminal ‚Äì per Doppelklick gestartet werden. Linux- oder Windows-Exporte sollten analog funktionieren, das konnte ich aber mangels Ger√§ten nicht testen.</p>
<p>Ich hatte ‚Äì nachdem ich sie so lange vernachl√§ssigt hatte ‚Äì jedenfalls mal wieder viel Spa√ü mit der kleinen Retrokonsole und auch schon eine Idee, was ich mit ihr anstellen k√∂nnte: Mein <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>-Spiel ¬ªNachts im Park¬´, das ich ja schon einmal <a href="https://kantel.github.io/posts/2023072301_night_in_the_park/">nach Pygame portieren wollte</a>, m√º√üte sich doch prima mit TIC-80 realisieren lassen. Denn wie bei Bitsy liegt auch bei der kleinen Fantasy-Konsole in der Beschr√§nkung die Kraft. Und vor Lua habe ich keine Angst. ü§ñ <em>Still digging!</em></p>



 ]]></description>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>TIC-80</category>
  <guid>https://kantel.github.io/posts/2024080703_smallmaze1_tic80/</guid>
  <pubDate>Wed, 07 Aug 2024 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/images/smallmazev02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 115.14 freigegeben</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080702_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53862012407/"><img src="https://kantel.github.io/posts/2024080702_thunderbird_update/images/donnervogelblau-b.jpg" class="img-fluid"></a></p>
<p>Auch bei Mozilla l√§uft es wieder wie gewohnt: Exakt einen Tag nach dem Update des Feuerfuchses kommt das Update des Donnervogels. Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 115.14 freigegeben und damit auch wieder <a href="https://www-stage.thunderbird.net/en-US/thunderbird/115.14.0/releasenotes/">Sicherheitsl√ºcken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer √ºber das Men√º <code>Hilfe &gt; √úber Thunderbird</code> angesto√üen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53862012407/">Blaue Donnerv√∂gel</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: ¬ª<em>Two colorful thunderbirds in an enchanged garden in the summertime</em>¬´. Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080702_thunderbird_update/</guid>
  <pubDate>Wed, 07 Aug 2024 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080702_thunderbird_update/images/donnervogelblau.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitsl√ºcken in Chrome</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080701_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53893492619/"><img src="https://kantel.github.io/posts/2024080701_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Es ist wieder Mittwoch und da unser aller Datenkrake offensichtlich zum gewohnten Turnus der w√∂chentlichen Chrome-Releases am Mittwoch zur√ºckgefunden hat, ver√∂ffentlichte Google heute das Update der Version 127 (127.0.6533.99/100) seines Browsers Chrome und schloss damit <a href="https://chromereleases.googleblog.com/2024/08/stable-channel-update-for-desktop.html">kritische Sicherheitsl√ºcken</a>.</p>
<p>Chrome aktualisiert sich (au√üer bei Linux) √ºber die integrierte Update-Funktion, kann aber ‚Äì wenn es pressiert ‚Äì auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53893492619/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>¬´. Negative Prompt: ¬ª<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>¬´. Modell: Stable Diffusion XL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080701_chrome_update/</guid>
  <pubDate>Wed, 07 Aug 2024 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080701_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schlie√üt am ¬ªAugust-Patchday¬´ wieder Sicherheitsl√ºcken in Android</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080601_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53832749916/"><img src="https://kantel.github.io/posts/2024080601_android_update/images/androidsgoats-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-08-01?hl=de">Sicherheitsupdate f√ºr Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-08-01?hl=de">Pixel-Ger√§ten</a>) wieder Sicherheitsl√ºcken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8a, Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie √ºblich in B√§lde nachziehen, sofern sie √ºberhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53832749916/">Drei kleine Roboter</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>Three little green robots dance on a colorful meadow in front of a small garden house, two goats in checkered vests watch them, the sun shines on the scenery, colored french comic style</em>¬´. Modell: Stable Diffusion XL, Style: Casual Environments.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080601_android_update/</guid>
  <pubDate>Tue, 06 Aug 2024 16:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080601_android_update/images/androidsgoats.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla ver√∂ffentlicht neue Firefox-Versionen</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080502_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53904685163/"><img src="https://kantel.github.io/posts/2024080502_firefox_update/images/firefoxtwo01-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/129.0/releasenotes/">Version 129.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/115.14.0/releasenotes/">Version ESR 115.14</a> ver√∂ffentlicht und darin auch wieder Sicherheitsl√ºcken behoben. Wie immer sind in diese Updates auch viele Ver√§nderungen eingeflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer √ºber das Men√º <code>Hilfe &gt; √úber Firefox</code> angesto√üen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53904685163/">Two Firefoxes</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: ¬ª<em>Two firefoxes in cyberspace at night. the moon shines bright</em>¬´. Modell: Stable Diffusion XL, Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080502_firefox_update/</guid>
  <pubDate>Mon, 05 Aug 2024 20:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080502_firefox_update/images/firefoxtwo01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues aus der P5-Welt: P5.js Update, P5.teach und mehr</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080501_p5js_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53900920317/"><img src="https://kantel.github.io/posts/2024080501_p5js_update/images/badgerartist-b.jpg" class="img-fluid"></a></p>
<p>Eine kurze Meldung in der ‚Äì trotz seiner penetranten Ausfl√ºge in die Welt der NFTs (dort <em>Web3 News</em> genannt) ‚Äì sehr lesenswerten <a href="https://www.gorillasun.de/blog/gorilla-newsletter-67/">Gorilla Newsletter</a> erinnerte mich daran, da√ü ich ‚Äì <a href="https://kantel.github.io/posts/2024072701_py5_pyscript/">PyScript hin</a>, <a href="https://kantel.github.io/posts/2024080401_pyxel_tut_1/">Pyxel her</a> ‚Äì meine Ausfl√ºge in die Welt von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> nicht vernachl√§ssigen sollte. Aber der Reihe nach:</p>
<p><strong>P5.js Update</strong>: Vor wenigen Tagen ist die Version <a href="https://github.com/processing/p5.js/releases/tag/v1.10.0">P5.js v1.10.0</a> mit vielen kleineren und gr√∂√üeren Verbesserungen und etlichen Bugfixes freigegeben worden. Alle √Ñnderungen findet Ihr im <a href="https://github.com/processing/p5.js/compare/v1.9.4...v1.10.0">Changelog</a>.</p>
<p>Im <a href="https://editor.p5js.org/">P5.js Webeditor</a> ist das Update Stand heute noch nicht angekommen (dort werkelt aktuell noch die Version v1.9.4) und der P5.js-Mode der Processing-PDE nutzt sogar noch die uralte Version v.1.5.0 vom Oktober 2022. (Das kann man aber vermutlich fixen, indem man (auf dem Mac) unter <code>~/Dokumente/Processing/modes/p5jsMode/template/libraries/</code> die <code>p5.min.js</code> gegen eine aktuelle austauscht. Habe ich aber nicht getestet.)</p>
<p>Auf der sicheren Seite ist man hier nur, wenn man im Editor seiner Wahl P5.js-Sketche lokal entwickelt, da man nur hier die volle Kontrolle √ºber die verwendeten Bibliotheken hat. Daher eine Notiz an mich: Ein Tutorial √ºber (m)eine lokale P5.js-Installation schreiben.</p>
<p><a href="https://two-ticks.github.io/p5.teach.js/"><img src="https://kantel.github.io/posts/2024080501_p5js_update/images/p5-astrik-teach.png" class="img-fluid"></a></p>
<p><strong>P5.teach</strong>: √úber <a href="https://medium.com/@ProcessingOrg">Umwege</a> wurde ich auf den Beitrag ¬ª<a href="https://medium.com/processing-foundation/p5-teach-teaching-math-through-animations-and-simulations-64b6159fef85">P5.teach: Teaching Math through Animations and Simulations</a>¬´ aufmerksam. <a href="https://two-ticks.github.io/p5.teach.js/">P5.teach</a> ist eine von <a href="https://github.com/3b1b/manim">Manim</a> und <a href="https://github.com/reanimate/reanimate">Reanimate</a> inspirierte Bibliothek f√ºr mathematische Simulationen, Visualisierungen und Animationen (mit TeX-Support via <a href="https://katex.org/">KaTeX</a>), die <em>Aditya Siddheshwar</em> im Rahmen des <a href="https://gist.github.com/two-ticks/4dda385f078abe5ac63cba98eac30e5d">Google Summer of Code 2021</a> entwickelt hatte.</p>
<p>Auch wenn ich √ºber den aktuellen Stand des Projektes nichts wei√ü, die <a href="https://discourse.processing.org/t/animating-maths-in-p5-js/31583">Beispiele auf diesen Seiten</a> machen Lust darauf, P5.teach auch einmal selber auszuprobieren.</p>
<p><strong>War sonst noch was?</strong> Ach ja, die Tilemap-Funktionen sowohl in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> wie auch in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> machen das Mapping von Tile-Koordinaten auf Sprite-Koordinaten irgendwie unn√∂tig kompliziert (ich verstehe die Gr√ºnde, aber ich mag es dennoch nicht). Daher habe ich √ºberlegt, ob man die <code>.tmx</code>- oder <code>.json</code>-Dateien von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tiled.html">Tiled</a> nicht direkt in P5.js nutzen kann. <a href="https://github.com/mapeditor/tiled/blob/master/docs/reference/support-for-tmx-maps.rst">Diese Seite</a> listet viele Bibliotheken auf, die Tiled mit Sprachen oder Frameworks verheiraten, darunter auch <a href="https://github.com/linux-man/p5.tiledmap">P5.tiledmap</a>, ein P5.js-Port der Processing-(Java)-Bibliothek <a href="https://github.com/linux-man/ptmx">Ptmx</a>. Sollte ich ebenfalls auf meine Testliste setzen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53900920317/">A Badger as Artist</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: ¬ª<em>A female and a male badger in dressing gowns stand in front an easel, hold palettes and brushes in her hands and paint together at a colorful picture. It‚Äôs a sunny summer morning, in the background you can see a quiet river surrounded by willows. colored french comic style</em>¬´. Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>Creative Coding</category>
  <category>Spieleprogrammierung</category>
  <category>Tiled</category>
  <guid>https://kantel.github.io/posts/2024080501_p5js_update/</guid>
  <pubDate>Mon, 05 Aug 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080501_p5js_update/images/badgerartist.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retrogaming mit Python: Pyxel-Tutorial Stage 1</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080401_pyxel_tut_1/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53900531777/"><img src="https://kantel.github.io/posts/2024080401_pyxel_tut_1/images/pyxeltut01-b.jpg" class="img-fluid"></a></p>
<p>Da meine <a href="https://kantel.github.io/posts/2024072701_py5_pyscript/">Erkundungen letzte Woche</a> √ºber Python, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html">PyScript</a> mich zu einer Denkpause veranlassten, dachte ich mir, da√ü ich ja in der Zwischenzeit ein wenig an einem <a href="https://kantel.github.io/posts/2024032002_first_steps_pyxel/">schon im M√§rz angek√ºndigten</a> Tutorial zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a>, der an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> angelehnten Python-¬ªKonsole¬´ f√ºr Retrospiele arbeiten k√∂nnte. Denn da die <a href="https://github.com/kitao/pyxel/wiki/How-To-Use-Pyxel-Web">Webversion von Pyxel</a> wie PyScript auf <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyodide.html">Pyodide</a> aufsetzt und damit den kompletten <em>Scientific Stack</em> (und mehr) unterst√ºtzt, kann ich hier nicht viel falsch machen.</p>
<p>Also habe ich erst einmal ‚Äì wie <a href="https://kantel.github.io/posts/2024062502_python_envs/">hier beschrieben</a> ‚Äì auch f√ºr Pyxel mit <code>conda</code> eine virtuelle Umgebung aufgesetzt, denn ich wollte als IDE gerne <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> einsetzen, da mein <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> mittlerweile schon wieder so √ºberfrachtet ist, da√ü sich die einzelnen Extensions/Plugins gegenseitig in die Quere geraten.</p>
<p>Wie der <a href="https://www.flickr.com/photos/schockwellenreiter/53900531777/">Screenshot im Bannerbild oben</a> zeigt, ist mir dies gelungen und die Spynne arbeitet wunderbar mit Pyxel zusammen. Doch nun zum Code dieses ersten Tutorials:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyxel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span>
<span id="cb1-2"></span>
<span id="cb1-3">TS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tilesize</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> App:</span>
<span id="cb1-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-7">        px.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel-Tutorial 1"</span>, display_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># px.width/2</span></span>
<span id="cb1-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># px.height/2</span></span>
<span id="cb1-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TS</span>
<span id="cb1-11"></span>
<span id="cb1-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Read resource file</span></span>
<span id="cb1-13">        px.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assets/firststep.pyxres"</span>)</span>
<span id="cb1-14">        </span>
<span id="cb1-15">        px.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.update, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.draw)</span>
<span id="cb1-16">        </span>
<span id="cb1-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> px.btnp(px.KEY_RIGHT):</span>
<span id="cb1-19">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> px.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS:</span>
<span id="cb1-20">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS</span>
<span id="cb1-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-22">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> px.btnp(px.KEY_LEFT):</span>
<span id="cb1-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-25">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-26">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-27">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> px.btnp(px.KEY_UP):</span>
<span id="cb1-29">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-30">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-32">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> px.btnp(px.KEY_DOWN):</span>
<span id="cb1-34">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> px.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS:</span>
<span id="cb1-35">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS</span>
<span id="cb1-36">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-37">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-38">            </span>
<span id="cb1-39"></span>
<span id="cb1-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-41">        px.cls(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-42"></span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Image drawing:(x, y, img, u, v, w, h, [colkey])</span></span>
<span id="cb1-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xy:Copy destination coordinates, img:Image bank number</span></span>
<span id="cb1-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uv:Coordinates of copy source, wh:Copy range, colkey:Transparent color</span></span>
<span id="cb1-46">        px.blt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-47"></span>
<span id="cb1-48">App()</span></code></pre></div>
<p>Ich habe ‚Äì wie empfohlen ‚Äì die gesamte Applikation in einer eigenen Klasse gekapselt, die ich am Ende mit dem Befehl <code>App()</code> in der letzten Zeile aufrufe. Das funktioniert, weil ich die Methode <code>pyxel.run()</code> im Constructor der Klasse aufrufe. (Ich habe <code>pyxel</code> als <code>px</code> importiert. Ob das eine so gute Idee war, wei√ü ich noch nicht, eventuell mache ich dies wieder r√ºckg√§nig.)</p>
<p>Das Programm macht noch nicht viel: In <code>update()</code> werden die Pfeiltasten abgefragt und damit die Spielfigur √ºber den Bildschirm bewegt. Dabei ist sie in dem Fenster gefangen, erreicht oder √ºberschreitet sie die Fenstergrenzen, wird sie auf diese wieder zur√ºckgesetzt. In <code>draw()</code> wird nur der Hintergrund neu gezeichnet und dann mit <code>pyxel.blt()</code> die Spielefigur an die aktuelle Position gesetzt.</p>
<p>Diese ist im Pyxel-Image-Editor in der Ressourcen-Datei <code>assets/firststep.pyxres</code> erstellt worden. Da dies momentan noch die einzige Ressource ist, ist die Banknummer <img src="https://latex.codecogs.com/png.latex?0">, die Koordinaten des Bildes stehen an der Position <img src="https://latex.codecogs.com/png.latex?0,%200">, das Bild ist <img src="https://latex.codecogs.com/png.latex?8">x<img src="https://latex.codecogs.com/png.latex?8"> Pixel weit und die schwarze Hintergrundfarbe des Bildes an der Position <img src="https://latex.codecogs.com/png.latex?0"> der Farbpalette wird als transparent gesetzt. Diese vielen Paramter von <code>pyxel.blit()</code> wirken erst einmal etwas verwirrend, machen den Aufruf aber extrem kompakt.</p>
<p>In der n√§chsten Version m√∂chte ich die Spielewelt mit Hindernissen versehen, auf die der Spieler reagieren mu√ü. <em>Still digging!</em></p>



 ]]></description>
  <category>Pyxel</category>
  <category>Python</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024080401_pyxel_tut_1/</guid>
  <pubDate>Sun, 04 Aug 2024 16:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080401_pyxel_tut_1/images/pyxeltut01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Treffen der Superhelden: Patt Vira trifft Daniel Shiffman (Video-Tutorials zum Wochenende)</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080301_patt_vira_dan_shiffman/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53899728260/"><img src="https://kantel.github.io/posts/2024080301_patt_vira_dan_shiffman/images/badgers-b.jpg" class="img-fluid"></a></p>
<p>Zwei Heroinnen (sagt man so?) und Heroen des kreativen Programmierens mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> auf YouTube trafen w√§rend eines Events an einer New Yorker Universit√§t aufeinander: <em><a href="https://www.pattvira.com/">Patt Vira</a></em> und <em><a href="https://thecodingtrain.com/">Daniel Shiffman</a></em>. Und nat√ºrlich erstellten beide davon je ein Video, das sie auf YouTube ver√∂ffentlichten:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/2h8VArJ3gnQ?si=1jdas0JP14_VGwqG" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><em>Daniel Shiffman</em> lud <em>Patt Vira</em> als ¬ªGuest Conductor¬´ in seinen <em>Coding Train</em> ein und gemeinsam erstellten sie mit P5.js und <a href="https://ml5js.org/">ml5.js</a>, der auf <a href="https://www.tensorflow.org/js">TensorFlow</a> bsierenden, ¬ªfreundlichen¬´ Bibliothek f√ºr maschinelles Lernen, ein kleines, aber eindrucksvolles Programm, mit dem sie das 1.0-Release von ml5.js feierten.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/X4XMhpRFKvU?si=-PWxieopmDPU_-rU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Ganz anders <em>Patt Vira</em>: Sie lud <em>Daniel Shiffman</em> zu einem einst√ºndigen Interview und quetschte ihn nach allen Regeln der Kunst aus. Sie wollte wissen, wie er zum kreativen Programmieren kam und wie er seine Interessen f√ºr Kunst und Naturwissenschaften/Mathematik damit unter einen Hut brachte. Und <em>Daniel Shiffman</em> lie√ü sich ‚Äì fr√∂hlich-chaotisch wie immer ‚Äì gerne ausfragen. Selten hatte ich bei einem Video, in dem eigentlich nur erz√§hlt wird, so viel Spa√ü.</p>
<p>Nat√ºrlich kann ich nicht √ºber dieses Zusammentreffen der Giganten berichten, ohne noch auf ein paar weitere Videos der beiden hinzuweisen. Ich fange mit <em>Dan Shiffman</em> an, der vor wenigen Wochen die halbst√ºndige <em>Coding Challenge</em> ¬ª<a href="https://www.youtube.com/watch?v=dJNFPv9Mj-Y">Collision without a Physics Library</a>¬´ ver√∂ffentlichte. Dazu pa√üt wie Faust aufs Auge <em>Patt Viras</em> schon etwas √§lteres <a href="https://www.youtube.com/watch?v=gUTeWOfwECc"><em>Creative Coding Math</em>-Tutorial zu Kollisionserkennung</a>.</p>
<p>Dann sind mir in den letzten Wochen noch ein paar Tutorials von <em>Patt Vira</em> in meinen Feedreader geschneit, die ich Euch nicht vorenthalten m√∂chte:</p>
<ul>
<li>P5.js Coding Tutorial: <a href="https://www.youtube.com/watch?v=8O5aCwdopLo">Music Visualization with FFT</a> üéµ</li>
<li>P5.js Coding Tutorial: <a href="https://www.youtube.com/watch?v=PttnJmbBKnY">Album Cover - Unknown Pleasures by Joy Division</a></li>
<li>P5.js Coding Tutorial: <a href="https://www.youtube.com/watch?v=KdVgpDjmoRQ">Falling Letters with Secret Message</a></li>
<li>P5.js Coding Tutorial: <a href="https://www.youtube.com/watch?v=4IyeLc6J1Uo">ASCII Text Images and Videos</a>!</li>
<li>P5.js Coding Tutorial: <a href="https://www.youtube.com/watch?v=WXSfGXGogFg">Game of Life ‚Ä¶ in 3-D</a>!</li>
<li>P5.js Coding Tutorial: <a href="https://www.youtube.com/watch?v=72pAzuD8tqE">Interactive Fridge Magnets</a> (with ml5.js)</li>
</ul>
<p>Das letzte Video diente vermutlich der Vorbereitung auf oben genanntes, gemeinsames Tutorial mit <em>Daniel Shiffman</em>.</p>
<p><em>Last but not least</em> sind da noch die schon etwas √§lteren Tutorials, die ebenfalls alle von <em>Patt Vira</em> sind und alle aus der Reihe ¬ªP5.js Coding Tutorial¬´ stammen:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=jUM1z52m_bQ">Rotating Typography</a></li>
<li><a href="https://www.youtube.com/watch?v=dBKilH7ljew">Bouncing Wave Typography</a></li>
<li><a href="https://www.youtube.com/watch?v=3j_cr44OZTc">Random Color Grid</a> (Nested Loop / 2D Array)</li>
</ul>
<p>Damit d√ºrftet Ihr und d√ºrfte ich √ºber das Wochenende (mindestens) besch√§ftigt sein. <em>Still watching, still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53899728260/">Two Badgers as Artists</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: ¬ª<em>A female and a male badger in dressing gowns stand in front an easel, hold palettes and brushes in her hands and paint together at a colorful picture. It‚Äôs a sunny summer morning, in the background you can see a quiet river surrounded by willows. colored french comic style</em>¬´. Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024080301_patt_vira_dan_shiffman/</guid>
  <pubDate>Sat, 03 Aug 2024 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080301_patt_vira_dan_shiffman/images/badgers.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mediadaten: Die Zahlen f√ºr den Monat Juli 2024</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080101_mediadaten_2024_07/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53828326895/"><img src="https://kantel.github.io/posts/2024080101_mediadaten_2024_07/images/office202408-b.jpg" class="img-fluid"></a></p>
<p>Auch der Juli ist viel zu schnell an mir vorbeigezogen. Und so ist ab heute schon August und es daher Zeit f√ºr ein paar Zahlen, die hochtrabend auch manches Mal <em>Mediadaten</em> genannt werden. Im Juli dieses Jahres hatte der <em>Schockwellenreiter</em> laut seinem (hoffentlich!) DSGVO-konformen <del>Gei√üenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>4.288 Seitenaufrufe</strong>. Auch wenn diese Exaktheit der Ziffern eine Genauigkeit der Zahlen nur vort√§uscht, freue ich mich √ºber jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>üòé &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> des Vormonats waren:</p>
<ol type="1">
<li>Immer noch ungeschlagen auf Platz Eins steht nach wie vor der Beitrag ¬ª<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/">Bildgeneratoren und K√ºnstliche Intelligenz ‚Äì ohne Zensoren</a>¬´ vom Januar dieses Jahres.</li>
<li>Dicht gefolgt von dem ersten Beitrag √ºber eine ptentielle Visual-Studio-Code-Alternative: ¬ª<a href="https://kantel.github.io/posts/2024070701_litexl/">Neues aus der Werkzeugkiste - da will jemand Visual Studio Code beerben</a>¬´.</li>
<li>Diese Frage scheint meine Leserinnen und Leser umzutreiben, denn der Beitrag ¬ª<a href="https://kantel.github.io/posts/2024071002_positron_ide/">Positron IDE: Noch ein potentieller Visual Studio Code Nachfolger</a>?¬´ hatte fast gleich viele Zugriffe.</li>
<li>Aber auch die <a href="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/">(Wieder-) Entdeckung von MkDocs</a> war f√ºr eine gro√üe Anzahl der Bescherinnen und Besucher dieser Seiten interessant.</li>
<li><em>Last but not least</em> machte auch die Fu√üball-Europameisterschaft der Herren keinen Bogen um den <em>Schockwellenreiter</em>: Der Artikel ¬ª<a href="https://kantel.github.io/posts/2024070601_futbol/">Neuk√∂lln‚Äôde futbol co≈ükusu</a>¬´ kam auf den f√ºnften Platz.</li>
</ol>
<p>Speziell durch den letzten Beitrag ist es mir gelungen, die Monothematik der <a href="https://kantel.github.io/posts/2024070101_mediadaten_2024_06/"><em>Top Five</em> des Junis</a> ein wenig aufzubrechen. Ich hoffe, da√ü mir dies auch f√ºr den August gelingt.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53828326895/">Office Man (Python?)</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>A python with glasses+ and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It‚Äôs a sunny morning</em>¬´. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024080101_mediadaten_2024_07/</guid>
  <pubDate>Thu, 01 Aug 2024 13:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080101_mediadaten_2024_07/images/office202408.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitsl√ºcken in Chrome</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024073102_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53893493069/"><img src="https://kantel.github.io/posts/2024073102_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Es ist Mittwoch und unser aller Datenkrake scheint wieder zum gewohnten Turnus der w√∂chentlichen Chrome-Releases am Mittwoch zur√ºckgefunden zu haben: Denn Google ver√∂ffentlichte heute das Update der Version 127 (127.0.6533.88/89) seines Browsers Chrome und schloss damit <a href="https://chromereleases.googleblog.com/2024/07/stable-channel-update-for-desktop_30.html">kritische Sicherheitsl√ºcken</a>.</p>
<p>Chrome aktualisiert sich (au√üer bei Linux) √ºber die integrierte Update-Funktion, kann aber ‚Äì wenn es pressiert ‚Äì auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53893493069/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: ¬ª<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>¬´. Negative Prompt: ¬ª<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>¬´. Modell: Stable Diffusion XL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024073102_chrome_update/</guid>
  <pubDate>Wed, 31 Jul 2024 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024073102_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
