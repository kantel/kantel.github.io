<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Thu, 11 Jan 2024 18:15:00 GMT</lastBuildDate>
<item>
  <title>Neu in meinem Wiki: Scenario</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011101_scenario/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53457976740/"><img src="https://kantel.github.io/posts/2024011101_scenario/images/poirot01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da mir nach dem <a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/">gestrigen Testlauf</a> klar war, daß <a href="https://app.scenario.com/">Scenario</a> das nächste KI-Werkzeug zur Bildergenerierung werden wird, das ich ausführlich nutzen und testen werde, dachte ich mir, daß es an der Zeit sei, dem Teil auch <strong><a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> zu spendieren:</p>
<p>Scenario ist ein KI-Bildgenerator (als Online-App wie auch als API nutzbar), der sich auf die Erstellung von Game-Asset-Bildern und Comics spezialisiert hat. Und er will das Problem der Charakter-Konsistenz endgültig gelöst haben. Auch wenn ich das nicht so ganz glaube, die bisher veröffentlichten Bilder und Tutorials sind schon beeindruckend.</p>
<p>Scenario verspricht, nicht zu zensieren. Bei der Anmeldung muß man daher bestätigen, daß man mindestens 18 Jahre oder älter ist. Die Engine, die bei Scenario im Hintergrund werkelt, ist vermutlich <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> (noch nicht bestätigt).</p>
<p>Das Preismodell für den kostenlosen Account ist (derzeit noch?) ein wenig schwammig formuliert, aber das Haupthindernis scheinen weniger die Anzahl der Bilder als mögliche Wartezeiten zu sein. Wer sicher gehen will, muß in den sauren Apfel beißen und ein Abo (ab 29&nbsp;US-$/Monat) abschließen.</p>
<section id="links" class="level3">
<h3 class="anchored" data-anchor-id="links">Links</h3>
<ul>
<li><a href="https://www.scenario.com/">Scenario Home</a></li>
<li><a href="https://www.scenario.com/pricing">Scenario Preisliste</a></li>
<li><a href="https://app.scenario.com/">Scenario Webapp</a></li>
<li><a href="https://help.scenario.com/">Scenario Knowledge Center</a></li>
<li><a href="https://www.youtube.com/@scenario_gg">Scenario @ YouTube</a></li>
</ul>
<p>Besonders das <em>Knowledge Center</em> scheint eine hilfreiche Quelle für meine Experimente zu sein. Ich werde auf jeden Fall weiter testen und berichten. <em>Still digging!</em></p>
<p>Und da ich dem gestrigen Eindruck entgegentreten möchte, ich würde mit den zensurfreien Bildgeneratoren der gekünstelten Intelligenzia nur »Schweinekram« produzieren wollen, habe ich für das heutige Bannerbild <em>Scenario</em> gebeten, eine Zeichnung zu erstellen, die zeigt, wie <em><a href="https://de.wikipedia.org/wiki/Hercule_Poirot">Hercule Poirot</a></em> auf Alice trifft. Harmloser geht es wohl kaum! Und ein belgischer Meisterdetektiv ist sicher ein ideales Objekt für den Stil <em>Belgian School Comics</em>.&nbsp;🤓</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53457976740/">Hercule Porot trifft Alice</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>The detective Hercule Poirot meets the maid Alice on the steps of a castle in spring. 1920s style</em>«. Modell: Belgian School Comics.</p>


</section>

 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <guid>https://kantel.github.io/posts/2024011101_scenario/index.html</guid>
  <pubDate>Thu, 11 Jan 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011101_scenario/images/poirot01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53455205826/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie ich schon oft beklagt hatte, ist bei vielen (Online-) Diensten, bei denen man mithilfe gekünstelter Intelligenzia Bilder generieren kann, eine gestrenge Zensorin am Werk, deren Maßstäbe, ab wann ein Bild »unangemessen« sei, zudem ziemlich undurchschaubar sind. Daher habe ich mir für diesen Beitrag drei Online-Dienste angeschaut, die explizit Bildgenerierung ohne Zensur versprechen: <a href="https://app.scenario.com/">Scenario</a>, <a href="https://tensor.art/">Tensor Art</a> und <a href="https://www.seaart.ai/de">SeaArt</a>.</p>
<p>Allen drei gemeinsam ist, daß sie bei der Anmeldung explizit die Versicherung verlangen, daß man älter als 18 Jahre ist. Außerdem scheinen alle drei auf <a href="http://cognitiones.kantel-chaos-team.de/">Stable Diffusion</a> zu basieren (bei Tensor Art und SeaArt bin ich mir sicher, bei Scenario vermute ich es derzeit nur).</p>
<section id="scenario" class="level3">
<h3 class="anchored" data-anchor-id="scenario">Scenario</h3>
<p><strong>Scenario</strong> (mit dem ich das obige <a href="https://www.flickr.com/photos/schockwellenreiter/53455205826/">Bannerbild</a> erstellt habe, ist nicht nur wegen des Versprechens auf Zensurfreiheit interessant für mich, sondern auch, weil der Dienst auf Generierung von Bildern für interaktive Geschichten und <em>Visual Novels</em> spezialisiert ist. Daher soll die Generierung von konsistenten Charakteren hier auch sehr einfach möglich sein. Ich werde mit dem Teil auf jeden Fall noch weitere Testversuche unternehmen.</p>
</section>
<section id="tensor-art" class="level3">
<h3 class="anchored" data-anchor-id="tensor-art">Tensor Art</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53420968520/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor2.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine ersten Versuche mit <strong>Tensor Art</strong> brachten (bei gleichem Prompt) nahezu identische Ergebnisse, wie bei Scenario. Das Modell ist hier Stable Diffusion XL. Und auch wenn der Style hier <em>AniPop</em> und nicht <em>Belgian School Comic</em> heißt, ist diese Ähnlichkeit der Grund für meine Vermutung, daß auch Scenario ein Stable-Diffusion-Anwendung ist.</p>
</section>
<section id="seaart" class="level3">
<h3 class="anchored" data-anchor-id="seaart">SeaArt</h3>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53455955395/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor3.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53455545091/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor4.jpg" class="img-fluid"></a></p>
<p>Letzter Kandidat meiner heutigen Versuchsreihe ist <strong>SeaArt</strong>, ein Dienst, den ich ganz frisch heute entdeckt habe. Eine Besonderheit ist, daß die App zumindest über eine deutschsprachige Nutzerschnittstelle verfügt. Ob sie auch mit deutschen Prompts umgehen kann, konnte ich noch nicht verifizieren, da ich – um vergleichen zu können – den gleichen Prompt verwendete, wie bei den beiden anderen Anwendungen. Das Modell ist auch hier Stable Diffusion XL und der (von mir) ausgewählte Style heißt <em>AnimeGood XL</em>.</p>
<p>Allen drei Programmen ist gemein, daß sie über eine unübersichtlich hohe Anzahl von <em>Styles</em> verfügen, die einen starken Einfluß auf das generierte Ergebnis haben. Daher werde ich sicher noch weitere Tests durchführen, bevor ich zu einem Urteil kommen kann.</p>
<p>Außerdem ist bei allen dreien die Anzahl der Bilder, die man mit einem kostenlosen Zugang generieren kann, beschränkt. Während Tensor Art (wenn ich die Preisliste korrekt verstanden habe) – ähnlich wie <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> – ein Bezahlmodell anbietet, bei dem nur der tatsächliche Verbrauch zu Buche schlägt – muß man bei den anderen Diensten ein Abo abschließen. Aber ich versuche erst einmal, mich mit den kostenlosen Accounts durchzumogeln. Schaun wie mal, wie weit ich damit komme. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53455205826/">Nackte Kriegerin</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>, Prompt: »<em>A female naked warrior with long blonde hairs, blue eyes, red lips, big boops, nice butt, fights against an alien, in a jungle, using karate kicks,</em>«, Negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person</em>«. Modell: Belgian School Comics.</p>


</section>

 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <category>Tensor Art</category>
  <category>SeaArt</category>
  <guid>https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html</guid>
  <pubDate>Wed, 10 Jan 2024 18:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 120 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011001_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53395464669/"><img src="https://kantel.github.io/posts/2024011001_chrome_update/images/datenkrake3-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht das Update der Version 120 (120.0.6099.216/217) seines Browsers Chrome und schließt damit eine <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_9.html">kritische Sicherheitslücke</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53395464669/">Datenkrake bei der Arbeit</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>Data octopus at work</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024011001_chrome_update/index.html</guid>
  <pubDate>Wed, 10 Jan 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011001_chrome_update/images/datenkrake3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: generativepy</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010901_generativepy/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53451950704/"><img src="https://kantel.github.io/posts/2024010901_generativepy/images/generativepy-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Regelmäßige Leser des <em>Schockwellenreiters</em> wissen, daß ich ein <a href="https://kantel.github.io/posts/2023110601_drawbot_reboot/">Faible</a> für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/drawbot.html">Drawbot</a> besitze, einer Python-App für zweidimensionale Graphiken, deren Vorzug es ist, daß sie eher auf Vektor- denn auf Bitmap-Graphiken fokussiert ist und mit ihr daher leicht auflösungsunabhängige Graphiken zum Beispiel für Printerzeugnisse geschaffen werden können. Daher wäre sie ein ideales (und geiles) Werkzeug für mein Projekt »<a href="http://blog.schockwellenreiter.de/2022/03/2022031101.html">Generative Art zwischen zwei Pappedeckel</a>«, mit dem ich dem NFT-Hype den Stinkefinger zeigen möchte. Ihr Nachteil ist aber, daß sie nur unter macOS läuft und ich möchte einfach nicht schon wieder in die Mac-Only-Falle tapsen.</p>
<p>Jetzt ist mir aber vor wenigen Tagen <a href="https://generativepy.com/book/what-is/">generativepy</a> untergekommen, eine kostenlose, freie (MIT-Lizenz) Open-Source-Bibliothek von <em>Martin McBride</em> zum Erstellen von Diagrammen, Bildern und Animationen in Python. Bei ihr liegt ähnlich wie bei Drawbot der Schwerpunkt auf die Erzeugung von Vektorgraphiken (sie kann aber – wie Drawbot auch – Bitmaps; und auch Animationen erzeugt sie ähnlich wie Drawbot als eine Folge von Einzeldateien). Die <a href="https://generativepy.com/book/installation/">Installation</a> ist wegen einiger Abhängigkeiten, die von <code>pip</code> oder <code>conda</code> nicht aufgelöst werden (können), nicht unbedingt trivial, aber auch Anfänger sollten sie anhand der Anleitung schaffen. (Vorsicht: Ich habe <code>pycairo</code> nicht innerhalb von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> installiert bekommen, irgendetwas stimmt mit dem <code>wheel</code>-Modul dort nicht, aber mein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda-Python</a> installierte <em>Cairo</em> ohne zu murren.)</p>
<p>Die anderem »minimalen« Anforderungen (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a>) hatte ich sowieso schon installiert und <code>dvipng</code> ist Bestandteil meiner <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/latex/latex.html">MacTeX</a>-Installation, so daß einem <a href="https://generativepy.com/book/simple-image/">ersten Test</a> (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53451950704/">Screenshot</a>) nichts im Wege stand.</p>
<p>Auch wenn ich damit bisher nur an der Oberfläche gekratzt habe, das Teil scheint Potential zu haben. Daher habe ich ihm <strong><a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/generativepy.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert:</p>
<section id="literatur-und-tutorials" class="level3">
<h3 class="anchored" data-anchor-id="literatur-und-tutorials">Literatur und Tutorials</h3>
<ul>
<li><a href="https://www.graphicmaths.com/">GraphicMaths</a>, <em>Martin McBrides</em> begleitende Website zum <a href="https://www.youtube.com/@graphicmaths7677">GraphicMaths YouTube-Kanal</a>. Die Illustrationen und Animationen dort werden in der Hauptsache mit <em>generativepy</em> erstellt.</li>
<li>Martin McBride: <em><a href="https://www.pythoninformer.com/generative-art/">Generative Art</a></em> @ <em><a href="https://www.pythoninformer.com/">PythonInformer</a></em></li>
<li>Martin McBride: <em><a href="https://generativepy.com/book/">The generativepy Book</a></em> (WiP)</li>
<li><a href="https://martinmcbride.org/blog/">Martin McBrides Blog</a></li>
</ul>
</section>
<section id="links" class="level3">
<h3 class="anchored" data-anchor-id="links">Links</h3>
<ul>
<li><a href="https://generativepy.com/">generativepy Home</a></li>
<li><a href="https://github.com/martinmcbride/generativepy">generativepy @ GitHub</a></li>
<li><a href="https://pypi.org/project/generativepy/">generativepy @ PyPI</a></li>
<li><a href="https://generativepy.com/generativepy/">generativepy Reference</a></li>
<li><a href="https://www.pythoninformer.com/generative-art/generativepy-tutorial/">generativepy Tutorial</a></li>
</ul>
<p>Und als ersten Versuch habe ich dieses kleine Skriptchen zum Laufen bekommen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> generativepy.drawing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> make_image, setup</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> generativepy.color <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Color</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> generativepy.geometry <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Rectangle</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-5"></span>
<span id="cb1-6">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>))</span>
<span id="cb1-7">image_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw(ctx, pixel_width, pixel_height, frame_no, frame_count):</span>
<span id="cb1-10"></span>
<span id="cb1-11">    setup(ctx, pixel_width, pixel_height, background<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.92</span>))</span>
<span id="cb1-12"></span>
<span id="cb1-13">    color0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.18</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.20</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.22</span>)</span>
<span id="cb1-14">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>).fill(color0)</span>
<span id="cb1-15">    color1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.77</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.47</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.22</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-16">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).fill(color1)</span>
<span id="cb1-17">    color2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.69</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.91</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-18">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">170</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).fill(color2)</span>
<span id="cb1-19">    color3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.94</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.29</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.17</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-20">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).fill(color3)</span>
<span id="cb1-21"></span>
<span id="cb1-22">make_image(os.path.join(image_folder, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rectangle.png"</span>), draw, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)</span>
<span id="cb1-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Das Skript ist noch ein wenig trivial, man kann aber dennoch schon erahnen, was mit dieser Bibliothek alles möglich sein könnte. <em>Still digging!</em></p>


</section>

 ]]></description>
  <category>generativepy</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Generative Art</category>
  <guid>https://kantel.github.io/posts/2024010901_generativepy/index.html</guid>
  <pubDate>Tue, 09 Jan 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010901_generativepy/images/generativepy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Traktor Terror (2)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010802_traktor_terror_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53451375514/"><img src="https://kantel.github.io/posts/2024010802_traktor_terror_2/images/tractorterror02-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Des deutschen Landwirts feuchter Traum: Die Demokratie kriecht zu Kreuze.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53451375514/">Traktor Terror</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Tractor Terror with many tractors and horror farmers, in a big city, steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book</p>



 ]]></description>
  <category>Politik</category>
  <guid>https://kantel.github.io/posts/2024010802_traktor_terror_2/index.html</guid>
  <pubDate>Mon, 08 Jan 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010802_traktor_terror_2/images/tractorterror02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neuköllner Bilderbogen: Müllkippe Bürgerstraße</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010801_muell_buergerstrasse/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53451395755/"><img src="https://kantel.github.io/posts/2024010801_muell_buergerstrasse/images/muellkippebuergerstrasse-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Alle Jahre wieder: Der Weihnachtsmann hat neue Möbel gebracht. Die alten müssen raus!</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2024010801_muell_buergerstrasse/index.html</guid>
  <pubDate>Mon, 08 Jan 2024 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010801_muell_buergerstrasse/images/muellkippebuergerstrasse.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bitsybox: Bitsy-Spiele auf dem Desktop</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010702_bitsybox/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53448091287/"><img src="https://kantel.github.io/posts/2024010702_bitsybox/images/bitsybox-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie geil ist das denn? Da spülte in meinen Feedreader die Meldung herein, daß <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>, die kleine, bewußt extrem minimalistisch gehaltene Engine für narrative, interaktive Spiele in der Version 8.9 erschienen sei. Das nahm ich zum Anlaß, mal wieder auf den <a href="https://ledoux.itch.io/bitsy">Seiten</a> von <em>Adam Le Doux</em> herumzustöbern, und fand dort die <a href="https://ledoux.itch.io/bitsybox">Bitsybox</a>, einen Bitsy-Emulator für Windows, macOS, Raspberry Pi und Linux, mit dem man Bitsy-Spiele »native« auf den genannten Plattformen abspielen kann.</p>
<p>Das mußte ich natürlich sofort ausprobieren und habe die Binärdatei für macOS unter obiger URL heruntergeladen. Die für ein Spiel benötigte Datei mit der Endung <code>.bitsy</code> erhält man im Bitsy-Editor mit dem Werkzeug <code>Spieledaten</code>, über das man diese Datei dann herunterladen kann. Die Bitsybox sucht diese Datei dann im Verzeichnis <code>games</code>, das im gleichen Verzeichnis wie das Programm (auf dem Mac <code>bitsybox.app</code>) liegen muß. Im originalen macOS-Download ist das ein Alias, der auf <code>Contents/Frameworks/games</code> zeigt, wo zwei mitgelieferte Demo-Spiele liegen.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53449484989/"><img src="https://kantel.github.io/posts/2024010702_bitsybox/images/bitsydata.jpg" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Bitsy-Werkzeug »Spieledaten«</figcaption>
</figure>
</div>
<p>Aber nichts hindert einen daran, diesen Alias durch ein »echtes« <code>games</code>-Verzeichnis zu ersetzen. Denn liegt darin nur eine einzige <code>.bitsy</code>-Datei, startet die Bitsybox (auf dem Mac, wenn man beim ersten Start der App die übliche, nervende Sicherheitsabfrage überwunden hat) direkt mit diesem Programm. Ich habe dies mit meinen <a href="http://blog.schockwellenreiter.de/2022/06/2022060901.html">nächtlichen Streifzügen durch den Bürgerpark</a> getestet – man kann damit quasi ein Bitsy-Spiel so vertreiben, daß es sich wie eine native App anfühlt.</p>
<p>Wenn das nicht geil ist, was ist es dann?</p>



 ]]></description>
  <category>Bitsy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024010702_bitsybox/index.html</guid>
  <pubDate>Sun, 07 Jan 2024 19:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010702_bitsybox/images/bitsybox.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Bilder von einer KI: Der Dachs als Künstler</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010701_badger_artist/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53447239860/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>»Aus Gründen« hatte ich gestern mal wieder die gekünstelte Intelligenzia, <a href="https://beta.dreamstudio.ai/generate">die derzeit mein Vertrauen besitzt</a>, angeworfen und sie Bilder eines Dachses generieren lassen, ausgestattet mit Staffelei und Farbplaletten, der im Frühling an einem Fluß unter Weiden sitzt und Bilder malt. Ich gestehe, bei der Erstellung dieses Prompts habe ich mich von dem Kinderbuchklassiker »<a href="https://de.wikipedia.org/wiki/Der_Wind_in_den_Weiden">The Wind in the Willows</a>« von <em>Kenneth Grahame</em> inspirieren lassen.</p>
<p>Die Bilder sind wieder teilweise so nett geworden, daß ich sie Euch nicht vorenthalten kann:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53447695067/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53445896007/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53445896227/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447233860/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53445896302/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53447139219/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53445899552/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446956233/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446956288/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist09.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447142694/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446825856/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446828986/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist12.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447244060/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist13.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446963218/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist14.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446829831/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist15.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447149329/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist16.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446966098/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist17.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Und die »Gründe« für diese Bildchen? Eigentlich gab es nur einen und dazu noch trivialen Grund: Ich hatte meiner Sammlung von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/bauhausb.html">Bauhaus-B-Farbpaletten</a> ein paar weitere hinzugefügt und suchte nach einer Illustration dafür. Diese Suche ist dann ein wenig ausgeartet.&nbsp;🤓</p>
<p>Aber Ihr könnt noch mehr erwarten. Denn neben dem Fakt, daß noch weitere DreamStudio-Experimente der Veröffentlichung harren, möchte ich ein paar Versuche einmal mit <a href="https://tensor.art/">Tensor Art</a> und zum zweiten mit <a href="https://app.scenario.com/">Scenario</a> durchführen. Beides scheinen ebenfalls <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a>-Anwendungen zu sein. Während die erste eine Nutzung ohne Zensur verspricht, ist die zweite darauf spezialisiert, Bilder für <em>Visual Novels</em> und andere Formen des interaktiven Erzählens von Geschichten zu generieren. Also genau mein Anwendungsszenarium. Ich bin selber auf die Ergebnisse gespannt. <em>Still digging!</em></p>
<hr>
<p><strong>Bilder</strong>: <em>Ein Dachs als Künstler</em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A badger in a dressing gown stands in front of his den at an easel, holds a palette in his right hand and a brush in his left hand and paints a picture. It’s a sunny spring morning, in the background you can see a quiet river surrounded by willows. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Farbpaletten</category>
  <guid>https://kantel.github.io/posts/2024010701_badger_artist/index.html</guid>
  <pubDate>Sun, 07 Jan 2024 16:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hexagonaler Random Walker (mit der Turtle und in Trinket)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010501_hex_rand_walk/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53441590727/"><img src="https://kantel.github.io/posts/2024010501_hex_rand_walk/images/hexawalker-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da ich mit <a href="https://kantel.github.io/posts/2023122201_turtle_spirale/">meinen</a> <a href="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/">Spiralen</a> Blut geleckt hatte, wollte ich unbedingt zu Beginn des Jahres noch etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> anstellen. Also habe ich den <a href="http://blog.schockwellenreiter.de/2017/12/2017121304.html">hexagonalen Random Walk</a>, den ich im Dezember 2017 schon einmal hier in diesem <del>Blog</del> Kritzelheft vorgestellt hatte, wieder aus der Mottenkiste hervorgekramt und ein wenig aufgehübscht.</p>
<p>Die wichtigste Änderung war, daß ich nun, wenn der Random Walker das Spielfeld verlassen will, ihn zurück an Start schicke, und er seine Reise neu antreten muß (das ist ein wenig wie beim Monopoly-Spiel). Außerdem habe ich, um die Reise farbiger zu gestalten, nicht nur auf die bewährte <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/codingtrainfarben.html">Coding Train Farbpalette</a> zurückgegriffen, sondern auch die Schildkörte angewiesen, alle zwanzig Schritte ihre Farbe zu wechseln.</p>
<p>Da die Reise durch das hexagonale Turtle-Universum nur dann Spaß macht, wenn man der Schildkröte bei ihrem Herumirren zusehen kann, habe ich mich an meine <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>-<a href="https://kantel.github.io/#category=Trinket">Experimente</a> erinnert, den Random-Walk auch dort implementiert und das Ergebnis dann in diese Seite eingebunden:</p>
<iframe src="https://trinket.io/embed/python/5a5da6439d?outputOnly=true" width="100%" height="550" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen="">
</iframe>
<p>Das lief erstaunlich schmerzfrei ab, der <a href="https://trinket.io/library/trinkets/5a5da6439d">Trinket-Code</a> verlangte nur eine Änderung von meiner Original-Python-Implementierung: Die Hintergrundfarbe des Canvas kann erst initialisiert werden, <strong>nachdem</strong> der Turtle-Screen erstellt wurde.</p>
<p>Die restlichen Änderungen sind rein kosmetischer Natur (Anpassung an die Breite der Webseite etc.).</p>
<p>Nun für alle neugierigen, kreativen Codiererinnen und Codierer unter Euch da draußen den vollständigen Quellcode, den es auch wie immer in meinem <a href="https://github.com/kantel/turtlepy/blob/master/sources/hexrandomwalk3.py">GitHub-Repositorium</a> gibt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> turtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> t</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> r</span>
<span id="cb1-3"></span>
<span id="cb1-4">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">540</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb1-5">MIN_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-6">MAX_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb1-7">MIN_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-8">MAX_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> </span>
<span id="cb1-9">BORDERSIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-10">STEPSIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">codingtrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f05025"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f89e50"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f8ef22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f063a4"</span>,</span>
<span id="cb1-13">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#9252a1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#817ac6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#62c777"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#31c5f4"</span>]</span>
<span id="cb1-14"></span>
<span id="cb1-15">wn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Screen()</span>
<span id="cb1-16">wn.colormode(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb1-17">wn.bgcolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2a282d"</span>)</span>
<span id="cb1-18">wn.setup(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT, startx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>, starty <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-19">wn.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🐢 Hexagonaler Random Walk 🐢"</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw Border</span></span>
<span id="cb1-22">border <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Turtle()</span>
<span id="cb1-23">border.speed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-24">border.pensize(BORDERSIZE)</span>
<span id="cb1-25">border.pencolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e6e2cc"</span>)</span>
<span id="cb1-26">border.penup()</span>
<span id="cb1-27">border.hideturtle()</span>
<span id="cb1-28">border.goto(MIN_X, MIN_Y)</span>
<span id="cb1-29">border.pendown()</span>
<span id="cb1-30">border.goto(MAX_X, MIN_Y)</span>
<span id="cb1-31">border.goto(MAX_X, MAX_Y)</span>
<span id="cb1-32">border.goto(MIN_X, MAX_Y)</span>
<span id="cb1-33">border.goto(MIN_X, MIN_Y)</span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Random Walk</span></span>
<span id="cb1-36">hexi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Turtle()</span>
<span id="cb1-37">hexi.speed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-38">hexi.pensize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> go_home():</span>
<span id="cb1-41">    hexi.penup()</span>
<span id="cb1-42">    hexi.home()</span>
<span id="cb1-43">    hexi.pendown()</span>
<span id="cb1-44"></span>
<span id="cb1-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>):</span>
<span id="cb1-46"></span>
<span id="cb1-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set Pencolor</span></span>
<span id="cb1-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-49">        hexi.pencolor(codingtrain[r.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(codingtrain) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)])</span>
<span id="cb1-50"></span>
<span id="cb1-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Roll Dice and set Angle</span></span>
<span id="cb1-52">    roll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-53">    angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb1-54">    hexi.seth(angle)</span>
<span id="cb1-55">    </span>
<span id="cb1-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb1-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> hexi.xcor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MAX_X:</span>
<span id="cb1-58">        go_home()</span>
<span id="cb1-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> hexi.xcor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> MIN_X:</span>
<span id="cb1-60">        go_home()</span>
<span id="cb1-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> hexi.ycor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> MAX_Y:</span>
<span id="cb1-62">        go_home()</span>
<span id="cb1-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> hexi.ycor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MIN_Y:</span>
<span id="cb1-64">        go_home()</span>
<span id="cb1-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-66">        hexi.fd(STEPSIZE)</span>
<span id="cb1-67"></span>
<span id="cb1-68"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span>
<span id="cb1-69">wn.exitonclick()</span>
<span id="cb1-70">wn.mainloop()</span></code></pre></div>
<p>Und die <a href="https://trinket.io/python/5a5da6439d">Trinket-Implementierung</a> findet Ihr natürlich auf Trinket selber. Ihr könnt Euch davon eine Fork erstellen und weiter damit herumspielen. Habt Spaß dabei!</p>



 ]]></description>
  <category>Python</category>
  <category>Turtle</category>
  <category>Trinket</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024010501_hex_rand_walk/index.html</guid>
  <pubDate>Fri, 05 Jan 2024 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010501_hex_rand_walk/images/hexawalker.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google: Die ersten Updates in diesem Jahr</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010402_google_updates/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53378209665/"><img src="https://kantel.github.io/posts/2024010402_google_updates/images/androidutopia-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die ersten Updates in diesem noch sehr jungen Jahr kamen – ich hatte auch nichts anderes erwartet – aus dem Hause Google. Dabei trudelten beide so zeitnah hintereinander bei mir ein, daß ich sie <em>en bloc</em> abhandeln kann. Doch der Reihe nach:</p>
<section id="google-schließt-am-januar-patchday-wieder-sicherheitslücken-in-android" class="level3">
<h3 class="anchored" data-anchor-id="google-schließt-am-januar-patchday-wieder-sicherheitslücken-in-android">Google schließt am »Januar-Patchday« wieder Sicherheitslücken in Android</h3>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-01-01?hl=de">Sicherheitsupdate für Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-01-01?hl=de">Pixel-Geräten</a>) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro, Pixel 5 verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. Samsung befindet sich wieder an vorderster Front.</p>
</section>
<section id="google-korrigiert-mit-version-120-seines-browsers-chrome-kritische-sicherheitslücken" class="level3">
<h3 class="anchored" data-anchor-id="google-korrigiert-mit-version-120-seines-browsers-chrome-kritische-sicherheitslücken">Google korrigiert mit Version 120 seines Browsers Chrome kritische Sicherheitslücken</h3>
<p>Google veröffentlicht das Update der Version 120 (120.0.6099.199/200) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53378209665/">Grüner Android</a></em>, erstellt mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a>. Prompt: »<em>a little green robot helds a mobilphone in an futuristic city. colored french comic style</em>«, Model: Stable Diffusion XL 1.0, Style: Comic Book.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024010402_google_updates/index.html</guid>
  <pubDate>Thu, 04 Jan 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010402_google_updates/images/androidutopia.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Niklaus Wirth ist am 1. Januar 2024 gestorben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010401_rip_niklaus_wirth/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://commons.wikimedia.org/wiki/File:Niklaus_Wirth,_UrGU.jpg?uselang=de"><img src="https://kantel.github.io/posts/2024010401_rip_niklaus_wirth/images/wirth-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Das neue Jahr beginnt mit einer überaus traurigen Nachricht: Wie Tante Heise <a href="https://www.heise.de/news/Niklaus-Wirth-ist-gestorben-9587020.html">berichtete</a>, ist am 1. Januar 2024 <a href="https://de.wikipedia.org/wiki/Niklaus_Wirth">Niklaus Wirth</a>, einer der wichtigsten Pioniere der Informatik, im Alter von 89&nbsp;Jahren gestorben.</p>
<p>Wirth hatte auch viel mit meiner Biographie zu tun. Da ich Anfang der 1980er Jahre an der TU&nbsp;Berlin bei <a href="https://de.wikipedia.org/wiki/Christiane_Floyd">Christiane Floyd</a> (einer weiteren Pionierin der Informatik) <em>Software Engineering</em> studiert hatte, war folgerichtig Niklaus Wirth einer meiner Säulenheiligen. Meine ersten Programmiersprachen waren <a href="https://de.wikipedia.org/wiki/Algol_68">Algol 68</a> und <a href="https://de.wikipedia.org/wiki/Algol_W">Algol W</a>, danach hatte ich die ganze Entwicklung des Wirthschen Programmiersprachenkosmos mitgetragen: Von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/pascal.html">Pascal</a> über Modula und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/modula2.html">Modula-2</a> bis hin zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/oberon.html">Oberon</a>. Ich hatte an einer Weiterentwicklung des <a href="https://www.stcarchiv.de/stc1993/03/and-und-eventmultiple-in-lpr-modula-2">LPR Modula-2</a> für den Atari-ST gearbeitet und heftig darunter gelitten, daß den beiden Oberon-Versionen V4 und S3 nicht der Erfolg beschieden war, den sie meiner Meinung nach verdienten.</p>
<p>Aus Respekt hatte ich häufig geschrieben, daß ich mich dreimal täglich gen Zürich verneige und dabei »Heiliger Wirth« murmele. Und wie es der Zufall will, hatte ich mir erst vor wenigen Tagen anläßlich einer <a href="https://forum.lazarus.freepascal.org/index.php/topic,65631.0.html">Update-Meldung</a> das immer noch quicklebendige <a href="http://cognitiones.kantel-chaos-team.de/programmierung/freepascal.html">FreePascal</a> (GPL) und seine ebenfalls unter der GPL stehende IDE <a href="https://www.lazarus-ide.org/">Lazarus</a> angeschaut. Vielleicht sollte ich – um Niklaus Wirth zu ehren – meine verschütteten Pascal-Kenntnisse wieder hervorkramen und etwas damit anfangen?</p>
<p>Eine <a href="http://blog.schockwellenreiter.de/2019/02/2019021501.html">Würdigung des Schaffens von Niklaus Wirth</a> hatte ich schon im Februar 2019 anläßlich seines 85. Geburtstags im <em>Schockwellenreiter</em> veröffentlicht. Und einen sehr schönen, respektvollen <a href="https://www.golem.de/news/nachruf-informatiker-und-pascal-erfinder-niklaus-wirth-gestorben-2401-180806.html">Nachruf</a> von <em>Sebastian Grüner</em> gab es heute auf Golem.de.</p>
<p>Also zum letzten Male dreimal gen Zürich verneigt und »Heiliger Wirth« gemurmelt. Das ist die höchste Ehrung, die einer von einem Atheisten wie mich bekommen kann.</p>
<hr>
<p><strong>Photo</strong>: <em>Niklaus Wirth giving a lecture in Ural State University</em>, 3. Oktober 2005 by <a href="https://en.wikipedia.org/wiki/User:Tyomitch">Tyomitch</a>, Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Niklaus_Wirth,_UrGU.jpg?uselang=de">Wikimedia Commons</a>.</p>



 ]]></description>
  <category>Informatik</category>
  <category>Pascal</category>
  <guid>https://kantel.github.io/posts/2024010401_rip_niklaus_wirth/index.html</guid>
  <pubDate>Thu, 04 Jan 2024 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010401_rip_niklaus_wirth/images/wirth.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Midnight Special</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010202_midnight_special/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53437025372/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Zu Beginn eines jeden Jahres gerate ich in hektische Aufräumarbeiten: So möchte ich zum Beispiel dieses Jahr Backups der Bilder anlegen, die ich mit einer gekünstelten Intelligenzia generiert habe, damit ich sie auch dann noch nutzen kann, wenn der Dienst seinen Dienst eingestellen sollte. Heute sind ein paar Bilder an der Reihe, die ich schon im November letzten Jahres vom <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a>-Ableger <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> habe erstellen lassen. Eine nächtliche Eisenbahn, gezogen von einer Dampflokomotive, die Alice auf ihrer Reise durch das Wunderland zu neuen Abenteuern bringen soll.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53437020997/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53437945996/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53437021087/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53437021097/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53437025562/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53438084298/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53437950831/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53438088568/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53437954996/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial09.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53438370590/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53437955101/"><img src="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial11.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Eigentlich brauchte ich nur ein Bild, aber DreamStudio erzeugte schon beim ersten Durchlauf so nette Variationen, daß ich gar nicht aufhören konnte, den Dienst darum zu bitten, neue stählerne Dampfungeheuer auf meinen Monitor zu zaubern. Bei solch einem Motiv kann selbst eine Künstliche »Intelligenz« kaum etwas falsch machen.</p>
<p>Und wer sich bei diesen Bildern an den »<em><a href="https://de.wikipedia.org/wiki/Midnight_Special">Midnight Special</a></em>« (sei es in der Fassung von <em>Creedence Clearwater Revival</em> (1969), von <em>Huddie William »Lead Belly« Ledbetter</em> (1934) oder einer der unzähligen anderen Versionen) erinnert, der liegt ebenfalls richtig.</p>
<p>Ich habe mit dieser Lieferung meine Aufräumarbeiten aber noch lange nicht erledigt. Ich werde hier auf diesen Seiten sicherlich noch ein paar weitere Bilder veröffentlichen.</p>
<hr>
<p><strong>Bilder</strong>: <em>Midnight Special</em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A long railway train with a steam locomotive at the front travels through a deserted city at night. The streets are lit with gas lamps. The moon peeks out between a few clouds in the night sky. Steam punk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Stable Diffusion</category>
  <category>Künstliche Intelligenz</category>
  <category>Interactive Fiction</category>
  <category>Twine</category>
  <category>Alice</category>
  <guid>https://kantel.github.io/posts/2024010202_midnight_special/index.html</guid>
  <pubDate>Tue, 02 Jan 2024 17:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010202_midnight_special/images/midnightspecial00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bauhaus B: Eine neue Farbpalette in meinem Wiki</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010201_bauhaus_b/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53437801771/"><img src="https://kantel.github.io/posts/2024010201_bauhaus_b/images/bauhausb-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da man bekanntlich nie genug <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/farbpaletten.html">Farbpaletten</a> im Portfolio haben kann, habe ich eine <a href="https://twitter.com/rosbeldev/status/1741889032919941280?t=Ad1PYU04yjMxfIehxpjyHg">Entdeckung auf X</a> (vormals Twitter) genommen und daraus eine Farbpalette generiert und sie unter dem Namen »<strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/bauhausb.html">Bauhaus B</a></strong>« in <a href="http://cognitiones.kantel-chaos-team.de/index.html">mein Wiki</a> aufgenommen.</p>
<p>Die ersten fünf Farben sind die eigentlichen Primärfarben der Palette, die vier restlichen sind Schattierungen davon.</p>



 ]]></description>
  <category>Farbpaletten</category>
  <category>Generative Art</category>
  <guid>https://kantel.github.io/posts/2024010201_bauhaus_b/index.html</guid>
  <pubDate>Tue, 02 Jan 2024 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010201_bauhaus_b/images/bauhausb.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mediadaten Dezember 2023: Die letzten Zahlen für ein verblichenes Jahr</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010101_mediadaten_2023_12/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53435497608/"><img src="https://kantel.github.io/posts/2024010101_mediadaten_2023_12/images/mediadaten202312-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute hat nicht nur ein neuer Monat, sondern auch ein neues Jahr begonnen. Daher ist es verstärkt an der Zeit für ein paar Zahlen, die hochtrabend manches Mal auch <em>Mediadaten</em> genannt werden: Im Dezember, den letzten Monat des Jahres 2023, hatte der <em>Schockwellenreiter</em> laut seinem nicht immer einhundertprozentig zuverlässigen <del>Geißenpeter</del> <a href="https://kantel.github.io/posts/2022120702_goatcounter/">GoatCounter</a> exakt <strong>5.656 Seitenaufrufe</strong>. Auch wenn die Exkaktheit der Ziffern eine Genauigkeit der Zahlen nur vortäuscht, sind das doch eine Menge Besucher für so einen feiertagsreichen Monat. Daher freue ich mich über alle, die den Weg auf diese Seiten gefunden haben und bedanke mich bei meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Auch der Monat Dezember ließ mich mit einer interessanten <em>Top Five</em> zurück:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2023121905_kindle/">Ey Apple (oder Amazon), doo!</a> – dieser kleine Rant war überraschend populär.</li>
<li><a href="https://kantel.github.io/posts/2023083003_myst_jupyterbook/">Interaktive Publikationen mit MyST Markdown und Jupyter Book</a> – der Beitrag aus dem August 2023 entwckelt sich zum Dauerbrenner.</li>
<li><a href="https://kantel.github.io/posts/2023121401_ai_artists/">Linkschleuder: Neue Bild- (und Video-) Generatoren</a> – mein derzeitiges Lieblingsthema »gekünstelte Intelligenzia« darf natürlich nicht fehlen.</li>
<li><a href="https://kantel.github.io/posts/2023121303_parallax_scrolling/">Geschichten erzählen mit Parallax Scrolling</a> – Webworking und Storytelling.</li>
<li><a href="https://kantel.github.io/posts/2023121001_buergerwerkstatt_thf/">Fake-Demokratie: »Bürgerwerkstatt« Tempelhofer Feld</a> – zum Abschluß ein weiterer Rant, der mir wichtig war.</li>
</ol>
<p>Jetzt bleibt mir nur noch das Versprechen, daß ich Euch auch 2024 mit (hoffentlich) interessanten Beiträgen unterhalten möchte. Auf ein schönes und erfolgreiches neues Jahr für Euch alle da draußen. Habt Spaß und nehmt nicht alles so bitter ernst.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024010101_mediadaten_2023_12/index.html</guid>
  <pubDate>Mon, 01 Jan 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010101_mediadaten_2023_12/images/mediadaten202312.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es ist mal wieder so weit: Happy New Year 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023123103_happy_new_year/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53433591498/"><img src="https://kantel.github.io/posts/2023123103_happy_new_year/images/happy2024-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Das neue Jahr 2024 steht vor der Tür. Gemäß einer alten DDR-Weisheit (oder DDR-Wahrheit?) wird es ein »mittleres Jahr« werden: Schlechter als 2023, aber besser als 2025.</p>
<p>In diesem Sinne: Kommt gut rein, feiert (auch wenn Euch nicht nach feiern zumute ist) und fallt auf gar keinen Fall in einen Briefkasten. Paßt auf Euch auf!</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53433591498/">Der Wahrsager</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A python stands in front of an easel in a laboratory with strange technical devices and paints colorful pictures. A large grandfather clock stands in the background. The full moon shines through a window. colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Modernes Leben</category>
  <guid>https://kantel.github.io/posts/2023123103_happy_new_year/index.html</guid>
  <pubDate>Sun, 31 Dec 2023 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023123103_happy_new_year/images/happy2024.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Zum Jahreswechsel ein Silvesterfeuerwerk (stille und ungefährliche Version)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023123102_silvesterfeuerwerk/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>
<script src="./particle.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53433631900/"><img src="https://kantel.github.io/posts/2023123102_silvesterfeuerwerk/images/fireworkp5js-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Zum Jahreswechsel wollte ich ein kleines, ungefährliches Feuerwerk programmieren, das nicht nur – im Gegensatz zu dem Höllenlärm vor unserem Fenster – keinen Krach macht, sondern auch nur geringe Umweltschäden verursacht (die geforderte Rechenleistung ist nicht sehr hoch, daher dürfte dieses virtuelle Feuerwerk auch nur relativ wenig Energie verbrauchen).</p>
<p>Da ich gleichzeitig meine <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>- (JavaScript-) Skills verbessern wollte, habe ich meine kleine Feuerwerksimulation in dieser <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a>-Variante erstellt. Aber obwohl ich dafür auf (m)ein <a href="https://kantel.github.io/posts/2023080802_py5_particelsystem_1/">bewährtes Partikelsystem</a> zurückgegriffen habe, daß ich schon in diversen Python-Dialekten programmiert hatte, bin ich dabei wohl über jede Falle gestolpert, die mir P5.js und JavaScript in den Weg stellten.</p>
<div id="sketch">

</div>
<p>Aber nun steht es und ich habe dabei viel gelernt. Speziell, daß die Behandlung von Listen in P5.js/JavaScript sich doch von Pythons Listen ein wenig unterscheidet (der Quellcode verrät Euch mehr).</p>
<p>Ich habe den Code in zwei Dateien aufgeteilt. Einmal die Datei <code>particle.js</code>, die die beiden Klassen <code>Particle</code> und <code>RectParticle</code> (die die meisten ihrer Eigenschaften von <code>Particle</code> »erbt«) enthält:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Farbpaletten</span></span>
<span id="cb1-2">codingtrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">248</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">158</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">248</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">164</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-3">               [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">146</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">161</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">129</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">198</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">199</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">119</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">197</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">244</span>]]</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Particle {</span>
<span id="cb1-6"></span>
<span id="cb1-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y) {</span>
<span id="cb1-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createVector</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">acc</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createVector</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createVector</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(codingtrain)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14">         }</span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb1-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">acc</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20">    }</span>
<span id="cb1-21"></span>
<span id="cb1-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-23">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> fillColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-25">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(fillColor)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">circle</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-27">    }</span>
<span id="cb1-28"></span>
<span id="cb1-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isNotAlive</span>() {</span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-32">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb1-33">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-34">        }</span>
<span id="cb1-35">    }</span>
<span id="cb1-36">}</span>
<span id="cb1-37"></span>
<span id="cb1-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> RectParticle <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extends</span> Particle {</span>
<span id="cb1-39"></span>
<span id="cb1-40">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y) {</span>
<span id="cb1-41">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">super</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-42">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectMode</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-43">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rota</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">PI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-44">    }</span>
<span id="cb1-45"></span>
<span id="cb1-46">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-47">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-48">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> fillColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">c</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-49">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(fillColor)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-50">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-51">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-52">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rota</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-53">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-54">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-55">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rota</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-56">    }</span>
<span id="cb1-57">}</span></code></pre></div>
<p>Und dann den Hauptsketch, der durch diese Zweiteilung relativ kurz geraten ist:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">840</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> startX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> startY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bgImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> particles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb2-11">  bgImage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/bgsmallvillage.jpg"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-12">}</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb2-15">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> HEIGHT)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">  startX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18">  startY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">}</span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(bgImage)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-23">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> change <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (change <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) {</span>
<span id="cb2-25">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Particle</span>(startX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startY)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb2-27">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RectParticle</span>(startX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> startY)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-28">  }</span>
<span id="cb2-29">  particles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(p)</span>
<span id="cb2-30">   <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> particles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb2-31">    particles[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-32">    particles[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (particles[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isNotAlive</span>()) {</span>
<span id="cb2-34">      particles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">splice</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-35">     }</span>
<span id="cb2-36">  }</span>
<span id="cb2-37">}</span></code></pre></div>
<p>Den <a href="https://github.com/kantel/p5js/tree/master/firework">Quellcode und das Hintergrundbild</a> gibt es – wie immer – auch in meinem GitHub-Repositorium.</p>
<p>Auch wenn mir die Beschäftigung mit P5.js und JavaScript viel Spaß gemacht hat, hat das heutige <a href="https://kantel.github.io/posts/2023123101_py5_010/">Update von Py5</a> meine Pläne über den Haufen geworden. Ich werde mich nun erst einmal wieder mit dieser Python-Variante herumschlagen. <em>Still digging!</em></p>
<hr>
<p><strong>Hintergrundbild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53433595870/">Friedliches Dorf zu Silvester</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>View from a hill into a valley with a picturesque, medieval small town. It is a clear, bright full moon night with a dark blue sky</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023123102_silvesterfeuerwerk/index.html</guid>
  <pubDate>Sun, 31 Dec 2023 15:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023123102_silvesterfeuerwerk/images/fireworkp5js.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Stoppt die Presse: Py5 0.10.0a0 ist erschienen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023123101_py5_010/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53433012151/"><img src="https://kantel.github.io/posts/2023123101_py5_010/images/py5update01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Kurz vor dem bevorstehenden Jahreswechsel machte <em>James Schmitz</em> mir und sicher vielen anderen da draußen eine große Freude und teilte mit, daß er von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>, dem genialen Python-3-Port (Python &gt; Version 3.8) von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a> die <strong>Version 0.10.0a0</strong> <a href="https://ixora.io/blog/new-release-0100a0/">freigegeben hat</a>. Es ist ein großes Update mit vielen neuen Features, die in der Hauptsache die Integration in Pythons Ökosystem betreffen.</p>
<p>Wichtig für mich ist die verbesserte <a href="https://py5coding.org/integrations/matplotlib.html">Integration der Matplotlib</a> in Py5, die <a href="https://py5coding.org/integrations/pillow.html">Unterstützung von Pillow</a> und die <a href="https://py5coding.org/integrations/numpy.html">Behandlung von Bildern</a> mit Hilfe von Numpys <code>np_pixels</code>-Arrays. All dies (und noch viel mehr) ist in dem runderneuerten Abschnitt »<a href="https://py5coding.org/integrations/python_ecosystem_integrations.html">Python Ecosystem Integrations</a>« der ohnehin schon umfangreichen Dokumentation nachzulesen.</p>
<p>Und <em>last but not least</em> schreibt <em>James Schmitz</em>, daß er überzeugt sei, daß trotz der Verwerfungen im letzten Oktober die Processing Foundation und die Processing Community das Processing-Projekt weiterhin aktiv vorantreiben werden, und Processing auch in Zukunft ein großartiges Werkzeug für kreative Coder sein wird. (Ich habe leider nie wirklich verstanden, worum es bei diesen Auseinandersetzungen im Oktober ging – mein Englisch reicht nicht aus, um außerhalb des gesicherten Programmier-Jargons zwischen den Zeilen lesen zu können.)</p>
<p>Ich spiele momentan noch ein wenig mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> herum (dazu im <a href="https://kantel.github.io/posts/2023123102_silvesterfeuerwerk/">nächsten Beitrag</a> mehr), aber eventuell noch heute, jedoch spätestens zu Beginn des neuen Jahres, werde ich mich mit den neuen Features von Py5 beschäftigen. Ich bin nämlich schon gespannt wie ein Flitzebogen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53433012151/">Python und Py5 kurz vor dem Jahreswechsel</a></em>. erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A&nbsp;python stands in front of an easel in a laboratory with strange technical devices and paints colorful pictures. colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Py5</category>
  <category>Python</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023123101_py5_010/index.html</guid>
  <pubDate>Sun, 31 Dec 2023 13:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023123101_py5_010/images/py5update01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wohnsitz Kreuzkölln</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023122803_wohnsitz_kreuzkoelln/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53427497762/"><img src="https://kantel.github.io/posts/2023122803_wohnsitz_kreuzkoelln/images/wohnsitzkreuzkoelln-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute war ich mit einigen Mitstreiterinnen und Mitstreitern unserer <a href="https://www.kiezblocks.de/kranold/">Kranold-Kiezblock-Initiative</a> im Reuterkiez, der gentrifizierungstechnisch auch gerne zu Kreuzkölln <del>hochgemogelt</del> hochgeadelt wird. Wir wollten uns – auch um für die bevorstehende Diskussionen in unserem Kiez gewappnet zu sein – die dort schon realisierten oder in der Entstehung begriffenen Maßnahmen zur Verkehrsberuhigung anschauen. Und dabei lief mir dieses wunderschöne weiße, in die Freiheit entlassene Sofa vor die Linse.</p>
<p>Ich konnte natürlich nicht anders, ich mußte es für meine Sammlung »<a href="https://www.flickr.com/photos/schockwellenreiter/albums/1244272/">Wohnsitz Neukölln</a>« photographieren.</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023122803_wohnsitz_kreuzkoelln/index.html</guid>
  <pubDate>Fri, 29 Dec 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023122803_wohnsitz_kreuzkoelln/images/wohnsitzkreuzkoelln.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Verkehrschaos bei der BVG: Gewünschte Kapitulation</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023122803_gewollte_kapitulation/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53426912813/"><img src="https://kantel.github.io/posts/2023122803_gewollte_kapitulation/images/doppeldecker01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Berliner Verkehrssenatorin <em>Manja Schreiner</em> (CDU) treibt ihre Unfähigkeit auf die Spitze und verlagert das Berliner S-Bahn-Chaos von 2009 bewußt auf die BVG. Wir erinnern uns: Im <a href="https://www.tagesspiegel.de/berlin/als-die-berliner-s-bahn-aus-dem-gleis-geriet-5335063.html">Sommer 2009 trat ein Notfahrplan der Berliner S-Bahn</a> in Kraft, weil sie von der Politik gewollt so kaputtgespart wurde, daß die Aufsichtsbehörde fast alle Züge stillegen mußte, da bei der Wartung bewußt geschlampt wurde, um im neoliberalen Privatisierungswahn Kosten zu sparen. Damals waren nur noch 165 der 632 Viertelzüge des Fuhrparks einsatzbereit. Von dieser Katastrophe hat sich die Berliner S-Bahn bis heute noch nicht wieder erholt, nur die Berliner haben vor dem Unvermögen der Politik resigniert.</p>
<p>Darauf hofft offensichtlich auch <em>Manja Schreiner</em> und mit ihr der gesamte Senat: Am ersten Weihnachtsfeiertag dieses Jahres trat sie vor die Presse und erklärte fröhlich, daß sie nicht damit rechne, daß die Berliner Verkehrsbetriebe (BVG) in absehbarer Zeit ihr durch Sparmaßnahmen reduziertes Angebot wieder auf Normalfahrplan hochfahren können. Ganz nach dem Motto der <em><a href="https://de.wikipedia.org/wiki/Marie-Antoinette_von_%C3%96sterreich-Lothringen">Marie-Antoinette</a></em> (»Wenn die Leute kein Brot haben, sollen sie doch Kuchen kaufen«) hofft sie wohl darauf, daß die Berliner weiter aufs Auto umsteigen und für das dann dadurch hervorgerufene, unvermeidliche und absehbare Verkehrschaos die Grünen verantwortlich machen. Das paßt zur autohörigen Verkehrspolitik der CDU und der mit ihr verbündeten Giffey-SPD.</p>
<p>Und rechtssicher agieren kann ihre Verwaltung auch nicht: <a href="https://www.rbb24.de/politik/beitrag/2023/12/berlin-verkehr-busspuren-manja-schreiner-forderung-einrichtung.html">In Berlin sind im laufenden Jahr keine neuen Busspuren ausgewiesen worden</a>, die Verkehrsverwaltung begründete das mit der aktuellen Rechtslage und schiebt die Verantwortung auf den Bund. Ja, dann soll Frau Schreiners Verwaltung mal ihre Hausaufgaben machen und eine rechtssichere Verordnung erlassen. Ist nicht einfach, ich weiß, aber wo ein Wille ist, ist auch ein Weg. Aber wenn der Wille bei Frau Schreiner und ihrer Partei fehlt&nbsp;…</p>
<p>Dabei sollte <em>Manja Schreiner</em> gewarnt sein: <em>Marie-Antoinette</em> wurde während der Französischen Revolution zum Tode verurteilt und durch die Guillotine hingerichtet. Sie hatte die Bevölkerung durch ihre Arroganz und Ignoranz zu sehr verärgert. Nicht, daß ich Frau Schreiner das gleiche Schicksal wünsche, aber Hochmut kommt bekanntlich vor dem Fall.</p>
<p>Dazu paßt auch noch diese Meldung: Die BVG stoppt aus <a href="https://www.tagesspiegel.de/berlin/angst-vor-silvesterkrawallen-in-berlin-bvg-stoppt-mehrere-buslinien-in-neukolln-und-kreuzberg-10979353.html">Angst vor Silvesterkrawallen in Berlin</a> mehrere Buslinien in Neukölln und Kreuzberg. Denn Lidl verkauft ab heute wieder munter Feuerwerk zu Silvester: Ja, <a href="https://kantel.github.io/posts/2022123001_lidl_neukolln/">habt Ihr denn (immer noch) alle einen Knall</a>?</p>
<hr>
<p><strong>Bild</strong> <em><a href="https://www.flickr.com/photos/schockwellenreiter/53426912813/">Verrotteter Doppeldecker</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>a big scrappy yellow tram and two smaller rotten yellow buses in a crowded big city street with lots of red and blue cars on a rainy day. steampunk comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Failed State Berlin</category>
  <category>Politik</category>
  <category>Verkehrswende</category>
  <guid>https://kantel.github.io/posts/2023122803_gewollte_kapitulation/index.html</guid>
  <pubDate>Thu, 28 Dec 2023 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023122803_gewollte_kapitulation/images/doppeldecker01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Python und die Turtle: Mehr Farben und mehr Ecken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53426515496/"><img src="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/images/spiralsketchy-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Was nützen einem die schönsten, <a href="https://kantel.github.io/posts/2023122701_sketchy/">selbstgebastelten Farbpaletten</a>, wenn man sie nicht nutzt? Daher habe ich wieder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Schildkröte</a> geweckt und das <a href="https://kantel.github.io/posts/2023122201_turtle_spirale/">Spiralenprogramm von letzter Woche</a> um eine Fünfeck- und eine Sechseck-Spirale erweitert.</p>
<p>Dafür habe ich aus den <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/sketchy.html">Sketchy-Farbpaletten</a> diese Farben extrahiert:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">pal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">154</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">133</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">217</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">225</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">229</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">171</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">115</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">227</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">214</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>),</span>
<span id="cb1-2">       (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">223</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">216</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">196</span>)]</span></code></pre></div>
<p>Für eine Fünfeck-Spirale muß die <code>for</code>-Schleife im Skript wie folgt modifiziert werden:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>):</span>
<span id="cb2-2">    p.color(pal[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb2-3">    p.forward(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>)</span>
<span id="cb2-4">    p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">73</span>)</span></code></pre></div>
<p>Bei einer Sechseck-Spirale sieht sie so aus:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>):</span>
<span id="cb3-2">    p.color(pal[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])</span>
<span id="cb3-3">    p.forward(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb3-4">    p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>)</span></code></pre></div>
<p>Die Winkelwerte ergeben sich, wenn man den vollen Kreis (<img src="https://latex.codecogs.com/png.latex?360%C2%B0">) durch die Anzahl der gewünschten Ecken dividiert (<img src="https://latex.codecogs.com/png.latex?360:5=72"> und <img src="https://latex.codecogs.com/png.latex?360:5=60">) und jeweils ein Grad hinzuaddiert. Und mit dem Multiplikations-Faktor bei der Verlängerung der Spirale <code>p.forward()</code> (<img src="https://latex.codecogs.com/png.latex?1.1"> respektive <img src="https://latex.codecogs.com/png.latex?0.9">) habe ich dafür gesorgt, daß die Spirale noch ins Fenster paßt.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53426670658/"><img src="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/images/spiralfuenfeck.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53426938230/"><img src="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/images/spiralsechseck.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Auch mit dieser Farbpalette sind die Spiralen ganz ansehnlich geworden und stechen aus dem Einerlei der Standardfarben hervor.</p>
<p>Der Quelltext ist nahezu identisch wie der bei den dreieckigen und quadratischen Spiralen, hier aber der Vollständigkeit halber noch einmal (für die Fünfeck-Spirale) abgedruckt:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> turtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> t</span>
<span id="cb4-2"></span>
<span id="cb4-3">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span></span>
<span id="cb4-4">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span></span>
<span id="cb4-5"></span>
<span id="cb4-6">pal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">154</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">133</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">185</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">217</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">225</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">229</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">171</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">115</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">227</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">214</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">173</span>),</span>
<span id="cb4-7">       (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">223</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">216</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">196</span>)]</span>
<span id="cb4-8"></span>
<span id="cb4-9">wn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Screen()</span>
<span id="cb4-10">wn.colormode(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb4-11">wn.bgcolor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>)</span>
<span id="cb4-12">wn.setup(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT)</span>
<span id="cb4-13">wn.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fünfeck-Spirale"</span>)</span>
<span id="cb4-14"></span>
<span id="cb4-15">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Turtle()</span>
<span id="cb4-16">p.width(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-17">p.speed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-18">p.hideturtle()</span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fünfeck</span></span>
<span id="cb4-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>):</span>
<span id="cb4-22">    p.color(pal[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb4-23">    p.forward(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>)</span>
<span id="cb4-24">    p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">73</span>)</span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span>
<span id="cb4-27"></span>
<span id="cb4-28">wn.mainloop()</span></code></pre></div>
<p>Es gibt ihn aber auch wieder in meinem GitHub-Repositorium (hier für die <a href="https://github.com/kantel/turtlepy/blob/master/sources/spiral2.py">Fünfeck</a>- und hier für die <a href="https://github.com/kantel/turtlepy/blob/master/sources/spiral3.py">Sechseck</a>-Spirale).</p>



 ]]></description>
  <category>Python</category>
  <category>Turtle</category>
  <category>Creative Coding</category>
  <category>Farbpaletten</category>
  <guid>https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/index.html</guid>
  <pubDate>Thu, 28 Dec 2023 17:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/images/spiralfuenfeck_o.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
