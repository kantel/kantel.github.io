<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Wed, 23 Aug 2023 14:20:00 GMT</lastBuildDate>
<item>
  <title>Google korrigiert erneut in Version 116 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082301_chrome update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1oBEk2ILb9xvTFhDDLMvCty-d9RgFTiI-8CLgXX3ciYrNX5BZrPbXMZ-ONrD33wKvneTbzkgY_Ol7GkwpP1mW0XzGePsOFjMWjxWr8Udk25zqjOlj_mBdK9h8WT9coKSjpZUXp8HHDPmYuHS6ElwSIbU1j5FquVtAeldiSjdkU-GTDBGOP8vNPNaeDFaD/s1473/Powers1910.jpg"><img src="https://kantel.github.io/posts/2023082301_chrome update/images/powers1910-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlichte gestern ein weiteres Update der Version 116 (116.0.5845.110/111) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2023/08/chrome-desktop-stable-update.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="http://john-adcock.blogspot.com/2023/07/t-e-powers-two-obituaries.html">Thomas E. Powers</a> (1870-1939), Chicago Examiner, 1910)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023082301_chrome update/index.html</guid>
  <pubDate>Wed, 23 Aug 2023 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082301_chrome update/images/powers1910.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweaking Ren’Py: Die Engine kann mehr als nur Visual Novels</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082102_tweaking_renpy/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.kenney.nl/media/pages/assets/tiny-dungeon/a54d5f0c77-1674742412/sample.png"><img src="https://kantel.github.io/posts/2023082102_tweaking_renpy/images/tinydungeon-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Manchmal bekommt man Videos vorgesetzt, die hauen einen glatt aus den Socken. So ging es mir mit dem <a href="https://www.youtube.com/watch?v=eUchqIZ8J20">unten vorgestellten Video</a>, in dem <em>Kia Azad</em> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> bis über die Grenzen hinaus ausgereizt hat, um ein RPG damit zu programmieren.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/eUchqIZ8J20" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Auch wenn ich natürlich gerne wissen würde, wie er das angestellt hat, befürchte ich, daß ich damit weit überfordert wäre. Aber es hat mich daran erinnert, daß auch ich schon lange die Programmierung eines RPG (aber in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>) auf meiner Agenda habe. Und das Video nutzt Tiles, die mich stark an Kenneys <a href="https://www.kenney.nl/assets/tiny-dungeon">Tiny Dungeon</a> aus seiner <a href="https://www.kenney.nl/assets/series:Tiny">Tiny-Reihe</a> erinnern. Wollte ich für meine eigenen Experimente festhalten, damit ich mich beizeiten daran erinnere.</p>
<p><em>Kia Azad</em> hat auch eine <a href="https://kia.itch.io/">Seite auf Itch.io</a>, auf der es unter anderem ebenfalls Tiles und Sprites gibt, die in ein 32x32 Pixel oder 16x16 Pixel großes Raster passen und die Ihr für nichtkommerzielle Projekte frei herunterladen könnt. Ich habe diese Seite gleich abonniert, denn Tiles und Sprites kann man nie genug haben.</p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2023082102_tweaking_renpy/index.html</guid>
  <pubDate>Mon, 21 Aug 2023 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082102_tweaking_renpy/images/rpgonrenpy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweego und die aktuellen Storyformate – ein Abschlußbericht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082101_tweego_chapbook/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53132354793/"><img src="https://kantel.github.io/posts/2023082101_tweego_chapbook/images/alicetweegochapbook-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Für meine noch offene Frage, wo ich die aktuellen Storyformate für <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> herbekomme, habe ich eine ebenso einfache wie triviale Lösung gefunden, auf die ich eigentlich schon viel früher hätte kommen können. Denn natürlich gibt es sie <a href="https://github.com/klembot/twinejs/tree/develop/public/story-formats">alle in dem GitHub-Repositorium</a> zu <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">Twine</a>, und zwar in allen Varianten.</p>
<p>So besitzt mein Tweego neben den früheren Versionen jetzt die momentan aktuellsten Storyformate <a href="https://klembot.github.io/chapbook/guide/">Chapook 1.2.3</a>, <a href="http://twine2.neocities.org/">Harlowe 3.3.6</a> und <a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube 2.36.1</a>. Nur der Vollständigkeit halber habe ich ihm auch noch <a href="https://bitbucket.org/klembot/snowman-2">Snowman 2.0.2</a> und das <em>Proof-Reading-Format</em> Paperthin (in der Version 1.4.0) gegönnt, aber die beiden stehen (noch!) nicht auf dem Programm für meine <a href="https://kantel.github.io/posts/2023080202_alice_twine_reloaded/">geplanten Tutorials zu Twine und Tweego</a>. Aber man kann ja nie wissen.</p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023082101_tweego_chapbook/index.html</guid>
  <pubDate>Mon, 21 Aug 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082101_tweego_chapbook/images/alicetweegochapbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tutorials zu Twine und SugarCube</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082002_twine_sugarcube/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53129942469/"><img src="https://kantel.github.io/posts/2023082002_twine_sugarcube/images/alicesugarcube-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Erkundungen (<a href="https://kantel.github.io/posts/2023081701_tweego_first_steps/">1</a>, <a href="https://kantel.github.io/posts/2023081802_tweego_storyformate/">2</a> und <a href="https://kantel.github.io/posts/2023082001_tweego_chapbook/">3</a>) von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> haben mich nicht mehr losgelassen: Ich will jetzt damit (und speziell mit dem Storyformat <a href="https://www.motoslave.net/sugarcube/2/">SugarCube</a>) etwas anstellen. Da trifft es sich gut, daß ich vor etwa drei Jahren schon einen ersten <a href="http://blog.schockwellenreiter.de/2020/12/2020122502.html">Ausflug mit dem Zuckerwürfel in meinen Wunderland-Kosmos</a> begonnen, aber leider nie fortgeführt hatte.</p>
<p>Das will ich nun ändern. Zur Vorbereitung habe ich mir erst einmal ein paar Tutorials zusammengeklaubt. Zwar ist die Anzahl der Video-Tutorials zu diesem Storyformat erstaunlich hoch, aber Tutorials, die man ganz konventionell lesen kann, sind doch etwas knapp. Gefunden und lesenswert sind meiner Meinung nach diese:</p>
<ul>
<li>Allison Parrish: <em><a href="https://catn.decontextualize.com/twine/">A Quick Twine (2.2+) Tutorial</a></em> ist ein umfangreiches Tutoral aus dem Jahre 2022, das auch eher ungewöhnliche Features behandelt.</li>
<li>Seth Kenlon: <em><a href="https://opensource.com/article/18/2/twine-gaming">How to use Twine and SugarCube to create interactive adventure games</a></em>, opensource.com vom 9. Februar 2018. Auch der Unix-Geek von RedHat hat sich mit Twine und SugarCube befaßt.</li>
<li>Adam Hammond: <em><a href="https://www.adamhammond.com/twineguide/">A Total Beginner’s Guide to Twine 2.1</a></em> ist ein Tutorial (mit begleitenden Videos), das der Autor für seine Lehrveranstaltung »Introduction to Digital Humanities« vor etwa fünf Jahren entwickelt hatte.</li>
<li><em><a href="https://www.instructables.com/Generic-Rooms-in-Twine-With-Sugarcube/">Generic Rooms in Twine with SugarCube</a></em> ist ein witziges Tutorial, dessen Geschichte mich ein wenig an <em><a href="https://de.wikipedia.org/wiki/Lewis_Carroll">Lewis Carrolls</a></em> »<a href="https://de.wikipedia.org/wiki/The_Hunting_of_the_Snark">The Hunting of the Snark</a>« erinnert.</li>
<li>Und <em>last but not least</em> ist da noch der <em>Vegetarian Zombie</em>, dessen Tutorial-Reihe <em><a href="https://www.learncreateplay.games/interactive-fiction-with-twine/">Interactive Fiction with Twine</a></em> ebenfalls mit begleitenden YouTube-Videos erschienen ist. Sie bricht im Januar dieses Jahres mit der <a href="https://www.learncreateplay.games/twine-2-tutorial-picking-up-placing-items/">12. Folge</a> etwas unvermittelt ab, aber vor wenigen Wochen (im Juli 2023) hat er <a href="https://www.learncreateplay.games/site-update/">neue Updates versprochen</a>.</li>
</ul>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://www.pearson.de/writing-interactive-fiction-with-twine-9780134303123"><img src="https://kantel.github.io/posts/2023082002_twine_sugarcube/images/twinebook.jpg" class="img-fluid"></a>
</div>
<p>Und wer eine gründliche Einführung nicht nur in Twine, sondern auch in das Design interaktiver Spiele und Geschichten haben möchte, die oder dem kann ich nur das Buch »<a href="https://www.pearson.de/writing-interactive-fiction-with-twine-9780134303123">Writing Interactive Fiction with Twine</a>« von <em>Melissa Ford</em> empfehlen. Die 400 Seiten fette Schwarte ist von 2016 und als gedrucktes Buch vergriffen (und bei Amazon gebraucht nur noch zu Mondpreisen (aktuell 210 Euro) erhältlich), aber beim Verlag kann man ein PDF völlig legal für 16,04 Euro erwerben. Das Buch behandelt zur Hälfte <a href="https://twine2.neocities.org/">Harlowe</a> als Storyformat, aber im zweiten Teil (ab Seite 253) geht es auch auf SugarCube (Version 1 und Version 2) ein.</p>
<p>So bestückt möchte ich nun meine Reise mit SugarCube durch das Wunderland-Universum fortsetzen. Ideen und Material habe ich schon gesammelt. Schaun wir mal, was sich daraus entwickelt. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>SugarCube</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023082002_twine_sugarcube/index.html</guid>
  <pubDate>Sun, 20 Aug 2023 17:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082002_twine_sugarcube/images/alicesugarcube.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweego und Chapbook – ein Testbericht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082001_tweego_chapbook/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53128025520/"><img src="https://kantel.github.io/posts/2023082001_tweego_chapbook/images/chapbooktweego-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine <a href="https://kantel.github.io/posts/2023081802_tweego_storyformate/">Tests</a>, wie weit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zusammenspielen, habe ich zu einem erfolgreichen vorläufigen Abschluß gebracht, denn auch Tweego und das Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> funzen ziemlich gut mit Visual Studio Code.</p>
<p>Der Anfang war etwas holprig, weil ich die <a href="https://klembot.github.io/chapbook/guide/state/the-vars-section.html">Vars Section</a> nicht korrekt untergebracht bekam. Hier half ein Trick: Ich habe eine bestehende Chapbook-Story als <code>Twee</code> exportiert und dann nachgeschaut, wo die Metadaten dort standen. Die Lösung war, daß sie unmittelbar unter dem Passagenamen stehen müssen und nicht – wie ich dachte – direkt zu Beginn der Datei. So bekam ich das Layout meines Spiels in den Griff, ohne mich mit CSS herumschlagen zu müssen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb1-1">:: Start</span>
<span id="cb1-2">config.style.page.color: "gray-1 on black"</span>
<span id="cb1-3">config.style.page.link.font: "18 none"</span>
<span id="cb1-4">config.style.page.link.color: "orange-4"</span>
<span id="cb1-5">config.style.page.link.lineColor: "orange-4"</span>
<span id="cb1-6">config.style.page.link.active.color: "orange-4"</span>
<span id="cb1-7">config.style.page.fork.divider.style: "none"</span>
<span id="cb1-8">--</span></code></pre></div>
<p>Weiter schön an Tweego ist, daß es – ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> – rekursiv ein Verzeichnis durchsucht und alle <code>.twee</code>-, <code>.tw</code>-, <code>.css</code>- und <code>.js</code>-Dateien in <strong>eine</strong> Zieldatei-HTML-Datei herausrendert (im Extremfall auch alle Bilddateien, dazu weiter unten mehr). Ich habe daher meine Projekte jeweils wie folgt organisiert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Projektverzeichnis</span></span>
<span id="cb2-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> Verzeichnis images</span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> Vereichnis src</span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index.html</span></span></code></pre></div>
<p>Tweego wird dann mit folgendem Kommando(s) aufgerufen:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>projektverzeichnis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Applications/tweego/tweego'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index.html'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'src'</span></span></code></pre></div>
<p>Da einige Storyformate auch Bilder als Passagen verwenden können und – auch wenn Tweego wahnsinnig schell ist – ich daher unnötige Rendereien vermeiden wollte, habe ich das Assetverzeichnis <code>images</code> <strong>oberhalb</strong> von <code>src</code> angelegt. Die Bilder werden daher von Tweego nicht angefaßt und zum anderen kann ich zum Beispiel in Chapbook sie mit folgendem Makro einbinden:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb4-1">{embed image: "images/&lt;bildname.png&gt;", alt: "&lt;bildbeschreibung&gt;"}</span></code></pre></div>
<p>In <a href="https://www.motoslave.net/sugarcube/2/">SugarCube</a> heißt der entsprechende Befehl:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb5-1">[img[images/&lt;bildname.png&gt;]]</span></code></pre></div>
<p>Während man in <a href="https://twine2.neocities.org/">Harlowe</a> <em>plain old HTML</em> bemühen muß:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;img</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bildname.png&gt;"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">alt</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bildbeschreibung&gt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">/&gt;</span></span></code></pre></div>
<p>Da die resultierende <code>index.html</code> auch oberhalb des <code>src</code>-Verzeichnisses herausgeschrieben wird, hat diese Methode den Vorteil, daß die Datei ihre Bilder auch ohne Verrenkungen findet.</p>
<p>Doch jetzt erst einmal »Butter bei die Fisch«. Ich habe für mein Beispiel die (Chapbook) Twee-Dateien zu Testzwecken recht artifizell in Einzeldateien aufgesplittet, zuerst in die <code>storydate.twee</code>, die so aussieht:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb7-1">:: StoryData</span>
<span id="cb7-2">{</span>
<span id="cb7-3">  "ifid": "5AA26DF4-EA52-4A16-A3F9-036F87214882",</span>
<span id="cb7-4">  "format": "Chapbook",</span>
<span id="cb7-5">  "format-version": "1.2.3",</span>
<span id="cb7-6">  "start": "Start",</span>
<span id="cb7-7">  "zoom": 1</span>
<span id="cb7-8">}</span></code></pre></div>
<p>Die <code>ifid</code> wird von Tweego beim ersten Durchlauf erzeugt und man wird aufgefordert, sie dann in <code>StoryData</code> einzufügen.</p>
<p>Dann die <code>title.twee</code>, die naturgemäß recht klein geraten ist:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb8-1">:: StoryTitle</span>
<span id="cb8-2">Alien Attack</span></code></pre></div>
<p>Die eigentliche Story beginnt mit der <code>start.twee</code>, die auch die Style-Anweisungen enthält:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb9-1">:: Start</span>
<span id="cb9-2">config.style.page.color: "gray-1 on black"</span>
<span id="cb9-3">config.style.page.link.font: "18 none"</span>
<span id="cb9-4">config.style.page.link.color: "orange-4"</span>
<span id="cb9-5">config.style.page.link.lineColor: "orange-4"</span>
<span id="cb9-6">config.style.page.link.active.color: "orange-4"</span>
<span id="cb9-7">config.style.page.fork.divider.style: "none"</span>
<span id="cb9-8">--</span>
<span id="cb9-9"></span>
<span id="cb9-10"># Die Geschichte beginnt hier …</span>
<span id="cb9-11"></span>
<span id="cb9-12">[note]</span>
<span id="cb9-13">Auftritt Hans Blond.</span>
<span id="cb9-14">Hans Blond neutral</span>
<span id="cb9-15">[continued]</span>
<span id="cb9-16"></span>
<span id="cb9-17">{embed image: "images/buero_blond_1.png", alt: "Büro Hans Blond"}</span>
<span id="cb9-18"></span>
<span id="cb9-19">Mein Name ist Blond, Hans Blond.</span>
<span id="cb9-20"></span>
<span id="cb9-21">Meine Chefin *Sylvia Berlin* hat mich zu einem [[Meeting-&gt;meeting_1]] gerufen.</span></code></pre></div>
<p>Sie mündet dann in die etwas längere <code>meeting.twee</code>:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb10-1">:: meeting_1</span>
<span id="cb10-2"></span>
<span id="cb10-3">[note]</span>
<span id="cb10-4">Auftritt Sylvia von rechts</span>
<span id="cb10-5">[continued]</span>
<span id="cb10-6"></span>
<span id="cb10-7"></span>
<span id="cb10-8">{embed image: "images/buero_sylvia_1.png", alt: "Büro Sylvia Berlin"}</span>
<span id="cb10-9"></span>
<span id="cb10-10">Klopf, Klopf!</span>
<span id="cb10-11"></span>
<span id="cb10-12">[[Herein!-&gt;meeting_2]]</span>
<span id="cb10-13"></span>
<span id="cb10-14">:: meeting_2</span>
<span id="cb10-15"></span>
<span id="cb10-16">[note]</span>
<span id="cb10-17">Auftritt Blond von links.</span>
<span id="cb10-18">Sylvia Talking</span>
<span id="cb10-19">[continued]</span>
<span id="cb10-20"></span>
<span id="cb10-21">{embed image: "images/buero_sylvia_2.png", alt: "Büro Sylvia 2"}</span>
<span id="cb10-22"></span>
<span id="cb10-23">Sylvia: »Mein lieber Herr Blond, die Bürgermeisterin hat mich gebeten,</span>
<span id="cb10-24">ihr für die anstehende Wahlwiederholung meinen besten IT-Spezialisten</span>
<span id="cb10-25">zur Verfügung zu stellen. Und da habe ich natürlich sofort an Sie gedacht.</span>
<span id="cb10-26">Sie können gleich morgen anfangen.«</span>
<span id="cb10-27"></span>
<span id="cb10-28">Hans war sofort klar: Damit wollte Sylvia ihn als Konkurrenten um</span>
<span id="cb10-29">die Referatsleitung kaltstellen. Doch was sollte er tun?</span>
<span id="cb10-30"></span>
<span id="cb10-31">&gt; [[Wütend den Raum verlassen und die Tür hinter sich zuknallen?-&gt;wut_1]]</span>
<span id="cb10-32">&gt; [[Gute Miene zum bösen Spiel machen und der Versetzung zustimmen?-&gt;gute_miene]]</span>
<span id="cb10-33"></span>
<span id="cb10-34">:: wut_1</span>
<span id="cb10-35"></span>
<span id="cb10-36">[note]</span>
<span id="cb10-37">Abgang Blond nach links</span>
<span id="cb10-38">[continued]</span>
<span id="cb10-39"></span>
<span id="cb10-40">Hans [[verließ wütend den Raum-&gt;bad_ending]] und schlug die Tür mit einem</span>
<span id="cb10-41">lauten Knall hinter sich zu.</span>
<span id="cb10-42"></span>
<span id="cb10-43">:: bad_ending</span>
<span id="cb10-44"></span>
<span id="cb10-45">{embed image: "images/buero_blond_2.png", alt: "Hans Blond traurig"}</span>
<span id="cb10-46"></span>
<span id="cb10-47">Kaum war Hans wieder in seinem Büro, als er auch schon eine Email bekam.</span>
<span id="cb10-48">Darin stand in dürren Worten, daß sein Antrag auf Beförderung abgelehnt sei.</span>
<span id="cb10-49"></span>
<span id="cb10-50">Tja Hans, zu hoch gepokert.</span>
<span id="cb10-51"></span>
<span id="cb10-52">Das ist das viel zu frühe Ende!</span>
<span id="cb10-53"></span>
<span id="cb10-54">&gt; {restart link, label: "Noch einmal versuchen?"}</span>
<span id="cb10-55"></span>
<span id="cb10-56">:: gute_miene</span>
<span id="cb10-57"></span>
<span id="cb10-58">Hans: »Dann werde ich mal [[mein Büro räumen-&gt;buero_2]].«</span></code></pre></div>
<p>Um dann in der <code>buero_2.twee</code> zu enden:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb11-1">:: buero_2</span>
<span id="cb11-2"></span>
<span id="cb11-3">[note]</span>
<span id="cb11-4">Auftritt Hans Blond von rechts.</span>
<span id="cb11-5">Hans Blond konfus</span>
<span id="cb11-6">[continued]</span>
<span id="cb11-7"></span>
<span id="cb11-8">{embed image: "images/buero_blond_3.png", alt: "Hans Blond konfus"}</span>
<span id="cb11-9"></span>
<span id="cb11-10">Hans (zu sich): »Sylvia ist zwar ein intrigantes Biest, aber süß ist sie dennoch.« ❤️</span></code></pre></div>
<p>Die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alienattackv2/src">Twee-Sourcen</a>, alle <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alienattackv2/images">Bilder</a> und natürlich die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alienattackv2">finale <code>index.html</code></a> findet Ihr auch wieder in meinem GitHub-Repositorium.</p>
<p>Chapbook ist in meinen Augen immer noch das am Besten geeignete Twine-Storyformat, um interaktive Geschichten zu entwerfen, die dann im Endeffekt in Ren’Py realisiert werden (ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> zusammenspielt). Daher enthält mein Testspiel entsprechende »Regieanweisungen« in den <code>[note] … [continued]</code>-Blöcken.</p>
<p>Für »normale« interaktive Geschichten scheinen mir jedoch Harlowe und SugarCube die geeigneteren Storyformate zu sein, wobei die SugarCube-Tweego-Integration am weitesten vorangeschritten ist. Dies ist aber auch nicht verwunderlich, da <em>Thomas Michael Edwards</em>, der Hauptentwickler von SugarCube, auch der Hauptentwickler von Tweego ist.</p>
<p>Aber ansonsten gilt: Die Auswahl eines geeigneten Storyformats hängt auch viel von persönlichen Vorlieben ab. Daher solltet Ihr ausprobieren, was Euch am Besten liegt. Ich hoffe, mit meinen Beiträgen Euch bei Eurer Entscheidung helfen zu können.</p>
<p>Und das war sicher nicht der letzte Beitrag zu Twine und Tweego. Besonders die SugarCube-Integration finde ich faszinierend. Ich werde daher weiter testen und berichten. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>Visual Studio Code</category>
  <category>Interactive Fiction</category>
  <category>RenPy</category>
  <guid>https://kantel.github.io/posts/2023082001_tweego_chapbook/index.html</guid>
  <pubDate>Sun, 20 Aug 2023 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082001_tweego_chapbook/images/chapbooktweego.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues von meinem (digitalen) Zettelkasten: Logseq 0.9.14 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081902_logseq_0914/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53127373944/"><img src="https://kantel.github.io/posts/2023081902_logseq_0914/images/logseq0914-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Normalerweise aktualisiert sich mein <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">zweites Gehirn</a> ja selbstständig, aber dieses Mal hatte entweder der automatische Updater versagt oder ich war zu ungeduldig. Jedenfalls habe ich erst via <a href="https://twitter.com/logseq/status/1692522864459829731?t=bfwsV_tyK3AHidI9bFwQpA&amp;s=03">Twitter</a> erfahren, daß <a href="https://logseq.com/">Logseq</a> die Version 0.9.14 freigegeben hatte.</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://github.com/yoyurec/logseq-awesome-styler"><img src="https://kantel.github.io/posts/2023081902_logseq_0914/images/awesomestyler.png" class="img-fluid"></a>
</div>
<p>Der <a href="https://blog.logseq.com/logseq-0-9-14-better-sidebars-and-smart-merge-for-sync/">zugehörige Blogeintrag</a> verspricht ein größeres Update: So werden verbesserte Seitenleisten angekündigt, die bei mir allerdings noch nicht greifen, bis meine Plugins <a href="https://github.com/yoyurec/logseq-awesome-styler">Awesome Styler</a> oder <a href="https://github.com/yoyurec/logseq-awesome-ui">Awesome UI</a> (oder beide) ebenfalls ein Update vorgelegt haben.</p>
<p>Dann gibt es mit <em>Smart Merge</em> ein neues (noch exerimentelles) Feature, das die Synchronisation zwischen verschiedenen Devices verbessern soll. Wie man dieses Feature freischaltet, ist ebenfalls im <a href="https://blog.logseq.com/logseq-0-9-14-better-sidebars-and-smart-merge-for-sync/">Blogpost</a> beschrieben.</p>
<p>Außerdem soll bald ein neues Logseq-Handbuch als <em>In-App Documentation</em> integriert werden. Das alte, aber extrem nützliche <a href="https://docs.logseq.com/">docs.logseq.com</a> soll uns aber weiterhin erhalten bleiben.</p>
<p>Bei mir lief das Update ohne Probleme, wie der <a href="https://www.flickr.com/photos/schockwellenreiter/53127373944/">Screenshot</a> oben im Banner beweist. Damit ich aber in den Genuß der schönen neuen Features komme, muß ich aber wohl noch auf ein Update meiner Plugins warten.</p>



 ]]></description>
  <category>Logseq</category>
  <category>Outliner</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2023081902_logseq_0914/index.html</guid>
  <pubDate>Sat, 19 Aug 2023 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081902_logseq_0914/images/logseq0914.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hände weg vom Tempelhofer Feld: Keine neuen schwarz-roten Feldversuche</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081901_tempelhofer_feld/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/4876760524/"><img src="https://kantel.github.io/posts/2023081901_tempelhofer_feld/images/himmelthf-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es war zu erwarten: Kaum steht der schwarz-rote Senat, erinnert sich die Giffey-SPD wieder an ihre Kernkompetenz, nämlich als Lobbyistin für die örtliche Bau- und Betonmafia aufzutreten. Denn nur mit der Profitgier dieser Mafia ist der erneute Vorstoß für eine angeblich »<a href="https://taz.de/Bebauung-des-Tempelhofer-Feldes/!5950164/">behutsamen Randbebauung</a>« des Tempelhofer Felds zu erklären.</p>
<p>Zur Erinnerung (für Nichtberlinerinnen und -berliner): Das <a href="https://de.wikipedia.org/wiki/Tempelhofer_Feld">Tempelhofer Feld</a> ist seit der Schließung des Flughafens Tempelhofs 2008 (offiziell seit 2010) eine der weltweit größten innerstädtischen Freiflächen und dies wurde 2014 durch einen <a href="https://de.wikipedia.org/wiki/Volksentscheid_zum_Tempelhofer_Feld_in_Berlin">Volksentscheid</a> mit großer Mehrheit bestätigt. Laut diesem soll die Freifläche der Öffentlichkeit vollständig erhalten bleiben und weder mit Neubauten der Landesbibliothek, Wohn- und Gewerbeimmobilien versehen, noch mit der Internationalen Gartenausstellung 2017 in Verbindung gebracht werden.</p>
<p>Zusammen mir der Berliner CDU wittert die SPD nun Morgenluft (die in meinen Augen aber ganz gewaltig stinkt) und glaubt, auf diesen Volksentscheid scheißen und den erklärten Willen der Berliner Bevölkerung ignorieren zu können. Als ersten Schritt unternimmt sie – wie es der RBB sehr freundlich formuliert – einen <a href="https://www.rbb24.de/politik/beitrag/2023/08/berlin-tempelhofer-feld-bebauung-rand-cdu-spd.html">vorsichtigen Anlauf auf das Temelhofer Feld</a> und will mit einem »Ideenwettbewerb« satte 1,2 Millionen Euro sinnlos verschwenden. Doch dagegen regt sich Widerstand: Ich bin ja eigentlich kein Freund von <a href="https://de.wikipedia.org/wiki/Campact">Campact</a>, denn hat man sich einmal an eine ihrer Kampagnen beteiligt und seine Email-Adresse hinterlassen, wird man auf Monate mit weiteren Kampagnen zugespamt. Aber in diesem Fall ist mir das wichtig, da muß ich und da müßt Ihr durch:</p>
<p>Denn dort läuft eine Unterschriftensammlung, die fordert, für das Tempelhofer Feld einen <a href="https://weact.campact.de/petitions/tempelhofer-feld-als-weltkulturerbe-eintragen">Eintrag als UNESCO-Weltulturerbe zu beantragen</a>, um das gesamte Areal schnellstmöglich und dauerhaft zu schützen. Die veranschlagten 7.000 Unterschriften sind schon beinahe erreicht, trotzdem solltet Ihr <strong><a href="https://weact.campact.de/petitions/tempelhofer-feld-als-weltkulturerbe-eintragen">hier klicken</a></strong> und Euch dieser Forderung anschließen.</p>
<p>Dann gibt es noch ein zweites Voting, dieses Mal vom RBB (der nach meinen Erfahrungen verantwortlicher als Campact mit unseren Daten umgeht), das zwar keine politische Bedeutung aber genug Potential besitzt, den schwarz-roten Senat in seinen feuchten Feldträumen zu stören. Der Rundfunksender fragt nämlich, ob <a href="https://www.rbb24.de/politik/beitrag/2023/08/berlin-tempelhofer-feld-randbebauung-diskussin-voting-neuer-volksentscheid.html">es einen neuen Volksentscheid über eine Randbebauung des Tempelhofer Felds geben</a> solle. Hier stimmen wir natürlich alle mit <strong>Nein</strong>, denn der Volksentscheid von 2014 sollte weiter respektiert werden.</p>
<p>Auch wenn diese Befragung natürlich nicht repräsentativ ist, zum Zeitpunkt als ich diesen Beitrag verfaßte (19. August 2023, 15:40 Uhr), waren <strong>78 Prozent der Befragten</strong> meiner Meinung. Das sollte die Bau- und Betonlobby im Berliner Senat doch zum Innehalten und Nachdenken anregen. Denn mit ihrer derzeitigen Politik zugunsten der reichen Immobilien- und Baukonzerne provozieren sie bewußt soziale Unruhen. <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2010: <a href="http://www.gabi-kantel.de/">Gabriele Kantel</a>)</em></p>



 ]]></description>
  <category>Tempelhofer Feld</category>
  <category>Failed State Berlin</category>
  <category>Politik</category>
  <category>SPD</category>
  <guid>https://kantel.github.io/posts/2023081901_tempelhofer_feld/index.html</guid>
  <pubDate>Sat, 19 Aug 2023 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081901_tempelhofer_feld/images/himmelthf.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Security Alert: macOS Ventura 13.5.1</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081803_security_alert_apple/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhaAK3aPVS1Y1gZcoVjbmoyD0Ygg0zaUm8UbaxqaOJt0xe6nxiRnFt_haeDXghWH6_InVucb10CIxF19DeldpTzRTSHWNfDbal53y3TEr4wmYDQJO-xbK5mbFWt70909e0lrLTFlwG5V1_kkV5l21cNSPyfKfH4hnyKBqyTJUKR1EFehoAUn4priXY9x2Bx/s1964/may%2022%201913%20powers%20daily.jpg"><img src="https://kantel.github.io/posts/2023081803_security_alert_apple/images/19130522-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Ventura 13.5.1 freigegeben und korrigiert damit einen Fehler in den Ortungsdiensten.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="http://john-adcock.blogspot.com/2023/07/t-e-powers-two-obituaries.html">Thomas E. Powers</a> (1870-1939), Chicago Examiner, 22. Mai 1913)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023081803_security_alert_apple/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 16:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081803_security_alert_apple/images/19130522.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweego und die Storyformate – ein weiterer Zwischenbericht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081802_tweego_storyformate/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53125327615/"><img src="https://kantel.github.io/posts/2023081802_tweego_storyformate/images/harlowetweego-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mit meinen <a href="https://kantel.github.io/posts/2023081701_tweego_first_steps/">Erkundungen</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und wie das alles mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zusammenspielt, bin ich ein gutes Stück vorangekommen.</p>
<p>Gestern war ja noch die Frage, welche Storyformate Tweego unterstützt, nicht durch Tests abschließend geklärt. Das habe ich nun abklären können: Tweego wird mit den Storyformaten <a href="https://twine2.neocities.org/">Harlowe</a>, <a href="https://www.motoslave.net/sugarcube/2/">Sugarcube</a>, <a href="https://videlais.github.io/snowman/">Snowman</a>, <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> und dem <em>Proofing</em>-Format <a href="https://github.com/klembot/paperthin">Paperthin</a> ausgeliefert – auch teils mit (zusätzlichen) älteren Versionen. Davon getestet habe ich SugarCube (Version 2.30.0), Harlowe (Version 3.1.0) und Chapbook (Version 1.0.0). Denn das sind die Storyformate, die auch ich verwende und die in diesen Versionen mitgeliefert werden.</p>
<p>Aufmerksamen Leserinnen und Lesern wird sicher aufgefallen sein, daß die Versionsnummern nicht gerade die aktuellsten sind. Wenn man jedoch eine aktuelle <code>format.js</code> für das gewünschte Storyformat irgendwo organisieren kann und die zusammen mit einer <code>logo.svg</code> und der Lizenzdatei (ob diese beiden Dateien obligatorisch sind, weiß ich nicht – ich habe sie im Zweifelsfalle von einer älteren Version kopiert) in einem Unterverzeichnis von <code>storyformats</code> ablegt, dann findet <code>tweego</code> auch die aktuellen Versionen. Getestet habe ich dies mit SugarCube Version 2.36.1 und heruntergeladen und installiert (der Test steht aber noch aus) habe ich Chapbook Version 1.2.3.</p>
<p>Was fehlt, ist ein aktualisiertes Harlowe (Version 3.3.6). Die <code>format.js</code> im <a href="https://foss.heptapod.net/games/harlowe/">Repositorium</a> sah ganz anders aus, als die bei Tweego mitgelieferte und auch anders als die aktualisierten von Chapbook und SugarCube. Sie sieht bei Harlowe eher wie ein Platzhalter aus, aus dem man sich die gewünschte <code>format.js</code> noch selber zusammenbasteln muß. Aber ich weiß leider nicht, wie ich das bewerkstelligen kann. Wenn also von meinen Leserinnen und Lesern da draußen jemand einen Hinweis hat, wäre ich für eine Benachrichtigung dankbar.</p>
<p>Zum Schluß noch ein Tip zu SugarCube: Die »Schummelknöpfe« <code>back</code> und <code>forward</code> in der Seitenleiste bekommt man weg, wenn man im JavaScript-Tab von Twine die Zeile <code>config.history.controls = false;</code> eingibt. Oder in Tweego dieses Stück Code:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb1-1">:: StoryScript [script]</span>
<span id="cb1-2">config.history.controls = false;</span></code></pre></div>
<p>Da habe ich lange nach gesucht …</p>
<p>Jetzt werde ich aber endgültig mit Visual Studio Code und Twine/Tweego in meinen Wunderland-Kosmos abtauchen und schauen, was ich sonst noch herausbekomme. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>Visual Studio Code</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023081802_tweego_storyformate/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081802_tweego_storyformate/images/harlowetweego.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Video-Tutorials zum Wochenende: Coding mit der Schlange und mit P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081801_coding_weekend/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/b/b1/Denslow%27s_Humpty_Dumpty_pg_13.jpg"><img src="https://kantel.github.io/posts/2023081801_coding_weekend/images/humptydumpty13-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nachdem ich die letzten Male eher sparsam mit meiner Themenauswahl für die wöchentlichen Video-Tutorials war, gibt es an diesem Wochenende wieder einen Gemischtwarenladen, damit ich <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">mein zweites Gehirn</a> wieder etwas freimachen kann. Es gibt Simulationen mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Schildkröte</a>, mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a>. Und wo Processing dransteht, sind natürlich auch <em>Creative Coding</em> und <em>Generative Art</em> mit von der Partie. Zum Schluß – das ist meiner <a href="https://kantel.github.io/posts/2023081701_tweego_first_steps/">jüngsten Entdeckung</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> geschuldet – darf natürlich auch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> nicht fehlen. Doch wie immer der Reihe nach:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/L7z3vv75jdI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><a href="https://www.youtube.com/playlist?list=PLsGCUnpinsDnfiHYpasqrFC5VNzqnXFeh">Simulation with Processing</a> ist eine wunderbare und extrem lehrreiche Playlist mit zehn Videos zwischen je zehn und 45 Minuten. Und der <a href="https://www.youtube.com/@jeffkthompson">Kanal von Jeff Thompson</a> enthält noch viele weitere nützliche Playlisten zu Processing und und P5.js. Schaut daher ruhig bei ihm vorbei.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/RxE5GBxvVM8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Dann ist da noch die Reihe <a href="https://www.youtube.com/playlist?list=PL5Y9p1EK4LbRyYSt_xt2oFY3Z8yCfKJNK">P5.js tutorials – Generative art</a> (fünf kurz Videos zwischen drei und zehn Minuten). Auch <a href="https://www.youtube.com/@hbyhadeel">dieser Kanal</a> harrt noch weiterer Entdeckungen, zum Beispiel diese Playlist »<a href="https://www.youtube.com/playlist?list=PL5Y9p1EK4LbSumwbRpTDAmGhW17CNHN2f">Processing tutorials – Generative art</a>« (zweiundzwanzig Videos, je zwischen einer Minute und einer dreiviertel Stunde Spieldauer).</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/mO4aKYNRuws" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Der <a href="https://www.youtube.com/@datagardenproject">Data Garden</a> ist ein junges <em>Education Project</em>, das (nicht nur) jüngeren Menschen die Programmierung (in P5.js) näherbringen will. Bisher haben sie dazu <a href="https://www.youtube.com/@datagardenproject/playlists?view=1&amp;sort=dd&amp;shelf_id=0">sechs Playlists</a> veröffentlicht – fünf Module und eine <em>Sharing Session</em>. Das jüngste Update ist erst wenige Tage alt, also rechne ich mit weiteren Tutorials und habe daher den Datengarten abonniert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/XZTRJdzlD-M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>In die gleiche Kerbe schlägt das <a href="https://www.youtube.com/@gwccurriculum1640">GWC Curriculum</a> aus dem YouTube-Kanal der <a href="https://girlswhocode.com/">Girls Who Code</a>, die den <em>Gender Gap</em> in den Technologie-Fächern schließen wollen. Besonders gefallen haben mir daraus diese Playlists:</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLxuXeImzB_r3STAftmyESUUFQtbd5-Osi">Personal Website HTML Project</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLxuXeImzB_r0_4f9iF3kTMSDCCIr06iQO">Welcome to p5.js</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLxuXeImzB_r0WKEWpWFPDVI0p3zx9BKQm">Meteor Catcher Game in p5.js</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLxuXeImzB_r2VJ686txtjgxxB8T6Ti1fT">Storytelling in Python Activity Set</a></li>
</ul>
<p>Von Webworking über P5.js bis hin zu Python ist dieser Kanal breit aufgestellt. Nicht nur darum habe ich auch diesem Kanal abonniert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/iaOKlximufY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><a href="https://www.youtube.com/playlist?list=PLmzkEJ1Zz_uZN89BdPwr9qQ06jqsm6UY6">Genetische Algorithmen mit der Schlange</a>: In dieser Serie geht es darum, einen einfachen Bot zu programmieren, der später mit anderen Bots rekombiniert werden soll, um seine Eigenschaften zu verbessern, die ihm helfen, Nahrung zu finden und zu überleben. Das Projekt ist leider eingeschlafen, aber die bisherigen Videos sind als Grundlage für eigenen Experimente doch ganz interessant.</p>
<p>Das Video nutzt für die graphische Darstellung die ebenfalls nicht mehr weiterentwickelte Bibliothek <a href="https://github.com/intjelic/python-sfml">PySFML</a>, jedoch sollte es nicht schwer sein, diese auf <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> umzuschreiben.</p>
<p>Eine weitere, <a href="https://www.youtube.com/playlist?list=PLmzkEJ1Zz_uZ5nvTOLaGHfinCzEVEVBlz">kurze Playlist</a> (vier etwa zehnminütige Videos) des gleichen Autors führt in die Python-Graphikbibliothek <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/graphicspy.html">Graphics.py</a> ein. Auch wenn ich <a href="http://blog.schockwellenreiter.de/2017/11/2017111101.html">um 2017</a> <a href="http://blog.schockwellenreiter.de/2017/11/2017111302.html">ebenfalls</a> mal mit dieser <a href="http://blog.schockwellenreiter.de/2020/04/2020041101.html">Bibliothek</a> <a href="http://blog.schockwellenreiter.de/2017/11/2017111404.html">gespielt</a> <a href="http://blog.schockwellenreiter.de/2017/11/2017112601.html">hatte</a>, dürfte das heute nur noch von historischem Interesse sein.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/6IF8V7FTaPs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Man kann auch mit P5.js Physik simulieren. Das zeigt die Playlist <a href="https://www.youtube.com/playlist?list=PLISRe8GegO8ShKCTLUQp2mcF2CQEnlr1M">Magnetic Force (a.k.a. Mass Spectrometer)</a> (vier Videos je etwa zehn Minuten bis eine Viertelstunde Spieldauer). Da dies als eine Inspiration für mein geplantes Projekt »<a href="https://kantel.github.io/posts/2023081402_plaene_schmieden/">Py5 in Beispielen</a>« dienen könnte (auch wenn der Vortrag gelegentlich doch ein wenig trocken ist), habe ich mir den Link zum <a href="https://editor.p5js.org/ChrisOrban/sketches/HJ1UdD9yM">Quellcode</a> und zur <a href="https://www.asc.ohio-state.edu/orban.14/physics_coding/bfield.html">Step-py-Step Instruction</a> notiert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/5zpQXlaIA5s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das Video <a href="https://www.youtube.com/watch?v=5zpQXlaIA5s">Coding Randomly Generated Color Bubbles in Python</a> stellt auch was mit Pythons Turtle an und ist Teil der Playlist <a href="https://www.youtube.com/playlist?list=PL7idXwkT0hgrM5syH_X22sd8yA-a_Tjsf">Various Programming Tutorials</a> (30 Videos) von <em>Brian Fedluk</em>.</p>
<p><strong>War sonst noch was?</strong> Ach ja, ich wollte Twine ja nicht vergessen: <a href="https://www.youtube.com/playlist?list=PLHPiz_8klh0zT-0vpoK6MYF5bQ3MCmRNS">Introduction to Twine</a> ist eine kurze (dreiteilige) Playlist zu Twine. Und damit wende ich mich wieder Tweego zu und wünsche Euch allen da draußen noch ein schönes Wochenende.</p>
<p><em>(Bild: <a href="https://en.wikipedia.org/wiki/W._W._Denslow">William Wallace Denslow</a> (1856-1915), Humpty Dumpty, 1903. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Denslow%27s_Humpty_Dumpty_pg_13.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Python</category>
  <category>Turtle</category>
  <category>Processing</category>
  <category>P5.js</category>
  <category>Simulation</category>
  <category>Creative Coding</category>
  <category>Twine</category>
  <guid>https://kantel.github.io/posts/2023081801_coding_weekend/index.html</guid>
  <pubDate>Fri, 18 Aug 2023 13:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081801_coding_weekend/images/humptydumpty13.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Erste Schritte mit Tweego</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081701_tweego_first_steps/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53123434818/"><img src="https://kantel.github.io/posts/2023081701_tweego_first_steps/images/tweego01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es war eine verdammt harte Geburt, aber nachdem ich mehrere Stunden mehr oder weniger planlos herumexperimentiert hatte, spielt nun das <a href="https://kantel.github.io/posts/2023081502_tweego/">vorgestern</a> vorgestellte <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> auch auf meinem betagten MacBook Pro mit meinem <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>. Die aufgetretenen Probleme lagen weniger an der Applikation denn mehr an der übermäßigen Fürsorge des Apple-Betriebssystems.</p>
<p>Als erstes mußte ich dem Verzeichnis, in dem das Programm residierte (in meinem Fall <code>/Applications/tweego/</code>), samt sämtlicher Unterverzeichnisse Lese- und Schreibrechte für <code>staff</code> und <code>everyone</code> zuweisen, damit Apple mich nicht immer mit <code>access denied</code> nervte. Doch damit nicht genug, beim Download kam <code>tweego</code> als normale Datei und nicht als ausführbares CLI-Programme. Daher mußte ich im Terminal mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /Applications/tweego</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 755 tweego</span></code></pre></div>
<p>die App erstmal zu einer »ausführbaren UNIX-Datei« (wie das im Mac-Jargon so schön heißt) erklären.</p>
<p>Danach lief aber alles wie geschmiert, wie Ihr an obigem <a href="https://www.flickr.com/photos/schockwellenreiter/53123434818/">Screenshot</a> erkennen könnt.</p>
<p>Damit das alles so hübsch wie im Screenshot aussieht, hatte ich zusätzlich in meinem Visual Studio Code das <a href="https://marketplace.visualstudio.com/items?itemName=cyrusfirheir.twee3-language-tools">Twee 3 Language Tool</a> (MIT-Lizenz, <a href="https://github.com/cyrusfirheir/twee3-language-tools">Quellcode</a> auf GitHub) spendiert, das in der Hauptsache für das Syntax-Highlighting zuständig ist (aber auch eine <a href="https://raw.githubusercontent.com/cyrusfirheir/twee3-language-tools/9ed8ca924e872a130c7a0466f26cb8c8321d555f/docs/images/twee-storymap.png">Story-Map View</a> soll eingebaut sein – dieses Feature muß ich allerdings noch testen). Und wie Ihr ebenfalls am Screenshot im Banner oben erkennen könnt, ist das Einbinden von Multimedia-Inhalten (Bildern, Videos) ohne Gewürge möglich (allein dies rechtvertigt schon die Installation von Tweego).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://raw.githubusercontent.com/cyrusfirheir/twee3-language-tools/9ed8ca924e872a130c7a0466f26cb8c8321d555f/docs/images/twee-storymap.png"><img src="https://kantel.github.io/posts/2023081701_tweego_first_steps/images/twee-storymap.png" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Twee Story Map View</figcaption>
</figure>
</div>
<p>Unterstützte Storyformate sollen alle Formate sein, die von Twine unterstützt werden, also neben <a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube</a> mindestens auch <a href="https://twine2.neocities.org/">Harlowe</a> und das neue <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> (auch das ist bisher von mir noch nicht getestet).</p>
<p>Tweego ist übrigens nicht der einzige Twee-Compiler, daneben gibt es noch <a href="https://github.com/videlais/extwee">Extwee</a> des von mir sehr geschätzten <em>Dan Cox</em> und <a href="https://dan-q.github.io/twee2/index.html">Twee2</a>. Während ersteres eine <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/nodejs.html">Node.js</a>-Anwendung ist, benötigt Twee2 ein aktuelles <a href="http://cognitiones.kantel-chaos-team.de/programmierung/ruby/ruby.html">Ruby</a>. Node war schnell auf meinem Rechner aktualisiert, aber <code>npx</code> weigerte sich, meine Twee-Dateien zu finden. Die Installation von Twee2 dagegen läuft zu Zeit noch, da ich mein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/homebrew.html">Homebrew</a> schon seit längere Zeit nicht mehr genutzt hatte und daher erst noch eine riesige und zeitaufwendige Upgrade-Orgie ansteht.</p>
<p>Wie dem auch sei – Extwee hin und Twee2 her –, ich werde mich erst einmal auf Tweego versteifen, denn die Beschäftigung damit scheint mir sehr vielversprechend. <em>Still digging!</em></p>
<p>Kleiner Funfakt noch zum Schluß: Die <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6DmZy52pG7zYWbr6t93JC7">neuen Twine-Tutorials</a> des oben erwähnten <em>Dan Cox</em> (wir <a href="https://kantel.github.io/posts/2023071502_if_mit_twine_2_6/">berichteten</a>) zeigten in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> ein Menü <code>Exportiere als Twee</code>, das <em>mein</em> Twine ums Verrecken nicht kannte. Eine Update-Überprüfung aus Twine heraus behauptete zudem aber steif und fest, daß ich die zur Zeit aktuellste Version von Twine nutzen würde. Doch nachdem ich mißtrauisch geworden die <a href="http://twinery.org/">Twine-Homepage</a> aufsuchte, stellte ich fest, daß <em>mein</em> Twine mittlerweile völlig veraltet sei. Und richtig, nach einem Update zeigte auch mein Twine den Menüeintrag <code>Exportiere als Twee</code>. Was wieder die Gültigkeit des alten, Lenin zugeschriebenen Spruchs »Vertrauen ist gut, Kontrolle ist besser« beweist.</p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>Visual Studio Code</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023081701_tweego_first_steps/index.html</guid>
  <pubDate>Thu, 17 Aug 2023 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081701_tweego_first_steps/images/tweego01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert erneut kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081602_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjLbrd79-F3GG6f4bDieCtz1eyoUspHk72eO0SHP4F2wbPtJE4YpfLCT5ytEhFQCypVGPWl8lpLFP9N1RhlekwwofbJXK4pHfQeO4C0JU6WH4J11Ab_YaPrV9YQq0T5V09OEQbz-_nzKMvXN5DG0cs2R1P-ySkffEb1CBkB0kRkoc3NOtR8eosY3nb_GQEr/s1652/Chicago%20Examiner,%20August%2014,%201910.jpg"><img src="https://kantel.github.io/posts/2023081602_chrome_update/images/adiposegentleman-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht ein weiteres Update der Version 116 (116.0.5845.96/97) seines Browsers Chrome und schließt erneut <a href="https://chromereleases.googleblog.com/2023/08/stable-channel-update-for-desktop_15.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert– auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="http://john-adcock.blogspot.com/2023/07/t-e-powers-two-obituaries.html">Thomas E. Powers</a> (1870-1939), Chicago Examiner, 14. August 1910)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023081602_chrome_update/index.html</guid>
  <pubDate>Wed, 16 Aug 2023 14:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081602_chrome_update/images/adiposegentleman.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft veröffentlicht Update für Office for Mac</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081601_office_mac_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjtIRqgpSHCrwSdoA5mJewqKA6u12JKL5HrHi7fQ4ZTC5cSPZVsfPVJx3lj7Bmd44MI9qOPg9gPn1c-zXZJlVDXPxSWA2Vu9Q58FNv6maBQLdZwwbYUv102yEiCzf0e2VGtdqRvhy8Z9HsiIjHJK4opHd3FB1eh06-rNvCy7scbif7cyOBt8gVkXiOF9x07/s1276/T.E.%20Powers,%20Nov%2026,%201912.jpeg"><img src="https://kantel.github.io/posts/2023081601_office_mac_update/images/thanksgivingsport-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Microsoft liefert mit dem <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">Update auf 16.76 für Office 365, 2021 und 2019 for Mac</a> natürlich auch wieder aktuelle Sicherheitskorrekturen.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhält man die Korrekturen am einfachsten über Microsofts AutoUpdate – in einem beliebigen Office-Programm über Menü <code>Hilfe &gt; Auf Updates überprüfen</code>. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="http://john-adcock.blogspot.com/2023/07/t-e-powers-two-obituaries.html">Thomas E. Powers</a> (1870-1939), Chicago Examiner, 26. November 1912)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023081601_office_mac_update/index.html</guid>
  <pubDate>Wed, 16 Aug 2023 14:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081601_office_mac_update/images/thanksgivingsport.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Tweego</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081502_tweego/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=sy2lye_3wpg"><img src="https://kantel.github.io/posts/2023081502_tweego/images/tweego-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wenn Dein Visual-Novel-Projekt Dir über den Kopf zu wachsen droht, dann nimmst Du einfach ein paar blasse, farbstichige Food-Photos und <a href="http://www.motoslave.net/tweego/">Tweego</a> – und alles wird wieder gut. Aber im Ernst: Der freie (BSD-Lizenz), in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/go.html">Go</a> geschriebene <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>-/Twee-Compiler könnte eine Lösung für meine Idee zu sein, einen Prototypen interaktiver Geschichten erst in Twine zu entwickeln und dann das endgültige Produkt in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> zu schreiben.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/sy2lye_3wpg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das wäre dann so etwas wie die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink</a>-/<a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a>-Integration. Dafür spricht, daß man Tweego-Skripte in einem Editor wie <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> erstellen und bearbeiten kann. Ich bearbeite meine Ren’Py-Skripte ebenfalls in Visual Studio Code, daher dürfte der Transfer von der einen in die andere Applikation recht schmerzfrei verlaufen.</p>
<p>Ob diese Kombination wirklich etwas taugt, muß ich erst noch durch weitere Tests herausfinden. Aber wie immer in solchen Fällen habe ich <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a></strong> schon einmal eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Twine</category>
  <category>RenPy</category>
  <category>Visual Studio Code</category>
  <category>Interaktive Fiction</category>
  <guid>https://kantel.github.io/posts/2023081502_tweego/index.html</guid>
  <pubDate>Tue, 15 Aug 2023 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081502_tweego/images/tweego.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der Weg nach Hogwarts führt über die Neuköllner Bürgerstraße</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081501_weg_nach_hogwarts/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53118329366/"><img src="https://kantel.github.io/posts/2023081501_weg_nach_hogwarts/images/hogwarts-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Denn in die Bürgerstraße kann man zwar in eine Richtung hineinfahren (Einbahnstraße), aber heraus kommt man dann ohne Zauberei nicht mehr (Sackgasse). Was sich die Neuköllner Behörden bei dieser Verkehrsführung gedacht haben, wissen vermutlich nicht einmal sie selber.</p>
<p>An so eine Form der Verkehrsberuhigung habe ich in meinen wildesten Kiezblock-Träumen nicht einmal zu denken gewagt. Aber jetzt hat mich das Bezirksamt auf die Idee gebracht. Das habt Ihr nun davon.&nbsp;🤓 <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Behördenversagen</category>
  <category>Failed City Neukölln</category>
  <guid>https://kantel.github.io/posts/2023081501_weg_nach_hogwarts/index.html</guid>
  <pubDate>Tue, 15 Aug 2023 11:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081501_weg_nach_hogwarts/images/hogwarts.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Folgen von Verdrängung und Profitmaximierung</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081403_profitmaximierung/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53115248352/"><img src="https://kantel.github.io/posts/2023081403_profitmaximierung/images/profitmaximierung-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da kann man nur sagen: Dumm gelaufen! Warum mußten die Besitzer des Ladens auch das bisherige Friseur-Team, das dort fast 25&nbsp;Jahre ansässig war und unter anderem auch meinen Kopf verschönerte, aus Profitgier vor die Türe setzen? Ich muß gestehen, ich kann (m)ein gerütteltes Maß an Schadenfreude einfach nicht verhehlen. <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Gentrifizierung</category>
  <guid>https://kantel.github.io/posts/2023081403_profitmaximierung/index.html</guid>
  <pubDate>Mon, 14 Aug 2023 17:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081403_profitmaximierung/images/profitmaximierung.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pläne schmieden im Garten: Py5 in Beispielen?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081402_plaene_schmieden/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53113454571/"><img src="https://kantel.github.io/posts/2023081402_plaene_schmieden/images/plaeneschmieden-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gestern hatte ich den ersten warmen und sonnigen Nachmittag nach der langen Regenperiode mit ein paar Büchern und einem (alkoholfreien – seit meinem Schlaganfall vor knapp zwei Jahren trinke ich weitestgehend abstinent) Bier auf unserer Terrasse verbracht. Und da es schon wieder etwas zu warm und zu schwül zum Lesen war, geriet ich ins Dösen und dann in eine von den Büchern auf dem Gartentisch inspirierte Träumerei: Ich hatte ja seinerzeit alle meine im <em>Schockwellenreiter</em> (erst-) erschienenen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a>-Tutorials auf der Website »<a href="http://py.kantel-chaos-team.de.s3-website-us-east-1.amazonaws.com/">Processing.py in Beispielen</a>« geschlossen gesammelt und veröffentlicht. Warum sollte ich nicht etwas ähnliches mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> anstellen?</p>
<p>Für mich ist Py5 sowieso so etwas wie der legitime Nachfolger von Processing.py, das durch sein (C)Python 3-Fundament zusätzlich die Möglichkeiten einschließt, die der <em>Scientific Stack</em> von Python bietet. Damit meine ich vor allem die Bibliotheken <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/scipy.html">SciPy</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> und – wenn <em>Jim Schmitz</em>, der Schöpfer von Py5, seine Ankündigung vom <a href="https://kantel.github.io/posts/2023072402_py5_update/">letzten Update</a> wahrmacht – auch die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a>. Diese Fülle der neuen Möglichkeiten alleine rechtfertigt schon eine Überarbeitung.</p>
<p>Hinzu kommt, daß auch ich in den letzten Jahren einiges dazugelernt und einige neue Themen entdeckt habe. Die neue Tutorialreihe wird daher mit Sicherheit kein Eins-zu-Eins-Port der Processing.py-Tutorials werden, sondern es wird (hoffentlich!) etwas neues entstehen.</p>
<p>Und auch technisch möchte ich (mindestens) eine Änderung vornehmen. Während ich die Site »Processing.py in Beispielen« noch mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/mkdocs.html">MkDocs</a> realisiert hatte, möchte ich für das neue Projekt meine <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>- (und meine <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>-) Skills ausbauen und eventuell dafür auch das <a href="http://cognitiones.kantel-chaos-team.de/webworking/tools/tuftecss.html">Tufte CSS</a> einsetzen.</p>
<p>Es gibt so viel zu träumen und manche Träume sollten einfach wahr werden. <em>Still digging!</em> <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Py5</category>
  <category>Python</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023081402_plaene_schmieden/index.html</guid>
  <pubDate>Mon, 14 Aug 2023 16:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081402_plaene_schmieden/images/plaeneschmieden.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues aus der Graphikschmiede von Kenney.nl</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081401_neues_von_kenney/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://kenney.nl/media/pages/assets/tiny-battle/9420b535c9-1691487572/sample.png"><img src="https://kantel.github.io/posts/2023081401_neues_von_kenney/images/tinybattle-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Aus der niederländischen Graphikschmiede <a href="https://kenney.nl/">Kenney</a>, der wir alle Tonnen von freien (<a href="https://creativecommons.org/share-your-work/public-domain/cc0/">CC0</a>) <a href="https://kenney.nl/assets">Spiele-Assets</a> verdanken, gibt es neues zu berichten:</p>
<p><strong>Erstens</strong> hat Kenney mit <a href="https://kenney.nl/assets/tiny-battle">Tiny Battle</a> ein weiteres Sprite- und Tileset seiner <a href="https://kenney.nl/assets/series:Tiny">Tiny-Reihe</a> veröffentlicht. Die Tiles und Sprites passen in das von mir derzeit bevorzugte 16x16 Pixel-Raster und lassen sich alle gut miteinander kombinieren – nicht nur mit den anderen Bildchen aus der <a href="https://kantel.github.io/posts/2023072303_freie_tiles_und_sprites/">Tiny- und Pixel-Platformer-Reihe</a> und dem <a href="https://kantel.github.io/posts/2023072602_weitere_16x16_tiles_kenney/">Roguelike/RPG-Pack</a> aus dem Hause Kenney, sondern mit ein wenig Bastelarbeit auch mit anderen freien Sets, die man in das 16x16-Raster pressen kann.</p>
<p><strong>Zweitens</strong> – da Partikelsysteme momentan sowieso <a href="https://kantel.github.io/posts/2023080802_py5_particelsystem_1/">mein Thema</a> sind – fiel mir ein nettes Tutorial von Kenney auf: »<a href="https://kenney.nl/learn/drawing-particle-effect-sprites">Partikel und Partikelsystem selber zeichnen</a>. Als Verfechter freier Software nutzt Kenney das freie (GPL) <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/gimp.html">Gimp</a> als Malprogramm, jedoch sollte das Tutorial auch mit jedem anderen, besseren (Pixel-) Graphikprogramm nachvollziehbar sein (auch wenn es wirklich nicht immer Photoshop sein muß).</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/l87PwbgFCuQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, die <a href="https://kantel.github.io/posts/2023072102_kenney_jam_2023/">Kenney Jam 2023</a> ist erfolgreich zu Ende gegangen (auch wenn ich <a href="https://kantel.github.io/posts/2023072301_night_in_the_park/">meinen Beitrag</a> nicht rechtzeitig fertigestellt hatte). Im Nachtrag hat Kenney noch <a href="https://www.youtube.com/watch?v=l87PwbgFCuQ">ein Video mit <strong>seinen</strong> Favoriten</a> auf YouTube veröffentlicht. Habt Spaß damit.</p>



 ]]></description>
  <category>Tiles und Sprites</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023081401_neues_von_kenney/index.html</guid>
  <pubDate>Mon, 14 Aug 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081401_neues_von_kenney/images/tinybattle.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Py5 im Module Mode in Visual Studio Code</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081302_py5_vscode/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53113984909/"><img src="https://kantel.github.io/posts/2023081302_py5_vscode/images/py5modulemode-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich bin Euch ja noch den Beweis schuldig, daß <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> im <a href="https://py5coding.org/content/py5_modes.html">Module Mode</a> so ziemlich mit allem zusammenspielt, was auch nur im Entferntesten nach einem Editor oder einer IDE aussieht. Als Beispiel habe ich es hier einmal mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> durchgezogen (vergleiche <a href="https://www.flickr.com/photos/schockwellenreiter/53113984909/">Screenshot</a>), aber auch andere Editoren (wie zum Beispiel <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/geany.html">Geany</a>) sollten damit zurecht kommen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Random Rectangles in Py5</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Module Mode</span></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> py5</span>
<span id="cb1-4"></span>
<span id="cb1-5">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span>
<span id="cb1-6">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span>
<span id="cb1-7">NO_RECT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># alpha</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">43</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">126</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">114</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">149</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">156</span>),</span>
<span id="cb1-12">          py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">72</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">92</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">169</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">193</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>),</span>
<span id="cb1-13">          py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">212</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">108</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">211</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">132</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">198</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">169</span>),</span>
<span id="cb1-14">          py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">118</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">222</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">151</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>), py5.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">237</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">199</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span>)]</span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup():</span>
<span id="cb1-17">    py5.size(WIDTH, HEIGHT)</span>
<span id="cb1-18">    py5.window_move(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-19">    py5.window_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Rectangles"</span>)</span>
<span id="cb1-20">    py5.rect_mode(py5.CENTER)</span>
<span id="cb1-21">    py5.no_loop()</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw():</span>
<span id="cb1-24">    py5.background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">233</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">195</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">91</span>)</span>
<span id="cb1-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NO_RECT):</span>
<span id="cb1-26">        py5.fill(py5.random_choice(colors), a)</span>
<span id="cb1-27">        rect_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> py5.random_int(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-28">        rect_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> py5.random_int(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-29">        py5.rect(py5.random_int(rect_w, py5.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> rect_w),</span>
<span id="cb1-30">                 py5.random_int(rect_h, py5.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> rect_h),</span>
<span id="cb1-31">                 rect_w, rect_h)</span>
<span id="cb1-32">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span>
<span id="cb1-33"></span>
<span id="cb1-34">py5.run_sketch()</span></code></pre></div>
<p>Was mich daran ein wenig stört, ist die inflationäre Verwendung des Prefixes <code>py5.</code>. Weniger, weil ich ein fauler Tipper bin (das auch), sondern mehr, weil ich oft überlegen muß, was denn nun ein Py5-Kommando ist und was nicht. Aber das passiert mir zum Beispiel mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a> (Prefix: <code>np.</code>) und anderen, umfangreichen Bibliotheken ebenfalls. Damit muß man leben&nbsp;…</p>



 ]]></description>
  <category>Python</category>
  <category>Py5</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2023081302_py5_vscode/index.html</guid>
  <pubDate>Sun, 13 Aug 2023 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081302_py5_vscode/images/py5modulemode.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Thonny Version 4.1.2 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081301_thonny_4_1_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53113250501/"><img src="https://kantel.github.io/posts/2023081301_thonny_4_1_2/images/thonny412-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch wenn ich gestern erfolgreich <a href="https://kantel.github.io/posts/2023081202_py5_jupyterlab_desktop/">Py5 mit JupyterLab Desktop verbandelt</a> hatte, wird doch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> weiterhin der Editor sein, den ich im Zusammenhang mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>-Sketchen bevorzugt verwenden werde. Dafür ist <em>Tristan Bunns</em> <a href="https://github.com/tabreturn/thonny-py5mode">Thonny-Py5-Plugin</a> einfach zu elegant und komfortabel zu bedienen.</p>
<p>Daher freut es mich, daß von Thonny gestern das <a href="https://github.com/thonny/thonny/releases/tag/v4.1.2">Update auf die Version 4.1.2</a> freigegeben wurde. Thonny kommt nun auch mit einem vorinstallierten Python 3.10 (auf dem Mac mit dem <em>Universal2 Build</em> – das heißt es funzt sowohl mit Intel- wie auch mit ARM-Macs). Neben der Behebung einiger kleiner Fehler betrifft das Update sonst wohl in der Hauptsache Nutzer von MicroPython.</p>
<p>Dennoch habe ich das Update natürlich sofort bei mir installiert und getestet. Und ich freue mich, daß ich so mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> und Thonny mindestens drei IDEs installiert habe, die mit Python und Py5 hervorragend zusammenarbeiten.</p>



 ]]></description>
  <category>Thonny</category>
  <category>Python</category>
  <category>Py5</category>
  <guid>https://kantel.github.io/posts/2023081301_thonny_4_1_2/index.html</guid>
  <pubDate>Sun, 13 Aug 2023 14:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081301_thonny_4_1_2/images/thonny412.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
