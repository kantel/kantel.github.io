<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Thu, 27 Apr 2023 15:30:00 GMT</lastBuildDate>
<item>
  <title>Photostrecke: Britzer Frühling, Ende April</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52850886868/"><img src="https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/images/garten20230427_1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Noch immer ist mir keine brauchbare Kategorie eingefallen, unter der ich die Photos, die ich nun statt im Fratzenbuch hier im <del>Blog</del> Kritzelheft veröffentliche, einsortieren sollte. Aber egal, hier sind mal wieder ein paar, dieses Mal aus unserem Gärtchen:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52850967583/"><img src="https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/images/garten20230427_2.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52850619224/"><img src="https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/images/garten20230427_3.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52850429176/"><img src="https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/images/garten20230427_4.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr jeweils auf eine Seite mit einer Vergrößerung.</em></p>
<p>Denn es läßt sich nicht leugnen: Selbst in diesem schattigen Stück Erde hält der Frühling langsam Einzug. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/index.html</guid>
  <pubDate>Thu, 27 Apr 2023 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042702_britzer_fruehling_ende_april/images/garten20230427_1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bürgermeisterwahl in Berlin: Eins in die Fresse, mein Herzblatt</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042701_eins_in_die_fresse/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://previews.magnoliabox.com/corbis/mb_hero/aahz001005/MUS-FAPC1114_850.jpg"><img src="https://kantel.github.io/posts/2023042701_eins_in_die_fresse/images/hippofresse-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><strong>Wie geil ist das denn?</strong> Wenn das Stimmvieh der SPD nicht freiwillig zur Schlachtbank trottet: <em><a href="https://de.wikipedia.org/wiki/Kai_Wegner">Kai (Kai wer?) Wegner</a></em> ist heute bei der Wahl zum Regierenden Bürgermeister von Berlin <a href="https://www.rbb24.de/politik/wahl/abgeordnetenhaus/agh-2023/beitraege/berlin-wahl-zum-regierenden-buergermeister-kai-wegner-abgeordnetenhaus.html">in zwei Wahlgängen krachend gescheitert</a>. Jetzt berät der Ältestenrat über einen dritten Wahlgang (bei dem eine einfache Mehrheit genügen würde).</p>
<p>Wenn die Frau mit dem erschwindelten Doktortitel auch nur über einen Funken Restanstand verfügen würde, müßt sie nun von allen politischen Ämtern zurücktreten. Aber <em><a href="https://de.wikipedia.org/wiki/Franziska_Giffey">Frau Giffey</a></em> und Anstand, das sind zwei völlig verschiedene Welten, die hier aufeinanderprallen.</p>
<p>Doch zumindest in Neukölln ist die Unsaat der großen Komplikation aufgegangen: <em><a href="https://de.wikipedia.org/wiki/Martin_Hikel">Martin Hikel</a></em> (SPD) wurde als <a href="https://www.berliner-woche.de/bezirk-neukoelln/c-politik/martin-hikel-bleibt-buergermeisterin-neukoelln_a379612">Bezirksbürgermeister von Neukölln im Amt bestätigt</a>. Er ist jetzt ein Bürgermeister von <em><a href="https://de.wikipedia.org/wiki/Falko_Liecke">Falko Lieckes</a></em> Gnaden. <em>(Falko »Isnogud« Liecke, Ihr <a href="https://kantel.github.io/posts/2022123001_lidl_neukolln/index.html">erinnert Euch</a>? Das ist der Großwesir von der Berliner CDU, der so gerne und mit allen Mitteln <del>Regierender Bürgermeister</del> Kalif werden möchte.)</em></p>



 ]]></description>
  <category>Failed State Berlin</category>
  <category>Neukölln</category>
  <guid>https://kantel.github.io/posts/2023042701_eins_in_die_fresse/index.html</guid>
  <pubDate>Thu, 27 Apr 2023 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042701_eins_in_die_fresse/images/hippofresse.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wenn einer eine Reise plant – dann besser nicht mit der Deutschen Bahn</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042601_reiseplanung_db/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.gutenberg.org/files/61671/61671-h/images/i011.jpg"><img src="https://kantel.github.io/posts/2023042601_reiseplanung_db/images/fliegenderteppichankunft-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Morgen wird mein Vater 94 Jahre. Aus diesem Anlaß haben meine Schwestern für das Wochenende eine Geburtstagsfeier in <a href="https://de.wikipedia.org/wiki/Meschede">Meschede</a>, dem Wohnort meines Vaters, geplant. Selbstverständlich möchte auch ich daran teilnehmen. Doch von Berlin mit der Bahn nach Meschede zu reisen, ist gar nicht so einfach. Doch der Reihe nach:</p>
<p>Da ein Geburtstag im allgemeinen nicht unerwartet wie ein Sommergewitter über einen hereinbricht, ist er normalerweise planbar. Also hatte ich schon am 25. Februar eine Fahrkarte (1. Klasse, man gönnt sich ja sonst nichts) online gebucht (ein Sparticket mit Zugbindung). Am 21. März erhielt ich dann die erste Meldung über eine Fahrplanänderung und daß die Zugbindung aufgehoben sei. Eine weitere Fahrplanänderung erreichte mich am 25. März um 9:30 Uhr und eine dritte am gleichen Tag kurz vor Mitternacht. Am 29. März trudelte die vierte Fahrplanänderung bei mir ein und gestern die fünfte und vorläufig letzte.</p>
<p>Da ich schon lange den Überblick verloren hatte und auch nicht wußte, wie man online eine Sitzplatzreservierung durchführt, ohne noch einmal eine Fahrkarte zu kaufen, war ich dann heute am Fahrgastzentrum im Bahnhof Südkreuz. Denn es ist meine erste größere Reise nach meinem Schlaganfall und ich kann und will daher auch nicht stundenlang im Zug stehen müssen.</p>
<p>Nach einer Stunde (sic!) Wartezeit wurde ich dann gnädig zu einem Schalter vorgelassen. Und dort erfuhr ich dann, daß ich gut daran getan habe, denn viele Züge waren ausgebucht und eine Sitzplatzreservierung selbst in der ersten Klasse war dort nicht mehr möglich. Doch der überaus freundliche und geduldige Mitarbeiter der Deutschen Bahn (ein Lob wem ein Lob gebührt) fand schließlich eine Verbindung, die zwar verlangte, daß ich etwas früher aufstehe, aber dafür komme ich auch – wenn alles nach Fahrplan läuft – eine Stunde früher in Meschede an.</p>
<p>Liebe Bahn, so wird das nichts mit der Verkehrswende, Wenn Ihr in Eurem neoliberalen Privatisierungswahn die Infrastruktur kaputtspart und nur noch auf Verschleiß fahrt, dann sind halt Zugausfälle und Verspätungen die Folge. Und liebe grüngetüchte Liberale: Nicht jeder kann Fahrrad fahren und nicht alles ist mit einem Fahrrad zu erreichen. Um eine Verkehrswende durchzuführen, muß nicht nur Geld in die Bahn- und ÖPNV-Infrasturktur gesteckt werden, sondern die Betriebe sind als Mittel der Daseinsvorsorge wieder in öffentliches Eigentum zu überführen. Notfalls müssen sie wegen totalen Marktversagens entschädigungslos enteignet werden. Da hilft das Geschwätz von Zerschlagung und weiterer Privatisierung, das momentan die CSU in die Diskussion wirft und das von Rot bis Grün gerne aufgegriffen wird, nicht weiter. Statt in weiteren Autobahnbau ist jeder Cent in die Bahn zu stecken. Aber nicht in die angeblich prestigeträchtigen Milliardengräber wie Stuttgart&nbsp;21.</p>
<p>Und ich hoffe jetzt nur, daß mir nicht noch ein <a href="https://www.tagesschau.de/wirtschaft/unternehmen/deutsche-bahn-evg-tarifkonflikt-100.html">Bahntreik</a> einen Strich durch die Rechnung macht. Nicht einmal ihre Mitarbeiter will die Deutsche Bahn AG anständig bezahlen, damit sie ihren Shareholdern weiter Geld in den Rachen stopfen kann. <em>Heilige Einfalt!</em></p>



 ]]></description>
  <category>Verkehr</category>
  <category>Verkehrswende</category>
  <guid>https://kantel.github.io/posts/2023042601_reiseplanung_db/index.html</guid>
  <pubDate>Wed, 26 Apr 2023 15:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042601_reiseplanung_db/images/fliegenderteppichankunft.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein wenig Re-enactment mit Trinket: Hommage an Kasimir Malewitsch</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042502_malewitsch_trinket/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52845352142/"><img src="https://kantel.github.io/posts/2023042502_malewitsch_trinket/images/hommagemalewitch-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es gibt Dinge, die einfach holprig sind im Processing-Mode von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>. Nachdem ich im <a href="https://kantel.github.io/posts/2023042501_matplotlib_fuer_arme_trinket/">letzten Beitrag</a> schon bemängelt hatte, daß Trinket mehr als <em>picky</em> mit <code>noLoop()</code> umgeht und Processing-Funktionen wie <code>color()</code> nur in <code>setup()</code> akzeptiert, mußte ich heute auch noch feststellen, daß der Processing-Mode in Trinket keine Möglichkeit kennt, externe Fonts (wie zum Beispiel die berüchtigten, aber freien Google-Fonts) zu nutzen. Zumindest habe ich keine gefunden.</p>
<p>Das ist natürlich für die Spieleprogrammierung ein ziemlicher Showstopper und ich spiele daher nun mit dem Gedanken, alternativ <a href="https://kantel.github.io/posts/2023032602_pizza_plane_with_pizzas/">meinen Pizzaflieger</a> in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> zu implementieren, um eine Version für das Web zu haben.</p>
<p>Damit der Tag nicht nicht völlig frustierend endet, habe ich mich erinnert, warum ich damals von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/ides/replit.html">Replit</a> nach Trinket <a href="https://kantel.github.io/posts/20221222802_processingpy_replit/">gewechselt bin</a> und meine <a href="https://www.flickr.com/photos/schockwellenreiter/52845352142/">Hommage an Kasimir Malewitsch</a> schnell noch nach Trinket portiert (das stand nämlich ebenfalls noch aus):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Map Art: Hommage an Kasimir Malewitsch</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;"># Author: Jörg Kantel</span></span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> processing <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb1-4"><span class="im" style="color: #00769E;">from</span> random <span class="im" style="color: #00769E;">import</span> randint</span>
<span id="cb1-5"></span>
<span id="cb1-6">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">600</span>, <span class="dv" style="color: #AD0000;">400</span></span>
<span id="cb1-7">lmargin <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">40</span>   <span class="co" style="color: #5E5E5E;"># unterer Rand und Rand links</span></span>
<span id="cb1-8">umargin <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100</span>  <span class="co" style="color: #5E5E5E;"># oberer Rand und Rand rechts</span></span>
<span id="cb1-9">nIter   <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">30</span>   <span class="co" style="color: #5E5E5E;"># Anzahl der Shapes</span></span>
<span id="cb1-10">a       <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100</span>  <span class="co" style="color: #5E5E5E;"># Transparenz</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;">def</span> drawRect():</span>
<span id="cb1-14">    x <span class="op" style="color: #5E5E5E;">=</span> randint(lmargin, width <span class="op" style="color: #5E5E5E;">-</span> umargin)</span>
<span id="cb1-15">    y <span class="op" style="color: #5E5E5E;">=</span> randint(lmargin, height <span class="op" style="color: #5E5E5E;">-</span> umargin)</span>
<span id="cb1-16">    w <span class="op" style="color: #5E5E5E;">=</span> randint(lmargin, umargin)</span>
<span id="cb1-17">    h <span class="op" style="color: #5E5E5E;">=</span> randint(lmargin, umargin)</span>
<span id="cb1-18">    rect(x, y, w, h)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;">def</span> drawCircle():</span>
<span id="cb1-21">    x <span class="op" style="color: #5E5E5E;">=</span> randint(lmargin, width <span class="op" style="color: #5E5E5E;">-</span> umargin)</span>
<span id="cb1-22">    y <span class="op" style="color: #5E5E5E;">=</span> randint(lmargin, height <span class="op" style="color: #5E5E5E;">-</span> umargin)</span>
<span id="cb1-23">    r <span class="op" style="color: #5E5E5E;">=</span> randint(<span class="dv" style="color: #AD0000;">15</span>, <span class="dv" style="color: #AD0000;">50</span>)</span>
<span id="cb1-24">    ellipse(x, y, r, r)</span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="kw" style="color: #003B4F;">def</span> setup():</span>
<span id="cb1-27">    size(WIDTH, HEIGHT)</span>
<span id="cb1-28">    background(<span class="dv" style="color: #AD0000;">230</span>, <span class="dv" style="color: #AD0000;">226</span>, <span class="dv" style="color: #AD0000;">204</span>)</span>
<span id="cb1-29">    malewitsch1 <span class="op" style="color: #5E5E5E;">=</span> [color(<span class="dv" style="color: #AD0000;">42</span>, <span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">45</span>),</span>
<span id="cb1-30">               color(<span class="dv" style="color: #AD0000;">160</span>, <span class="dv" style="color: #AD0000;">51</span>, <span class="dv" style="color: #AD0000;">46</span>),</span>
<span id="cb1-31">               color(<span class="dv" style="color: #AD0000;">54</span>, <span class="dv" style="color: #AD0000;">50</span>, <span class="dv" style="color: #AD0000;">80</span>),</span>
<span id="cb1-32">               color(<span class="dv" style="color: #AD0000;">50</span>, <span class="dv" style="color: #AD0000;">80</span>, <span class="dv" style="color: #AD0000;">105</span>),</span>
<span id="cb1-33">               color(<span class="dv" style="color: #AD0000;">180</span>, <span class="dv" style="color: #AD0000;">144</span>, <span class="dv" style="color: #AD0000;">55</span>),</span>
<span id="cb1-34">               color(<span class="dv" style="color: #AD0000;">215</span>, <span class="dv" style="color: #AD0000;">158</span>, <span class="dv" style="color: #AD0000;">40</span>),</span>
<span id="cb1-35">               color(<span class="dv" style="color: #AD0000;">140</span>, <span class="dv" style="color: #AD0000;">82</span>, <span class="dv" style="color: #AD0000;">48</span>)]</span>
<span id="cb1-36">    <span class="cf" style="color: #003B4F;">for</span> _ <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(nIter):</span>
<span id="cb1-37">        rand <span class="op" style="color: #5E5E5E;">=</span> randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb1-38">        <span class="cf" style="color: #003B4F;">if</span> rand <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">30</span>:</span>
<span id="cb1-39">            stroke(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-40">            strokeWeight(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-41">            fill(malewitsch1[randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>)])</span>
<span id="cb1-42">            <span class="cf" style="color: #003B4F;">if</span> randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">100</span>) <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">50</span>:</span>
<span id="cb1-43">                drawRect()</span>
<span id="cb1-44">            <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb1-45">                drawCircle()</span>
<span id="cb1-46">        <span class="cf" style="color: #003B4F;">elif</span> rand <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">85</span>:</span>
<span id="cb1-47">            fill(malewitsch1[randint(<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">5</span>)])</span>
<span id="cb1-48">            drawRect()</span>
<span id="cb1-49">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb1-50">            stroke(malewitsch1[<span class="dv" style="color: #AD0000;">6</span>])</span>
<span id="cb1-51">            strokeWeight(<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb1-52">            noFill()</span>
<span id="cb1-53">            drawCircle()</span>
<span id="cb1-54">            stroke(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-55">            strokeWeight(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-56">    <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"I did it, Babe!"</span>)</span>
<span id="cb1-57">    </span>
<span id="cb1-58">run()</span></code></pre></div>
<p>Dabei ist mir noch ein Weg eingefallen, wie man die Farbkonstanten in einer Liste im <code>setup()</code> unterbringt (da es wegen des fehlenden <code>noLoop()</code> kein <code>draw()</code> gibt, entfällt die sonst notwendige <code>global</code>-Deklaration).</p>
<p>Ansonsten wie immer: Den <a href="https://github.com/kantel/trinket/blob/main/malewitsch/main.py">Quellcode</a> gibt es nicht nur auf GitHub sondern auch zum <a href="https://trinket.io/python/d3cce6e497">Remix auf Trinket</a>. Macht damit, was Ihr wollt.</p>
<p>Inzwischen habe ich große Lust bekommen, P5.js anzuwerfen und den Pizzaflieger dort zu implementieren. Nicht nur, weil JavaScript das nächste, große Ding ist, sondern auch, weil ich endlich testen will, wie sich <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> und sein Live-Server mit P5.js schlagen. Ich habe also zu tun. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Processing</category>
  <category>Trinket</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023042502_malewitsch_trinket/index.html</guid>
  <pubDate>Tue, 25 Apr 2023 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042502_malewitsch_trinket/images/hommagemalewitch.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein wenig Schnickschnack: »Matplotlib für Arme« in Trinket</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042501_matplotlib_fuer_arme_trinket/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52843385069/"><img src="https://kantel.github.io/posts/2023042501_matplotlib_fuer_arme_trinket/images/fplottrinket-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Bevor ich mich – was schon seit einiger Zeit auf meiner Agenda steht – aufmache und herausfinde, wie <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/glowwscript.html">GlowScript</a> mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> funktioniert, habe ich erst noch einmal eine Fingerübung erledigt, die ich auch schon lange ausprobieren wollte:</p>
<p>Ich wollte nämlich wissen, ob meine »Matplotlib für Arme«, die ich <a href="http://blog.schockwellenreiter.de/2021/03/2021031901.html">hier (Teil 1)</a> und <a href="http://blog.schockwellenreiter.de/2021/03/2021033002.html">hier (Teil 2)</a> schon einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> implementiert hatte, auch in Trinket läuft. Damals hatte ich meinen <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">Abschied von TigerJython</a> noch nicht vollzogen, also war die Implementierung in Processing.py mehr eine Spielerei. Nun aber denke ich, daß es notwendig ist, solch einen in Python programmierten (einfachen) Funktionsplotter auch für das Web zu haben. Und da bot sich Trinket einfach an.</p>
<p>Um es kurz zu machen: Der Port nach Trinket war recht einfach. Ich mußte nur berücksichtigen, daß die Processing-Bibliothek in Trinket aus irgendwelchen (nichtdokumentierten) Gründen ein <code>noLoop()</code> ablehnt und daß <code>color()</code> nur <strong>nach</strong> dem <code>setup()</code> aufgerufen werden kann. Das ist schade, weil dadurch eine <strong>globale</strong> Konstantenvereinbarung der verwendeten Farben (die ich gerne implementiert hätte) nur erschwert (eine unnütze Häufung von <code>global</code>-Vereinbarungen) möglich ist. Daher habe ich dies gelassen und die Farben hart codiert.</p>
<p>Hier der komplette Quelltext:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Processing(.py) Graphing Tool</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;"># Inspired from »Visualizing Data« (Ben Fry) and</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># »Math Adventures with Python« (Peter Farrell)</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;">from</span> processing <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb1-6"><span class="im" style="color: #00769E;">import</span> math</span>
<span id="cb1-7"></span>
<span id="cb1-8">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">720</span>, <span class="dv" style="color: #AD0000;">450</span></span>
<span id="cb1-9">dt <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.05</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;"># Zeichenbereich</span></span>
<span id="cb1-12">plot_x1 <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">120</span></span>
<span id="cb1-13">plot_x2 <span class="op" style="color: #5E5E5E;">=</span> WIDTH <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">80</span></span>
<span id="cb1-14">label_x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span></span>
<span id="cb1-15">plot_y1 <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span></span>
<span id="cb1-16">plot_y2 <span class="op" style="color: #5E5E5E;">=</span> HEIGHT <span class="op" style="color: #5E5E5E;">-</span> plot_y1</span>
<span id="cb1-17">label_y <span class="op" style="color: #5E5E5E;">=</span> HEIGHT <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">25</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;"># Funktionsabhängige Variablen</span></span>
<span id="cb1-20">plot_title <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Sinuskurve"</span>     <span class="co" style="color: #5E5E5E;"># Plot-Titel</span></span>
<span id="cb1-21">y_label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"y = sin(x)"</span></span>
<span id="cb1-22">x_label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"x-Werte (-10 … 10)"</span></span>
<span id="cb1-23">x_min <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb1-24">x_max <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb1-25">y_min <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb1-26">y_max <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb1-27">stepsize_x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>                <span class="co" style="color: #5E5E5E;"># Ticks auf der x-Achse</span></span>
<span id="cb1-28">stepsize_y <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>               <span class="co" style="color: #5E5E5E;"># Ticks auf der y-Achse</span></span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="co" style="color: #5E5E5E;"># Zu zeichnende Funktion</span></span>
<span id="cb1-31"><span class="kw" style="color: #003B4F;">def</span> f(x):</span>
<span id="cb1-32">  <span class="cf" style="color: #003B4F;">return</span>(math.sin(x))</span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="kw" style="color: #003B4F;">def</span> setup():</span>
<span id="cb1-35">  size(WIDTH, HEIGHT)</span>
<span id="cb1-36">  <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"Funktionsplotter: "</span> <span class="op" style="color: #5E5E5E;">+</span> plot_title)</span>
<span id="cb1-37">  plot_font <span class="op" style="color: #5E5E5E;">=</span> createFont(<span class="st" style="color: #20794D;">"American Typewriter"</span>, <span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb1-38">  textFont(plot_font)</span>
<span id="cb1-39">  background(<span class="dv" style="color: #AD0000;">234</span>, <span class="dv" style="color: #AD0000;">218</span>, <span class="dv" style="color: #AD0000;">184</span>)</span>
<span id="cb1-40">  </span>
<span id="cb1-41">  <span class="co" style="color: #5E5E5E;"># Den Plot in einem Kasten zeichnen</span></span>
<span id="cb1-42">  fill(<span class="dv" style="color: #AD0000;">250</span>, <span class="dv" style="color: #AD0000;">250</span>, <span class="dv" style="color: #AD0000;">250</span>)</span>
<span id="cb1-43">  rectMode(CORNERS)</span>
<span id="cb1-44">  noStroke()</span>
<span id="cb1-45">  rect(plot_x1, plot_y1, plot_x2, plot_y2)</span>
<span id="cb1-46">  </span>
<span id="cb1-47">  <span class="co" style="color: #5E5E5E;"># Titel des Plots zeichnen</span></span>
<span id="cb1-48">  fill(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">150</span>, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-49">  textSize(<span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb1-50">  textAlign(LEFT, BASELINE)</span>
<span id="cb1-51">  text(plot_title, plot_x1, plot_y1 <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-52">  </span>
<span id="cb1-53">  <span class="co" style="color: #5E5E5E;"># Plot zeichnen</span></span>
<span id="cb1-54">  draw_grid()</span>
<span id="cb1-55">  draw_axis_labels()</span>
<span id="cb1-56">  draw_function()</span>
<span id="cb1-57">  </span>
<span id="cb1-58">  <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"I did it, Babe!"</span>)</span>
<span id="cb1-59">  </span>
<span id="cb1-60"><span class="kw" style="color: #003B4F;">def</span> draw_grid():</span>
<span id="cb1-61">  <span class="co" style="color: #5E5E5E;"># Zeichne Gitter und Label</span></span>
<span id="cb1-62">  textSize(<span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-63">  textAlign(CENTER, TOP)</span>
<span id="cb1-64">  <span class="co" style="color: #5E5E5E;"># x-Achse</span></span>
<span id="cb1-65">  <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(x_min, x_max <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>, stepsize_x):</span>
<span id="cb1-66">    x <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">map</span>(i, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb1-67">    fill(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">150</span>, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-68">    text(<span class="bu" style="color: null;">str</span>(i), x, plot_y2 <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-69">    strokeWeight(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-70">    stroke(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">250</span>, <span class="dv" style="color: #AD0000;">250</span>)</span>
<span id="cb1-71">    line(x, plot_y1, x, plot_y2)</span>
<span id="cb1-72">  <span class="co" style="color: #5E5E5E;"># y-Achse</span></span>
<span id="cb1-73">  <span class="cf" style="color: #003B4F;">for</span> j <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(y_max, y_min <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span>, stepsize_y):</span>
<span id="cb1-74">    y <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">map</span>(j, y_max, y_min, plot_y1, plot_y2)</span>
<span id="cb1-75">    <span class="cf" style="color: #003B4F;">if</span> j <span class="op" style="color: #5E5E5E;">==</span> y_min:         <span class="co" style="color: #5E5E5E;"># Korrektur unterste Zeile</span></span>
<span id="cb1-76">      textAlign(RIGHT, BOTTOM)</span>
<span id="cb1-77">    <span class="cf" style="color: #003B4F;">elif</span> j <span class="op" style="color: #5E5E5E;">==</span> y_max:       <span class="co" style="color: #5E5E5E;"># Korrektur oberste Zeile</span></span>
<span id="cb1-78">      textAlign(RIGHT, TOP)</span>
<span id="cb1-79">    <span class="cf" style="color: #003B4F;">else</span>:                  <span class="co" style="color: #5E5E5E;"># Vertikal zentrieren</span></span>
<span id="cb1-80">      textAlign(RIGHT, CENTER)</span>
<span id="cb1-81">    fill(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">150</span>, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-82">    text(<span class="bu" style="color: null;">str</span>(j), plot_x1 <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">10</span>, y)</span>
<span id="cb1-83">    strokeWeight(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-84">    stroke(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">250</span>, <span class="dv" style="color: #AD0000;">250</span>)</span>
<span id="cb1-85">    line(plot_x1, y, plot_x2, y)</span>
<span id="cb1-86">    </span>
<span id="cb1-87"><span class="kw" style="color: #003B4F;">def</span> draw_axis_labels():</span>
<span id="cb1-88">  fill(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">150</span>, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-89">  textSize(<span class="dv" style="color: #AD0000;">13</span>)</span>
<span id="cb1-90">  textLeading(<span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb1-91">  textAlign(CENTER, CENTER)</span>
<span id="cb1-92">  text(y_label, label_x, (plot_y1 <span class="op" style="color: #5E5E5E;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-93">  textAlign(CENTER,  BASELINE)</span>
<span id="cb1-94">  text(x_label, (plot_x1 <span class="op" style="color: #5E5E5E;">+</span> plot_x2)<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span>, label_y)</span>
<span id="cb1-95"></span>
<span id="cb1-96"><span class="kw" style="color: #003B4F;">def</span> draw_function():</span>
<span id="cb1-97">  stroke(<span class="dv" style="color: #AD0000;">250</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-98">  x <span class="op" style="color: #5E5E5E;">=</span> x_min</span>
<span id="cb1-99">  <span class="cf" style="color: #003B4F;">while</span> x <span class="op" style="color: #5E5E5E;">&lt;=</span> x_max <span class="op" style="color: #5E5E5E;">-</span> dt:</span>
<span id="cb1-100">    x_0 <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">map</span>(x, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb1-101">    x_1 <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">map</span>(x <span class="op" style="color: #5E5E5E;">+</span> dt, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb1-102">    y_0 <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">map</span>(f(x), y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb1-103">    y_1 <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">map</span>(f(x <span class="op" style="color: #5E5E5E;">+</span> dt), y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb1-104">    line(x_0, y_0, x_1, y_1)</span>
<span id="cb1-105">    x <span class="op" style="color: #5E5E5E;">+=</span> dt</span>
<span id="cb1-106"></span>
<span id="cb1-107">run()</span></code></pre></div>
<p>Für andere, eigene Funtionen müssen »nur« die <em>funktionsabhängigen Variablen</em> und die zu zeichnende Funktion <code>f(x)</code> angepaßt werden. Ich habe dies in <strong>einem Codeblock</strong> (Zeilen 19 bis 32) zusammengefaßt. Alles andere kann so bleiben, wie es ist.</p>
<p>Der <a href="https://github.com/kantel/trinket/blob/main/fplot/main.py">Quelltext</a> ist nicht nur wie gewohnt auf GitHub zu finden, sondern Ihr könnt das <a href="https://trinket.io/python/3b1e70c445">Trinket auch remixen</a> und an Eure Bedrürfnisse anpassen. Macht damit also, was Ihr wollt und habt Spaß.</p>



 ]]></description>
  <category>Python</category>
  <category>Processing</category>
  <category>Trinket</category>
  <guid>https://kantel.github.io/posts/2023042501_matplotlib_fuer_arme_trinket/index.html</guid>
  <pubDate>Tue, 25 Apr 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042501_matplotlib_fuer_arme_trinket/images/fplottrinket.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der Schockwellenreiter wird 23: Happy Birthday, liebes Kritzelheft</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042401_schockwellenreiter_23/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://4.bp.blogspot.com/-ZPpOfUjmGQ0/UPHTPT9SG1I/AAAAAAAAB4A/yggKwyH1wPE/s1600/wiggily+5.jpg"><img src="https://kantel.github.io/posts/2023042401_schockwellenreiter_23/images/wiggilyskating-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><strong>Dieselbe Prozedur wie jedes Jahr</strong>: Heute vor dreiundzwanzig Jahren war es – im Gegensatz zu diesem Jahr – in Berlin unerträglich heiß (28°C), doch statt auf unserer <a href="http://www.kantel.de/privat/dg.html">Dachterrasse</a> (auf die verlinke ich auch nur einmal im Jahr 🤓 – seit unserem Umzug nach Britz vor dreizehn Jahren ist es ja auch nicht mehr »unsere« Dachterrasse) zu hocken und mir die Sonne auf den Bauch scheinen zu lassen, saß ich im schattigen Arbeitszimmer vor dem Rechner, wühlte mich durch die <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/frontier.html">Frontier</a>- und <a href="http://cognitiones.kantel-chaos-team.de/webworking/cms/manila.html">Manila</a>-Dokumentation und hob dieses <del>Weblog</del> Kritzelheft aus der Taufe.</p>
<p>Doch halt, etwas ist doch anders geworden! Ich habe meinen auch fast jedes Jahr gefaßten Vorsatz endlich in die Tat umgesetzt und diesem Kritzelheft das lange versprochene Relaunch verpaßt: Statt <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/rubyfrontier.html">RubyFrontier</a> sind es seit <a href="https://kantel.github.io/posts/2022120602_schockwellenreiteronline/">Dezember letzten Jahres</a> neue Werkzeuge, nämlich <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> mit <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rmarkdown.html">R Markdown</a>, die hinter dem <em>Schockwellenreiter</em> werkeln, und die (statischen) Seiten werden auch nicht mehr auf <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/amazon/amazons3.html">Amazon S3</a>, sondern auf <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html">GitHub Pages</a> gehostet. Und der <em>Schockwellenreiter</em> hat endlich auch ein responsives Layout, das – im großen und ganzen – auch auf mobilen Geräten funktioniert, einen <a href="https://kantel.github.io/index.xml">RSS-Vollfeed</a>, und er ist (weil in GitHub Pages fest eingebaut) dem Trend zum »teuren Sicherheitstheater« <em>(Dave Winer)</em> erlegen. Sprich: Der <em>Schockwellenreiter</em> wird per <code>HTTPS</code> ausgeliefert. Daneben hat der <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">GoatCounter</a> mein bisheriges <a href="http://cognitiones.kantel-chaos-team.de/webworking/tools/piwik.html">Neugiertool</a> ersetzt und mit <a href="https://giscus.app/de">Giskus</a> habe ich diesen Seiten auch <a href="https://kantel.github.io/posts/2022120901_giscus/">ein Kommentarsystem verpaßt</a>.</p>
<p>In den letzten Monaten ist also ziemlich viel passiert. Ich hoffe, daß damit der <em>Schockwellenreiter</em> wieder fit für viele neue Jahre ist. Als Nahziel habe ich erst einmal die 25-Jahr-Feier dieser Seiten angepeilt.</p>
<p>In diesem Sinne: Happy Birthday, liebes Kritzelheft. Mögest Du mich und Deine Leserinnen und Leser noch viele Jahre begleiten.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2023042401_schockwellenreiter_23/index.html</guid>
  <pubDate>Mon, 24 Apr 2023 13:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042401_schockwellenreiter_23/images/wiggilyskating.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Klimaspirale: Eine Coding Challenge zum »Tag der Erde«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042303_klimaspirale/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://ed-hawkins.github.io/climate-visuals/SPIRALS/global_temperature_spiral_2022_large.gif"><img src="https://kantel.github.io/posts/2023042303_klimaspirale/images/globaltemperaturespiral2022-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gestern war der »<a href="https://de.wikipedia.org/wiki/Tag_der_Erde">Tag der Erde</a>« <em>(Earth Day)</em>. Er wird seit 1970 (seit 1990 international) jährlich begangen, um auf die Gefahren durch die wachsende Umweltverschmutzung hinzuweisen. Aus diesem Anlaß hat <em>Daniel Shiffman</em> eine Coding Challenge veröffentlicht, die die ursprünglich vom Klimawissenschaftler <a href="https://edhawkins.org/">Ed Hawkins</a> entworfene Klimaspirale, eine visuelle Darstellung der sich im Laufe der Zeit ändernden Temperaturen, in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> nachprogrammiert. Diese Klimaspirale veranschaulicht die dringende Notwendigkeit, den Klimawandel anzugehen und ist gleichzeitig in schönes Beispiel einer gelungenen Datenvisualisierung.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/rVBTxnRyOuE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Die Daten kommen vom <a href="https://data.giss.nasa.gov/gistemp/">National Aeronautics and Space Administration Goddard Institute for Space Studies</a> der NASA und können von dort als TXT- oder CSV-Dateien heruntergeladen werden (nach unten scrollen). <em>Shiffman</em> verlinkt in der Videobschreibung noch auf etliche andere Datenquellen, die alle auf die Dringlichkeit des Klimawandels hinweisen.</p>
<p>Die Notwendigkeit einer radikalen Änderung in der Politik ist also kein Hirngespinst angeblich durchgeknallter »Klimakleber«, wie uns Politik und (Springer-) Presse in seltsamer Einmütigkeit weismachen wollen, sondern tatsächlich gegeben. Doch wie der bolivianische Präsident <em>Evo Morales</em> auf der <em>Weltkonferenz der Völker über den Klimawandel</em> schon 2010 erklärte, ist das kapitalistische System Hauptursache für das Ungleichgewicht auf der Erde, da der Planet und seine Bewohner unter dem grenzenlosen Wachstumszwang leiden. Da das im Kapitalismus aber niemand hören will, hackt man lieber auf die »Klimakleber« herum, das ist wohlfeiler. Man muß sich daher über die Einmütigkeit von Politik und bürgerlicher Presse nicht wundern.</p>
<p>Ich weiß nicht, ob <em>Shiffman</em> diese Konsequenz mitbedacht hat, aber seine Visualisierung regt zum Nachdenken an. Und wenn dieses Nachdenken auch noch zum <del>Klimakleben</del> Handeln führt, ist das mehr, als ich erwarte.</p>



 ]]></description>
  <category>P5.js</category>
  <category>Visualisierung</category>
  <category>Klimawandel</category>
  <category>Umwelt</category>
  <guid>https://kantel.github.io/posts/2023042303_klimaspirale/index.html</guid>
  <pubDate>Sun, 23 Apr 2023 17:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042303_klimaspirale/images/globaltemperaturespiral2022.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Also doch Visual Studio Code?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042302_also_doch_vs_code/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52838686227/"><img src="https://kantel.github.io/posts/2023042302_also_doch_vs_code/images/pizzaplaneinvscode-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der Grund, warum ich gestern <a href="https://kantel.github.io/posts/2023042301_thonny_4_0_2/">noch ein wenig mit Python spielte</a> war der Versuch, meine <a href="https://kantel.github.io/posts/2023041603_spyder/">Begeisterung für Spyder</a> zu retten. Denn nach einem anfänglichen Hoch zeigte sich doch, daß die Python-IDE mit Ihrerer Bevormundungsstrategie (kein <code>pip</code> und damit auch keine Zusatzmodule) mich mehr einschränkte, als ich bereit war zu akzeptieren.</p>
<p>In meiner Verzweiflung hatte ich sogar mein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda-Python</a> komplett neu installiert und das darin mitgelieferte Spyder angeworfen. Nachdem dieses sich aber ebenfalls weigerte, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> – obwohl in der Anaconda-Distribution enthalten – zu starten und zudem (nach einem Update auf das aktuelle Spyder 5.4.3) eine fehlende Abhängigkeit beklagte und die Installation von <code>pylsp</code> verlangte (ein Modul, das <code>conda</code> aber nicht kannte), hatte ich es aufgegeben.</p>
<p>Also habe ich zum wiederholten Mal in den sauren Apfel gebissen und <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> angeworden. Denn eigentlich benötige ich ja, um der <em>Mac-Only-Falle</em>, in die ich mit meinem Leib-und-Magen-Editor <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/textmate.html">TextMate</a> geraten war, auch und gerade wegen meiner verstärkten Hinwendung zum Chromebook, zu entkommen, einen plattformübergreifenden <em>all purpose</em> Editor, der mehr kann, als nur Python.</p>
<p>Und da hatte ich zähneknirschend für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> sowieso schon Microsofts (Open Source) Boliden akzeptiert. Warum sollte ich mich also weiter verzetteln?</p>
<p>Nachdem ich Visual Studio Code mitgeteilt hatte, daß mein aktuelles Anaconda-Python in <code>~/anaconda3/bin/python</code> zu finden sei und ich mit <code>pip install pgzero</code> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> inklusive <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html">Pygame Zero</a> nachinstalliert hatte, konnte ich neben Programmen aus dem üblichen <em>Python Scientific Stack</em> auch Pygame- (Zero-) und Turtle-Apps problemlos aus Visual Studio Code heraus starten.</p>
<p>Jetzt habe ich folgendes Programmier-Szenario für Desktop-Applikationen: Für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>-Apps werde ich weiterhin ausschließlich auf Thonny setzen, für andere Python-Apps habe ich die Wahl zwischen Thonny und Visual Studio Code (wobei ich für Pygame (Zero)-Anwendungen und Pythons Turtle wohl eher zu Thonny neige, Anwendungen, die den <em>Scientific Stack</em> betreffen aber Visual Studio Code und meinem Anaconda-Python überlasse). Und für Ren’Py und P5.js hat sich VS Code sowieso schon bewährt.</p>
<p>Manchmal werden die Probleme doch zu groß, wenn man unbedingt gegen den Strom schwimmen will …</p>



 ]]></description>
  <category>Python</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2023042302_also_doch_vs_code/index.html</guid>
  <pubDate>Sun, 23 Apr 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042302_also_doch_vs_code/images/pizzaplaneinvscode.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Thonny 4.0.2 ist draußen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042301_thonny_4_0_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52839465539/"><img src="https://kantel.github.io/posts/2023042301_thonny_4_0_2/images/thonny402-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Neben meinem gestrigen <a href="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/">Ausflug in die Tulpen</a> hatte ich auch noch ein wenig Zeit gefunden, mit Python zu spielen. Dabei kam mir die Meldung unter, daß <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>, mein freundlicher, plattformübergreifender (macOS, Linux (also auch <a href="http://blog.schockwellenreiter.de/2022/07/2022071501.html">»mein« Chromebook</a>) und Windows) Python Editor die Version 4.0.2 freigegeben hatte.</p>
<p>Es ist in der Hauptsache ein Bugfix-Release ohne neue Features, aber da die <a href="https://github.com/thonny/thonny/releases/tag/v4.0.2">Release Notes</a> davon sprachen, daß <code>__file__</code> nun eine absolute Pfadangabe enthalten würde<sup>1</sup>, und ich zudem von Natur aus neugierig bin, beschloß ich, das Update durchzuführen.</p>
<p>Das Update verlief erwartungsgemäß problemlos, meine vielen Erweiterungen (<a href="http://blog.schockwellenreiter.de/2022/07/2022070802.html">insbesondere die zu Py5</a>) wurden anstandslos übernommen. An der sauberen Arbeit des Thonny-Teams können sich viele andere Entwickler ein Beispiel nehmen.</p>
<p>Ich bin dadurch richtig motiviert, auch mal wieder etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> anzustellen. Das ist ja in den letzten Wochen ein wenig ins Hintertreffen geraten. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich hatte damit zwar in Thonny nie irgendwelche Probleme, <a href="https://kantel.github.io/posts/2023010801_python_und_cwd/">wohl aber in Visual Studio Code</a>, vergleiche den <a href="https://kantel.github.io/posts/2023042302_also_doch_vs_code/">nächsten Beitrag</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Thonny</category>
  <guid>https://kantel.github.io/posts/2023042301_thonny_4_0_2/index.html</guid>
  <pubDate>Sun, 23 Apr 2023 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042301_thonny_4_0_2/images/thonny402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wenn der Frühling kommt, dann zeig ich Dir Tulpen vom Britzer Damm</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52837240794/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe dieses Mal auf <a href="http://www.gabi-kantel.de/">Gabi</a> gehört. Sie meinte nämlich nach meinem <a href="https://kantel.github.io/posts/2023041302_keine_tulpen/">letzten Desaster</a>, daß ich doch einfach warten solle, bis in unserem Schattengärtchen die ersten Knospen ans Licht drängen, dann wären mit Sicherheit auch im <a href="https://www.britzergarten.de/">Britzer Garten</a> die Tupen bereit zum Blühen. Und Gabi hatte Recht, heute war die Tulpen- und Baumblüte dort geradezu explodiert:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52837480900/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52836500077/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52836501017/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen04.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52837072446/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837072036/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen06.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837518433/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen07.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52837066196/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen09.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837068096/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837473520/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen10.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52837466745/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837065151/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen12.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837463495/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen13.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52837463290/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen14.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837063091/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen15.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837058631/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen16.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52837058971/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen17.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52837240214/"><img src="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen18.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr jeweils auf eine Seite mit einer Vergrößerung.</em></p>
<p>Es war ein schöner Nachmittag, besonders als mir zum Schluß dann auch noch die Garten-Töff-Töff vor die Linse schnaufte.</p>
<p>Aus bekannten Gründen gibt es die Photostrecke nicht im Gesichtsbuch, sondern nur hier im <del>Blog</del> Kritzelheft. Da müßt Ihr wieder durch! <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Photographie</category>
  <category>Neukölln</category>
  <category>Parks und Gärten</category>
  <guid>https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/index.html</guid>
  <pubDate>Sat, 22 Apr 2023 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042201_tulpen_vom_britzer_damm/images/britzerdammtulpen01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Video-Tutorials zum Wochenende: Spieleprogrammierung mit Pygame</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=u7LPRqrzry8"><img src="https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/images/cameraspygame-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es ist wieder Freitag und ich möchte Euch wieder mit ein paar Video-Tutorials für das Wochenende versorgen, damit Ihr nicht vor lauter Langeweile in die Kirchen rennt. Auch wenn es langsam ein wenig monothematisch wirkt, der Bestand an (guten) Tutorials zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> scheinen einfach unerschöpflich zu sein und so sind mir in den letzten Tagen wieder ein paar Highlights untergekommen, die ich Euch nicht vorenthalten möchte:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/u7LPRqrzry8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Den Anfang macht mal wieder <em>Clear Code</em>, dessen mehr als einstündges Tutorial zu <a href="https://www.youtube.com/watch?v=u7LPRqrzry8">Cameras in Pygame</a> alleine schon einen Eintrag in dieses <del>Blog</del> Kritzelheft wert ist. Den <a href="https://github.com/clear-code-projects/Pygame-Cameras">Quellcode und die Assets</a> findet Ihr selbstverständlich auf GitHub.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/3Oc9ZqzPnSc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Doch wartet, das ist noch nicht alles, denn da ist mir noch das fast zweieinhalbstündige »<a href="https://www.youtube.com/watch?v=3Oc9ZqzPnSc">Classic Arcade Style Shooting Game</a>« untergekommen, dessen Programmierung ein gutgelaunter <em>LeMaster Tech</em> präsentiert. Auch hier findet Ihr den <a href="https://github.com/plemaster01/ShootingGallery">Quellcode und die Assets</a> zum Download auf GitHub.</p>
<p>Und falls das Wetter doch nicht – wie es die Wetterfrösche eigentlich versprochen haben – zu Freiluft-Aktivitäten animiert, das obige Video ist Teil der Playlist <a href="https://www.youtube.com/playlist?list=PLsFyHm8kJsx32EFcsJNt5sDI_nKsanRUu">PyGame Full Game Builds</a>, die derzeit aus 26 oft mehrstündigen Videos besteht. Ihr findet also genug Material, um ja keine Langeweile aufkommen zu lassen. Da das jüngste Update erst wenige Wochen alt ist, habe ich den Kanal abonniert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/nEEzUijhbkc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, Klimawandel und Computerspiele war eines der Themen der diesjährigen <em><a href="https://gdconf.com/news/welcome-first-day-gdc-2023">Game Developer Conference</a></em>, die vom 20. bis 24. März in San Francisco stattfand. <em>Arnaud Fayolle</em> von Ubisoft stellte dort (s)einen <em>Developer’s Field Guide</em> vor. Man merkte ihm seine Begeisterung an, aber ob dabei wirklich etwas herauskommt? Ich bin da eher skeptisch. Der Ansatz ist sicher gut gemeint, aber gut gemeint ist nicht automatisch auch gut gemacht.</p>



 ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/index.html</guid>
  <pubDate>Fri, 21 Apr 2023 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/images/cameraspygame.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pillow-Tutorial: Wie bekommt man die Katze ins Kloster?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042001_pillow_tutorial/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://files.realpython.com/media/cat_monastery.c63df8376d54.jpg"><img src="https://kantel.github.io/posts/2023042001_pillow_tutorial/images/catmonastery-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe heute wieder ein wenig mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> spielen müssen. Dabei interessierte mich insbesonders, welche Python-Bibliotheken ohne Klimmzüge mit Spyder zusammen funktionieren. Wenig überraschend war, daß Spyder mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> nichts anstellen konnte, mehr überrascht hat mich dagegen, daß auch die Zusammenarbeit mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> verweigert wurde, die ja immerhin Bestandteil der Standard-Bibliothek ist.</p>
<p>Da hat mich dann getröstet, daß Spyder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a>, Python Bibliothek für Bildbearbeitung, auf Anhieb unterstützte. Da sich damit ebenfalls einiges, auch Kreatives anstellen läßt, habe ich nach einem Tutorial für das Modul gesucht, da ich es bisher – trotz <a href="http://blog.schockwellenreiter.de/2020/04/2020040702.html">einiger</a> <a href="http://blog.schockwellenreiter.de/2020/04/2020041302.html">Anläufe</a> – sträflich vernachlässigt hatte.</p>
<p>Fündig geworden bin ich dann bei Real Python, wo <em>Stephen Gruppetta</em> mit seinem Beitrag »<a href="https://realpython.com/image-processing-with-the-python-pillow-library/">Image Processing With the Python Pillow Library</a>« ein vorzügliches Tutorial ablieferte. Es behandelt nämlich nicht nur die üblichen Bildbearbeitungsschritte, sondern auch, wie man Pillow kreativ einsetzen kann. Dort wird dann zum Beispiel gezeigt, wie man eine Katze in ein Kloster montiert.&nbsp;😸</p>
<p>Gleichzeitig hatte ich festgestellt, daß Pillow noch keinen Eintrag in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> besaß. Das habe ich dann <strong><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">nachgeholt</a></strong>.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/i7Njb3xO4Fw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Daß ich die oben genannten Module nicht zu einer Zusammenarbeit mit Spyder bewegen konnte, ist zwar kein <em>Showstopper</em> (ich habe ja noch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>, das sowohl auf meinem Mac wie auch auf meinem Chromebook anstandslos mit Py5, Pythons Turtle und auch mit Pygame spielt), aber ein wenig fuchst es mich doch. Die in Spyders FAQ <a href="https://docs.spyder-ide.org/5/faq.html#using-packages-installer">empfohlene Lösung</a> ist mir zu kompliziert. Irgendwie muß das doch auch ohne eine separate, virtuelle Umgebung gehen. Falls also jemand von Euch da draußen eine Idee hat …? <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Pillow</category>
  <category>Spyder</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023042001_pillow_tutorial/index.html</guid>
  <pubDate>Thu, 20 Apr 2023 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042001_pillow_tutorial/images/catmonastery.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Dynamische Graphen mit der Matplotlib, Slider und Spyder</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041904_spyder_slider/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52830209399/"><img src="https://kantel.github.io/posts/2023041904_spyder_slider/images/spyderslider-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute nachmittag regnete es mal wieder. Das war nicht nur gut für die Natur draußen, sondern auch gut für mich, denn so konnte ich ungestört meine Expeditionen ins Reich der <a href="https://de.wikipedia.org/wiki/Dynamisches_System">Dynamischen Systeme</a> mit Python und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> fortsetzen. Mir schwebt vor, die geplanten Simulationen des <a href="https://de.wikipedia.org/wiki/SIR-Modell">S-I-R-Modells</a> mit dynamischen Graphen zu implementieren, um Änderungen an den Parametern während des laufenden Programms vornehmen und die Auswirkungen begutachten zu können.</p>
<p>Dazu mußte ich aber erst einmal austesten, wie gut sich Spyder mit den <a href="https://matplotlib.org/stable/gallery/widgets/slider_demo.html">Matplotlib-Widgets</a> schlägt. Was lag da näher, als den guten alten <em>Veit Steinkamp</em><sup>1</sup> hervorzukramen. Den hatte ich ja schon einmal <a href="http://blog.schockwellenreiter.de/2022/08/2022080401.html">im letzten Sommer als Referenz benutzt</a>, als ich ähnliches mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> vorhatte. Statt der damals genutzten Parabel habe ich für das heutige Beispiel die Funktion <img src="https://latex.codecogs.com/png.latex?y%20=%20a%5Csin(b(x-c))"> ausgesucht und mich an die Darstellung in und mit Spyder gewagt.</p>
<p>Mir war schon klar, daß ich mich in diesem Fall von den <code>inline</code>-Plots verabschieden muß, aber Spyder leistete mehr, als ich dachte: Der Plot wurde inklusiv der Schieberegler tatsächlich auch <em>inline</em> angezeigt, nur ließen sich die Schieberegler nicht mehr (ver-) schieben. Ihr Dasein war also <em>inline</em> völlig sinnbefreit. Aber wenn man in Spyder unter <code>Preferences … - IPython-Konsole - Grafik</code> das <code>Grafik-Backend</code> von <code>Eingebettet</code> auf <code>Automatisch</code> umschaltet, ist alles wieder schick: Der Nutzer bekommt den Plot dann in einem Standard-Matlab-Fenster mit funktionierenden Schiebereglern angezeigt (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/52830209399/">Screenshot</a>).</p>
<p>Jetzt erst einmal das vollständige Programm, das bis auf wenige Anpassungen an die Eigenschaften von Spyder und macOS aus dem Buch von <em>Veit Steinkamp</em> (Seiten 247 f) stammt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> matplotlib.widgets <span class="im" style="color: #00769E;">import</span> Slider</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;">def</span> f(x, a, b, c):</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;">return</span> (a<span class="op" style="color: #5E5E5E;">*</span>np.sin(b<span class="op" style="color: #5E5E5E;">*</span>np.radians(x) <span class="op" style="color: #5E5E5E;">-</span> np.radians(c)))</span>
<span id="cb1-7"></span>
<span id="cb1-8">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(figsize <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">6</span>))</span>
<span id="cb1-9">plt.title(<span class="vs" style="color: #20794D;">r"$y = a\/sin(b\/(x-c))$"</span>)</span>
<span id="cb1-10">plt.subplots_adjust(left <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.12</span>, bottom <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.25</span>)</span>
<span id="cb1-11">plt.xlim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">360</span>)</span>
<span id="cb1-12">plt.ylim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-13">plt.xlabel(<span class="vs" style="color: #20794D;">r"$x$"</span>)</span>
<span id="cb1-14">plt.ylabel(<span class="vs" style="color: #20794D;">r"$y$"</span>, rotation <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-15"></span>
<span id="cb1-16">x <span class="op" style="color: #5E5E5E;">=</span> np.arange(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">400</span>, <span class="fl" style="color: #AD0000;">0.001</span>)</span>
<span id="cb1-17">y, <span class="op" style="color: #5E5E5E;">=</span> plt.plot(x, f(x, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>), lw <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;"># x- und y-Position, Länge, Höhe</span></span>
<span id="cb1-20">xyA <span class="op" style="color: #5E5E5E;">=</span> plt.axes([<span class="fl" style="color: #AD0000;">0.1</span>, <span class="fl" style="color: #AD0000;">0.12</span>, <span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">0.03</span>])</span>
<span id="cb1-21">xyB <span class="op" style="color: #5E5E5E;">=</span> plt.axes([<span class="fl" style="color: #AD0000;">0.1</span>, <span class="fl" style="color: #AD0000;">0.07</span>, <span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">0.03</span>])</span>
<span id="cb1-22">xyC <span class="op" style="color: #5E5E5E;">=</span> plt.axes([<span class="fl" style="color: #AD0000;">0.1</span>, <span class="fl" style="color: #AD0000;">0.02</span>, <span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">0.03</span>])</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;"># Slider-Objekte erzeugen</span></span>
<span id="cb1-25">sldA <span class="op" style="color: #5E5E5E;">=</span> Slider(xyA, <span class="st" style="color: #20794D;">"a"</span>,   <span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">10.0</span>, valinit <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span>, valstep <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb1-26">sldB <span class="op" style="color: #5E5E5E;">=</span> Slider(xyB, <span class="st" style="color: #20794D;">"b"</span>,   <span class="fl" style="color: #AD0000;">1.0</span>,  <span class="fl" style="color: #AD0000;">4.0</span>, valinit <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span>, valstep <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb1-27">sldC <span class="op" style="color: #5E5E5E;">=</span> Slider(xyC, <span class="st" style="color: #20794D;">"c"</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">90.0</span>, <span class="fl" style="color: #AD0000;">90.0</span>, valinit <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>, valstep <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;"># Slider Update</span></span>
<span id="cb1-30"><span class="kw" style="color: #003B4F;">def</span> update(val):</span>
<span id="cb1-31">    a <span class="op" style="color: #5E5E5E;">=</span> sldA.val</span>
<span id="cb1-32">    b <span class="op" style="color: #5E5E5E;">=</span> sldB.val</span>
<span id="cb1-33">    c <span class="op" style="color: #5E5E5E;">=</span> sldC.val</span>
<span id="cb1-34">    y.set_data(x, f(x, a, b, c))</span>
<span id="cb1-35">    </span>
<span id="cb1-36"><span class="co" style="color: #5E5E5E;"># Änderungen abfragen</span></span>
<span id="cb1-37">sldA.on_changed(update)</span>
<span id="cb1-38">sldB.on_changed(update)</span>
<span id="cb1-39">sldC.on_changed(update)</span>
<span id="cb1-40"></span>
<span id="cb1-41">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb1-42">plt.show()</span></code></pre></div>
<p>Da unter macOS der unterste Slider bei einer y-Position von 0.0 am unteren Fensterrand klebt, habe ich alle Slider um 0.02 Einheiten nach oben verschoben, um ihnen etwas mehr Luft zu gönnen.</p>
<p>Ansonsten erinnere ich mich jetzt wieder, wie das mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> und den Slidern funktioniert und bin bereit für weitere Experimente. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Veit Steinkamp: <em><a href="https://www.rheinwerk-verlag.de/mathematische-algorithmen-mit-python/">Mathematische Algorithmen mit Python</a>. Aufgaben vom Sieb des Eratosthenes bis zur RSA-Verschlüsselung</em>, Bonn (Rheinwerk) 2022, Seiten 243 ff.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Matplotlib</category>
  <category>Spyder</category>
  <category>Dynamische Systeme</category>
  <guid>https://kantel.github.io/posts/2023041904_spyder_slider/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 18:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041904_spyder_slider/images/spyderslider.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate des Foxit Reader auf 12.1.2</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041903_foxit_reader_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.gutenberg.org/files/50405/50405-h/images/i-003a.jpg"><img src="https://kantel.github.io/posts/2023041903_foxit_reader_update/images/autosled-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mit der Version 12.1.2 des nicht nur unter Windows beliebten PDF Betrachters Foxit Reader haben die Entwickler auch <a href="https://www.foxit.com/support/security-bulletins.html">Schwachstellen</a> behoben.</p>
<p>Die neue Version kann <a href="https://www.foxitsoftware.com/downloads/#Foxit-Reader/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://www.gutenberg.org/files/50405/50405-h/50405-h.htm">Uncle Wiggily’s Auto Sled</a>, 1919, pictured by Lang Campbell.)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041903_foxit_reader_update/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041903_foxit_reader_update/images/autosled.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Free Texture Packer: Ein Tool (nicht nur) für Pixel-Artisten</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52829762508/"><img src="https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/images/freetexturepacker-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gar nicht so selten stehe ich vor der Aufgabe, aus einer Bilddatei (die meist euphemistisch »Sprite Sheet« genannt wird) einzelne Tiles oder Sprites extrahieren zu müssen. Bisher habe ich dazu in der Regel <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tiled.html">Tiled</a> genutzt, doch da das Programm dafür eigentlich nicht gedacht ist, war die Bedienung doch recht umständlich.</p>
<p>Doch gestern bin ich über den Aufsatz »<a href="https://kenney.nl/learn/editing-2d-game-assets?s=03">Editing 2D game assets</a>« aus dem <a href="https://kenney.nl/learn">Blog von Kenney.nl</a> gestolpert, in dem unter anderem das freie (MIT-Lizenz) Programm »<a href="http://free-tex-packer.com/">Free Texture Packer</a>« vorgestellt wurde. Das Teil gibt es sowohl <a href="https://free-tex-packer.com/app/">online</a> als auch als <a href="http://free-tex-packer.com/download/">Desktop App</a> für Windows, Linux und macOS. Hauptzweck des Programms ist es, Sprite Sheets zu erstellen, aber leicht versteckt unter <code>Werkzeuge - Sprites aus Bildern extrahieren</code> findet man auch genau diese Funktion. Ich habe mir testweise mal ein Sheet aus dem <a href="https://cupnooble.itch.io/sprout-lands-asset-pack">Sproutlands Asset Pack</a>, das riesige Lücken zwischen den einzelnen Sprites aufwies, vorgenommen, und nachdem ich per <em>try and error</em> herausgefunden hatte, daß der Abstand zwischen den einzelnen 16x16 großen Sprites ebenfalls je 16 Pixel betrug, hatte mir das Programm sauber sechzehn einzelne, durchnumerierte Bildchen aus dem Sheet gezaubert.</p>
<p>Es ist also ein sehr nützliches Teil (<a href="https://github.com/odrick/free-tex-packer">Quellcode</a> auf GitHub), das ich Euch nicht vorenthalten wollte.</p>
<p>Die Sprites und Tiles, die ich für diesen Test verwendet hatte, sind von <em>Cup Nooble</em>, der auf Itch.io noch mehr (teils kostenpflichtige) <a href="https://cupnooble.itch.io/">Assets hochgeladen hat</a>. Und wenn Ihr mich hier mal ein Spiel programmieren seht, in dem eine Katze Kühe über eine Weide schubst, dann wißt Ihr, was mich auf die Idee gebracht hat.&nbsp;😸</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Game Design</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 12:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/images/freetexturepacker.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Security Alert: Neue Sicherheitslöcher in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041901_chrome_security_alert/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://pbs.twimg.com/media/EKODmMhXsAEzwGI.jpg"><img src="https://kantel.github.io/posts/2023041901_chrome_security_alert/images/iceboat-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google scheint momentan Schwierigkeiten zu haben, seinen Browser Chrome dicht zu bekommen. Denn im Nachtrag zu meiner <a href="https://kantel.github.io/posts/2023041502_chrome_update_v112/">Meldung vom Sonnabend</a> hat die Datenkrake ein neues Update der Version 112 (112.0.5615.137/138) nachgeschoben, das <a href="https://chromereleases.googleblog.com/2023/04/stable-channel-update-for-desktop_18.html">weitere kritische Sicherheitslücken schließt</a>, die bereits ausgenutzt werden.</p>
<p>Wie immer gilt: Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: The Iceboat knocked the Lady Pig off her Feet, pictured by Lang Campbell.)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041901_chrome_security_alert/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 10:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041901_chrome_security_alert/images/iceboat.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Abenteuer mit Spyder: Das S-I-R-Modell einer Grippe-Pandemie</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52827700899/"><img src="https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/images/grippemodellsir-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Entdeckungsreisen mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spynne</a> gehen weiter. Um mich mit der IDE noch mehr vertraut zu machen, habe ich als Fingerübung das seit dem Corona-Ausbruch zu einer gewissen Berühmtheit gelangte <a href="https://de.wikipedia.org/wiki/SIR-Modell">S-I-R-Modell</a> einer Grippe-Infektion noch einmal in Python implementiert (ich hatte es in einer vereinfachten Version<sup>1</sup> zu Beginn der Corona-Pandemie vor drei Jahren <a href="http://blog.schockwellenreiter.de/2020/03/2020032601.html">schon einmal in Python</a> und <a href="http://blog.schockwellenreiter.de/2020/03/2020032704.html">einmal in Maxima</a> programmiert).</p>
<p>Dieses Mal habe ich mich bei der Implementierung an die Vorgaben und Erläuterungen von <em>Linge/Langtangen</em><sup>2</sup> gehalten, die ihre Version mit ausführlichen Erklärungen und mathematische sauber fundiert, präsentieren, so daß ich bei der Nachprogrammierung noch einmal einiges dazugelernt habe.</p>
<p>Ich werde in den nächsten Tagen das Modell noch etwas erweitern, auch um mein eigenes Verständnis des Modells zu verbessern. Schließlich habe ich das ganze nicht nur angefangen, weil Spyder (im <em>Dark Mode</em>) so schöne Screenshot liefert – auch wenn dies sicher meine Motivation beflügelt hat.</p>
<p>Und dann habe ich Lust darauf bekommen, mich noch etwas mehr mit der Programmierung von »Modellbildung und Simulation« auseinanderzusetzen. Dafür habe ich einen Klassiker<sup>3</sup> der Theorie <a href="https://de.wikipedia.org/wiki/Dynamisches_System">dynamischer Systeme</a> nebst Anhang<sup>4</sup> aus meinen Bücherregalen wieder hervorgekramt und entstaubt. Schaun wir mal, was dabei herauskommt – ich denke, daß ich viel Spaß damit haben werde. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Eine einfachere Version des Modells findet Ihr zum Beispiel hier: Veit Steinkamp: <em><a href="https://www.rheinwerk-verlag.de/mathematische-algorithmen-mit-python/">Mathematische Algorithmen mit Python</a>. Aufgaben vom Sieb des Eratosthenes bis zur RSA-Verschlüsselung</em>, Bonn (Rheinwerk) 2022, Seiten 404 ff.↩︎</p></li>
<li id="fn2"><p>Svein Linge, Hans Petter Langtangen: <em><a href="https://link.springer.com/book/10.1007/978-3-030-16877-3">Programming for Computations - Python</a>. A Gentle Introduction to Numerical Simulations with Python 3.6</em>, Cham, Switzerland, (SpringerOpen) Second Edition 2020, pp 225. Das Buch steht unter Open Access und läßt sich unter dem Link bei Springer kostenlos herunterladen.↩︎</p></li>
<li id="fn3"><p>Hartmut Bossel: <em><a href="https://link.springer.com/book/10.1007/978-3-322-83658-8">Modellbildung und Simulation</a>. Konzepte, Verfahren und Modelle zum Verhalten dynamischer Systeme</em>, Braunschweig (Vieweg), 2., veränderte Auflage 1994↩︎</p></li>
<li id="fn4"><p>Hartmut Bossel: <em><a href="https://www.bod.de/buchshop/systeme-dynamik-simulation-hartmut-bossel-9783833409844">Systeme, Dynamik, Simulation</a>. Modellbildung, Analyse und Simulation komplexer Systeme</em>, Selbstverlag 2004↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Modellbildung</category>
  <category>Simulation</category>
  <category>Dynamische Systeme</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/index.html</guid>
  <pubDate>Tue, 18 Apr 2023 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/images/grippemodellsir.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweaking Spyder</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041701_tweaking_spyder/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52824891673/"><img src="https://kantel.github.io/posts/2023041701_tweaking_spyder/images/spyder5neu-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nach meiner <a href="https://kantel.github.io/posts/2023041603_spyder/">gestrigen</a> Wiederentdeckung von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a>, der Python-IDE für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a> (-<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">Lab</a>, -<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">Desktop</a>)-Ignoranten wie mich, mußte ich das Teil nun so lange tunen, bis es meinen Vorstellungen entsprach. Nun sieht Spyder wirklich so aus, wie ich mir <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rstudio.html">RStudio</a> wünsche<sup>1</sup>. Und es fühlt sich immer noch gut an.</p>
<p>Aus lauter Begeisterung habe ich auch meiner <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Wiki-Seite zu Spyder</a> ein Update spendiert. Und jetzt werde ich erst mal weiter mit der Spynne spielen. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich schreibe dieses <del>Blog</del> Kritzelheft mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> in RStudio, verfüge also über reichlich Erfahrungen mit der Software.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Numerik</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2023041701_tweaking_spyder/index.html</guid>
  <pubDate>Mon, 17 Apr 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041701_tweaking_spyder/images/spyder5neu.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Numerisches Python mit der Spynne</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041603_spyder/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52822515573/"><img src="https://kantel.github.io/posts/2023041603_spyder/images/spyder5-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Neben meiner Erkundung des <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>-Kosmos möchte ich mich in der nächsten Zeit ein wenig mit Python, Physik und Numerik beschäftigen. Dazu habe ich das Buch »<a href="https://www.rheinwerk-verlag.de/der-python-kurs-fuer-ingenieure-und-naturwissenschaftler/">Der Python-Kurs für Ingenieure und Naturwissenschaftler</a>« von <em>Veit Steinkamp</em> aus meinem Bücherregal wieder hervorgekramt. Nicht nur, daß es mir an sich schon ziemlich gut gefällt, ausschlaggebend war dieses Mal, daß die über 500 Seiten fette Schwarte als eines der wenigen mir bekannten Lehrbücher auch ein komplettes Kapitel zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/vpython.html">VPython</a> besitzt (und damit wäre ich via <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/glowwscript.html">GlowScript</a> wieder bei Trinket).</p>
<p>Doch zurück zu Numerik mit Python. Ein Anlaß war, daß ich mich – wie <a href="https://kantel.github.io/posts/2023032701_jupyter_and_jupyterlab/">versprochen</a> – endlich mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> vertraut machen wollte. Doch ich mußte leider feststellen, daß ich – wie schon mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> – auch mit dieser Inkarnation eines Python-Notebooks einfach nicht warm werde.</p>
<p>In meiner Verzweiflung hatte ich dann <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> angeworfen. Diese freie (MIT-Lizenz) Python-IDE hatte bei früheren Versuchen mich auch mit einigen Ecken und Kanten abgeschreckt. Doch heute machte sie mich darauf aufmerksam, daß ich die Version 5.4.3 herunterladen könne.</p>
<p>Und was soll ich sagen? Nach der Installation fühlte ich mich in Spyder wie zu Hause. Die IDE war schlank genug, um mich nicht mit überflüssigem Schnickschnack zu nerven, aber sie zeigte alles, was man von einer IDE und von einem Editor erwartet. Und wenn man von der – auf meinem betagten MacBook Pro – doch sehr gemächlichen Startzeit des Programms absieht – mußte ich auch bei der Geschwindigkeit keine Abstriche machen.</p>
<p>Daher werde ich wohl in Zukunft bei allen Python-Programmen, mit denen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> überfordert ist, auf Spyder setzen. Wundert Euch daher nicht, wenn Ihr in Zukunft entsprechende Screenshots vorgesetzt bekommt. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Numerik</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2023041603_spyder/index.html</guid>
  <pubDate>Sun, 16 Apr 2023 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041603_spyder/images/spyder5.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Frauen am Kontrabaß: Alice und das weiße Kaninchen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://listverse.com/wp-content/uploads/2013/10/alice.jpg"><img src="https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/images/alice_robinson-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich hatte schon lange nichts mehr in meiner Reihe »Frauen am Kontrabaß«, doch nun kam mir ein Video unter, das sowohl dieses Thema wie auch mein Interesse an Geschichten um »Alice im Wunderland« abdeckt: Die ziemlich geniale Bluegrass-Gitarristin <em><a href="https://de.wikipedia.org/wiki/Molly_Tuttle">Molly Tuttle</a></em> hat mir ihrer Band »The Golden Highway« eine Coverversion von <em>Jefferson Airplanes</em> »White Rabbit« ganz neu auf YouTube veröffentlicht:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/LeHlvXvG6vA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das alleine wäre noch keinen Beitrag in dieser Reihe wert, doch <em>The Golden Highway</em> ist nicht nur – wie vielfach im Bluegrass Tradition – eine Familienangelegenheit unter Geschwistern, sondern <em>Molly Tuttle</em> hat mit <em><a href="http://www.shelbyleemeans.com/">Shelby Means</a></em> auch eine phantastische Kontrabassistin an Ihrer Seite. Die Band – die aktuell in den USA auf Tour ist – besteht also aus <em>Molly Tuttle</em> als Red Queen (g, vocals), <em>Shelby Means</em> als Mad Hatter (bass, harmonies), <em>Kyle Tuttle</em> als Chesire Cat (Grinsekatze) (banjo), <em>Bronwyn Keith-Hynes</em> als Alice (fiddle) und <em>Dominick Leslie</em> als Caterpillar (mandoline). Und im Hintergrund turnt auch noch anonym das namengebende weiße Kaninchen herum.</p>
<p>Wenn ich irgendwann für meine eigenen Alice-Experimente ein Video benötigen sollte, steht dieses ganz weit oben auf der Favoritenliste.</p>



 ]]></description>
  <category>Musik</category>
  <category>Alice</category>
  <guid>https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/index.html</guid>
  <pubDate>Sun, 16 Apr 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/images/alice_robinson.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
