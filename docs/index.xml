<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Wed, 30 Aug 2023 17:45:00 GMT</lastBuildDate>
<item>
  <title>Interaktive Publikationen mit MyST Markdown und Jupyter Book</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023083003_myst_jupyterbook/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://executablebooks.org/en/latest/blog/2023-06-27-jupyterlab-myst/"><img src="https://kantel.github.io/posts/2023083003_myst_jupyterbook/images/mystjupyterlab-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mir ist mal wieder danach, ich muß über meine Publikationsstrategie nachdenken. Denn der Vorteil meines Rentnerdaseins ist unter anderem der, daß ich nicht mehr publizieren muß. Stattdessen kann ich darüber nachdenken, wie ich ohne den Druck der Verlagshäuser, Redaktionen und auch meines Brötchengebers publizieren könnte, wenn ich denn doch mal wieder publizieren müßte.</p>
<p>Das war jetzt <em>meta</em> genug. Den Anlaß für diese philosophischen Ergüsse gab ein Videovortrag, den <em>Steve Purves</em> und <em>Rowan Cocket</em> auf der EuroSciPy 2023, die in diesem Monat in Basel stattfand, gehalten hatten: »<a href="https://pretalx.com/euroscipy-2023/talk/EXVUBJ/">MyST and Thebe: Community-driven tools for awesome open science communication with Jupyter[lite] backed computation</a>«.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/sTvx3u1hXME?si=-qfete3mdwIHq_H-" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Hinter diesem etwas sperrigen Titel steckt – wie <a href="https://www.youtube.com/watch?v=sTvx3u1hXME">das Video zeigt</a> – ein faszinierendes Tool (oder besser: Ein Bündel von Tools): <a href="https://mystmd.org/">MyST</a> (um es nicht mit dem bekannten Computerspiel zu verwechseln wird es oft auch »MyST Markdown« genannt) steht für <em>Markedly Structured Text</em>, einer reichhaltigen und erweiterbaren <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/markdown.html">Markdown</a>-Variante zum Verfassen technischer und wissenschaftlicher Dokumentation. Mit <em>Thebe</em> (in MyST enthalten) kann eine Verbindung zu einem (lokalen) <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a>-Server hergestellt oder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">JupyterLite</a> im Browser aufgerufen werden, so daß auch interaktive Dokumente möglich sind. MyST Mardown ist eine Weiterentwicklung von <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/sphinx.html">Sphinx</a> und will die Vorteie von <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/restructuredtext.html">reStructuredText</a> (ReST) mit der Einfachheit von Markdown vermählen.</p>
<p>Das Schwesterprojekt ist <a href="https://jupyterbook.org/en/stable/intro.html">Jupyter Book</a>, das (interaktive) wissenschaftliche Publikationen mit <em>Markedly Structured Text</em> aus Jupyter, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JuypterLab</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> herausschreibt.</p>
<p>Auch zu Jupyter Book sind mir schon ein paar Tutorials untergekommen:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=jUdXs4OPR84">Creating an open-source book with Jupyter Book and Jupytext</a> (Video, 45 Minuten)</li>
<li><a href="https://www.youtube.com/watch?v=seKOq-VMJgY">Jupyter Book overview</a> mit <em>Dr.&nbsp;Chris Holdgraf</em>, der in 25 Minuten eine überblickartige Zusammenfassung zu Jupyter Book gibt.</li>
<li>Und ein Blick in das Hausblog der Macher lohnt immer: <a href="https://executablebooks.org/en/latest/blog/2023-06-27-jupyterlab-myst/">Using MyST Markdown in JupyterLab</a></li>
</ul>
<p>Das Schöne an MyST Markdown und Jupyter Book ist, daß es auch in <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> funtioniert. Es gibt eine »offizielle« <a href="https://marketplace.visualstudio.com/items?itemName=ExecutableBookProject.myst-highlight">MyST-Markdown VS Code Extension</a>. Für meine aktuellen <a href="https://kantel.github.io/posts/2023081101_logseq_quarto_vscode/">Überlegungen zu einem Publikations-Workflow</a> ein wichtiges Detail.</p>
<p>Hinter beiden Projekten <em>MyST Markdown</em> und <em>Jupyter Book</em> steht das <a href="https://executablebooks.org/en/latest/#">Executable Books Project</a>.</p>
<p>Was fange ich nun mit diesem <em>Information Overflow</em> an? Ehrlich gesagt, ich weiß es noch nicht, aber es klingt alles sehr faszinierend. An ein paar Tests werde ich wohl nicht vorbeikommen. Dann sehe ich weiter. <em>Still digging!</em></p>



 ]]></description>
  <category>MyST Markdown</category>
  <category>Jupyter Book</category>
  <category>JupyterLab Desktop</category>
  <category>JuypiterLite</category>
  <category>Visual Studio Code</category>
  <category>Statische Seiten</category>
  <guid>https://kantel.github.io/posts/2023083003_myst_jupyterbook/index.html</guid>
  <pubDate>Wed, 30 Aug 2023 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023083003_myst_jupyterbook/images/mystjupyterlab.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 115.2.0 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023083002_thunderbird_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://cafans.b-cdn.net/images/Category_76878/subcat_195910/uT8t2yA8_060219142701lola.jpg"><img src="https://kantel.github.io/posts/2023083002_thunderbird_update/images/irishhomerulebill-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nachdem <a href="https://kantel.github.io/posts/2023082902_firefox_update/">gestern</a> der Tag des kleinen roten Pandas (aka Firefox) war, folgt heute nach Mozillas nahezu unerschütterlichen Serien-Update-Gesetzen der Donnervogel. Und richtig: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 115.2.0 freigegeben und damit auch wieder <a href="https://www.thunderbird.net/en-US/thunderbird/115.2.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Thomas E. Powers (1870-1939), <a href="https://www.comicartfans.com/GalleryPiece.asp?Piece=1258005">Irish Home Rule Bill</a>, 1912)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023083002_thunderbird_update/index.html</guid>
  <pubDate>Wed, 30 Aug 2023 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023083002_thunderbird_update/images/irishhomerulebill.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert erneut Version 116 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023083001_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://cafans.b-cdn.net/images/Category_2305/subcat_207318/QCD9tLjR_1606230912271gpadd.jpg"><img src="https://kantel.github.io/posts/2023083001_chrome_update/images/koreanischerhonig-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Zum Monatsende veröffentlicht Google ein weiteres Update der Version 116 (116.0.5845.140/141) seines Browsers Chrome und schließt erneut <a href="https://chromereleases.googleblog.com/2023/08/stable-channel-update-for-desktop_29.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Thomas E. Powers (1870-1939), <a href="https://www.comicartfans.com/GalleryPiece.asp?Piece=1930819">How Doth the Little Busy Jap Improve Each Shining Hour</a>, New York Evening Journal, 23. Februar 1904)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023083001_chrome_update/index.html</guid>
  <pubDate>Wed, 30 Aug 2023 13:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023083001_chrome_update/images/koreanischerhonig.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>50 Jahre »Die Grenzen des Wachstums«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082903_grenzen_wachstum_50/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53150893390/"><img src="https://kantel.github.io/posts/2023082903_grenzen_wachstum_50/images/grenzendeswachstums50-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gelegentlich kann auch das Gesichtsbuch einen Blogpost anstoßen. So zum Beispiel heute, als ich daran erinnert wurde, daß im August 1973, also exakt vor fünfzig Jahren »Die Grenzen des Wachstums – Bericht des Club of Rome zur Lage der Menschheit« auf deutsch erschienen ist (die englische Originalausgabe erschien schon 1972).</p>
<p>So lange ist das also schon her? Und geändert hat sich seitdem auch nur wenig. Ich bin 70 und daher ungeeignet zum »Klimakleber« (wenn ich mich auf die Straße hocke, komme ich auch ohne Klebstoff nicht mehr hoch), daher möchte ich anläßlich dieses »Jubiläums«, das so gar keine Feierlaune aufkommen läßt, aus meiner Bibliothek ein paar populärwissenschaftliche Bücher der letzten Jahrzehnte vorstellen, damit keiner behaupten kann, er wäre nicht gewarnt worden:</p>
<ol type="1">
<li>Dennis Meadows, Donella Meadows, Erich Zahn, Peter Milling: <em>Die Grenzen des Wachstums – Bericht des Club of Rome zur Lage der Menschheit</em>, Reinbek (rororo) 1973</li>
<li>Joël de Rosnay: <em>Das Makroskop. Systemdenken als Werkzeug der Ökogesellschaft</em> Reinbek (rororo) 1979 (französische Originalausgabe: Paris 1975)</li>
<li>Frederic Vester: <em>Unsere Welt – ein vernetztes System</em>, München (dtv) 1983</li>
<li>ders.: <em>Neuland des Denkens. Vom technokratischen zum kybernetischen Zeitalter</em>, München (dtv) 1984</li>
<li>Danella H. Meadows, Dennis L. Meadows, Jørgen Randers: <em>Die neuen Grenzen des Wachstums. Die Lage der Menschheit: Bedrohung und Zukunftschancen</em>, Stuttgart (DVA) 1992</li>
<li>Frederic Vester: <em>Die Kunst vernetzt zu denken. Ideen und Werkzeuge für einen neuen Umgang mit Komplexität. Der neue Bericht an den Club of Rome</em>, München (dtv) 2002</li>
<li>Donella H. Meadows: <em>Die Grenzen des Denkens. Wie wir sie mit System erkennen und überwinden können</em>, München (oekom) 2010</li>
</ol>
<p>Die Bücher zählen zur populärwissenschaftlichen Literatur. Auch wenn alle Autoren gestandene Wissenschaftler sind, wurden sie so geschrieben, daß jede und jeder ihren Inhalt lesen und begreifen kann (selbst Politikerinnen und Politiker). Also stellt sich zu recht die Frage, warum trotz aller Warnungen in den letzten fünfzig Jahren so wenig passiert und die Situation der Umwelt immer dramatischer geworden ist. Vermutlich, weil eine Systemänderung immer auch das (kapitalistische) System in Frage stellt? <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a> 2023): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Kybernetik</category>
  <category>Politik</category>
  <category>Umwelt</category>
  <guid>https://kantel.github.io/posts/2023082903_grenzen_wachstum_50/index.html</guid>
  <pubDate>Tue, 29 Aug 2023 16:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082903_grenzen_wachstum_50/images/grenzendeswachstums50.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Version 117.0</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082902_firefox_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.askart.com/photos2/2016/HER20161117_97766/94378_1.jpg"><img src="https://kantel.github.io/posts/2023082902_firefox_update/images/tepowers1900-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/117.0/releasenotes/">Version 117.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/115.2.0/releasenotes/">Version ESR 115.2.0</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://www.lambiek.net/artists/p/powers_te.htm">Thomas E. Powers</a> (1870-1939), um 1900)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023082902_firefox_update/index.html</guid>
  <pubDate>Tue, 29 Aug 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082902_firefox_update/images/tepowers1900.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Update: Alice und Chapbook auf Itch.io – jetzt auch mit Bildern. Wirklich!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082901_chapbook_itchio_bilder/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53149564182/"><img src="https://kantel.github.io/posts/2023082901_chapbook_itchio_bilder/images/alice01itchio-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Manchmal sollte man <a href="http://blog.schockwellenreiter.de/2020/07/2020072201.html">Notizen, die man an sich selber gerichtet hat</a>, auch beherzigen. Denn dann wäre mir der dumme Fehler, der mir gestern abend unterlaufen ist, sicher nicht passiert: Ich hatte nämlich die <a href="https://kantel.github.io/posts/2023082801_chapbook_wunderland_1/">Twine-Geschichte von gestern</a> auf Itch.io <a href="https://kantel.itch.io/alice-und-chapbook-stage-1">hochgeladen</a>, <strong>bevor</strong> ich die URLs der Bilder von <code>localhost</code> auf relative Adressen umgestellt hatte.</p>
<p>Natürlich fiel mir der Fehler nicht auf, da bei meinen Tests <strong>mein</strong> Rechner die Bilder auch auf <code>localhost</code> fand. Ich sollte in Zukunft daher entweder von einem zweiten Rechner oder meinem Smartphone testen, oder meinen <a href="http://cognitiones.kantel-chaos-team.de/webworking/mamp.html">MAMP</a> abschalten (wie auf dem <a href="https://www.flickr.com/photos/schockwellenreiter/53149564182/">Screenshot</a> im Bannerbild oben).</p>
<p>Und es war gestern wirklich spät. Ich habe nämlich in meinem Beitrag gestern eine zweite Kompromißlösung vergessen, die eigentlich bei mir Standard ist und die ich Euch unbedingt noch erzählen möchte: Ich lege nämlich eigentlich grundsätzlich in meinen Twine-Storys nur relative URLs zu den Assets an. Das Layout prüfe ich dann, indem ich die Geschichte nach HTML exportiere und sie mir dann im Browser anschaue.</p>
<p>Die <em>Backstage View</em> im Test-Mode von Chapbook innerhalb von Twine nutze ich dann nur zum Debuggen (dafür ist der <em>Backstage</em> extrem nützlich, doch darüber wird es noch einen eigenen Beitrag geben). Und dabei kann ich auf die Darstellung von Bildern verzichten. Das ist ein ähnliches Verhalten, wie es auch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink/Inky</a> an den Tag legt: Auch dort werden in der Vorschau der Inky-IDE keine Bilder angezeigt, man muß auch hier das Ergebnis erst nach HTML exportieren.</p>
<p>Der Export nach HTML ist schon innerhalb von Twine sehr schnell. Wenn man dann noch die Geschichte in Twee schreibt und mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> übersetzt (noch einmal: Vergleiche <a href="https://www.flickr.com/photos/schockwellenreiter/53149564182/">Screenshhot</a> im Banner oben), geht er ab wie eine Rakete. Doch auch darüber wird es noch einen separaten Beitrag in dieser Tutorialreihe geben. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <category>Itch.io</category>
  <guid>https://kantel.github.io/posts/2023082901_chapbook_itchio_bilder/index.html</guid>
  <pubDate>Tue, 29 Aug 2023 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082901_chapbook_itchio_bilder/images/alice01itchio.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mit Twine und Chapbook in das Wunderland, Version 0.1: Wir wollen Bilder!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082801_chapbook_wunderland_1/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53147889364/"><img src="https://kantel.github.io/posts/2023082801_chapbook_wunderland_1/images/chapbooktwinev01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<blockquote class="blockquote">
<p>Alice fing an sich zu langweilen; sie saß schon lange bei ihrer Schwester am Ufer und hatte nichts zu tun. Das Buch, das ihre Schwester las, gefiel ihr nicht; denn es waren weder Bilder noch Gespräche darin. „»Und was nützen Bücher,« dachte Alice, »ohne Bilder und Gespräche?«</p>
</blockquote>
<p>In dieser zweiten Folge meiner kleinen Tutorialreihe zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und dem Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> möchte ich das größte Manko der <a href="https://kantel.github.io/posts/2023082703_chapbook_wunderland_0/">ersten Folge</a> beheben: Denn was sind Geschichten ohne Bilder?</p>
<p>Doch das Verhältnis von Twine zu Bildern (und anderen Mulitmediadateien wie Musik, Sound oder Filmen) war von Anfang an ein schwieriges. Denn Twine war ursprünglich entworfen, um textbasierte, interaktive Abenteuer zu erzählen. Bilder waren da nicht vorgesehen. Doch das Publikum wollte – wie Alice – Bilder und so haben sich zwei mehr oder weniger inkomaptible Lösungen gefunden:</p>
<section id="lösung-1-bilder-online-einbinden" class="level3">
<h3 class="anchored" data-anchor-id="lösung-1-bilder-online-einbinden">Lösung 1: Bilder online einbinden</h3>
<p>Der erste Ansatz ist, die Multimediadateien online auf einem Server abzulegen, und sie dann per HTTP(S) einzubinden. Der Vorteil dieser Lösung ist, daß die Bilder – eine Online-Anbindung vorausgesetzt – immer von Twine gefunden werden, egal ob die Twine Story <strong>in</strong> Twine (im Test-Modus) aufgerufen wird, oder ob sie <em>standalone</em> läuft. Jedoch hat diese Methode auch zwei gewichtige Nachteile. Der erste Nachteil: Es ist <strong>Euer</strong> Server, auf dem die Daten liegen, Ihr zahlt für die Bandbreite. Und zweitens: Ihr müßt zwingend online sein, auch wenn Ihr Euer Spiel entwickelt. Ein Schreiben oder Spielen am Strand ist damit in der Regel nicht möglich.</p>
<p>Außerdem hat sich hier noch eine böse Unsitte entwickelt, die man leider häufig auch Twine-Tutorials findet. Dort wird dann einfach mit einer Bildersuchmaschine ein passendes Bild gesucht. Ist dieses Bild gefunden, wird die URL kopiert und die Datei ohne Rücksicht auf Verluste vom <strong>fremden</strong> Server in die eigene Geschichte eingebunden.</p>
<p>Dieses <em>Hotlinking</em> genannte Verfahren ist aus mehreren Gründen eine Sünde: Erstens, wenn man sich nicht um die Bildrechte kümmert, gerät man dabei leicht in die Fallstricke einer Urheberrechtsverletzung und das kann teuer werden. Zweitens zahlt der Serverbetreiber und nicht Ihr die Kosten für den Datentransfer. Das macht ihn sicher nicht glücklich. Und drittens habt Ihr keine Kontrolle über die Daten. Auch ich habe schon einmal eines meiner (eigentlich harmlosen und unter einer freien Lizenz stehenenden) Photos einer Berliner Touristen-Attraktion gegen das Bild einer leicht bekleideten Dame ausgetauscht, nachdem ich bemerkt hatte, daß irgendein Dödel dieses Bild ungefragt per Hotlinking in seine dusselige Kommerzseite eingebunden hatte.</p>
</section>
<section id="lösung-2-daten-lokal-einbinden" class="level3">
<h3 class="anchored" data-anchor-id="lösung-2-daten-lokal-einbinden">Lösung 2: Daten lokal einbinden</h3>
<p>Die zweite Lösung ist, die Daten lokal einzubinden. Dafür legt man sich am sinnvollsten unterhalb der eigentlichen Story-Datei (Beispiel: <code>story.html</code>) ein Verzeichnis (oder mehrere Vereichnisse) an, die die Asset-Dateien beinhalten. Das kann dann beispielsweise so aussehen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> story.html</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> images</span>
<span id="cb1-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> image01.jpg</span>
<span id="cb1-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> image02.jpg</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> audio</span>
<span id="cb1-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> song01.mp3</span></code></pre></div>
<p>Wenn dann ein Bild in eine Twine-Story per relativer URL eingebunden ist, in Chapbook zum Beispiel mit:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb2-1">{embed image: 'images/image01.jpg', alt: 'Mein super-duper Bild'}</span></code></pre></div>
<p>Dann findet Eure Twine-Story nach dem Publizieren das Bild auch, unabhängig davon, ob sie lokal oder über eine Webverbindung aufgerufen wurde.</p>
<p>Der Zusatz »nach dem Publizieren« weist auch gleich auf den größten Nachteil dieser Methode hin: Wird die Geschichte <strong>innerhalb</strong> von Twine gestartet (sei es über den Test- oder über den Play-Button), dann findet Twine Eure Assets nicht. Das liegt daran, daß Twine die Story temporär auf eine völlig obskure und nicht nachvolltiehbare URL hinausschreibt, beispielsweise auf (gekürzt)</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">file:///private/var/folders/x3/…/T/52f32371-9e39-4952-a4d8-6ee9f02e7df4.html</span></span></code></pre></div>
<p>und wo soll das arme Twine da Eure Assets finden?</p>
<p>Der größte Vorteil dieser Methode ist allerdings der: Ist Eure Story mal publiziert, dann läßt sich die Datei mitsamt den Asset-Verzeichnissen entweder als <code>.zip</code>-Datei oder auch unkomprimiert auf jeden Server oder Dienst Eurer Wahl hochladen (zum Beispiel auf Itch.io) oder als Email an Eure Freunde verschicken. Und sie können sie dann auch spielen, ohne auf eine Internetverbindung angewiesen zu sein.</p>
</section>
<section id="der-kompromiß-lokaler-webserver" class="level3">
<h3 class="anchored" data-anchor-id="der-kompromiß-lokaler-webserver">Der Kompromiß: Lokaler Webserver</h3>
<p>Nun möchte man aber gerne auch während der Entwicklung in Twine seine Bilder sehen, und sei es nur, um das Layout kontrollieren zu können. Bei mir hat sich folgende Vorgehensweise als sinnvoll herausgestellt: Auf meinem Rechnern läuft sowieso permanent ein lokaler Webserver (<a href="http://cognitiones.kantel-chaos-team.de/webworking/mamp.html">MAMP</a>, aber auch <a href="http://cognitiones.kantel-chaos-team.de/webworking/xampp.html">XAMPP</a> wäre eine Alternative). Dort lege ich für jede Twine-Story ein Verzeichnis mit den benötigten Bildern und anderen Assets an. Diese kann ich dann nach der <strong>Lösung 1</strong> via <code>localhost</code> so einbinden, als lägen sie auf einem externen Server. In Chapbook sieht das dann so aus:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb4-1">{embed image: "http://localhost:8888/twine/alice01/images/bild01.jpg", alt: "Grinsekatze"}</span></code></pre></div>
<p>(Mein MAMP lauscht auf Port <code>8888</code>, den Port müßt Ihr gegebenenfalls an Eure Umgebung anpassen.)</p>
<p>Ist die Entwicklung dann abgeschlossen und die Story kann publiziert werden, dann tausche ich per globales <em>Suchen und Ersetzen</em> alle absoluten, aber dennoch lokalen URLs <code>http://localhost:8888/twine/alice01/images</code> durch ein schlichtes <code>images</code> aus. Das obige Beispiel wird dann zu</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb5-1">{embed image: "images/bild01.jpg", alt: "Grinsekatze"}</span></code></pre></div>
<p>und damit zu einer relativen URL und zur <strong>Lösung 2</strong>. Ganz besonders schlaue Entwickler exportieren ihre Twine Story erst nach <code>Twee</code> bevor sie die globale Ersetzung vornehmen und schreiben die Story danach dann zum Beispiel mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> als HTML-Datei heraus. So bleibt die Story im Twine-Editor unverändert, sollte man doch noch einmal Änderungen vornehmen wollen oder müssen.</p>
<p>Die Verwendung des <code>alt</code>-Textes sollte in Chapbook (aber nicht nur dort, sondern eigentlich überall) obligatorisch sein, damit sich sehbehinderte Menschen von ihrem Screenreader die Bildbeschreibung vorlesen lassen können. Sollte das Bild rein dekorativen Zwecken dienen, zum Beispiel eine schöne Seitenumrandung, dann kann der <code>alt</code>-Text auch einfach nur aus einem leeren String bestehen:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb6-1">{embed image: "asterisk.png", alt: ""}</span></code></pre></div>
<p>Moderne Screenreader werden dieses Bild dann freudig ignorieren.</p>
<p>So, und jetzt nach der langen Vorrede die neuesten Abenteuer von Alice mit Twine und Chapbook. Sie sind nahezu identisch mit der ersten Version, nur daß sie nun mit Bildern illustriert sind. Hier der Twee-Code der ersten Passage:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb7-1">:: Start</span>
<span id="cb7-2">{embed image: "http://localhost:8888/twine/images/grinsekatze.jpg", alt: "Grinsekatze"}</span>
<span id="cb7-3"></span>
<span id="cb7-4">Es war ein sonniger Tag. Alice schlenderte gedankenverloren durch das Wunderland.</span>
<span id="cb7-5">Sie hatte sich ein wenig verirrt. Plötzlich materialisierte sich im Gestrüpp über</span>
<span id="cb7-6">ihrem Weg die Grinsekatze. Alice fragte sie: »Würdest Du mir bitte sagen, wie ich</span>
<span id="cb7-7">von hier aus weitergehen soll!«</span>
<span id="cb7-8"></span>
<span id="cb7-9">Die Grinsekatze grinste: »Das hängt zum großen Teil davon ab, wohin Du möchtest.</span>
<span id="cb7-10">Aber ich will Dir helfen: Geradeaus geht es zum [[Haus der Herzogin]], links zur</span>
<span id="cb7-11">[[Teeparty des verrückten Hutmachers-&gt;Teeparty]] und rechts triffst Du die </span>
<span id="cb7-12">[[kiffende Raupe auf ihrem Pilz-&gt;Raupe]].«</span></code></pre></div>
<p>Auf den Abdruck der übrigen Passagen habe ich verzichtet, denn den <a href="https://github.com/kantel/twine-entdecken/blob/master/tweego/alicechapbook/alice00chapbook.twee">vollständigen Twee-Code</a> wie auch die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alicechapbook">HTML-Datei</a> (<code>alice01chapbook.html</code>) und die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alicechapbook/images">Bilder</a> könnt Ihr wieder in meinem GitHub-Repositorium finden.</p>
<p>Und auch diese Version habe ich wieder auf Itch.io <a href="https://kantel.itch.io/alice-und-chapbook-stage-1">hochgeladen</a>. Ihr könnt sie dort spielen.</p>
<p>Die Bilder sind übrigens von <em><a href="https://de.wikipedia.org/wiki/John_Tenniel">John Tenniel</a></em> (1820-1914) (Startpassage) und <em><a href="https://collectingalice.com/arthur-rackham-dark-alice/">Arthur Rackham</a></em> (1867-1939) (alle übrigen Bilder). Beide Künstler sind vor hinreichend langer Zeit gestorben, so daß es – auch wenn Ihr sie weiterverwenden wollt – zumindest nach europäischem Recht keine Urheberrechtsprobleme gibt. Denn es gilt: <em>Ihr ehrt die toten Künstler, in dem Ihr sie remixed!</em></p>


</section>

 ]]></description>
  <category>Twine</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023082801_chapbook_wunderland_1/index.html</guid>
  <pubDate>Mon, 28 Aug 2023 17:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082801_chapbook_wunderland_1/images/chapbooktwinev01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tutorial: Mit Twine und Chapbook in das Wunderland, Version 0.0</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082703_chapbook_wunderland_0/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53143377865/"><img src="https://kantel.github.io/posts/2023082703_chapbook_wunderland_0/images/chapbooktwinev00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><em>Alea iacta est</em>: Ich habe mich entschieden, meinen Ausflügen mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> ins Wunderland ein Reboot zu spendieren und die Reise nun mit <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> anstelle von <a href="http://twine2.neocities.org/">Harlowe</a> oder <a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube</a> als StoryFormat anzutreten. Das bedeutet, daß ich meine bisherigen Tutorials komplett neu überarbeiten werde. Heute gibt es die erste Lieferung:</p>
<p>Das Tutorial geht davon aus, daß Ihr Twine auf dem Desktop installiert habt oder Ihr wißt, wie die Online-Version von Twine zu bedienen ist. Außerdem setzt es voraus, daß Ihr entweder Chapbook zu Eurem Default-Storyformat erklärt oder Ihr die Tutorials auf Chapbook umgestellt habt (Menü: <code>Geschichte -&gt; Details -&gt; Geschichtsformat: Chapbook 1.2.3</code>).</p>
<p>Als erstes habe ich die unbenannte Passage in <code>Start</code> umbenannt und dann diesen Text dort hineingeschrieben:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb1-1">:: Start</span>
<span id="cb1-2">Es war ein sonniger Tag. Alice schlenderte gedankenverloren durch das Wunderland. Sie</span>
<span id="cb1-3">hatte sich ein wenig verirrt. Plötzlich materialisierte sich im Gestrüpp über</span>
<span id="cb1-4">ihrem Weg die Grinsekatze. Alice fragte sie: »Würdest Du mir bitte sagen, wie ich</span>
<span id="cb1-5">von hier aus weitergehen soll!«</span>
<span id="cb1-6"></span>
<span id="cb1-7">Die Grinsekatze grinste: »Das hängt zum großen Teil davon ab, wohin Du möchtest.</span>
<span id="cb1-8">Aber ich will Dir helfen: Geradeaus geht es zum [[Haus der Herzogin]], links zur</span>
<span id="cb1-9">[[Teeparty des verrückten Hutmachers-&gt;Teeparty]] und rechts triffst Du die</span>
<span id="cb1-10">[[kiffende Raupe auf ihrem Pilz-&gt;Raupe]].«</span></code></pre></div>
<p>Um den Quellcode der einzelnen Passagen wiederzugeben, nutze ich <a href="http://twinery.org/cookbook/terms/terms_twee.html">Twee</a>. Das heißt, die erste Zeile mit den beiden Doppelpunkten kann von Euch ignoriert werden, sie enthält nur zu Eurer Orientierung den Namen der Passage (das heißt, Ihr übernehmt diese Zeile auch nicht in Euer Twine).</p>
<p>Zum zweiten habe ich, um horizontale Scrollbalken zu vermeiden, den Quelltext manuell umgebrochen. Absätze sind durch zwei Umbrüche (doppelte Leerzeilen) gekennzeichnet, den Rest solltet Ihr ohne Umbrüche in Euer Passagenfenster übernehmen.</p>
<p>Dieser Absatz zeigt schon die wichtigste Funktionsweise von Twine: Wie werden Links (zu anderen Passagen) erstellt? Der einfachste Weg ist, das Linkziel zwischen zwei eckigen Klammerpaaren (<code>[[]]</code>) zu schreiben, so wie in <code>[[Haus der Herzogin]]</code>. Hier sind Linktext und Linkziel identisch, das heißt, der Link <code>Haus der Herzogin</code> führt auch zur Passage <code>Haus der Herzogin</code>.</p>
<p>Doch nicht immer – sogar in den meisten Fällen – sind Linktext und Linkziel identisch. Hierfür gibt es in Twine die Pfeilnotation: <code>Linktext-&gt;Linkziel</code>, wie zum Beispiel in <code>[[Teeparty des verrückten Hutmachers-&gt;Teeparty]]</code>. Hier verlinkt der komplette Text <code>Teeparty des verrückten Hutmachers</code> auf eine Passage mit dem Namen <code>Teeparty</code>. Dabei ist zu beachten, daß Leerzeichen zählen. Daher sollte zumindest nach der Pfeilspitze kein Leerzeichen stehen, denn Twine sucht sonst das Linkziel <code>Teeparty</code> mit vorangestelltem Leerzeichen und das bringt nicht nur Twine, sondern – wie man in vielen Online-Tutorien sehen kann – auch Euch durcheinander. Wenn Ihr aber rechts und links von den Pfeilen keine Leerzeichen zulaßt, seid Ihr immer auf der sicheren Seite.</p>
<p>Es gibt noch eine zweite Schreibweise mit rückwärtsgerichtetem Pfeil, die Linkkziel und Linktext umkehrt: <code>[[Linkziel&lt;-Linktext]]</code>, also – um bei unserem Beispiel zu bleiben – <code>[[Teeparty&lt;-Teeparty des verrückten Hutmachers]]</code>. Mir hat sich der Sinn dieser vermutlich aus historischen Quellen gespeisten Schreibweise nie erschlossen und ich habe sie auch noch nie nutzen müssen.</p>
<p>Um die Verwirrung komplett zu machen, gibt es auch noch eine dritte Schreibweise mit einem vertikalen Trennstrich (<code>|</code>) in der Mitte: <code>[[Linktext|Linkziel]]</code>, also <code>[[Teeparty des verrückten Hutmachers|Teeparty]]</code>. Hier weiß ich zumindest den Grund, die Schreibweise stammt aus Twine 1.x und ich habe sie aus reiner Gewohnheit auch lange noch verwendet. Hier gilt übrigens das gleiche wie bei den Pfeilen: Keine Leerzeichen rechts und/oder links vom vertikalen Strich. Und selbst ich als Gewohnheitstier habe mich von dieser Schreibweise verabschiedet. Wer daher neu in Twine ist, sollte keinen Grund haben, auf dieser veralteten Konvention zu beharren.</p>
<p>Wenn Ihr – nachdem Ihr die Startpassage mit dem Text gefüttert habt – auf das Twine-Fenster schaut, werdet Ihr feststellen, daß Twine die Passagen <code>Haus der Herzogin</code>, <code>Teeparty</code> und <code>Raupe</code> für Euch schon angelegt und mit Pfeilen versehen hat. Die Pfeile zeigen von der Startpassage jeweils auf die verlinkte Passage und – sollte es von da einen Rücklink geben – als Doppelpfeil auch wieder zurück.</p>
<p>Ihr könnt die Passagen in dem Fenster beliebig mit der Maus hin- und herschieben und so ein wenig Struktur in Eure Geschichten bekommen.</p>
<p>Natürlich wollen auch diese Passagen mit Text gefüttert werden. Ich fange mit dem <code>Haus der Herzogin</code>an:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb2-1">:: Haus der Herzogin</span>
<span id="cb2-2">Im Haus der Herzogin herrschte Chaos. Die Herzogin warf erst mit einem Topf nach</span>
<span id="cb2-3">Alice, doch dann drückte sie ihr ein plärrendes [[Baby in den Arm-&gt;Schweinchen]].</span></code></pre></div>
<p>Auch die <code>Teeparty</code> und die <code>Raupe</code> bekommen je einen Text:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb3-1">:: Teeparty</span>
<span id="cb3-2">Alice erreichte die Teaparty vor dem Haus des verrückten Hutmachers. Dieser</span>
<span id="cb3-3">deklamierte gerade ein langes, dafür um so langweiligeres Gedicht.</span>
<span id="cb3-4"></span>
<span id="cb3-5">Alice hatte sehr schnell genug davon, also beschloß sie, doch die [[Raupe]]</span>
<span id="cb3-6">aufzusuchen.</span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb4-1">:: Raupe</span>
<span id="cb4-2">Die Raupe war zu bekifft, um ein vernünftiges Gespräch zu führen. Sie murmelte</span>
<span id="cb4-3">nur immerzu etwas vom »Reich der Ringe« und daß Alice dieses dringend besuchen</span>
<span id="cb4-4">müßte. Sie sagte noch: »Komm morgen wieder, dann erzähle ich Dir mehr«.</span>
<span id="cb4-5"></span>
<span id="cb4-6">Alice beschloß, daß sie für heute genug habe und ging nach [[Hause-&gt;Home]].</span></code></pre></div>
<p>Wenn Ihr jetzt wieder auf Euer Twine-Fenster schaut, werdet Ihr zwei weitere, neue, aber noch leere Passagen finden, die Twine für Euch angelegt und mit Pfeilen versehen hat: <code>Schweinchen</code> und <code>Home</code>. Ihr könnt sie zur besseren Übersicht erst einmal anordnen, wie im <a href="https://www.flickr.com/photos/schockwellenreiter/53143377865/">Screenshot</a> im Banner oben und dann ebenfalls mit Text füllen:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb5-1">:: Schweinchen</span>
<span id="cb5-2">Alice verließ das Haus. Das Plärren des Babys veränderte sich langsam zu einem</span>
<span id="cb5-3">Grunzen und Quieken. Als Alice nachsah, merkte sie, daß sie ein kleines Ferkelchen</span>
<span id="cb5-4">im Arm hielt.</span>
<span id="cb5-5"></span>
<span id="cb5-6">Erschreckt setzte Alice das Ferkelchen ab. Es lief davon. Und Alice ging verwirrt</span>
<span id="cb5-7">zurück an den {restart link, label: "Start"}.</span></code></pre></div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb6-1">:: Home</span>
<span id="cb6-2">Auf dem Weg nach Hause begegnete Alice noch einmal der Grinsekatze. Sie grinste</span>
<span id="cb6-3">Alice breit an – wie es Grinsekatzen eben so tun – und fragte: »Na, war die</span>
<span id="cb6-4">Raupe wieder bekifft?«</span>
<span id="cb6-5"></span>
<span id="cb6-6">Damit ist die Geschichte zu Ende. {restart link, label: "Noch einmal spielen"}?</span></code></pre></div>
<p>Diese Passagen enthalten nichts Neues bis auf den <code>{restart link, label: "Irgendein Text"}</code>. Das ist ein Chapbook-eigenes Feature, zwischen den geschweiften Klammern steht ein sogenanntes <code>insert</code>, eine Art Makro. Inserts sind ein wichtiges Sprachfeature von Chapbook, ich werde in späteren Tutorials noch ausführlich darauf zurückkommen. Für den Moment müßt Ihr nur wissen, daß dies ein Link auf die Startpassage ist (wobei <code>label</code> denn Linktext bezeichnet), der das Spiel auf seine Startwerte zurücksetzt. Sollte Euere Alice im Spiel also Erfahrungspunkte gesammelt haben, werden diese wieder auf den Startwert zurückgesetzt. Da es momentan aber noch keine Variablen wie zum Beispiel Erfahrungspunkte im Spiel gibt, wird einfach nur die Liste der besuchten Passagen geleert. Daher wäre es momentan auch kein Beinbruch, zum Beispiel in der <code>Home</code>-Passage den <code>restart link</code> durch den einfachen Link <code>[[Noch einmal spielen-&gt;Start]]</code> zu ersetzen. Twine würde dies dann auch mit einem Pfeil von <code>Home</code> auf <code>Start</code> honorieren.</p>
<p>Dies ist eigentlich alles, was Ihr über Twine und Chapbook wissen müßt. Mit diesem einfachen Linkmechanismus (der übrigens in dieser Form in fast allen Storyformaten existiert) könnt Ihr Eure eigene interaktive und verzweigte Geschichte im Stil der »Choose Your Own Adventure Books« <em>(CYOA)</em> schreiben. Denn das ist der Kern von Twine, alles andere ist im Grunde genommen nur Kosmetik. Aber da Kosmetik vieles doch erst schön macht, werde ich Euch in weiteren Tutorials zeigen, wie Ihr diese auftragt und nutzt, um Twine und Chapbook bis an die Grenzen auszureizen.</p>
<p>Das »Spiel« habe ich auf meinem Itch.io-Account <a href="https://kantel.itch.io/alice-und-chapbook-stage-0">hochgeladen</a>, damit Ihr das Ergebnis in Aktion erleben könnt. Und den <a href="https://github.com/kantel/twine-entdecken/blob/master/tweego/alice/alice00chapbook.twee">Twee-Code</a> wie auch die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alice">HTML-Datei</a> (<code>alice00chapbook.html</code>) findet Ihr in meinem GitHub-Repositorium, so daß Ihr das Beispiel in Eurem eigenen Twine importieren könnt.</p>



 ]]></description>
  <category>Twine</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023082703_chapbook_wunderland_0/index.html</guid>
  <pubDate>Sun, 27 Aug 2023 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082703_chapbook_wunderland_0/images/chapbooktwinev00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Fantasiekonsole TIC-80 v1.1 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082702_tic80v11_released/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://img.itch.zone/aW1hZ2UvODQxMTUvNDI5NDk1MS5wbmc=/original/2cKXNV.png"><img src="https://kantel.github.io/posts/2023082702_tic80v11_released/images/tic80screenshot-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Von der freien (MIT-Lizenz) »Fantasiekonsole« <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> haben die Entwickler die <a href="https://github.com/nesbox/TIC-80/releases">Version 1.1</a> freigegeben. Verbessert wurde unter anderem die Web-Assembler-Einbindung und die Unterstützung von Android. Alle Neuerungen findet Ihr im <a href="https://github.com/nesbox/TIC-80/compare/v1.1.2729...v1.1.2736">Changelog</a>.</p>
<p>TIC-80 ist eine simulierte Retrokonsole, die unter anderem mit Android, HTML5 (in WebAssembly), Linux, FreeBSD, macOS und Windows funktioniert und in den Skriptsprachen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a>, <a href="http://cognitiones.kantel-chaos-team.de/webworking/javascript.html">JavaScript</a>, MoonScript, Fennel, Wren und Squirrel programmiert werden kann. Sie besitzt eingebaute Werkzeuge zum Programmieren, zum Erstellen von Sprites und Karten und von Tönen und Melodien. Die Konsole kann entweder lokal auf dem Rechner oder online im Browser betrieben werden.</p>
<p>Auch wenn es mich natürlich und schon seit längerer Zeit gewaltig in den Fingern juckt: Ich bin momentan mit so vielen anderen Dingen beschäftigt, daß TIC-80 auf meiner Festplatte wohl noch eine Weile schlummern muß. Aber aufgeschoben ist ja nicht aufgehoben, irgendwann knöpfe ich mir auch (wieder) die kleine Konsole vor. <em>So viel zu spielen, so wenig Zeit!</em></p>



 ]]></description>
  <category>TIC-80</category>
  <category>Fantasiekonsole</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023082702_tic80v11_released/index.html</guid>
  <pubDate>Sun, 27 Aug 2023 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082702_tic80v11_released/images/tic80screenshot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neukölln ist (nicht nur) knallig bunt: Neuköllner Bilderbogen im August</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53143023338/"><img src="https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/images/bilderbogen2023082701-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der Sommer und mit ihm die Sommerferien gehen zu Ende und morgen beginnt ein neues Schuljahr. Ich möchte diese Gelegenheit nutzen, noch einmal alle Photos rauszuhauen, die mir in den letzten Tagen vor meine Smartphonelinse geraten waren.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53134605609/"><img src="https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/images/bilderbogen2023082702.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53143023653/"><img src="https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/images/bilderbogen2023082703.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53144208092/"><img src="https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/images/bilderbogen2023082704.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53145284268/"><img src="https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/images/bilderbogen2023082705.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Ob <a href="https://www.flickr.com/photos/schockwellenreiter/53134605609/">freigelassene Sitzmöbel</a>, die lange erwartete <a href="https://www.flickr.com/photos/schockwellenreiter/53143023653/">Neueröffnung einer beliebten Currywurstbude</a> (die vom Betreiber auch gleich zum <em>Flagship Store</em> geadelt wurde), <a href="https://www.flickr.com/photos/schockwellenreiter/53144208092/">besonders dreiste Gehwegzuparker</a>, deren Stern wohl in Neukölln die StVO »auto«matisch außer Kraft setzt, oder ein <a href="https://www.flickr.com/photos/schockwellenreiter/53145284268/">reisender Zigarettenautomat</a> auf der Flucht vor einem Raucher, dessen Karte anscheinend nicht akzepziert wurde … Neukölln ist eben nicht nur bunt, aber wenn, dann knall. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/index.html</guid>
  <pubDate>Sun, 27 Aug 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082701_neukoellner_bilderbogen/images/bilderbogen2023082701.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hypermedia, Twine und Chapbook: Ein Werkstattbericht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082601_twine_und_hypermedia/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53123060679/"><img src="https://kantel.github.io/posts/2023082601_twine_und_hypermedia/images/chapbooktwine-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich spiele einfach ein wenig weiter mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> und dem <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a>-Storyformat herum. Denn die <a href="https://kantel.github.io/posts/2023082501_twine_und_vscode/">gestern vorgestellte</a> Playlist »<a href="https://www.youtube.com/playlist?list=PLILyoTXjpxSCyVX2H1tNOjT021Wqq2Ebb">Twine – Simple Storytelling</a>« hat mich daran erinnert, woher unter anderem auch meine Faszination für Twine stammt: Twine erinnert (nicht nur) mich an Apples geniales, aber leider verblichenes <a href="http://cognitiones.kantel-chaos-team.de/medien/hypertext.html">Hypertext</a>-/<a href="http://cognitiones.kantel-chaos-team.de/medien/hypermedia.html">Hypermedia</a>-System »<a href="http://cognitiones.kantel-chaos-team.de/programmierung/hypercard.html">HyperCard</a> und es kann daher viel mehr, als nur (interaktive) Geschichten erzählen.</p>
<p>Wie fast immer in solchen Fällen möchte ich meine Beschäftigung auch ein wenig theoretisch untermauern. Da seltsamerweise mit dem Aufkommen des Internets die Beschäftigung mit Hypertext und Hpyermedia weitestgehend eingeschlafen ist – so als habe man Angst vor der eigenen Courage bekommen – sind die Texte dazu meistens älter. Einige davon habe ich im <a href="https://klembot.github.io/chapbook/guide/text-and-links/ways-to-link.html">Handbuch zu Chapbook</a> gefunden:</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://link.springer.com/book/10.1007/978-1-4612-4144-7"><img src="https://kantel.github.io/posts/2023082601_twine_und_hypermedia/images/elementsofhypermediadesign.jpg" class="img-fluid"></a>
</div>
<ul>
<li><a href="https://heterogenoustasks.wordpress.com/2015/01/26/standard-patterns-in-choice-based-games/">Standard Patterns in Choice-Based Games</a> von <em>Sam Kabo Ashwell</em> ist aus dem Jahre 2015 und daher schon fast so etwas wie ein (jüngerer) Klassiker.</li>
<li><a href="http://www.eastgate.com/patterns/Print.html">Patterns Of Hypertext</a> von <em>Mark Bernstein</em> ist ein Text, der 1998 in den <em>Proceedings of Hypertext ’98</em>, herausgegeben von <em>Frank Shipman</em>, <em>Elli Mylonas</em> und <em>Kaj Groenback</em>, veröffentlicht wurde.</li>
<li><a href="http://www.deenalarsen.net/fundamentals/links.html">A Plea for Connections: Links convey meaning</a> ist Teil der Website »<a href="http://www.deenalarsen.net/fundamentals/index.html">Fun da mentals : Rhetorical Devices for Electronic Literature</a>« von <em>Deen Larsen</em> (letztes Update 2012), die sich extrem ausführlich mit allen Formen der »elektronischen Literatur« und ihren Werkzeugen auseinandersetzt.</li>
</ul>
<p>Dann darf ich natürlich meinen Allzeit-Favoriten »<a href="https://link.springer.com/book/10.1007/978-1-4612-4144-7">Elements of Hypermedia Design: Techniques for Navigation &amp; Visualization in Cyberspace</a>« von <em>Peter Gloor</em> nicht vergessen. Das Buch hat über all die Jahre mein Interesse an HyperCard, Hypertext und Hpyermedia wachgehalten und auch dazu geführt, daß ich von 2006 bis 2009 eine eigene Lehrveranstaltung zu diesem Thema an der Fachhochschule für Technik und Wirtschaft (FHTW) in Berlin durchführen durfte.</p>
<p>Und <em>last but not least</em> möchte ich auf meine siebenteilige Tutorialreihe »<a href="http://www.kantel.de/hc/index.html">Programmieren in HyperTalk</a>« hinweisen, die ich schon 1996 geschrieben und 2001 online gestellt hatte. <em>Mensch, war ich damals noch jung!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <category>Hypermedia</category>
  <guid>https://kantel.github.io/posts/2023082601_twine_und_hypermedia/index.html</guid>
  <pubDate>Sat, 26 Aug 2023 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082601_twine_und_hypermedia/images/chapbooktwine.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Twine und Visual Studio Code: Video-Tutorials zum Wochenende</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082501_twine_und_vscode/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53139181290/"><img src="https://kantel.github.io/posts/2023082501_twine_und_vscode/images/lastdayofsummer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> läßt mich momentan einfach nicht mehr los. Und so ist es nur folgerichtig, daß die am heutigen Freitag vorgeschlagenen Video-Tutorials sich ebenfalls um Twine drehen. Da aber – wegen <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> – auch <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> momentan stark in meinen Fokus gerückt ist, gibt es zum Abschluß auch noch ein paar Tutorials zu diesem Editor. Doch erst einmal zu Twine:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/rVdmy99T6Pw?si=LNLQeSsuR2Rq0obo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Twine-Chapbook-Tutorials</strong>: <a href="https://www.youtube.com/playlist?list=PLILyoTXjpxSDRpq6LM35-41fepksK_2-4">Twine</a> ist eine auf geplante 25 Videos (bisher sind 14 davon veröffentlicht, doch es werden stündlich mehr) angelegte Playlist des Kanals <em>CodeVA Curriculum</em>, die als herausstechendes Merkmal das Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> zum Thema hat. Es gibt bisher wenig Tutorials zu Chapbook, daher ist dies wirklich etwas Besonderes und beinahe ein Alleinstellungsmerkmal.</p>
<p>Teile dieser Playlist sind auch in den kleineren Playlisten »<a href="https://www.youtube.com/playlist?list=PLILyoTXjpxSA8o8bgaUfq7ue_azdrJMor">CS+Social Studies</a>« und »<a href="https://www.youtube.com/playlist?list=PLILyoTXjpxSCAkTMsh3H9WOBd6pkOjuXH">Twine Trail Guide</a>« aufgegangen. Ob da mal eine Fork mit divergierenden Inhalten geplant ist, entzieht sich jedoch meiner Kenntnis.</p>
<p>Unter dem Namen »<a href="https://codeva-curriculum.github.io/twine-trail-guide">Making Interactive Stories with Twine – Chapbook Trail Guide</a>« gibt es zu diesen Tutorials auch weitere Texte und Übungen.</p>
<p><em>Last but not least</em> gibt es unter dem Namen »<a href="https://www.youtube.com/playlist?list=PLILyoTXjpxSCyVX2H1tNOjT021Wqq2Ebb">Twine - Simple Storytelling</a>« auf dem Kanal eine mittlerweile abgeschlossene Playlist mit fünf etwa zehnminütigen Videos, die ebenfalls eine Einführung in das Storyformat Chapbook sein will.</p>
<p>Allerdings erscheint mir die dort praktizierte ausschließliche Verwendung des <code>link</code>-Makros zur Verknüpfung der einzelnen Passagen etwas gewöhungsbedürftig.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/YzD3xdonRww?si=gwDlRulEyOFycRUJ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Twine kann mehr, als »nur« interaktive Geschichten erzählen</strong>: In der Playlist »<a href="https://www.youtube.com/playlist?list=PLFdCN5Xwa9x-RZMxhNYsi8FqQsuHUeeMy">Branching Scenario Planning &amp; Design</a>« (23 eher kurze (wenige Sekunden bis drei Minuten) Videos) erzählt <em><a href="https://www.christytuckerlearning.com/">Christy Tucker</a></em> wie man mit Twine <em>eLearning</em>-Material erstellen kann. <a href="https://blog.trainingpros.com/software-tools/twine-branching-scenarios/">Begleitmaterial</a> zu diesem Kurs gibt es hier. Das verwendete Storyformat ist <a href="http://twine2.neocities.org/">Harlowe</a>.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/mR9jhYD3bnI?si=VidOTr-lyjRQBT7e" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Doch nun zu Visual Studio Code</strong>: Das Video »<a href="https://www.youtube.com/watch?v=mR9jhYD3bnI">How to setup and use GitHub with Visual Studio Code</a>« ist sicher nicht nur für die Nutzer von Chromebooks interessant.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/MOLp_zZ7Dqg?si=5zjV9p9CL6qPvq6R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und von <em>MAKinteract</em> gibt es das nette Tutorial »<a href="https://www.youtube.com/watch?v=MOLp_zZ7Dqg">P5.js + Visual Studio Code</a>«. Und damit das für <a href="https://www.youtube.com/watch?v=FlVFRzX6jtE">Mac</a>- und <a href="https://www.youtube.com/watch?v=LKuu-WcOZYA">Windows</a>-Nutzer auch nachvollziehbar ist, haben sie für beide je ein Setup- und Installationsvideo hinterhergeschoben. Linux-Nutzer brauchen das nicht, die wissen sowieso, wie das geht. <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <category>Visual Studio Code</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2023082501_twine_und_vscode/index.html</guid>
  <pubDate>Fri, 25 Aug 2023 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082501_twine_und_vscode/images/lastdayofsummer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Gebrauchte Pariser für Berlin</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082401_gebrauchte_pariser/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52478389667/"><img src="https://kantel.github.io/posts/2023082401_gebrauchte_pariser/images/elektroschrott-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Paris hat das einzig Vernünftige gemacht, was man mit E-Scootern anstellen kann: Die Stadt hat den Elektroschrott ab dem 1. September dieses Jahres verboten. Jetzt sind die Anbieter von Eletroleihrollern auf eine weitere, beSCHEUERte Idee gekommen. <a href="https://www.rbb24.de/wirtschaft/beitrag/2023/08/elektroroller-e-roller-berlin-paris-voi-tier-bolt-limes.html">Sie wollen mehrere Tausend Fahrzeuge aus der französischen Hauptstadt nach Berlin verlegen</a>.</p>
<p>Angeblich wollen sie nur die Pariser E-Scooter gegen ältere Modelle in Berlin auszutauschen. Doch was von solchen Selbstverpflichtungsversprechen zu halten ist, zeigt das sogenannte »<a href="https://taz.de/Berliner-Wohnungsbuendnis/!5954419/">Wohnungsbündnis</a>« des Senats. Die Versprechen werden gebrochen, sobald sie den Profitinteressen im Wege stehen.</p>
<p>So ist also damit zu rechnen, das in Zukunft noch mehr Idiotinnen und Idioten mit den E-Scootern über die Fußwege düsen und massenhaft wahllos abgestellte Roller die Trottoirs verstopfen und unbegehbar machen.</p>
<p>Angeblich sei – wie in Paris – ein Verbot dieses Elektroschrottes in Berlin nur schwer möglich, weil die Sharing-Fahrzeuge 2019 durch eine bundesweite Verordnung des damaligen Verkehrsministers <em>Andreas Scheuer</em> (CSU) zugelasssen worden seien. Aber, lieber Senat, »schwer möglich« ist nicht »unmöglich«, also macht Euren Rechtsabteilungen Dampf. Wir Bürger verlieren nämlich langsam die Geduld! <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Wohnsitz Neukölln</category>
  <category>E-Scooter</category>
  <category>Verkehrswende</category>
  <category>Failed State Berlin</category>
  <guid>https://kantel.github.io/posts/2023082401_gebrauchte_pariser/index.html</guid>
  <pubDate>Thu, 24 Aug 2023 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082401_gebrauchte_pariser/images/elektroschrott.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auch Nimmerland ist Wunderland – wie auch der Kensington Garden (und die wunderbare Welt von Oz)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082302_nimmerland_wunderland/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/9/93/Peter_Pan-Arthur_Rackham-101.jpg"><img src="https://kantel.github.io/posts/2023082302_nimmerland_wunderland/images/peterpansolomoncaw-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mein Wunderland-Kosmos ist nicht allein auf die Geschichten um Alice von <em>Lewis Carroll</em> beschränkt, denn wenn ich meine Phantasie schweifen lasse, dann fallen mir sofort weitere fiktive (aber auch reale) Länder ein, die zum Wunderland-Universum gehören: Da ist zum einen das »<a href="https://de.wikipedia.org/wiki/Peter_Pan">Nimmerland</a>« des <em>Peter Pan</em>, und das nicht nur, weil Disney darüber ebenfalls einen Zeichentrickfilm gemacht hat. Sondern eher, weil der <a href="https://en.wikipedia.org/wiki/Peter_Pan_in_Kensington_Gardens">Kensingon Gardens</a> so etwas wie eine Vorstufe des Wunderlands ist (obwohl <em>J. M. Barrie</em> ihn erst viel später als Alice entdeckt hat).</p>
<p>Vor allem aber, weil <em><a href="https://de.wikipedia.org/wiki/Arthur_Rackham">Arthur Rackham</a></em> beide Bücher (<em>Alice im Wunderland</em> und <em>Peter Pan in Kensington Gardens</em>) so liebevoll illustriert hat, daß man die Seelenverwandschaft der beiden Protagonisten in den Zeichnungn spürt. Wikimedia Commons hat für beide (<a href="https://commons.wikimedia.org/wiki/Category:Peter_Pan_in_Kensington_Gardens">Peter Pan</a> und <a href="https://commons.wikimedia.org/wiki/Category:Alice%27s_adventures_in_Wonderland_(Rackham,_1907)?uselang=de">Alice</a>) je eine Sammlung mit den Zeichnungen Rackhams angelegt, die mir als ersten Einstieg in die wunderwame Welt britischer Traumländer, die es – nicht nur von Alice – zu entdecken gilt, dienen können. Aber natürlich gibt es auch noch andere, mittlerweile gemeinfreie Illustrationen, die ich für meine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>- und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>-Experimente heranziehen kann. Hier sollte ich noch ein wenig recherchieren.</p>
<p>Auch ist das Wunderland-Universum nicht auf britische Autoren beschränkt. Meiner Meinung nach gehört auf jeden Fall auch <em>Lyman Frank Baums</em> <a href="https://de.wikipedia.org/wiki/Der_Zauberer_von_Oz">wundersame Welt von Oz</a> mit ihren <a href="https://de.wikipedia.org/wiki/Der_Zauberer_von_Oz#Weitere_Oz-Romane_von_L._Frank_Baum">zahlreichen Büchern</a> dazu, denn ist nicht <em>Dorothy</em> die <a href="https://de.wikipedia.org/wiki/Der_Zauberer_von_Oz#Der_Zauberer_von_Oz_im_Vergleich_zu_anderen_Kinderb%C3%BCchern_seiner_Zeit">uramerikanische Inkarnation von <em>Alice</em></a>?</p>
<p>Auch wenn die Auswahl der Illustratoren hier eher begrenzt ist (der geniale <a href="https://de.wikipedia.org/wiki/William_Wallace_Denslow">William Wallace Denslow</a> für den ersten Band, der »Handwerker« <a href="https://de.wikipedia.org/wiki/John_Rea_Neill">John Rea Neill</a> für nahezu alle folgenden Bände), gehören diese Überschneidungen (aber auch die Unterschiede: Die Oberschichten-Alice versus der proletarischen Dorothy) ebenfalls in meine Wunderland-Exkursionen. Da muß man doch was draus machen können. <em>Still digging!</em></p>



 ]]></description>
  <category>Alice</category>
  <category>Wunderland</category>
  <category>Interactive Fiction</category>
  <category>Twine</category>
  <category>RenPy</category>
  <guid>https://kantel.github.io/posts/2023082302_nimmerland_wunderland/index.html</guid>
  <pubDate>Wed, 23 Aug 2023 15:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082302_nimmerland_wunderland/images/peterpansolomoncaw.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert erneut in Version 116 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082301_chrome update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1oBEk2ILb9xvTFhDDLMvCty-d9RgFTiI-8CLgXX3ciYrNX5BZrPbXMZ-ONrD33wKvneTbzkgY_Ol7GkwpP1mW0XzGePsOFjMWjxWr8Udk25zqjOlj_mBdK9h8WT9coKSjpZUXp8HHDPmYuHS6ElwSIbU1j5FquVtAeldiSjdkU-GTDBGOP8vNPNaeDFaD/s1473/Powers1910.jpg"><img src="https://kantel.github.io/posts/2023082301_chrome update/images/powers1910-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlichte gestern ein weiteres Update der Version 116 (116.0.5845.110/111) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2023/08/chrome-desktop-stable-update.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="http://john-adcock.blogspot.com/2023/07/t-e-powers-two-obituaries.html">Thomas E. Powers</a> (1870-1939), Chicago Examiner, 1910)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023082301_chrome update/index.html</guid>
  <pubDate>Wed, 23 Aug 2023 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082301_chrome update/images/powers1910.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweaking Ren’Py: Die Engine kann mehr als nur Visual Novels</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082102_tweaking_renpy/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.kenney.nl/media/pages/assets/tiny-dungeon/a54d5f0c77-1674742412/sample.png"><img src="https://kantel.github.io/posts/2023082102_tweaking_renpy/images/tinydungeon-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Manchmal bekommt man Videos vorgesetzt, die hauen einen glatt aus den Socken. So ging es mir mit dem <a href="https://www.youtube.com/watch?v=eUchqIZ8J20">unten vorgestellten Video</a>, in dem <em>Kia Azad</em> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> bis über die Grenzen hinaus ausgereizt hat, um ein RPG damit zu programmieren.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/eUchqIZ8J20" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Auch wenn ich natürlich gerne wissen würde, wie er das angestellt hat, befürchte ich, daß ich damit weit überfordert wäre. Aber es hat mich daran erinnert, daß auch ich schon lange die Programmierung eines RPG (aber in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>) auf meiner Agenda habe. Und das Video nutzt Tiles, die mich stark an Kenneys <a href="https://www.kenney.nl/assets/tiny-dungeon">Tiny Dungeon</a> aus seiner <a href="https://www.kenney.nl/assets/series:Tiny">Tiny-Reihe</a> erinnern. Wollte ich für meine eigenen Experimente festhalten, damit ich mich beizeiten daran erinnere.</p>
<p><em>Kia Azad</em> hat auch eine <a href="https://kia.itch.io/">Seite auf Itch.io</a>, auf der es unter anderem ebenfalls Tiles und Sprites gibt, die in ein 32x32 Pixel oder 16x16 Pixel großes Raster passen und die Ihr für nichtkommerzielle Projekte frei herunterladen könnt. Ich habe diese Seite gleich abonniert, denn Tiles und Sprites kann man nie genug haben.</p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2023082102_tweaking_renpy/index.html</guid>
  <pubDate>Mon, 21 Aug 2023 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082102_tweaking_renpy/images/rpgonrenpy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweego und die aktuellen Storyformate – ein Abschlußbericht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082101_tweego_chapbook/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53132354793/"><img src="https://kantel.github.io/posts/2023082101_tweego_chapbook/images/alicetweegochapbook-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Für meine noch offene Frage, wo ich die aktuellen Storyformate für <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> herbekomme, habe ich eine ebenso einfache wie triviale Lösung gefunden, auf die ich eigentlich schon viel früher hätte kommen können. Denn natürlich gibt es sie <a href="https://github.com/klembot/twinejs/tree/develop/public/story-formats">alle in dem GitHub-Repositorium</a> zu <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">Twine</a>, und zwar in allen Varianten.</p>
<p>So besitzt mein Tweego neben den früheren Versionen jetzt die momentan aktuellsten Storyformate <a href="https://klembot.github.io/chapbook/guide/">Chapook 1.2.3</a>, <a href="http://twine2.neocities.org/">Harlowe 3.3.6</a> und <a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube 2.36.1</a>. Nur der Vollständigkeit halber habe ich ihm auch noch <a href="https://bitbucket.org/klembot/snowman-2">Snowman 2.0.2</a> und das <em>Proof-Reading-Format</em> Paperthin (in der Version 1.4.0) gegönnt, aber die beiden stehen (noch!) nicht auf dem Programm für meine <a href="https://kantel.github.io/posts/2023080202_alice_twine_reloaded/">geplanten Tutorials zu Twine und Tweego</a>. Aber man kann ja nie wissen.</p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>Chapbook</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023082101_tweego_chapbook/index.html</guid>
  <pubDate>Mon, 21 Aug 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082101_tweego_chapbook/images/alicetweegochapbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tutorials zu Twine und SugarCube</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082002_twine_sugarcube/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53129942469/"><img src="https://kantel.github.io/posts/2023082002_twine_sugarcube/images/alicesugarcube-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Erkundungen (<a href="https://kantel.github.io/posts/2023081701_tweego_first_steps/">1</a>, <a href="https://kantel.github.io/posts/2023081802_tweego_storyformate/">2</a> und <a href="https://kantel.github.io/posts/2023082001_tweego_chapbook/">3</a>) von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> haben mich nicht mehr losgelassen: Ich will jetzt damit (und speziell mit dem Storyformat <a href="https://www.motoslave.net/sugarcube/2/">SugarCube</a>) etwas anstellen. Da trifft es sich gut, daß ich vor etwa drei Jahren schon einen ersten <a href="http://blog.schockwellenreiter.de/2020/12/2020122502.html">Ausflug mit dem Zuckerwürfel in meinen Wunderland-Kosmos</a> begonnen, aber leider nie fortgeführt hatte.</p>
<p>Das will ich nun ändern. Zur Vorbereitung habe ich mir erst einmal ein paar Tutorials zusammengeklaubt. Zwar ist die Anzahl der Video-Tutorials zu diesem Storyformat erstaunlich hoch, aber Tutorials, die man ganz konventionell lesen kann, sind doch etwas knapp. Gefunden und lesenswert sind meiner Meinung nach diese:</p>
<ul>
<li>Allison Parrish: <em><a href="https://catn.decontextualize.com/twine/">A Quick Twine (2.2+) Tutorial</a></em> ist ein umfangreiches Tutoral aus dem Jahre 2022, das auch eher ungewöhnliche Features behandelt.</li>
<li>Seth Kenlon: <em><a href="https://opensource.com/article/18/2/twine-gaming">How to use Twine and SugarCube to create interactive adventure games</a></em>, opensource.com vom 9. Februar 2018. Auch der Unix-Geek von RedHat hat sich mit Twine und SugarCube befaßt.</li>
<li>Adam Hammond: <em><a href="https://www.adamhammond.com/twineguide/">A Total Beginner’s Guide to Twine 2.1</a></em> ist ein Tutorial (mit begleitenden Videos), das der Autor für seine Lehrveranstaltung »Introduction to Digital Humanities« vor etwa fünf Jahren entwickelt hatte.</li>
<li><em><a href="https://www.instructables.com/Generic-Rooms-in-Twine-With-Sugarcube/">Generic Rooms in Twine with SugarCube</a></em> ist ein witziges Tutorial, dessen Geschichte mich ein wenig an <em><a href="https://de.wikipedia.org/wiki/Lewis_Carroll">Lewis Carrolls</a></em> »<a href="https://de.wikipedia.org/wiki/The_Hunting_of_the_Snark">The Hunting of the Snark</a>« erinnert.</li>
<li>Und <em>last but not least</em> ist da noch der <em>Vegetarian Zombie</em>, dessen Tutorial-Reihe <em><a href="https://www.learncreateplay.games/interactive-fiction-with-twine/">Interactive Fiction with Twine</a></em> ebenfalls mit begleitenden YouTube-Videos erschienen ist. Sie bricht im Januar dieses Jahres mit der <a href="https://www.learncreateplay.games/twine-2-tutorial-picking-up-placing-items/">12. Folge</a> etwas unvermittelt ab, aber vor wenigen Wochen (im Juli 2023) hat er <a href="https://www.learncreateplay.games/site-update/">neue Updates versprochen</a>.</li>
</ul>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://www.pearson.de/writing-interactive-fiction-with-twine-9780134303123"><img src="https://kantel.github.io/posts/2023082002_twine_sugarcube/images/twinebook.jpg" class="img-fluid"></a>
</div>
<p>Und wer eine gründliche Einführung nicht nur in Twine, sondern auch in das Design interaktiver Spiele und Geschichten haben möchte, die oder dem kann ich nur das Buch »<a href="https://www.pearson.de/writing-interactive-fiction-with-twine-9780134303123">Writing Interactive Fiction with Twine</a>« von <em>Melissa Ford</em> empfehlen. Die 400 Seiten fette Schwarte ist von 2016 und als gedrucktes Buch vergriffen (und bei Amazon gebraucht nur noch zu Mondpreisen (aktuell 210 Euro) erhältlich), aber beim Verlag kann man ein PDF völlig legal für 16,04 Euro erwerben. Das Buch behandelt zur Hälfte <a href="https://twine2.neocities.org/">Harlowe</a> als Storyformat, aber im zweiten Teil (ab Seite 253) geht es auch auf SugarCube (Version 1 und Version 2) ein.</p>
<p>So bestückt möchte ich nun meine Reise mit SugarCube durch das Wunderland-Universum fortsetzen. Ideen und Material habe ich schon gesammelt. Schaun wir mal, was sich daraus entwickelt. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>SugarCube</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023082002_twine_sugarcube/index.html</guid>
  <pubDate>Sun, 20 Aug 2023 17:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082002_twine_sugarcube/images/alicesugarcube.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweego und Chapbook – ein Testbericht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023082001_tweego_chapbook/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53128025520/"><img src="https://kantel.github.io/posts/2023082001_tweego_chapbook/images/chapbooktweego-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine <a href="https://kantel.github.io/posts/2023081802_tweego_storyformate/">Tests</a>, wie weit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zusammenspielen, habe ich zu einem erfolgreichen vorläufigen Abschluß gebracht, denn auch Tweego und das Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> funzen ziemlich gut mit Visual Studio Code.</p>
<p>Der Anfang war etwas holprig, weil ich die <a href="https://klembot.github.io/chapbook/guide/state/the-vars-section.html">Vars Section</a> nicht korrekt untergebracht bekam. Hier half ein Trick: Ich habe eine bestehende Chapbook-Story als <code>Twee</code> exportiert und dann nachgeschaut, wo die Metadaten dort standen. Die Lösung war, daß sie unmittelbar unter dem Passagenamen stehen müssen und nicht – wie ich dachte – direkt zu Beginn der Datei. So bekam ich das Layout meines Spiels in den Griff, ohne mich mit CSS herumschlagen zu müssen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb1-1">:: Start</span>
<span id="cb1-2">config.style.page.color: "gray-1 on black"</span>
<span id="cb1-3">config.style.page.link.font: "18 none"</span>
<span id="cb1-4">config.style.page.link.color: "orange-4"</span>
<span id="cb1-5">config.style.page.link.lineColor: "orange-4"</span>
<span id="cb1-6">config.style.page.link.active.color: "orange-4"</span>
<span id="cb1-7">config.style.page.fork.divider.style: "none"</span>
<span id="cb1-8">--</span></code></pre></div>
<p>Weiter schön an Tweego ist, daß es – ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> – rekursiv ein Verzeichnis durchsucht und alle <code>.twee</code>-, <code>.tw</code>-, <code>.css</code>- und <code>.js</code>-Dateien in <strong>eine</strong> Zieldatei-HTML-Datei herausrendert (im Extremfall auch alle Bilddateien, dazu weiter unten mehr). Ich habe daher meine Projekte jeweils wie folgt organisiert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Projektverzeichnis</span></span>
<span id="cb2-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> Verzeichnis images</span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> Vereichnis src</span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index.html</span></span></code></pre></div>
<p>Tweego wird dann mit folgendem Kommando(s) aufgerufen:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>projektverzeichnis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Applications/tweego/tweego'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index.html'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'src'</span></span></code></pre></div>
<p>Da einige Storyformate auch Bilder als Passagen verwenden können und – auch wenn Tweego wahnsinnig schell ist – ich daher unnötige Rendereien vermeiden wollte, habe ich das Assetverzeichnis <code>images</code> <strong>oberhalb</strong> von <code>src</code> angelegt. Die Bilder werden daher von Tweego nicht angefaßt und zum anderen kann ich zum Beispiel in Chapbook sie mit folgendem Makro einbinden:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb4-1">{embed image: "images/&lt;bildname.png&gt;", alt: "&lt;bildbeschreibung&gt;"}</span></code></pre></div>
<p>In <a href="https://www.motoslave.net/sugarcube/2/">SugarCube</a> heißt der entsprechende Befehl:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb5-1">[img[images/&lt;bildname.png&gt;]]</span></code></pre></div>
<p>Während man in <a href="https://twine2.neocities.org/">Harlowe</a> <em>plain old HTML</em> bemühen muß:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;img</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bildname.png&gt;"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">alt</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">bildbeschreibung&gt;"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">/&gt;</span></span></code></pre></div>
<p>Da die resultierende <code>index.html</code> auch oberhalb des <code>src</code>-Verzeichnisses herausgeschrieben wird, hat diese Methode den Vorteil, daß die Datei ihre Bilder auch ohne Verrenkungen findet.</p>
<p>Doch jetzt erst einmal »Butter bei die Fisch«. Ich habe für mein Beispiel die (Chapbook) Twee-Dateien zu Testzwecken recht artifizell in Einzeldateien aufgesplittet, zuerst in die <code>storydate.twee</code>, die so aussieht:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb7-1">:: StoryData</span>
<span id="cb7-2">{</span>
<span id="cb7-3">  "ifid": "5AA26DF4-EA52-4A16-A3F9-036F87214882",</span>
<span id="cb7-4">  "format": "Chapbook",</span>
<span id="cb7-5">  "format-version": "1.2.3",</span>
<span id="cb7-6">  "start": "Start",</span>
<span id="cb7-7">  "zoom": 1</span>
<span id="cb7-8">}</span></code></pre></div>
<p>Die <code>ifid</code> wird von Tweego beim ersten Durchlauf erzeugt und man wird aufgefordert, sie dann in <code>StoryData</code> einzufügen.</p>
<p>Dann die <code>title.twee</code>, die naturgemäß recht klein geraten ist:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb8-1">:: StoryTitle</span>
<span id="cb8-2">Alien Attack</span></code></pre></div>
<p>Die eigentliche Story beginnt mit der <code>start.twee</code>, die auch die Style-Anweisungen enthält:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb9-1">:: Start</span>
<span id="cb9-2">config.style.page.color: "gray-1 on black"</span>
<span id="cb9-3">config.style.page.link.font: "18 none"</span>
<span id="cb9-4">config.style.page.link.color: "orange-4"</span>
<span id="cb9-5">config.style.page.link.lineColor: "orange-4"</span>
<span id="cb9-6">config.style.page.link.active.color: "orange-4"</span>
<span id="cb9-7">config.style.page.fork.divider.style: "none"</span>
<span id="cb9-8">--</span>
<span id="cb9-9"></span>
<span id="cb9-10"># Die Geschichte beginnt hier …</span>
<span id="cb9-11"></span>
<span id="cb9-12">[note]</span>
<span id="cb9-13">Auftritt Hans Blond.</span>
<span id="cb9-14">Hans Blond neutral</span>
<span id="cb9-15">[continued]</span>
<span id="cb9-16"></span>
<span id="cb9-17">{embed image: "images/buero_blond_1.png", alt: "Büro Hans Blond"}</span>
<span id="cb9-18"></span>
<span id="cb9-19">Mein Name ist Blond, Hans Blond.</span>
<span id="cb9-20"></span>
<span id="cb9-21">Meine Chefin *Sylvia Berlin* hat mich zu einem [[Meeting-&gt;meeting_1]] gerufen.</span></code></pre></div>
<p>Sie mündet dann in die etwas längere <code>meeting.twee</code>:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb10-1">:: meeting_1</span>
<span id="cb10-2"></span>
<span id="cb10-3">[note]</span>
<span id="cb10-4">Auftritt Sylvia von rechts</span>
<span id="cb10-5">[continued]</span>
<span id="cb10-6"></span>
<span id="cb10-7"></span>
<span id="cb10-8">{embed image: "images/buero_sylvia_1.png", alt: "Büro Sylvia Berlin"}</span>
<span id="cb10-9"></span>
<span id="cb10-10">Klopf, Klopf!</span>
<span id="cb10-11"></span>
<span id="cb10-12">[[Herein!-&gt;meeting_2]]</span>
<span id="cb10-13"></span>
<span id="cb10-14">:: meeting_2</span>
<span id="cb10-15"></span>
<span id="cb10-16">[note]</span>
<span id="cb10-17">Auftritt Blond von links.</span>
<span id="cb10-18">Sylvia Talking</span>
<span id="cb10-19">[continued]</span>
<span id="cb10-20"></span>
<span id="cb10-21">{embed image: "images/buero_sylvia_2.png", alt: "Büro Sylvia 2"}</span>
<span id="cb10-22"></span>
<span id="cb10-23">Sylvia: »Mein lieber Herr Blond, die Bürgermeisterin hat mich gebeten,</span>
<span id="cb10-24">ihr für die anstehende Wahlwiederholung meinen besten IT-Spezialisten</span>
<span id="cb10-25">zur Verfügung zu stellen. Und da habe ich natürlich sofort an Sie gedacht.</span>
<span id="cb10-26">Sie können gleich morgen anfangen.«</span>
<span id="cb10-27"></span>
<span id="cb10-28">Hans war sofort klar: Damit wollte Sylvia ihn als Konkurrenten um</span>
<span id="cb10-29">die Referatsleitung kaltstellen. Doch was sollte er tun?</span>
<span id="cb10-30"></span>
<span id="cb10-31">&gt; [[Wütend den Raum verlassen und die Tür hinter sich zuknallen?-&gt;wut_1]]</span>
<span id="cb10-32">&gt; [[Gute Miene zum bösen Spiel machen und der Versetzung zustimmen?-&gt;gute_miene]]</span>
<span id="cb10-33"></span>
<span id="cb10-34">:: wut_1</span>
<span id="cb10-35"></span>
<span id="cb10-36">[note]</span>
<span id="cb10-37">Abgang Blond nach links</span>
<span id="cb10-38">[continued]</span>
<span id="cb10-39"></span>
<span id="cb10-40">Hans [[verließ wütend den Raum-&gt;bad_ending]] und schlug die Tür mit einem</span>
<span id="cb10-41">lauten Knall hinter sich zu.</span>
<span id="cb10-42"></span>
<span id="cb10-43">:: bad_ending</span>
<span id="cb10-44"></span>
<span id="cb10-45">{embed image: "images/buero_blond_2.png", alt: "Hans Blond traurig"}</span>
<span id="cb10-46"></span>
<span id="cb10-47">Kaum war Hans wieder in seinem Büro, als er auch schon eine Email bekam.</span>
<span id="cb10-48">Darin stand in dürren Worten, daß sein Antrag auf Beförderung abgelehnt sei.</span>
<span id="cb10-49"></span>
<span id="cb10-50">Tja Hans, zu hoch gepokert.</span>
<span id="cb10-51"></span>
<span id="cb10-52">Das ist das viel zu frühe Ende!</span>
<span id="cb10-53"></span>
<span id="cb10-54">&gt; {restart link, label: "Noch einmal versuchen?"}</span>
<span id="cb10-55"></span>
<span id="cb10-56">:: gute_miene</span>
<span id="cb10-57"></span>
<span id="cb10-58">Hans: »Dann werde ich mal [[mein Büro räumen-&gt;buero_2]].«</span></code></pre></div>
<p>Um dann in der <code>buero_2.twee</code> zu enden:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb11-1">:: buero_2</span>
<span id="cb11-2"></span>
<span id="cb11-3">[note]</span>
<span id="cb11-4">Auftritt Hans Blond von rechts.</span>
<span id="cb11-5">Hans Blond konfus</span>
<span id="cb11-6">[continued]</span>
<span id="cb11-7"></span>
<span id="cb11-8">{embed image: "images/buero_blond_3.png", alt: "Hans Blond konfus"}</span>
<span id="cb11-9"></span>
<span id="cb11-10">Hans (zu sich): »Sylvia ist zwar ein intrigantes Biest, aber süß ist sie dennoch.« ❤️</span></code></pre></div>
<p>Die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alienattackv2/src">Twee-Sourcen</a>, alle <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alienattackv2/images">Bilder</a> und natürlich die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/alienattackv2">finale <code>index.html</code></a> findet Ihr auch wieder in meinem GitHub-Repositorium.</p>
<p>Chapbook ist in meinen Augen immer noch das am Besten geeignete Twine-Storyformat, um interaktive Geschichten zu entwerfen, die dann im Endeffekt in Ren’Py realisiert werden (ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> zusammenspielt). Daher enthält mein Testspiel entsprechende »Regieanweisungen« in den <code>[note] … [continued]</code>-Blöcken.</p>
<p>Für »normale« interaktive Geschichten scheinen mir jedoch Harlowe und SugarCube die geeigneteren Storyformate zu sein, wobei die SugarCube-Tweego-Integration am weitesten vorangeschritten ist. Dies ist aber auch nicht verwunderlich, da <em>Thomas Michael Edwards</em>, der Hauptentwickler von SugarCube, auch der Hauptentwickler von Tweego ist.</p>
<p>Aber ansonsten gilt: Die Auswahl eines geeigneten Storyformats hängt auch viel von persönlichen Vorlieben ab. Daher solltet Ihr ausprobieren, was Euch am Besten liegt. Ich hoffe, mit meinen Beiträgen Euch bei Eurer Entscheidung helfen zu können.</p>
<p>Und das war sicher nicht der letzte Beitrag zu Twine und Tweego. Besonders die SugarCube-Integration finde ich faszinierend. Ich werde daher weiter testen und berichten. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Tweego</category>
  <category>Visual Studio Code</category>
  <category>Interactive Fiction</category>
  <category>RenPy</category>
  <guid>https://kantel.github.io/posts/2023082001_tweego_chapbook/index.html</guid>
  <pubDate>Sun, 20 Aug 2023 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023082001_tweego_chapbook/images/chapbooktweego.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues von meinem (digitalen) Zettelkasten: Logseq 0.9.14 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023081902_logseq_0914/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53127373944/"><img src="https://kantel.github.io/posts/2023081902_logseq_0914/images/logseq0914-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Normalerweise aktualisiert sich mein <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">zweites Gehirn</a> ja selbstständig, aber dieses Mal hatte entweder der automatische Updater versagt oder ich war zu ungeduldig. Jedenfalls habe ich erst via <a href="https://twitter.com/logseq/status/1692522864459829731?t=bfwsV_tyK3AHidI9bFwQpA&amp;s=03">Twitter</a> erfahren, daß <a href="https://logseq.com/">Logseq</a> die Version 0.9.14 freigegeben hatte.</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://github.com/yoyurec/logseq-awesome-styler"><img src="https://kantel.github.io/posts/2023081902_logseq_0914/images/awesomestyler.png" class="img-fluid"></a>
</div>
<p>Der <a href="https://blog.logseq.com/logseq-0-9-14-better-sidebars-and-smart-merge-for-sync/">zugehörige Blogeintrag</a> verspricht ein größeres Update: So werden verbesserte Seitenleisten angekündigt, die bei mir allerdings noch nicht greifen, bis meine Plugins <a href="https://github.com/yoyurec/logseq-awesome-styler">Awesome Styler</a> oder <a href="https://github.com/yoyurec/logseq-awesome-ui">Awesome UI</a> (oder beide) ebenfalls ein Update vorgelegt haben.</p>
<p>Dann gibt es mit <em>Smart Merge</em> ein neues (noch exerimentelles) Feature, das die Synchronisation zwischen verschiedenen Devices verbessern soll. Wie man dieses Feature freischaltet, ist ebenfalls im <a href="https://blog.logseq.com/logseq-0-9-14-better-sidebars-and-smart-merge-for-sync/">Blogpost</a> beschrieben.</p>
<p>Außerdem soll bald ein neues Logseq-Handbuch als <em>In-App Documentation</em> integriert werden. Das alte, aber extrem nützliche <a href="https://docs.logseq.com/">docs.logseq.com</a> soll uns aber weiterhin erhalten bleiben.</p>
<p>Bei mir lief das Update ohne Probleme, wie der <a href="https://www.flickr.com/photos/schockwellenreiter/53127373944/">Screenshot</a> oben im Banner beweist. Damit ich aber in den Genuß der schönen neuen Features komme, muß ich aber wohl noch auf ein Update meiner Plugins warten.</p>



 ]]></description>
  <category>Logseq</category>
  <category>Outliner</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2023081902_logseq_0914/index.html</guid>
  <pubDate>Sat, 19 Aug 2023 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023081902_logseq_0914/images/logseq0914.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
