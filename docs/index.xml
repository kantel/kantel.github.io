<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Sun, 23 Jun 2024 15:15:00 GMT</lastBuildDate>
<item>
  <title>Völlig losgelöst: Ein neuer Anfang mit Mac Mini und Sonoma</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062301_mac_mini/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53671668951/"><img src="https://kantel.github.io/posts/2024062301_mac_mini/images/voelliglosfgeloest-b.jpg" class="img-fluid"></a></p>
<p>Ich habe es gewagt und den Umzug des <em>Schockwellenreiters</em> von meinem betagten MacBook Pro (von 2012) auf Gabis etwas aktuelleren Mac Mini (von 2018) vollzogen. Wenn Ihr diese Mitteilung lesen könnt, hat auch alles wie geplant geklappt.</p>
<p>Also – wie gesagt –, wenn Ihr dies lesen könnt, werkelt hinter diesem <del>Blog</del> Kritzelheft zwar immer noch <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> (an dem <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">geplanten Umzug</a> nach <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> bastel ich noch), aber immerhin ein aktuelles macOS Sonoma 14.5 auf einem 3 GHz 6-Core Intel Core i5 Prozessor mit 8 GB RAM von einer fast 500 GB fetten SD-Hard-Disk. Das sollte für die nächsten Jahre ausreichen.</p>
<p>Ein Problem habe ich aber noch: Da ich von Gabi nicht nur ihren Rechner, sondern auch ihren Monitor »geerbt« habe, besitzte ich jetzt zwar zwei wunderbare, große Bildschirme, aber der Mac Mini hat nur einen HDMI-Port. Hat jemand von Euch da draußen eine Idee, wie ich den zweiten Monitor anschließen kann, ohne gleich viel Geld ausgeben zu müssen? Denn auch der damals für Gabi mitgekaufte Satechi USB-Hub und -Datenport besitzt keinen HDMI-Anschluß. Gibt es daher so etwas wie USB-C- zu HDMI-Adapter?</p>
<p>Wer eine Lösung in petto hat, die oder den bitte ich um Mitteilung in meinen Kommentaren. Denn mit nur einem Monitor zu hantieren, ist auf die Dauer doch etwas umständlich und unübersichtlich. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53671668951/">Völlig losgelöst (von der Erde)</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>The Mad Hatter surfs on a board in the air between houses and trees in a futuristic city. A planet with a ring can be seen in the sky. Little white rabbits with vests and watches scurry about on the streets. colored french comic style</em>«. Negative Prompt: »<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Illustrated Anime + Ethereal Realism.</p>



 ]]></description>
  <category>Interna</category>
  <category>Quarto</category>
  <guid>https://kantel.github.io/posts/2024062301_mac_mini/</guid>
  <pubDate>Sun, 23 Jun 2024 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062301_mac_mini/images/voelliglosfgeloest.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Fractal Tree: Ein fraktaler Baum mit P5.js und TurtleGFX</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062101_fractal_tree/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53803552757/"><img src="https://kantel.github.io/posts/2024062101_fractal_tree/images/fraktaltree2-b.jpg" class="img-fluid"></a></p>
<p>Nach meinen ersten Gehversuchen wollte und mußte ich natürlich in den letzten Tagen weiter mit <a href="https://github.com/CodeGuppyPrograms/TurtleGFX/tree/master">TurtleGFX</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> spielen. Also habe ich den Rechner angewiesen, ein paar fraktale Bäume zu generieren, ahnlich wie sie <em>Al Sweigart</em> in seinem »The Recursive Book of Recursion« (S. 187ff.) mit Pythons Turtle implementiert hatte.</p>
<p>Über den Port nach JavaScript mußte ich mir keine Gedanken machen, denn den hatte Mr.&nbsp;CodeGuppy itself, <em>Marian Veteanu</em>, in seinen Beispielskripten für TurtleGFX <a href="https://codeguppy.com/code.html?t=fractal_tree">schon programmiert</a>, ich habe ihn nur noch ein wenig aufgehübscht:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> imwidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1600</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> imheight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">667</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb1-6">  bg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/bg.jpg"</span>)</span>
<span id="cb1-7">}</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11">  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createTurtle</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frameRate</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">}</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clear</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">370</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imwidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">370</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// background("#ffffff");</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">  t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setposition</span>(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plant</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-22">}</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plant</span>(size) {</span>
<span id="cb1-25">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26"></span>
<span id="cb1-27">  t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pensize</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-28">  t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pencolor</span>(size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-29"></span>
<span id="cb1-30">  t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forward</span>(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-31"></span>
<span id="cb1-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">var</span> [x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-33">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">var</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">heading</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-34"></span>
<span id="cb1-35">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">var</span> nextSign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-36"></span>
<span id="cb1-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repeat</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb1-38">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">var</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nextSign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-39">    nextSign <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-40"></span>
<span id="cb1-41">    t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span>(angle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-42">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plant</span>(size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-43"></span>
<span id="cb1-44">    t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setposition</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-45">    t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setheading</span>(h)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-46">  })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-47">}</span>
<span id="cb1-48"></span>
<span id="cb1-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repeat</span>(n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> fn) {</span>
<span id="cb1-50">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">var</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb1-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fn</span>(i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-52">  }</span>
<span id="cb1-53">}</span></code></pre></div>
<p>Für diejenigen unter Euch, die – wie ich – von Python kommen, ist die Pfeilfunktion <em>(Arrow Operator)</em> <code>=&gt;</code> sicher erst einmal ungewohnt. Sie sagt aber eigentlich nichts anderes, als daß die Funktion »hinter« dem Pfeil (also alles, was dort innerhalb des geschweiften Klammerpaars steht) zusammen mit den Parametern <em>vor</em> dem Pfeil der aufgerufenen Funktion übergeben wird. In diesem Falle also wird die Funktion <code>repeat(n, fn) =&gt; {}</code> wie folgt aufgerufen:</p>
<p>Zuerst wird <code>random([2, 3])</code><sup>1</sup> ausgewertet und als Parameter <code>n</code> übergeben, Und die Funktion <code>fn</code> ist all das, was hinter dem Pfeil in dem geschweiften Klammernpaar eingeschlossen ist. Das heißt, <code>repeat()</code> führt <code>fn()</code> bei jedem Aufruf <code>n</code>-mal (dem Ergebnis von <code>random([2, 3])</code>) aus. Mutige können <code>n</code> ja mal höher setzen (zum Beispiel <code>random([3, 5])</code>). Das Ergebnis sind bedeutend buschigere Bäume, aber die Rechenzeit steigt auch enorm (auf meinem betagten MacBook Pro fragt mich das Betriebssystem bei jeder Iteration dann, ob ich wirklich warten will, bis der Rechner alle Rekursionen durchlaufen hat).</p>
<p>Die Pfeilfunktion ist ein mächtiges, funtionales JavaScript-Konstrukt. Wer mehr darüber erfahren will, dem sei das Kaptitel 3 (Funtionen und funktionale Programmierung) aus »JavaScript für Ungeduldige« (S. 57ff.) von <em>Cay Horstmann</em> empfohlen.</p>
<p>Ein weiteres Konstrukt, das für Python-Coder unbekannt ist, ist das kompakte <code>if … else</code>, wie zum Beispiel in der Zeile:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1">t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pencolor</span>(size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Das bedeutet ausgeschrieben:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) {</span>
<span id="cb3-2">    t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pencolor</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"brown"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3">} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb3-4">    t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pencolor</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">}</span></code></pre></div>
<p>Mir ist dieser <em>Bedingungsoperator</em> vor Jahren (oder waren es Jahrzehnte?) zum ersten Mal bei PHP-Programmierern untergekommen, die ihn liebten und ganz entäuscht waren, daß es ihn in Python nicht gibt. Ich selber hatte ihn jedoch nie vermißt (er kann auch Verwirrung stiften), aber in solchen Fällen wie dem obigen macht er den Code tatsächlich kompakter.</p>
<p>Zu guter Letzt ist noch anzumerken, daß ich dem Sketch ein 1.600 Pixel weites Hintergrundbild untergeschoben habe, das ich mit</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&lt;</span>startwert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imwidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&lt;</span>startwert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>so lange experimentell hin- und hergeschoben hatte, bis mir der Ausschnitt gefiel.</p>
<p class="codepen" data-height="300" data-default-tab="js,result" data-slug-hash="OJYvbgK" data-pen-title="Fraktal Tree" data-preview="true" data-editable="true" data-user="kantel" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
<span>See the Pen <a href="https://codepen.io/kantel/pen/OJYvbgK"> Fraktal Tree</a> by Jörg Kantel (<a href="https://codepen.io/kantel"><span class="citation" data-cites="kantel">@kantel</span></a>) on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async="" src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>
<p><em>Für eine vollständige Darstellung des Pens unten in der Mitte auf den Button <code>0.5x</code> klicken.</em></p>
<p>Und dann habe ich noch herausgefunden, daß entgegen meiner Vermutung in <a href="https://kantel.github.io/posts/2024061601_openprocessing/">diesem Beitrag</a> es doch möglich ist, mit der kostenlosen Version von <a href="https://de.wikipedia.org/wiki/CodePen">CodePen</a> – wenn auch nur über Umwege – TurtleGFX in einem Sketch einzubinden. Man muß nur die Datei <code>turtlegfx.js</code> in einem separaten <em>Pen</em> ablegen und ihn dann im JS-Tools-Menü (das ist das mit dem Rädchen) unter dem Reiter <em>Add External Scripts/Pens</em> einbinden.</p>
<p>Natürlich mußte ich das gleich einmal testen. Dabei bin ich über ein weiteres Problem gestolpert. Die kostenlose Version von CodePen erlaubt auch keine (internen) Assets (wie zum Beispiel Bilder), man kann sie nur von externen Quellen/Servern via HTTP(S) einbinden. Also habe ich das Hintergrundbild kurzerhand direkt von meinem <a href="https://www.flickr.com/photos/schockwellenreiter/53733027587/">Flickr-Account</a> übernommen (was natürlich <em>Hotlinking</em> und damit eine (Tod-) Sünde ist).</p>
<p>Damit kann man aber nur zeigen, daß es irgendwie mit CodePen geht, eine vernünftige und praktikable Lösung ist es allerdings nicht<sup>2</sup>. Was aber interessant ist: Das eingebundene CodePen ist – für meine Bedürfnisse – ausreichend responsiv. Hier sollte ich mir das CSS der Pens einmal genauer anschauen, vielleicht kann ich das sinnvoll für meine eigenen Experimente übernehmen.</p>
<p>Dieser Beitrag ist jetzt Lieferung Nummer zehn meiner etwas unstrukturrierten und leicht chaotischen Reihe zu P5.js. Bisher erschienen sind:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): <a href="https://kantel.github.io/posts/2024052903_octopussy/">Octopussy</a> (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
<li>Das Abenteuer P5.js geht weiter: <a href="https://kantel.github.io/posts/2024053001_planetensystem_p5js/">Ein kleines Planetensystem</a> (<a href="https://github.com/kantel/p5js/tree/master/planetensystem/small_planetary_system">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024053103_roating_images/">Rotating Images</a>: Nachtrag zum Planetensystem mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/rotating_image">GitHub</a>)</li>
<li>Punkte und Pixel 1: <a href="https://kantel.github.io/posts/2024060201_grinsekatze_weg/">Alice, die Grinsekatze und die Suche nach dem richtigen Weg</a> (<a href="https://github.com/kantel/p5js/tree/master/sierp01">GitHub</a>)</li>
<li>TurtleGFX (1): <a href="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/">Erste Schritte mit der Schildkröte in P5.js</a> (<a href="https://github.com/kantel/p5js/tree/master/turtlegfxtest1">GitHub</a>)</li>
<li>Fractal Tree: Ein fraktaler Baum mit P5.js und TurtleGFX (<a href="https://github.com/kantel/p5js/tree/master/fractaltree">GitHub</a>)</li>
</ol>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Cay Horstmann: <em><a href="https://dpunkt.de/produkt/javascript-fuer-ungeduldige/">JavaScript für Ungeduldige</a>. Der schnelle Einstieg in modernes JavaScript</em>, Heidelberg (dpunkt) 2021</li>
<li>Al Sweigart: <em><a href="https://inventwithpython.com/recursion/">The Recursive Book of Recursion</a>. Ace the Coding Interview with Python and Javascript</em>, San Francisco (no starch press) 2022 (kann unter dem Link auch für umme gelesen werden)</li>
</ul>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Zur Erinnerung: <code>random([array])</code> gibt <em>ein</em> zufälliges Element aus diesem Array zurück, also <code>random([2, 3])</code> entweder <img src="https://latex.codecogs.com/png.latex?2"> oder <img src="https://latex.codecogs.com/png.latex?3">, während <code>random([3, 5])</code> entweder <img src="https://latex.codecogs.com/png.latex?3"> oder <img src="https://latex.codecogs.com/png.latex?5"> zurückgibt (vergleiche <a href="https://p5js.org/reference/#/p5/random">P5.js-Referenz</a>).↩︎</p></li>
<li id="fn2"><p>Damit ist CodePen immer noch draußen.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>JavaScript</category>
  <category>TurtleGFX</category>
  <category>CodePen</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024062101_fractal_tree/</guid>
  <pubDate>Fri, 21 Jun 2024 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062101_fractal_tree/images/fraktaltree2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Q5.js: The Sequel to P5.js is here</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061902_q5js/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53801829670/"><img src="https://kantel.github.io/posts/2024061902_q5js/images/q5jsdemo-b.jpg" class="img-fluid"></a></p>
<p>Ein neues Spielzeug? Oder nur ein wenig Rumoren in der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a>-Community? Jedenfalls scheint <em><a href="https://github.com/quinton-ashley/p5play/wiki/Developer-Log">Quinton Ashley</a></em>, der Schöpfer von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> mit der Entwicklung von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> unzufrieden zu sein (vergleiche auch <a href="https://kantel.github.io/posts/2024061601_openprocessing/">hier</a>). Daher hat er mit einer Handvoll Mitstreiter das Projekt <a href="https://q5js.org/home/">Q5.js</a> ins Leben gerufen, das so etwas – wie der Name schon erahnen läßt – wie ein legitimer Nachfolger von P5.js sein will.</p>
<p>Ich weiß noch nicht, was ich wirklich davon halten soll. Doch Ashley und seine Mitstreiter scheinen keine Fehler gemacht zu haben: Q5.js ist rückwärtskompatibel zu P5.js, das heißt bestehende P5.js-Skripte laufen ohne Änderung auch in Q5.js. Und auch externe Bibliotheken wie P5.sound oder (das wundert aber niemanden&nbsp;🤓) P5.play werden unterstützt, da Q5.js intern einen Alias zu P5.js besitzt.</p>
<p>Und – wichtig für mich – auch wenn auf der Website nrgendwo darauf hingeweisen wird (hier wird nur auf die Einbindung via CDN (GitHub) oder <code>npm</code> verwiesen), man kann mit Q5.js auch lokal im Texteditor seines Vertrauens entwickeln und die Bibliotheken selbst hosten. Denn auf den <a href="https://github.com/q5js/q5.js">GitHub-Seiten des Projekts</a> kann man wahlweise eine <code>Q5.js</code> oder eine <code>Q5.min.js</code> herunterladen und sie genau so wie die <code>P5.js</code> oder die <code>P5.min.js</code> in seinen Projekten nutzen.</p>
<p>Was ist denn nun anders und will besser sein? Q5.js ist klein. Während P5.js nicht minifiziert 5&nbsp;MB fett ist, bringt Q5.js (ebenfalls nicht minifiziert) gerade einmal 74&nbsp;KB auf die Waage. Bei den minifizierten Versionen sind es 1&nbsp;MB (P5.min.js) versus 48&nbsp;KB (Q5.min.js). Und Q5.js verspricht, mindestens doppelt so schnell, im Extremfall sogar um den Faktor Zehn schneller als P5.js zu sein (das war wohl dem P5.play-Entwickler wichtig).</p>
<p>Daneben gibt es eine Handvoll zusätzlicher, exklusiver Features wie <code>inFill</code> (das prüft, ob ein Punkt innerhalb des zuletzt gefüllten Shapes liegt) oder <code>ctx</code>, einen Alias vür den <code>drawingContext</code>. Außerdem ist die Erstellung mehrerer Sketche auf einer Webseite mit der Einführung von <code>namespace</code> einfacher geworden und es gibt einen <em>Top-Level Global Mode</em>, der es erlaubt, P5-Funktionen auch außerhalb von <code>setup()</code> oder <code>draw()</code> aufzurufen. Und noch vieles mehr&nbsp;…</p>
<p>Das Projekt ist noch jung (erst vor wenigen Monaten – im Februar letzten Jahres – veröffentlicht) und hat dennoch vor wenigen Stunden die Version 2.0 erreicht, die mit einer besseren Modularisierung Q5.js noch schneller und schlanker machen will. <a href="https://github.com/orgs/q5js/projects/1/views/1">Und es hat noch viel vor</a>.</p>
<p>Ich wollte – wie <a href="https://kantel.github.io/posts/2024060901_turtle_gfx/">hier angemerkt</a> – bei meinen P5.js-Experimenten in der nächsten Zeit sowieso etwas mit dem Modul <a href="https://mathjs.org/docs/datatypes/complex_numbers.html">Complex Numbers</a> aus der Library <a href="https://mathjs.org/">Math.js</a> anstellen und mal Mandelbrot- und Julia-Mengen implementieren. Das wäre doch die Gelegenheit für einen Geschwindigkeitsvergleich zwischen P5.js und Q5.js. <em>Still digging!</em></p>



 ]]></description>
  <category>Q5.js</category>
  <category>P5.js</category>
  <category>Processing</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024061902_q5js/</guid>
  <pubDate>Wed, 19 Jun 2024 07:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061902_q5js/images/q5jsdemo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061901_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53770496337/"><img src="https://kantel.github.io/posts/2024061901_chrome_update/images/octopussy20240619-b.jpg" class="img-fluid"></a></p>
<p>Es ist wieder Mittwoch und die Sicherheits-Updates unser aller Datenkrake scheinen wieder regelmäßig jeden Mittwoch unters Volk gebracht zu werden: Google veröffentlicht das Update der Version 126 (126.0.6478.114/115) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop_18.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p>Dies ist übrigens das erste Chrome-Update, das nicht mehr mit meinem – zugegeben betagten – MacBook Pro (von Mitte 2012) spielen will. Es verlangt macOS 11, das letzte macOS, das sich aber noch auf meinem Rechnerchen installieren ließ, war macOS 10 (Catalina). <em>Pfui, Google!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53770496337/">Octopussy</a></em>, erstellt mit <a href="https://ideogram.ai/">Ideogram</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>«. Modell: Ideogram 1.0, Style: Illustration.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024061901_chrome_update/</guid>
  <pubDate>Wed, 19 Jun 2024 07:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061901_chrome_update/images/octopussy20240619.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>P5.js Online: OpenProcessing statt P5.js-Webeditor und P5.js-Widget</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061601_openprocessing/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53795083048/"><img src="https://kantel.github.io/posts/2024061601_openprocessing/images/openprocessing-b.jpg" class="img-fluid"></a></p>
<p>Da hatte ich mir doch alles so einfach vorgestellt: Ich wollte <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Skripte im <a href="https://editor.p5js.org/">P5.js-Webeditor</a> entwickeln und die fertigen Sketche dann mit Hilfe des <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5xjswidget.html">P5.js-Widget</a> in diese Seiten einbinden, so daß sie auch editierbar sind. Aber die Welt ist leider oft nicht so einfach, wie man es sich wünscht.</p>
<p>Es begann, als ich die <a href="https://github.com/CodeGuppyPrograms/TurtleGFX/tree/master">TurtleGFX</a>-Bibliothek <a href="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/">erkunden wollte</a>: Ich fand keinen Weg, diese Bibliothek mit dem P5.js-Widget zu verbinden. Dann las ich auch noch in dem von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> zur <a href="https://editor.p5js.org/quinton-ashley/sketches/szN_XdV5O">Verfügung gestellten Template</a>, daß von der Nutzung des P5.js-Webeditors abgeraten werde. Zwar sind die dort erwähnten Bugs eher für Spezialisten von Bedeutung, aber wer weiß, was sich dahinter noch verbirgt.</p>
<p>Also habe ich nach Alternativen gesucht. Als erste Antwort wird einem da meistens <a href="https://de.wikipedia.org/wiki/CodePen">CodePen</a> vorgeschlagen, aber es sieht so aus, als ob man Assets und zusätzliche JavaScript-Dateien – wie <code>turtlegfx.js</code> eine ist – nur per CDN oder <code>npm</code> einbinden kann (zumindest in der kostenlosen Version). Damit ist das Teil für mich erst einmal sinnlos<sup>1</sup>.</p>
<p>Dann wurde mir auf der <a href="https://p5play.org/">P5.play-Startseite</a> auch noch <a href="https://aijs.io/home">Aijs</a> empfohlen. Das Teil scheint alles zu können, was ich von einem Online-Editor erwarte (und mehr<sup>2</sup>). Aber es scheint zwar kostenlos zu nutzen (im Sinne von »frei wie Freibier«), aber proprietär zu sein. Ich habe jedenfalls nirgendwo eine Lizenz gefunden. Und über solch eine wankende Brücke will ich nicht gehen.</p>
<p>Blieb also nur noch <a href="https://openprocessing.org/">OpenProcessing</a> übrig. Zwar steht auch hier die Lizenz auf etwas wackeligen Füßen (ich habe keine gefunden), aber die Umgebung basiert zum größten Teil auf Open-Source-Komponenten und sie erlaubt, die eigenen Sketche unter einer CC-Lizenz zu veröffentlichen.</p>
<p>Zudem ist OpenProcessing nicht nur ein Online-Editor für P5.js-Sketche (und – das ist historisch gewachsen, aber nicht mehr zu empfehlen – auch für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a>-Applets), sondern auch eine Online-Community. Und OpenProcessing erlaubt das Einbinden der Sketche per <code>Iframe</code> in die eigenen Webseiten<sup>3</sup>:</p>
<iframe src="https://openprocessing.org/sketch/2301132/embed/" width="640" height="540">
</iframe>
<p>Ein Wermutstropfen ist, daß der Quellcode zwar angezeigt wird (auf <code>&lt;/&gt;</code> in der Mitte der Kopfzeile klicken), aber nicht wie beim P5.js-Widget editiert werden kann. Hier muß mir noch eine Lösung einfallen, wie ich P5.js-Widget wenigstens mit P5.play verheiraten kann<sup>4</sup>. Und noch immer offen ist die Frage, wie ich die IFrames responsiv in meine Seiten einbinde. <em>Still digging!</em></p>
<p>Aber all diese Erfahrungen haben in mir die Überzeugung wachsen lassen, daß es – wenn man nicht gerade auf einem Chromebook oder mit einem Tablet entwickelt – wohl doch sinnvoller ist, seine P5.js-Sketche lokal im Texteditor seines Vertrauens zu programmieren. Zwar versprechen die Online-Editoren einen installationsfreien Zugang zu P5.js, aber das stimmt nur, wenn man keine zusätzlichen Komponenten oder Bibliotheken benötigt. Daher werde ich ein Tutorial entwerfen, wie man sich eine Umgebung in einem Texteditor zurechtbastelt. Sie soll mit jedem beliebigen Texteditor und einem (einigermaßen aktuellen) Webbrowser funktionieren (zur Not also auch mit TextEdit und Safari – obwohl das eigentlich nur Masochisten empfohlen werden kann), aber ich werde auch auf einige Plugins für spezielle Editoren eingehen, die die Programmierung erleichtern. Also noch einmal: <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich schließe nicht aus, das ich zum einen etwas übersehen habe, und CodePen es doch erlaubt, eigene JavaScript-Dateien hochzuladen und einzubinden. Zum anderen hat CodePen den Vorteil, daß sich die Sketche nicht nur einfach in die eigenen Seiten, sondern auch in Services wie zum Beispiel <a href="https://de.wikipedia.org/wiki/Notion_(Produktivit%C3%A4tssoftware)">Notion</a> einbinden lassen. Daher verlinke ich hier auch noch auf die <a href="https://codepen.io/">CodePen Homepage</a> und <em>Daniel Shiffmans</em> Tutorial »<a href="https://www.youtube.com/watch?v=5gfUgNpS6kY">CodePen in p5.js</a>«. Wer lieber liest statt schaut, dem sei auch noch der Artikel »<a href="https://medium.com/@engineerwithoutfear/using-p5-js-on-codepen-efd443fc661">Using p5.js on CodePen</a>« empfohlen (<em>Medium.com</em>, daher eventuell hinter einer Bezahlschranke). Ich habe mir jedenfalls einen (kostenlosen) CodePen-Account zugelegt. Wer weiß, wozu der noch gut sein kann.↩︎</p></li>
<li id="fn2"><p>Das Teil verspricht auch eine umfangreiche KI-Unterstützung.↩︎</p></li>
<li id="fn3"><p>Wegen der Titelzeile muß jedoch an der Größe geschraubt werden. Während <code>width</code> der Breite des Canvas entspricht, müssen bei <code>height</code> noch 60 Pixel hinzuaddiert werden. Also <code>createCanvas(640, 480)</code> wird zu <code>&lt;iframe src="…" width="640" height="540"&gt;&lt;/iframe&gt;</code>.↩︎</p></li>
<li id="fn4"><p>Das muß gehen, denn die Tutorialseiten von P5.play machen massiv davon Gebrauch.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>Creative Coding</category>
  <category>OpenProcessing</category>
  <guid>https://kantel.github.io/posts/2024061601_openprocessing/</guid>
  <pubDate>Sun, 16 Jun 2024 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061601_openprocessing/images/openprocessing.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 115.12 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061501_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53793122713/"><img src="https://kantel.github.io/posts/2024061501_thunderbird_update/images/thunderbird202406-b.jpg" class="img-fluid"></a></p>
<p>Dieses Mal hat sich Mozilla ein wenig mehr Zeit genommen, bevor nach dem <a href="https://kantel.github.io/posts/2024061001_firefox_update/">Update des Feuerfuchses</a> ein Update des Donnervogels nachgeschoben wurde. Doch gestern abend war es wieder so weit: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 115.12 freigegeben und damit auch wieder <a href="https://www-stage.thunderbird.net/en-US/thunderbird/115.12.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53793122713/">Thunderbird</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor.Art</a>. Prompt: »<em>a thunderbird with colored feathers hunts a red firefox in an enchanted forest in summertime</em>«. Negative Prompt: »EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, additional tail«. Modell: Stable Diffusion 1.5, Style: Realistic Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024061501_thunderbird_update/</guid>
  <pubDate>Sat, 15 Jun 2024 15:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061501_thunderbird_update/images/thunderbird202406.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>TurtleGFX: Erste Schritte mit der Schildkröte in P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782478099/"><img src="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/images/turtlegfx6-b.jpg" class="img-fluid"></a></p>
<p>Eigentlich ist eine Vorstellung der ersten Schritte, die ich mit <a href="https://github.com/CodeGuppyPrograms/TurtleGFX/tree/master">TurtleGFX</a>, einem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Nachbau einer Turtle-Implementierung, wie sie von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Python</a> oder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/logo.html">Logo</a> bekannt ist, unternehmen wollte, nach meiner <a href="https://kantel.github.io/posts/2024060901_turtle_gfx/">jüngsten Ankündigung</a> längst überfällig. Aber ich habe es nicht geschafft, TurtleGFX mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5xjswidget.html">P5.js Widget</a> zu verheiraten, daher gibt es jetzt einfach die Ergebnisse als Screenshots<sup>1</sup>.</p>
<p>Damit P5.js die Turtle auch findet, muß die Datei <code>turtlegfx.js</code> irgendwo abgelegt werden, wo sie gefunden werden kann (am Einfachsten im gleichen Verzeichnis wie die <code>sketch.js</code>). Und dann nicht vergessen, der <code>index.html</code> auch mitzuteilen, daß sie die <code>turtlegfx.js</code> auch laden muß:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb1-1">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"turtlegfx.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Für den ersten Einstieg habe ich mir <a href="https://kantel.github.io/posts/2023122201_turtle_spirale/">zwei</a> <a href="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/">Beiträge</a> vom Dezember letzten Jahres vorgeknöpft, die bunte Vielecke mit Hilfe von Pythons Turtle erzeugten und diese nach P5.js und TurtleGFX portiert. Das Grundgerüst der Sketche war schnell erstellt:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> hugo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> pal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">  pal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb2-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e65046"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e26b43"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#415096"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#90a6d7"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f0c044"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#019bb7"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-10">  ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11">  hugo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createTurtle</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-12">  hugo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pensize</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-13">}</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb2-16">  hugo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pencolor</span>(pal[frameCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">  hugo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forward</span>(frameCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18">  hugo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">181</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (frameCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>) {</span>
<span id="cb2-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it Babe!"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noLoop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-22">  }</span>
<span id="cb2-23">}</span></code></pre></div>
<p>In <code>setup()</code> wurden erst einmal sechs Farben festgelegt, die ich mir aus <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/briley.html">diesen Farbpaletten nach Bridget Riley</a> zusammengeschustert hatte. Dann habe ich eine Schildkröte erzeugt, die ich – weil mir danach war – <code>hugo</code> genannt habe und ihr das anderthalbfache der Detault-Stiftdicke spendiert.</p>
<p>Der eigentliche Zauber passiert in <code>draw()</code>: Der Turtle wird reihum mpudulo sechs je eine Farbe zugewiesen. Dann muß sie eine Strecke vorwärts zeichnen. Die Länge habe ich jeweils durch einfaches Ausprobieren so ausgesucht, daß das Ergebnis in etwa den <em>Canvas</em> füllt. Danach muß die Turtle eine Rechtsdrehung vollziehen, die knapp(jeweils um 1 Grad) von einem 360°-Teiler abweicht, damit eine leichte Rotation erzeugt wird<sup>2</sup>. Bei einer Drehung von 181 Grad und einer Strecke von <code>frameCount*2</code> entsteht eine Spirale:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782576350/"><img src="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/images/turtlegfx2.jpg" class="img-fluid"></a></p>
<p>Nach 300 Schritte wird <code>draw()</code> mit <code>noLoop()</code> angehalten. Durch dieses Konstrukt baut sich die Figur successive auf und man kann der Schildkröte beim Zeichnen zusehen<sup>3</sup>.</p>
<p>Legt man den Winkel auf 121 Grad fest und setzt die Strecke auf <code>frameCount*1.4</code> erhält man eine Dreieck-Spirale:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782576340/"><img src="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/images/turtlegfx3.jpg" class="img-fluid"></a></p>
<p>In diesem Beispiel habe ich mit <code>hugo.pencolor(pal[frameCount%3 + 3])</code> erreicht, daß nur die letzten drei Farben der Farbpalette verwendet werden.</p>
<p>Weicht Ihr mit 91 Grad nur leicht vom rechten Winkel ab und setzt die Länge auf <code>frameCount*1.1</code>, ist das Ergebnis eine quadratische Spirale:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782576335/"><img src="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/images/turtlegfx4.jpg" class="img-fluid"></a></p>
<p>Auch hier habe ich wieder mit der Palette gespielt und mit <code>hugo.pencolor(pal[frameCount%4 + 2])</code> die letzten vier Farben erwendet.</p>
<p>Auf eine Viereck-Spirale kann nur eine Fünfeck-Spirale folgen. Hier brachte ein Winkel von 73 Grad <em>(360/5 + 1)</em> bei einer Länge von <code>frameCount*0.9</code> das gewünschte Ergebnis:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782576365/"><img src="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/images/turtlegfx5.jpg" class="img-fluid"></a></p>
<p>Die finale Sechseck-Spirale könnt Ihr im Bannerbild oben bewundern. Die Parameter hier waren ein Winkel von 61 Grad und eine Länge von <code>frameCount*0.8</code>.</p>
<p>Zusammenfassend kann ich sagen, daß <em>CodeGuppys</em> TurtleGFX-Modul eine recht nützliche Bibliothek für P5.js ist. Sie reicht zwar von Umfang und Finesse nicht an Pythons Schildkröte heran, aber sie kann alles, was man von einer Schildkröte erwartet. Daher ist es gut zu wissen, daß es sie gibt.</p>
<p>Das ist die neunte Lieferung meiner kleinen Reihe zu P5.js. Wie immer gibt es zum Schluß eine Auflistung aller bisher erschienenen Beiträge, um Euch die Nutzung einer Datenkrake zu ersparen:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): <a href="https://kantel.github.io/posts/2024052903_octopussy/">Octopussy</a> (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
<li>Das Abenteuer P5.js geht weiter: <a href="https://kantel.github.io/posts/2024053001_planetensystem_p5js/">Ein kleines Planetensystem</a> (<a href="https://github.com/kantel/p5js/tree/master/planetensystem/small_planetary_system">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024053103_roating_images/">Rotating Images</a>: Nachtrag zum Planetensystem mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/rotating_image">GitHub</a>)</li>
<li>Punkte und Pixel 1: <a href="https://kantel.github.io/posts/2024060201_grinsekatze_weg/">Alice, die Grinsekatze und die Suche nach dem richtigen Weg</a> (<a href="https://github.com/kantel/p5js/tree/master/sierp01">GitHub</a>)</li>
<li>TurtleGFX: Erste Schritte mit der Schildkröte in P5.js (<a href="https://github.com/kantel/p5js/tree/master/turtlegfxtest1">GitHub</a>)</li>
</ol>
<p>Und natürlich habe ich den <a href="https://github.com/kantel/p5js/tree/master/turtlegfxtest1">Sketch mit allen Dateien</a> auch in mein GitHub-Repositorium hochgeladen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Diese unbefriedigende Situation war Anlaß für mich, noch einmal über Online-Code-Editoren für JavaScript und P5.js nachzudenken, die auch in diese Seiten eingebunden werden können. Darüber in einem separaten Beitrag mehr.↩︎</p></li>
<li id="fn2"><p>An den Zahlen kann man erkennen, daß TurtleGFX mit Grad und nicht mit Radians arbeitet. Darum muß sich der Programmierer aber nicht kümmern, TurtleGFX legt den aktuelle <code>angleMode</code> auf einen Stack und holt ihn sich anschließend wieder zurück.↩︎</p></li>
<li id="fn3"><p>Wem das noch zu schnell ist, der kann ja in <code>setup()</code> noch die <code>frameRate</code> heruntersetzen. Bei einer <code>frameRate(1)</code> braucht man schon viel Geduld, da die Schildkröte dann erst nach 300 Sekunden (= 5 Minuten) ihre Arbeit erledigt hat.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>Turtle</category>
  <category>TurtleGFX</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/</guid>
  <pubDate>Fri, 14 Jun 2024 16:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061202_turtlegfx_1st_step/images/turtlegfx6.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061201_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53771829635/"><img src="https://kantel.github.io/posts/2024061201_chrome_update/images/octopussy0602-b.jpg" class="img-fluid"></a></p>
<p>Nachdem ich letzte Woche mal wieder zwei Dutzend Datenkrakenbilder auf Vorrat produziert hatte, fiel das eigentlich jeden Mittwoch fällige Chrome-Update plötzlich aus. Doch heute ist es wieder da: Google veröffentlicht das Update der Version 126 (126.0.6478.56/57) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53771829635/">Octopussy</a></em>, erstellt mit <a href="https://ideogram.ai/">Ideogram</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>«. Modell: Ideogram 1.0, Style: Illustration.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024061201_chrome_update/</guid>
  <pubDate>Wed, 12 Jun 2024 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061201_chrome_update/images/octopussy0602.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hugo auf Drogen – Halluzinierende Gekünstelte Intelligenzia</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061102_hallu_ki/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784475981/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo01-b.jpg" class="img-fluid"></a></p>
<blockquote class="blockquote">
<p>So, so, sprach der alte Oberförster. Hugo war sein Name und die Tiere des Waldes waren seine Freunde.</p>
</blockquote>
<p>Als ich eine <a href="https://beta.dreamstudio.ai/generate">gekünstelte Intelligenzia meines Vertrauens</a> mit einer Illustration zu dem letzten <a href="https://kantel.github.io/posts/2024061101_wikilinks_hugo/">Beitrag über Wikilinks und Hugo</a> beauftragen wollte, ging mir obiger Spruch nicht aus dem Kopf. Und so formulierte ich gedankenverloren und ohne besondere Absicht meinen Prompt auf deutsch und fütterte die KI damit: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«.</p>
<p>Offensichtlich kann <em>Stable Diffusion</em> aber kein deutsch und so passierte das, was mit den gekünstelten Intelligenzien immer passiert, wenn sie nicht weiterwissen: Sie halluzinieren munter darauf los und produzieren Bilder, die von dem gewünschten Ergebnis weiter kaum entfernt sein können:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784781674/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784670918/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784781839/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo04.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784455816/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784675578/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo06.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784460736/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo07.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784460801/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53783520652/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo09.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784680623/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo10.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784465896/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784466091/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo12.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784792029/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo13.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784797044/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo14.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784797424/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo15.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784471821/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo16.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53783535197/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo17.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784801444/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo18.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784899970/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo19.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784804654/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo20.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784694713/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo21.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784805299/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo22.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784805389/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo23.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53783541742/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo24.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784906345/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo25.jpg" class="img-fluid"></a></p>
<p>Trotz oder vielleicht auch weil die KI halluziniert, als hätte sie Drogen eingepfiffen, haben die Bilder einen eigentümlichen Charme (mit einem Klick auf die <em>Thumbnails</em> kommt Ihr jeweils auf eine Seite mit den Originalen). Daher konnte ich auch erst damit aufhören, nachdem ich etwa zwei Dutzend dieser Trips erzeugt hatte. Einige der Ergebnisse könnten als Hintergrundbilder verwendet werden, für die anderen muß ich mir erst noch Geschichten ausdenken.</p>
<p><strong>War sonst noch was?</strong> Ach ja, wie sich die <a href="https://www.derstandard.de/story/3000000223702/deutsche-post-blamiert-sich-mit-ki-generierter-krypto-briefmarke">Deutsche Post mit einer halluzinierenden Künstlichen Intelligenz ziemlich blamiert</a> hatte, berichtete schadenfroh der österreichische »Standard«. Aber NFT und Krypto sind sowieso böse, und wenn man – wie die Deutsche Post – damit auch noch Geld generieren will, darf man sich über Schadenfreude nicht wundern.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53784475981/">Hugo? Hugo!</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Künstliche Intelligenz</category>
  <category>Bilder</category>
  <category>Stable Diffusion</category>
  <category>DreamStudio</category>
  <guid>https://kantel.github.io/posts/2024061102_hallu_ki/</guid>
  <pubDate>Tue, 11 Jun 2024 16:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wikilinks in Hugo: Nachschlag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061101_wikilinks_hugo/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784894895/"><img src="https://kantel.github.io/posts/2024061101_wikilinks_hugo/images/hugobanner-b.jpg" class="img-fluid"></a></p>
<p>Der Gewährsmensch, der mich gestern mit <a href="https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/">Informationen zu Wikilinks</a> in <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> versorgt hatte, dem schnellen <em>Static Site Generator</em>, der eventuell in Zukunft auch den <em>Schockwellenreiter</em> antreiben wird, hat heute noch einmal nachgelegt:</p>
<p>Neben weiteren, eher technischen Tips hat er auf den Beitrag »<a href="https://kinsta.com/de/blog/hugo-statische-seite/">Wie man mit Hugo eine rasend schnelle statische Seite erstellt</a>« verwiesen, den <em>Brian Li</em> im August letzten Jahres auf den Seiten des WordPress-Hosters (sic!) <a href="https://kinsta.com/de/">Kinsta</a> veröffentlichte. Der Artikel ist ziemlich gut (nur warum er beim <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html">GitHub Pages</a> Hosting den Umweg über <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/netlify.html">Netlify</a> nimmt, <a href="https://towardsdatascience.com/create-your-own-stunning-website-in-minutes-for-free-63f0f7c75bf">statt das <em>Deployment</em> mit <em>GitHub Actions</em> direkt anzustoßen</a>, erschließt sich mir nicht so ganz), darum wollte ich ihn Euch nicht vorenthalten.</p>
<p>Außerdem hat mir eben dieser Gewährsmensch versichert, daß er bei seinen Experimenten mit Hugo keine Geschwindigkeitseinbußen beim Einsatz von Wikilinks feststellen konnte. Das läßt mich für meine Pläne hoffen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53784894895/">Hugo</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Interna</category>
  <category>Hugo</category>
  <category>Statische Seiten</category>
  <category>Digital Garden</category>
  <guid>https://kantel.github.io/posts/2024061101_wikilinks_hugo/</guid>
  <pubDate>Tue, 11 Jun 2024 15:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061101_wikilinks_hugo/images/hugobanner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hugo für den Schockwellenreiter: Erste (Zwischen-) Ergebnisse</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53774572712/"><img src="https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/images/digigardenhugo-b.jpg" class="img-fluid"></a></p>
<p>Mit meinen Bemühungen, <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> zu lernen, weil dieser schnelle, in Go geschriebene Generator für statische Seiten (SSG) irgendwann vielleicht einmal <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">den <em>Schockwellenreiter</em> antreiben</a> soll, komme ich langsam, aber sicher voran. Ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/rubyfrontier.html">RubyFrontier</a> – das über zehn Jahre diese Seiten herausgeschrieben hat<sup>1</sup> – <a href="https://de.wikipedia.org/wiki/ERuby">ERB oder ERuby</a> als Template-Mechanismus nutzt, basiert vieles in Hugo auf <a href="https://pkg.go.dev/html/template">Go’s Template Library</a>. Man muß also einiges erst einmal lernen, damit man ein vorzeigbares Resultat bekommt.</p>
<p>Ich quäle mich daher durch das Büchlein »<a href="https://pragprog.com/titles/bhhugo/build-websites-with-hugo/">Build Websites with Hugo</a>« von <em>Brian P. Hogan</em> und an dem <a href="https://www.flickr.com/photos/schockwellenreiter/53774572712/">Screenshot</a> oben kann man erkennen, das ich jetzt ungefähr bei Seite 45 angekommen bin. Aber ich habe Spaß an so etwas und freue mich über meine Fortschritte. Schaun wir mal, wie es weitergeht. <em>Still digging!</em></p>
<p>In meinem Hinterkopf lauert ja auch die Überlegung, mit Hugo aus dem <em>Schockwellenreiter</em> eine Art <a href="https://kantel.github.io/posts/2024050701_digital_garden/">digitalen Wundergarten</a> zu basteln. Dafür sind aber <a href="https://python-markdown.github.io/extensions/wikilinks/">WikiLinks</a> zu internen Seiten eigentlich eine Grundvoraussetzung. Doch leider unterstützt Hugo diesen Linkmechanismus nicht von Haus aus. Daher war ich froh, als mich ein Leser des <em>Schockwellenreiter</em> auf den Artikel »<a href="https://www.radicaledward101.com/blag/2023/08/14/blag-article-wiki-links-in-hugo.html">Wiki Links in Hugo</a>« hinwies, der eine Lösung aufzeigt<sup>2</sup>.</p>
<p>Auch die vorgestellte Hugo-Lösung scheint ein wenig Bastelei und Pfriemelei zu erfordern. Und mir ist auch nicht klar, wie sich das auf die Geschwindigkeit beim Herausschreiben der einzelnen Seiten auswirkt. Bevor es also tatsächlich diese Seiten als mit Hugo erstellten <em>Digital Garden</em> gibt, werde ich wohl noch viele Tests und Experimente durchführen müssen. Aber wie jemand <a href="https://github.com/kantel/kantel.github.io/discussions/199#discussioncomment-9658236">in meinen Kommentaren</a> schrieb:</p>
<blockquote class="blockquote">
<p>Ein Blog ist eine Spielwiese per Definition, nicht? Also: ran an die Tastatur und spielen! :)</p>
</blockquote>
<p>Das ist übrigens auch noch eine offene Frage: <a href="https://giscus.app/de">Giscus</a> als quelloffenes Kommentarsystem hat sich als <a href="https://kantel.github.io/posts/2022120901_giscus/">überaus nützlich für den <em>Schockwellenreiter</em></a> herausgestellt, denn im Gegensatz zu anderen Systemen kommt es ohne Tracking und ohne Werbung aus. Außerdem speichert es die Kommentare nicht irgendwo fremd, sondern in meinem GitHub-Repositotium zu diesen Seiten. Ob ich aber Giscus mit Hugo verheiraten kann, habe ich auch noch nicht herausgefunden. Also noch einmal: <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Und mit dem <a href="http://cognitiones.kantel-chaos-team.de/index.html">mein Wiki</a> immer noch erstellt wird.↩︎</p></li>
<li id="fn2"><p>Das oben erwähnte RubyFrontier konnte so etwas wie WikiLinks (dort wurde es <a href="https://www.apeth.com/RubyFrontierDocs/defaultfolder/techfolder/howsapagefolder/glossary.html">Glossary</a> genannt). Dieser Mechanismus war so etwas wie Fluch und Segen bei RubyFrontier: Segen, weil es so etwas wie mein Wiki überhaupt erst ermöglicht hatte, Fluch, weil bei großen Seitenzahlen der Glossary-Mechanismus das Herausrendern der Seiten extrem verlangsamte.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Interna</category>
  <category>Hugo</category>
  <category>Statische Seiten</category>
  <category>Digital Garden</category>
  <guid>https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/</guid>
  <pubDate>Mon, 10 Jun 2024 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/images/digigardenhugo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Versionen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061001_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782554036/"><img src="https://kantel.github.io/posts/2024061001_firefox_update/images/firefoxesta01-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/127.0/releasenotes/">Version 127.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/115.12.0/releasenotes/">Version ESR 115.12</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. In die Updates sind auch viele Veränderungen geflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53782554036/">Two Firefoxes</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor.Art</a>. Prompt: »<em>Two fire foxes in an enchanted garden in the spring sunshine. colored french comic style</em>«. Negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, additional tail</em>«. Modell: Stable Diffusion 1.5, Style: Realistic Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024061001_firefox_update/</guid>
  <pubDate>Mon, 10 Jun 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061001_firefox_update/images/firefoxesta01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es lebe die Schildkröte: TurtleGFX und P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060901_turtle_gfx/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53412499596/"><img src="https://kantel.github.io/posts/2024060901_turtle_gfx/images/turtlegfx1-b.jpg" class="img-fluid"></a></p>
<p>Da habe ich mir <a href="https://kantel.github.io/posts/2024060701_p5play_matterjs/">am Freitag etwas eingebrockt</a>: Die beiläufig in einem Nebenabsatz eingefügte Bemerkung, daß mir in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> so etwas wie <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> fehlen würde, hat mir keine Ruhe gelassen und mich zum Sammeln von Material animiert, das mir helfen soll, <a href="https://codeguppy.com/index.html">CodeGuppys</a> Bibliothek <a href="https://github.com/CodeGuppyPrograms/TurtleGFX/tree/master">TurtleGFX</a>, die Pythons Schildkröte in P5.js (und in <a href="https://codeguppy.com/">CodeGuppy</a> selber) implementieren will (und die auch in <a href="https://github.com/nickmcintyre/numero">Numero</a> Einzug gehalten hat), zu verstehen und in P5.js anzuwenden.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/_OG4YTs8h3c?si=VghcYUvZcDi1iN6P" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Die Beispielanwendungen, die ich gefunden habe, sind alle von Mr.&nbsp;CodeGuppy itselfs, <em>Marian Veteanu</em>, und in CodeGuppy implementiert. Da diese IDE doch in Teilen sehr stark von P5.js abweicht, ist erst einmal die Lektüre des Beitrags »<a href="https://codeguppy.com/code.html?t=_p5">Getting started with CodeGuppy.com for P5.js Developers</a>« zu empfehlen. Danach kann man sich die übrigen Beiträge zu TurtleGFX eigentlich (mit einer Ausnahme) in beliebiger Reihenfolge reinziehen. Ich empfehle diese Abfolge:</p>
<ol type="1">
<li><a href="https://codeguppy.com/code.html?t=turtle_lines">Turtle Lines</a>: A simple line rotated using the turtle graphics library creates amazing patterns.</li>
<li><a href="https://codeguppy.com/code.html?t=hilbert_curve">Hilbert Curve</a>: Generate Hilbert curve using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=turtle_polygons">Turtle Polygons</a>. Generate polygons using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=turtle_sierpinski">Sierpinsky Triangle</a>. Draw Sierpinski triangle using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=turtle_etch">Etch with Turtle</a>. This is an implementation with Turtle Gfx of the famous Etch a Sketch.</li>
<li><a href="https://codeguppy.com/code.html?t=fractal_tree">Fractal Tree</a>. This program will show you how to generate a fractal tree using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=forest_walk">Forest Walk</a>. Explore a virtual forest of fractal trees generated using turtle graphics. (Dieser Beitrag ist die oben erwähnte Ausnahme, er setzt die Lektüre von »Fraktal Tree« voraus.)</li>
</ol>
<p>Danach solltet Ihr und auch ich in der Lage sein, TurtleGFX in Eure (und ich in meine) P5.js-Sketche einzubauen. Wer dann Blut geleckt hat und wissen will, wie man eine eigene Turtle-Bibliothek implementiert, dem oder ihr sei noch dieser Beitrag empfohlen:</p>
<ol start="8" type="1">
<li><a href="https://codeguppy.com/code.html?t=turtle_graphics">Turtle Graphics</a>: Turtle graphics is the flagship feature of Logo programming language. See how easy is to add Logo like commands to your favorite JavaScript language.</li>
</ol>
<p>Jetzt fehlt mir eigentlich nur noch eine Bibliothek für die Mathematik mit komplexen Zahlen. Hier <a href="https://forum.processing.org/two/discussion/22883/complex-numbers-in-p5.html">empfiehlt das Processing-Forum</a> die JavaScript-Library <a href="https://mathjs.org/index.html">Math.js</a> mit dem Modul <a href="https://mathjs.org/docs/datatypes/complex_numbers.html">Complex Numbers</a>, das man via NPM auch <a href="https://mathjs.org/download.html">lokal installieren</a> kann. Das sollte ich auch noch testen. Aber erst einmal ist die Schildkröte an der Reihe. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53412499596/">Two Turtles drawing together</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A turtle and a python paint together at an easel, colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>Turtle</category>
  <category>TurtleGFX</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <category>CodeGuppy</category>
  <guid>https://kantel.github.io/posts/2024060901_turtle_gfx/</guid>
  <pubDate>Sun, 09 Jun 2024 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060901_turtle_gfx/images/turtlegfx1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>P5.play und Matter.js: Video-Tutorials am Freitag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060701_p5play_matterjs/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53412937770/"><img src="https://kantel.github.io/posts/2024060701_p5play_matterjs/images/matterjsp5play-b.jpg" class="img-fluid"></a></p>
<p>Das Abenteuer JavaScript mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> geht weiter. Und wie ich hier schon einmal <a href="https://kantel.github.io/posts/2024052903_octopussy/">angedeutet hatte</a>, würde ich dabei gerne auch Bibliotheken wie <a href="https://brm.io/matter-js/">Matter.js</a>, vor allem aber <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> berücksichtigen. Zur Vorbereitung habe ich daher meine kleine Reihe »Video-Tutorials am Freitag« wiederbelebt, die heute Tutorials zu diesen beiden Bibliotheken vorstellt.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/TDQzoe9nslY?si=qIBqS83iPN7QULye" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Ich beginne mal mit <strong>Matter.js</strong>, eine freie (MIT-Lizenz) <em>Rigid Body Physik Engine</em> für JavaScript. <em>Daniel Shiffman</em> hatte sie schon vor sieben Jahren mit P5.js vermählt und unter dem Titel »<a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6bLh3T_4wtrmVHOrOEM1ig_">Matter.js Physics</a> eine neun Videos umfassende Playlist dazu veröffentlicht. Aber auch in seiner (P5.js/JavaScript) Neuauflage von »The Nature of Code« spielt Matter.js eine Rolle, daher hat er auch im <em>Coding Train</em> einen aktualisierten, <a href="https://thecodingtrain.com/tracks/lang/all/topic/matter-js">kompletten Track zu Matter.js</a> veröffentlicht.</p>
<p>Auch der YouTuber <em>flanniganable</em> (von dem auch die Playlist »<a href="https://www.youtube.com/playlist?list=PLuywqn95st9S2ciAgQw32ID3xBmxZBYQl">P5.js JavaScript for Beginners</a>« (22 kurze Videos) erwähnenswert ist) hat eine Playlist »<a href="https://www.youtube.com/playlist?list=PLuywqn95st9THjyjehRn3epVUdjbcYIAT">Matter.js on P5.js</a>« (18 ebenfalls recht kurze Videos) online gestellt.</p>
<p>Matter.js verdient zusätzlich eine Erwähnung, weil die Engine auch mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> – zumindest in der JavaScript-Version – <a href="https://microstudio.dev/community/questions/matterjs-and-microstudio-javascript/682/">zusammenspielt</a>. Und wenn man der <a href="https://microstudio.dev/documentation/Matter/">Dokumentation</a> glaubt, soll es auch mit Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> funktionieren. Das sollte ich unbedingt im Hinterkopf behalten.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/6E8hJOuGOkE?si=_pfFOx61XEF9fZiK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Doch nun zu <strong>P5.play</strong>, das ich ja <a href="http://blog.schockwellenreiter.de/2022/10/2022100401.html">schon einmal</a> auf diesen Seiten besprochen hatte: Seit der Version 3 hat diese direkt auf P5.js aufsetzende Game-Enginge von Matter.js zu <a href="https://piqnt.com/planck.js/docs">Planck.js</a> als zugrundeliegende Physik-Engine gewechselt. Das ist ein JavaScript-Port von <a href="https://box2d.org/">Box2D</a>, einer populären C++ Engine.</p>
<p>Es gibt dazu von <em>Teach Head Online</em> – von dem es unter dem Namen »<a href="https://www.youtube.com/playlist?list=PLoHS9P-kC-26y6dOZnv2sM0Cz0_8ean4N">P5.js Programming</a>« eine Monsterplaylist von 29 Videos zu P5.js gibt – eine Playlist »<a href="https://www.youtube.com/playlist?list=PLoHS9P-kC-252Pd9MJD_ItfaVuYV2kTCE">JavaScript Games Development</a>«, die mit 38 Video-Tutorials noch monstermäßiger daherkommt. Zwischen diesen beiden Playlists gibt es aber Überschneidungen.</p>
<p>Und dann hat auch noch der oben schon erwähnte <em>flanniganable</em> mit »<a href="https://www.youtube.com/playlist?list=PLuywqn95st9SA2Ka1misPHt84WxqRX3Uj">P5.play on P5.js</a>« eine Playlist mit zwanzig wieder eher kurzen Videos hochgeladen.</p>
<p>Wer lieber liest statt schaut: Von <em>Allison Parrish</em> gibt es den ausführlichen Beitrag »<a href="https://creative-coding.decontextualize.com/making-games-with-p5-play/">Making Games with P5.play</a>« und <em>brifetterley</em> hat auf Medium.com den zwar kürzeren, aber nett zu lesenden Artikel »<a href="https://medium.com/@brifetterley/using-the-p5-play-library-for-a-js-game-4df01708dd81">Using the P5.play Library for a JS Game</a>« veröffentlicht, der sich aber eventuell hinter einer Bezahlschranke versteckt.</p>
<p>Das dürfte mich und Euch mindestens über das Wochenende – vermutlich auch darüber hinaus – beschäftigen. Wenn dann noch Luft bleibt: P5.js fehlt es meiner Meinung nach an einer Turtle-Bibliothek. <a href="https://github.com/CodeGuppyPrograms/TurtleGFX">TurtleGFX</a> und darauf aufbauend <a href="https://github.com/nickmcintyre/numero">Numero</a> wollen dem abhelfen. Sollte ich mir daher auch mal genauer anschauen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53412937770/">Steampunk Reptils</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A turtle and a python paint together at an easel, colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>P5.play</category>
  <category>Matter.js</category>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024060701_p5play_matterjs/</guid>
  <pubDate>Fri, 07 Jun 2024 15:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060701_p5play_matterjs/images/matterjsp5play.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein neuer Versuch mit Ct.js (mit oder ohne Catnip)?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060601_ctjs_catnip/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53613105160/"><img src="https://kantel.github.io/posts/2024060601_ctjs_catnip/images/badgerctjs-b.jpg" class="img-fluid"></a></p>
<p>Im Februar dieses Jahres hatte ich die kleine, feine und freie (MIT-Lizenz) (JavaScript-) Spiele-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">Ct.js</a> (wieder-) <a href="https://kantel.github.io/posts/2024021001_ctJS/index.html">entdeckt</a>. Jedoch war meine Begeisterung darüber schnell <a href="https://kantel.github.io/posts/2024022001_microstudio_1st_steps/index.html">erloschen</a>, weil sich das Teil beharrlich weigerte, Assets zu laden. Und so hatte ich mich erst einmal enttäuscht, dann aber mit wachsender Begeisterung, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> zugewandt.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/DrgON3g7gFA?si=7_UlZt7Gqs4O8yux" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Jedoch nagte Ct.js immer wieder in den Tiefen meines Hinterkopfs und ich war mir eigentlich sicher, daß der Fehler irgendwo bei mir lag und ich irgendetwas übersehen hatte. Als daher nun die Meldung in meinen Feedreader schneite, daß <a href="https://gamefromscratch.com/ct-js-game-engine-gets-new-catnip-visual-scripting-language/">Ct.js nun auch die Visual Scripting Language Catnip</a> integriert habe (zur Zeit erst einmal nur im <a href="https://comigo.itch.io/ct-nightly#download">Nightly Build</a>) war die Entscheidung gefallen: Sobald mir meine <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">Hugo-Experimente</a> wieder etwas Luft lassen, werde ich mit Ct.js einen neuen Versuch wagen. Ich habe noch keine Ahnung ob und wenn ja, was dabei herauskommen wird, aber ich will es unbedingt wissen.</p>
<p><a href="https://github.com/ct-js/ct-js/issues/331">Catnip</a> ist übrigens eine visuelle Scriptsprache, die mich in den Screenshots ein wenig an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> erinnert (vielleicht aber auch an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/scratch.html">Scratch</a>). Ein weiterer Grund, dem Teil einen neuen Versuch zu gönnen. Ich habe mir daher zwecks Einarbeitung noch folgende Tutorials herausgesucht:</p>
<ol type="1">
<li>Der YouTube-User <em>Firecakes</em> hält in dem viertelstündigen Video »<a href="https://www.youtube.com/watch?v=9J7Z-HeXZdU">What ct.js v4 can do for you</a>!« Ct.js für eine total unterschätzte Game Engine. Ich hoffe, daß er Recht behält.</li>
<li>Und dann gibt es noch die relativ junge Playlist »<a href="https://www.youtube.com/playlist?list=PLWGY0ivGwOKIiJ6KcgmPF3eqV_TlYB0XT">Ct.js</a>« des YouTubers <em>Exceptional 3D tutorials</em> mit sieben, meist eher kurzen Videos.</li>
</ol>
<p>Vielleicht finde ich in der letztgenannten Playlist auch eine Lösung für mein Asset-Problem.</p>
<p><strong>Was übrigens meine Hugo-Experimente angeht</strong>: Ich mache langsam aber sicher Fortschritte und ich habe sehr viel Spaß dabei. Doch darüber zu gegebener Zeit mehr in einem eigenen Beitrag. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53613105160/">Dancing Badger</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A badger in a red dressing gown floats over the desert hanging from a blue balloon</em>« Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Cel Shaded + Icon Stylizer.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>Ct.js</category>
  <guid>https://kantel.github.io/posts/2024060601_ctjs_catnip/</guid>
  <pubDate>Thu, 06 Jun 2024 13:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060601_ctjs_catnip/images/badgerctjs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schließt am »Juni-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060501_android_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53561635081/"><img src="https://kantel.github.io/posts/2024060501_android_patchday/images/androidjuni-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen Sicherheitsupdate für Android (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-06-01">Pixel-Geräten</a>) wieder <a href="https://source.android.com/docs/security/bulletin/2024-06-01">Sicherheitslücken</a> geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53561635081/">Drei tanzende Androiden</a></em>, erstellt mit <a href="https://ideogram.ai/">Ideogram</a>. Prompt: »<em>Three little green robots dance on a colorful meadow in front of a small garden house, two goats in checkered vests watch them, the sun shines on the scenery, colored french comic style</em>«. Modell: Ideogram 1.0, Style: Illustration.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024060501_android_patchday/</guid>
  <pubDate>Wed, 05 Jun 2024 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060501_android_patchday/images/androidjuni.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Update zum Kulturbunker-Event »Kultur auf dem Dach«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060401_kulturbunker3/</link>
  <description><![CDATA[ 




<p><a href="https://www.trial-error.org/projekte-1/kulturbunker/"><img src="https://kantel.github.io/posts/2024060401_kulturbunker3/images/kulturdach-b.jpg" class="img-fluid"></a></p>
<p>Es gibt das <a href="https://kantel.github.io/posts/2024052902_kulturbunker_update/">versprochene</a> Update vom Update zum Event »Kultur auf dem Dach«, das am Sonnabend den 8. Juni 2024 auf dem Dach des <a href="https://kantel.github.io/posts/2023100601_kulturbunker/">Kulturbunkers in der Neuköllner Rungiusstraße</a> stattfindet: Ihr könnt die laue Sommernacht mit Poesie, Musik, Kino und einer Bar mit Erfrischungen genießen. Alle Nachbarinnen und Nachbarn, Freundinnen und Freunde und Familien sind herzlich eingeladen.</p>
<p>Die erste Veranstaltung dieses neuen Formats beginnt am Sonnabend um 18:00 Uhr mit einem <em>Open Dach</em>, ab 19:00 Uhr gibt es <em>Gedichte/Poetry</em> und um 20:30 Uhr startet der Dokumentarfilm »<a href="https://de.wikipedia.org/wiki/Das_Salz_der_Erde_(2014)">Das Salz der Erde</a>« über den Brasilianer <em>Sebastiao Salgado</em>, mit Schwarz-Weiß-Bildern von unendlicher Schönheit. Jahrzehntelang hat der Photograph Bilder von Kriegen, Flucht und Vertreibungen, Hungersnöten und Umweltkatastrophen auf der ganzen Welt aufgenommen. Nach all dem Elend wandte er sich der Naturphotographie zu. Sein Werk hat er als einen möglichen Weg der menschlichen Wiederentdeckung zu sich selbst und zur Natur konzipiert.</p>
<p>Regie bei der 2014 entstandenen Dokumentation führte sein Sohn <em>Juliano Ribeiro Salgado</em> zusammen mit <em>Wim Wenders</em>. Sebastian Salgado wurde 2019 mit dem Friedenspreis des Deutschen Buchhandels ausgezeichnet und ist damit erst der zweite Bildkünstler, der diese renommierte Auszeichnung erhalten hatte.</p>
<p>Auf der großen Leinwand entfalten die Bilder eine geradezu monumentale Wucht. Es wird daher bestimmt ein wunderbarer, aber auch zum Nachdenken anregender Abend und ein würdiger Auftakt der Reihe »Kultur auf dem Dach«.</p>
<p>Der Kulturbunker ist in der Rungiusstraße 19 in 12347 Berlin-Neukölln.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Kiezfest</category>
  <category>Kulturbunker</category>
  <guid>https://kantel.github.io/posts/2024060401_kulturbunker3/</guid>
  <pubDate>Tue, 04 Jun 2024 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060401_kulturbunker3/images/kulturdach.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf ein Neues? Braucht der Schockwellenreiter Hugo?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060301_auf_ein_neues/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53672121375/"><img src="https://kantel.github.io/posts/2024060301_auf_ein_neues/images/schockwellenreiterneu-b.jpg" class="img-fluid"></a></p>
<p>Ich weiß, es hört niemand gerne, aber so wie es aussieht, bin ich mit meinem <em>Static Site Generater</em> (SSG) <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> an die Grenzen dessen gestoßen, was dieser leisten kann. Mit den momentan über 800 Seiten dieses <del>Blogs</del> Kritzelhefts ist das Teil völlig überfordert, das Herausrendern eines neuen Beitrags benötigt mittlerweile etwa eine Viertelstunde<sup>1</sup>. Und das frustriert und behindert mich doch gewaltig in meinem kreativen Output.</p>
<p>Was ist also zu tun? Ein schnellerer und leichtgewichtiger <em>Static Site Generator</em> muß offensichtlich her. Und der schnellste, den ich kenne, ist zur Zeit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a>, der in Go geschriebene und als <em>Single Binary</em> laufende, kompilierte SSG, der nach eigenen Angaben tausende von Seiten auf einen Rutsch ohne nennenswerte Verzögerung herausschreiben kann.</p>
<p>Ich glaube natürlich nicht alles, was mir an Werbetexten unterkommt, und so werde ich Hugo erst einmal ausführlich testen. Ich schreibe das daher auch nur, damit Ihr Euch nicht wundert, wenn auf diesen Seiten völlig unvermittelt auf einmal Beiträge zu Hugo auftauchen sollten.</p>
<p>Schaun wir also mal, was daraus wird. <em>Still digging!</em></p>
<iframe class="if16_9" src="https://www.youtube.com/embed/0IfzATRf_T8?si=Gi_0y_HK5prYoE0Z" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, Hugo kann nicht nur mit Markdown umgehen, sondern zum Beispiel auch mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/asciidoc.html">AsciiDoc</a>, <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/restructuredtext.html">reStructuredText</a> oder den <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/orgmode.html">Org-mode</a> des <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/emacs.html">Emacs</a>. Mit AsciiDoc und <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/asciidoctor.html">AsciiDoctor</a> hatte ich <a href="http://blog.schockwellenreiter.de/2020/01/2020012301.html">vor einigen Jahren</a> schon einmal <a href="http://blog.schockwellenreiter.de/2020/01/2020012501.html">ein</a> <a href="http://blog.schockwellenreiter.de/2020/01/2020012902.html">wenig</a> <a href="http://blog.schockwellenreiter.de/2020/01/2020013002.html">experimentiert</a>, daher klingt das interessant. Nicht unbedingt für den <em>Schockwellenreiter</em>, da der Renderer ein externes Modul für Hugo verlangt und dies das Herausschreiben langsamer macht, aber als Teil einer zukünftigen Publikationsstrategie? Denn die Möglichkeiten von AsciiDoc gehen weit über die Möglichkeiten von Markdown hinaus. Also auch hier: <em>Still digging!</em></p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Brian P. Hogan: <em>Build Websites with Hugo. Fast Web Development with Markdown</em>, Raleigh NC (The Pragmatic Bookshelf) 2020</li>
<li>der.hans: <em><a href="https://www.youtube.com/watch?v=0IfzATRf_T8">AsciiDoc - Plainish text for fancy output</a></em>, YouTube vom 8. August 2017</li>
<li>Develpreneur: <em>Ascii Doc Tutorial (<a href="https://www.youtube.com/watch?v=GL1SEYOhEiQ">Part 1</a>, <a href="https://www.youtube.com/watch?v=wca5m7JpS_U">Part 2</a> und <a href="https://www.youtube.com/watch?v=cQ-IfqLTw8w">Part 3</a>)</em>, YouTube 2021</li>
</ul>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53672121375/">Rabbit rides the Shockwave</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>The Mad Hatter surfs on a board in the air between houses and trees in a futuristic city. A planet with a ring can be seen in the sky. Little white rabbits with vests and watches scurry about on the streets. colored french comic style</em>«. Negative Prompt: »<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Illustrated Anime + Ethereal Realism.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Zumindest auf meinem betagten MacBook Pro. Aber meine Tests auf meinem <a href="https://kantel.github.io/posts/2024051201_71_jahre/">zukünftigen Desktop Rechner</a> (einen halbwegs aktuellen Mac Mini von 2018) zeigten, daß darauf das Problem nur geringfügig nach hinten verschoben wird – Quarto ist auch dort nicht signifikant schneller.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Interna</category>
  <category>Quarto</category>
  <category>Statische Seiten</category>
  <category>Hugo</category>
  <category>AsciiDoc</category>
  <guid>https://kantel.github.io/posts/2024060301_auf_ein_neues/</guid>
  <pubDate>Mon, 03 Jun 2024 15:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060301_auf_ein_neues/images/schockwellenreiterneu.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Alice, die Grinsekatze und die Suche nach dem richtigen Weg</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060201_grinsekatze_weg/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53764618955/"><img src="https://kantel.github.io/posts/2024060201_grinsekatze_weg/images/grinsekatze2-b.jpg" class="img-fluid"></a></p>
<blockquote class="blockquote">
<p>»Grinse-Mieze,« fragte Alice die plötzlich erscheinende Grinsekatze, »willst du mir wohl sagen, wenn ich bitten darf, welchen Weg ich hier nehmen muß?«<br>
»Das hängt zum guten Teil davon ab, wohin du gehen willst,« sagte die Katze.<br>
»Es kommt mir nicht darauf an, wohin —« sagte Alice.<br>
»Dann kommt es auch nicht darauf an, welchen Weg du nimmst,« sagte die Katze.<br>
»— wenn ich nur&nbsp;<em>irgendwo</em>&nbsp;hinkomme,« fügte Alice als Erklärung hinzu.<br>
»O, das wirst du ganz gewiß,« sagte die Katze, »wenn du nur lange genug gehst.«<br>
(Lewis Caroll: <a href="https://www.gutenberg.org/files/19778/19778-h/19778-h.htm#Sechstes_Kapitel">Alice im Wunderland</a>, Leipzig 1869)</p>
</blockquote>
<p>Bei ihren Besuchen im Wunderland konnte sich Alice oft nicht entscheiden, ob sie die Teeparty des verrückten Hutmachers, das Haus der Herzogin oder die bekiffte Raupe auf ihrem Pilz besuchen solle. Alle drei Ziele lagen auf den Ecken eines Dreiecks. Doch wenn sie sich zum Beispiel entschloß, die Teeparty aufzusuchen, wurde sie genau auf der Hälfte des Weges unsicher. Sie ließ einen bunten Stein fallen und überdachte ihre Entscheidung noch einmal. Sie suchte also aus den drei möglichen Zielen zufällig eines aus (es konnte durchaus auch wieder die Party des verrückten Hutmachers sein). Doch es war wie verhext: Jedesmal, wenn sie genau den halben Weg zurückgelegt hatte, wurde sie wieder unschlüssig, ließ wieder einen bunten Stein fallen und überlegte neu, welches der drei möglichen Ziele (Hutmacher, Raupe oder Herzogin). sie aufsuchen sollte … möglicherweise das gleiche, möglicherweise ein anderes. Und das wieder, und wieder, und wieder …</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53764532524/"><img src="https://kantel.github.io/posts/2024060201_grinsekatze_weg/images/sierp1.jpg" class="img-fluid"></a></p>
<p>Schaut man sich Alices Irrweg anhand der zurückgelassenen, bunten Steine an, entdeckt man eine Figur, genauer ein Fraktal, das in der Literatur als <a href="https://de.wikipedia.org/wiki/Sierpinski-Dreieck">Sierpinski-Dreieck</a> bekannt ist, benannt nach dem polnischen Mathematiker <em>Wacław Sierpiński</em>, der das Fraktal schon 1915 als erster beschrieb. Normalerweise wird dieses Fraktal mit einem rekursiven Algorithmus erzeugt, aber es geht eben auch mithilfe dieses »Chaos-Spiels«, das ich hier einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> implementiert habe.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorMode</span>(HSB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frameRate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">}</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb1-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-14">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb1-17">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb1-20">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-22">  }</span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">point</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26">  i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-27">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24000</span>) {</span>
<span id="cb1-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noLoop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-30">  }</span>
<span id="cb1-31">}</span></code></pre></div>
<p>Die <code>draw()</code>-Schleife wird 24.000 Mal durchlaufen und obwohl ich die Framerate auf 120 FPS hochgetunt habe, müßt Ihr schon ein wenig Geduld aufbringen, bevor das erlösende »I did it, Babe!« in der Konsole erscheint. Aber man sieht sehr schön, wie sich das Dreieck zufällig, aber dennoch erkennbar, zusammensetzt. Je nach zufälligem Startwert liegen die ersten drei bis vier Punkte noch außerhalb des Fraktals, danach geht aber alles seinen geordneten Gang. Und an den Farben erkennt man, daß auch die Reihenfolge, in der die einzelnen Punkte des Fraktals von Alice angelaufen werden, ebenfalls zufällig sind.</p>
<p>Dieser Beitrag ist ein weiteres Puzzleteilchen für meine Tutorialreihe zu P5.js und läutet einen Abschnitt ein, der unter der Überschrift »Punkte und Pixel« steht. Und wie gewohnt, sind hier zum Schluß alle bisher erschienenen Tutorials aufgeführt, damit Ihr keine <del>Suchmaschine</del> Datenkrake bemühen müßt:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): <a href="https://kantel.github.io/posts/2024052903_octopussy/">Octopussy</a> (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
<li>Das Abenteuer P5.js geht weiter: <a href="https://kantel.github.io/posts/2024053001_planetensystem_p5js/">Ein kleines Planetensystem</a> (<a href="https://github.com/kantel/p5js/tree/master/planetensystem/small_planetary_system">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024053103_roating_images/">Rotating Images</a>: Nachtrag zum Planetensystem mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/rotating_image">GitHub</a>)</li>
<li>Punkte und Pixel 1: Alice, die Grinsekatze und die Suche nach dem richtigen Weg (<a href="https://github.com/kantel/p5js/tree/master/sierp01">GitHub</a>)</li>
</ol>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>William P. Beaumont: <em>Conquering the Math Bogeyman</em>, in Clifford A. Pickover (Ed.): <em>Fractal Horizons – The Future Use of Fractals</em>, New York (St.&nbsp;Martin’s Press) 1996, Seiten 3-15</li>
<li>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994, Seiten 132ff.</li>
</ul>
</section>
<section id="update-3.-juni-2024" class="level3">
<h3 class="anchored" data-anchor-id="update-3.-juni-2024">Update (3. Juni 2024)</h3>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
let i = 0;
let x = y = 0;

function setup() {
  createCanvas(300, 200);
  background(234, 218, 184);
  colorMode(HSB, 360, 100, 100);
  frameRate(120);
}

function draw() {
  let p = floor(random(0, 3));
  if (p == 0) {
    x /= 2;
    y = (y + height)/2;
  } else if (p == 1) {
    x = (x + width/2)/2;
    y /= 2;
  } else if (p == 2) {
    x = (x + width)/2;
    y = (y + height)/2
  }
  stroke(i%360, 100, 100);
  strokeWeight(2);
  point(x, y);
  i += 1;
  if (i > 12000) {
    noLoop();
  }
}
</script>
<p>Ich habe noch eine leicht modifizierte Version des Skriptes als <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5xjswidget.html">P5.js-Widget</a> eingebaut (ich habe die Canvasgröße und die Anzahl der Iterationen halbiert), damit Ihr da draußen etwas zum Spielen habt.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53764618955/">Alice und die Grinsekatze</a></em>, Collage aus mehreren, KI-generierten Bildern.</p>


</section>

 ]]></description>
  <category>P5.js</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024060201_grinsekatze_weg/</guid>
  <pubDate>Sun, 02 Jun 2024 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060201_grinsekatze_weg/images/grinsekatze2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mediadaten: Die Zahlen für den Monat Mai 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53565622884/"><img src="https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/images/dachsmorgenmantelmagespace-b.jpg" class="img-fluid"></a></p>
<p>Der vergangene Monat war der erste Monat, in dem ich komplett auf Gabi verzichten mußte, er war also kein einfacher Monat für mich. Das symbolisiert auch das <a href="https://www.flickr.com/photos/schockwellenreiter/53565622884/">Bannerbild</a>, das mich in der Isolation unseres (nun nur noch »meines«) Arbeitszimmers zeigen soll. Trotzdem, das Leben geht ja irgendwie weiter und daher gibt es – wie zu jedem Montatsersten gewohnt – die Zahlen des Vormonats, die manches Mal hochtrabend auch <em>Mediadaten</em> genannt werden: Im Mai 2024 hatte der <em>Schockwellenreiter</em> laut seinem nicht immer wirklich zuverlässigen, aber dafür (hoffentlich!) datenschutzkonformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>5.258 Seitenaufrufe</strong>. Auch wenn diese Exaktheit der Ziffern wie immer eine Genauigkeit der Zahlen nur vortäuscht, freue ich mich über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> des Vormonats sind noch immer von den Ereignissen geprägt, aber es gibt auch einige Platzierungen, die wieder einen Trend zur Normalität andeuten:</p>
<ol type="1">
<li>Der Beitrag »<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html">Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</a>« vom Januar dieses Jahres entpuppt sich zum Dauerbrenner und war auch in diesem Monat wieder ganz vorne dabei.</li>
<li>Dicht gefolgt von den Beiträgen zu <a href="https://kantel.github.io/posts/2024051702_gabis_letzter_weg/">Gabis Beisetzung</a>, der <a href="https://kantel.github.io/posts/2024051403_abschied_gabi/">Ankündigung</a> dazu und der eigentlichen <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Nachricht von ihrem Tod</a>.</li>
<li>Aber auch die <a href="https://kantel.github.io/posts/2024051201_71_jahre/">Nachricht über meinen 71. Geburtstag</a> und welche Pläne ich noch habe, fand erstaunlich viele Aufrufe.</li>
<li>Wo ich gerade bei Plänen bin: Diese beiden Meldungen, ob die mögliche <a href="https://kantel.github.io/posts/2024050402_logseq_oder_zettlr/">Zukunft meines zweiten Gehirns</a> entweder noch <a href="https://kantel.github.io/posts/2024050501_zettlr_catalina/">Logseq oder doch Zettlr</a> heißt, fanden erstaunlich viele Leserinnen und Leser.</li>
<li>Und <em>last but not least</em> sind auch viele von Euch an der <a href="https://kantel.github.io/posts/2024050103_nachbarschaftskaffee/">Zukunft des Neuköllner Kulturbunkers</a> interessiert.</li>
</ol>
<p>Euer Interesse hat mir viel Kraft gegeben, trotz der Stille des nun leeren Arbeitszimmers weiterzumachen. Denn ich habe noch viel vor. Euch werden sicher bis zum Ende des Sommers noch einige Überraschungen erwarten. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53565622884/">Dachs in seiner Höhle</a></em>, erstellt mit <a href="https://www.mage.space/">Mage.Space</a>. Prompt: »<em>A badger in a red dressing gown sits in a wing chair in his cave in front of a huge library with many shelves and reads a fairy tale from a thick book, colored french comic style</em>«. Negative Prompt: »<em>other animals</em>«. Modell: Stable Diffusion XL, Style: None.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/</guid>
  <pubDate>Sat, 01 Jun 2024 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/images/dachsmorgenmantelmagespace.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
