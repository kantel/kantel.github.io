<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Sun, 22 Jan 2023 16:30:00 GMT</lastBuildDate>
<item>
  <title>Alien Attack f√ºr das Web jetzt in Twine</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023012201_alien_attack_v1_twine/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52642664363/"><img src="https://kantel.github.io/posts/2023012201_alien_attack_v1_twine/images/alienattackv1twine-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nachdem ich die letzten Tage stundenlang erfolglos experimentiert hatte, habe ich beschlossen, die Webversion meiner <a href="https://kantel.github.io/posts/2022122102_alien_invasion_stage_1/">R√§uberpistole</a> nun doch nicht mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink/Inky</a>, sondern mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> zu erstellen ‚Äì zumindest so lange, bis das aktuelle <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren‚Äôpy</a> wieder eine HTML-Version herausschreiben kann.</p>
<p>Ink mit Inky sind zwar hervorragende Werkzeuge, um eine interaktive Geschichte zu entwerfen, aber das Erstellen einer Webversion ist mir dann doch zu buggy. Denn wenn Ink eine HTML-Seite zu lang wird, dann verschluckt es einfach die letzten Links (im Ink-Jargon <code>choices</code> genannt) und man h√§ngt auf der Seite fest, weil es nicht mehr weitergeht. Verhindern l√§√üt sich das nur, wenn man den Text der Seite radikal k√ºrzt und/oder ihn auf mehrere Seite verteilt. Und da dies nicht nur der Geschichte schadet, sondern auch den Leseflu√ü unterbricht, bin ich reum√ºtig zu Twine zur√ºckgekehrt. Denn da wei√ü ich wenigstens, wo das Teil Macken hat.</p>
<p>Aber auch hier gab es eine √úberraschung: Twine hat seine Nutzeroberfl√§che radikal √ºberarbeitet (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/52642664363/">Bannerbild</a> oben), und so mu√üte ich mich da erst einmal wieder einarbeiten. Aber auch wenn ich <code>snap to grid</code> noch nicht wiedergefunden habe, finde ich die neue Oberfl√§che logischer aufgebaut.</p>
<p>Au√üerdem bin ich mir noch nicht klar, ob ich f√ºr die Geschichte das Storyformat <a href="https://twine2.neocities.org/">Harlowe</a> oder <a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube</a> verwenden soll? Harlowe hat als Standardformat den Vorteil der gr√∂√üeren Verbreitung und Unterst√ºtzung, f√ºr SugarCube wiederum spricht, da√ü es f√ºr l√§ngere Geschichten wom√∂glich besser geeignet w√§re. Hier werde ich erst einmal noch weitere Experimente durchf√ºhren und mich dann entscheiden.</p>
<p>√úber das Ergebnis werde ich Euch selbstverst√§ndlich unterrichten. Und den <a href="https://github.com/kantel/twine-entdecken/tree/master/Twine/alienattck">(Twine-) Quellcode und die Bildchen</a> gibt es wie immer in meinem GitHub-Repositorium. <em>Still digging!</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023012201_alien_attack_v1_twine/index.html</guid>
  <pubDate>Sun, 22 Jan 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023012201_alien_attack_v1_twine/images/alienattackv1twine.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 102.7.0 freigegeben</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023012002_thunderbird_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/a/ad/The_monopolists%27_may-pole_-_F._Opper._LCCN2011661442.jpg"><img src="https://kantel.github.io/posts/2023012002_thunderbird_update/images/monopolistsmaypole-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie fast immer folgt der Donnervogel dem feurigen Fuchs <em>stante pede</em>, so auch dieses Mal: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 102.7.0 freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/102.7.0/releasenotes/">Sicherheitsl√ºcken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer √ºber das Men√º <code>Hilfe &gt; √úber Thunderbird</code> angesto√üen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:The_monopolists%27_may-pole_-_F._Opper._LCCN2011661442.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023012002_thunderbird_update/index.html</guid>
  <pubDate>Fri, 20 Jan 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023012002_thunderbird_update/images/monopolistsmaypole.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Weitere Ink-Tutorials von Dan Cox</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023012001_ink_crash_course/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/d/d0/Alice%27s_Adventures_in_Wonderland_-_Carroll%2C_Robinson_-_S163_-_%27Up%2C_lazy_thing%21%27_said_the_Queen.jpg"><img src="https://kantel.github.io/posts/2023012001_ink_crash_course/images/alicerobinson163-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nur ganz kurz und auf die Schnelle die Video-Tutorials zum Wochenende (weil ich eigentlich noch mit meiner <a href="https://kantel.github.io/posts/2023011802_gemeinfreie_alice/">vorgestrigen Entdeckung</a> gemeinfreier Bilder aus dem Wunderland besch√§ftigt bin): Ich m√∂chte als Vorarbeit zu <a href="https://kantel.github.io/posts/2022122102_alien_invasion_stage_1/">meiner geplanten R√§uberpistole</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren‚ÄôPy</a> auch weitere <a href="https://kantel.github.io/posts/2022122001_alice_renpy/">Ausfl√ºge ins Wunderland mit dieser Engine</a> unternehmen. Und wie bisher m√∂chte ich parallel dazu f√ºr das Web und als Entwurf f√ºr eine Portierung nach Ren‚ÄôPy eine Version mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink und Inky</a> erstellen.</p>
<p>Und daf√ºr habe ich heute noch zwei weitere Playlists von <em>Dan Cox</em> ausgegraben, einmal einen</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr4gYqW2WvaaGPZgeZTV3Xpk">Ink Crash Course</a>, der aus drei Videos mit einer Gesamtlaufzeit von etwa vierzig Minuten besteht, und dann den Kurs</li>
<li><a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr716LluDsw4l4p6HA-gdfj1">Fundamentals of Interactive Design</a> (FID) aus dem Jahre 2020 (f√ºnf Videos mit einer Gesamtspieldauer von 45 Minuten).</li>
</ul>
<p>Zusammen mit den <a href="https://kantel.github.io/posts/2022121801_inkle_web/">Mitte Dezember schon vorgestellten</a> schon etwas √§lteren Playlisten ¬ª<a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6gV8jjx98eUfRkYbb3u1v6">Learning Ink</a>¬´ und ¬ª<a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr7O5yqPprSfx1aF8WypzyHh">Ink for the Web</a>¬´ sollte das die L√ºcken f√ºr diejenigen f√ºllen, die mit Ink entwickeln wollen, ohne <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> als Endprodukt <a href="https://kantel.github.io/posts/2022121601_renpy_ink/">im Auge zu haben</a> ‚Äì also Menschen wie mich.&nbsp;ü§ì</p>
<p><em>(Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Alice%27s_Adventures_in_Wonderland_-_Carroll,_Robinson_-_S163_-_%27Up,_lazy_thing!%27_said_the_Queen.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Ink</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023012001_ink_crash_course/index.html</guid>
  <pubDate>Fri, 20 Jan 2023 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023012001_ink_crash_course/images/alicerobinson163.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Gemeinfreie Illustrationen zu ¬ªAlice im Wunderland¬´</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011802_gemeinfreie_alice/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://collectingalice.com/wp-content/uploads/2023/01/Eleonora-Mann-1890-cheshire.jpg"><img src="https://kantel.github.io/posts/2023011802_gemeinfreie_alice/images/alicedroomen-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Bei meiner Suche nach gemeinfreiem Material f√ºr meine Ausfl√ºge in den Wunderland-Kosmos, die ich in erster Linie mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>, aber auch mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink/Inky</a> und/oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren‚ÄôPy</a> unternehmen m√∂chte, bin ich √ºber das wunderbare ¬ª<a href="https://collectingalice.com/">Alice in Wonderland Book Collection Blog</a>¬´ gestolpert. Dieses Blog eines passionierten Sammlers beherbergt Tonnen von Informationen und √ºber dieses bin ich auf viele weitere gemeinfreie Illustratoren gesto√üen. Ohne eine explizite und/oder wertende Reihenfolge w√§ren dies:</p>
<ul>
<li><strong><a href="https://en.wikipedia.org/wiki/Peter_Newell">Peter Newell</a></strong> (<em>Peter Sheaf Hersey Newell</em>, 1826-1924). Er illustrierte sowohl ¬ª<a href="https://collectingalice.com/peter-newell-whimsical-alice/">Alice im Wunderland</a>¬´ wie auch ¬ª<a href="https://collectingalice.com/peter-newell-through-the-looking-glass/">Alice hinter den Spiegeln</a>¬´ (1902).</li>
<li>Von <strong><a href="https://de.wikipedia.org/wiki/Maria_Louise_Kirk">Maria Louise Kirk</a></strong> (1860-1938) erschien 1904 eine <a href="https://collectingalice.com/maria-l-kirk-lively-alice/">Ausgabe von Alice im Wunderland und Alice hinter den Spiegeln</a> erschien 1905.</li>
<li>Die Alice von <strong><a href="https://ukcomics.fandom.com/wiki/Thomas_Maybank_(1869-1929)">Thomas Maybank</a></strong> (1869-1929) <a href="https://collectingalice.com/thomas-maybank-victorian-alice/">erschien 1910</a>.</li>
<li>Von der amerikanischen Schriftstellerin und Illustratorin <strong><a href="https://en.wikipedia.org/wiki/Blanche_McManus">Blanche McManus</a></strong> (1869-1935) erschienen 1899 ¬ªAlice im Wunderland¬´ und 1900 ¬ªAlice hinter den Spiegeln¬´ Ausgaben, die nur in den Farben schwarz, wei√ü, rot und gr√ºn <a href="https://collectingalice.com/blanche-mcmanus-red-green-black-white/">illustriert waren</a>.</li>
<li>Von <strong><a href="https://en.wikipedia.org/wiki/Honor_C._Appleton">Honor Charlotte Appleton</a></strong> (1879-1951), einer Illustratorin von ¬ªThe Childrens Alice¬´ habe ich leider nur eine <a href="https://www.pookpress.co.uk/project/honor-appleton-biography/">Kurzbiographie bei Pook Press</a> auftreiben k√∂nnen.</li>
</ul>
<p>Noch schwieriger sieht die Situation bei <a href="https://collectingalice.com/walter-hawes-subtle-alice/">Walter Hawes</a> (Alice von 1908) und <a href="https://collectingalice.com/j-r-sinclair-edwardian-alice/">J. R. Sinclair</a> (Alice von ca. 1900) aus. Deren Lebensdaten waren bisher nirgends im Netz aufzutreiben. Jedoch ist auf Grund des Erscheinungsdatums der B√ºcher darauf zu schlie√üen, das auch deren Zeichnungen gemeinfrei sind. Ich gebe jedoch keine Gew√§hr daf√ºr. Beruft Euch also nicht auf mich.</p>
<p>Bei Pook Press gibt es eine <a href="https://www.pookpress.co.uk/product-category/classic-childrens-fiction/alice-in-wonderland/">Seite mit allen Alice-B√ºchern diverser Illustratorinnen und Illustratoren</a>, die sie bisher herausgegeben haben. Auch hier gibt es f√ºr mich noch viel zu recherchieren</p>
<p>Jetzt mu√ü ich allerdings erst einmal das bisher angesammelte Material sichten und auf Eignung f√ºr meine Projekte pr√ºfen. Denn meine pers√∂nliche Liste gemeinfreier Alice-Illustratorinnen und Illustratoren ist auf vierzehn eindeutige (Sterbedatum sp√§testens 1952) und vier (noch) zweifelhafte F√§lle angewachsen. Ich habe also zu tun ‚Ä¶</p>
<p>Das Bild im Banner oben ist ein Ausschnitt aus einer Illustration eines namenlosen K√ºnstlers oder einer namenlosen K√ºnstlerin aus der ersten niederl√§ndischen Ausgabe von <em>Alice im Wunderland</em>: ¬ª<a href="https://collectingalice.com/the-holes-in-my-collection/">Alice in het Land der Droomen</a>¬´ in der √úbersetzung von <em>Eleonora Mann</em> (gestorben vermutlich 1917 in Nijmegen), die in diversen Quellen auch als Illustratorin genannt wird. Das Buch erschien 1887 und war die erste, gedruckte Alice-Ausgabe ohne die Zeichnungen von <em>John Tenniel</em>.</p>



 ]]></description>
  <category>Twine</category>
  <category>Ink</category>
  <category>RenPy</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023011802_gemeinfreie_alice/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011802_gemeinfreie_alice/images/alicedroomen.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla ver√∂ffentlicht Firefox 109.0</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011801_firefox_109/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/c/c2/PUCK-Monopoly_Millionaires_Dividing_the_Country.jpg/1024px-PUCK-Monopoly_Millionaires_Dividing_the_Country.jpg"><img src="https://kantel.github.io/posts/2023011801_firefox_109/images/millionaersmonopoly-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Entwickler des Mozilla Firefox haben die <a href="https://www.mozilla.org/en-US/firefox/109.0/releasenotes/">neue Version 109.0</a> und die neue <a href="https://www.mozilla.org/en-US/firefox/102.7.0/releasenotes/">Version ESR 102.7</a> ver√∂ffentlicht und darin auch wieder Sicherheitsl√ºcken behoben. N√§heres zum Update findet sich <a href="https://stadt-bremerhaven.de/firefox-109-0-veroeffentlicht/">auch hier</a>.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer √ºber das Men√º <code>Hilfe &gt; √úber Firefox</code> angesto√üen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:PUCK-Monopoly_Millionaires_Dividing_the_Country.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023011801_firefox_109/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011801_firefox_109/images/millionaersmonopoly.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Back to the Roots: Rogue in Pygame</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011601_rogue_pygame/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/playlist?list=PL5t8Umee383dPXA3D8BVwLLP5TEgse2v2"><img src="https://kantel.github.io/posts/2023011601_rogue_pygame/images/roguelike-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Das ist mir heute in meinen Feedreader gesp√ºlt und nein, das kann nicht bis Freitag warten, das mu√ü ich mir heute noch reinziehen: Ein klassisches <a href="http://cognitiones.kantel-chaos-team.de/medien/retrogames/rogue.html">Rogue-like</a> mit ASCII-Zeichen, in Python und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> realisiert:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/mkkVrWzUhtI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Die Playlist ¬ª<a href="https://www.youtube.com/playlist?list=PL5t8Umee383dPXA3D8BVwLLP5TEgse2v2">Top-Down Movement Console Game Tutorial</a>¬´ besteht aus sechs Videos mit einer Gesamtspieldauer von knapp vierzig Minuten. Sie wurde im Juni 2022 erstellt. Wer baut eigentlich 2022 noch ein klassisches Rogue-like? Daran kann doch nur die Langeweile w√§hrend der Corona-Isolation Schuld haben. Egal, ich bin dem Macher jedenfalls dankbar f√ºr das Retro-Feeling.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Retrogaming</category>
  <category>Pygame</category>
  <guid>https://kantel.github.io/posts/2023011601_rogue_pygame/index.html</guid>
  <pubDate>Mon, 16 Jan 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011601_rogue_pygame/images/roguelike.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Farbpaletten</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011502_farbpaletten/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/fantasy24.html"><img src="https://kantel.github.io/posts/2023011502_farbpaletten/images/fantasy24-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Bei meinem <a href="https://kantel.github.io/posts/2023011401_freie_tiles_und_sprites/">gestrigen Jagdausflug</a> in das Revier der freien Tile- und Spritesheets fielen auch ein paar Farbpaletten an. Diese habe ich in <a href="http://cognitiones.kantel-chaos-team.de/index.html">mein Wiki</a> aufgenommen, denn ‚Äì wie ich nie m√ºde werde zu betonen ‚Äì kann man niemals zu viele Farbpaletten besitzen:</p>
<ul>
<li><a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/fantasy24.html">Fantasy 24</a> ist eine nette Palette mit 24 Farben von <em>Gabriel C.</em>, bestens geeignet f√ºr Retrospiele.</li>
<li><a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pear36.html">Pear 36</a> ist eine eher r√∂tlich-braune Palette. Auch sie ist hervorragend geeignet f√ºr Retrogames, deren Engine eine Palette von 36 Farben erlaubt.</li>
<li>Und jetzt wird es monstr√∂s: Die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/amigapixel.html">Amiga Pixel Palette</a> ist eine Palette mit 64 Farben, die <em>Arne Niklas Jansson</em> in seinem <a href="https://androidarts.com/Amiga/AmigaPixels.htm">Amiga Showcase</a> verwendet hat.</li>
</ul>
<p>Die Nutzung der letzten Palette ist ‚Äì wie schon die Erstellung meiner Wikiseite zu dieser Palette ‚Äì mit ziemlichen Arbeitsaufwand verbunden. Aber die 64 Farben sind gut ausgew√§hlt und die damit erzielten Ergebnisse sind ‚Äì wie obiger Showcase zeigt ‚Äì recht eindrucksvoll.</p>



 ]]></description>
  <category>Creative Coding</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023011502_farbpaletten/index.html</guid>
  <pubDate>Sun, 15 Jan 2023 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011502_farbpaletten/images/fantasy24.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Swing im Dreiviertel-Takt</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011501_dreiviertel_swing/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52628834605/"><img src="https://kantel.github.io/posts/2023011501_dreiviertel_swing/images/wohnidylle-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Das man ‚Äì auch wenn es unglaublich klingt ‚Äì in den S√ºmpfen Louisianas eine Spielart des Blues im Walzertakt erfunden hat, war mir seit etlichen Jahren bekannt. Der <a href="https://en.wikipedia.org/wiki/Cajun_music">Cajun Waltz</a> ist schlie√ülich keine Erfindung von <em>Taj Mahal</em>, sondern tief in der Folklore der <em>Acadians</em> verankert. Aber da√ü man auch Swing im Ump-ta-ta des Walzers ert√∂nen lassen kann und da√ü dies tats√§chlich <em>swingt</em>, das war mir bis heute eher unbekannt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/_sIWieg40Gs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wenn auch nicht allzu √ºberraschend, denn im <a href="https://de.wikipedia.org/wiki/Gypsy-Jazz">Gypsy-Jazz</a> ist vermutlich alles m√∂glich, auch ein Crossover zwischen <a href="https://de.wikipedia.org/wiki/Musette_(Walzer)">Valse Musette</a> und Swing. Die <em>Musette Explosion</em> haben diesen Crossover schon im Namen und √ºberraschen zudem durch eine au√üergew√∂hnliche Instrumentenkombination: Das Akkordeon ist ganz traditionell das Leitinstrumente des Musette, aber die Jazzgitarre steht f√ºr einen Swing in der Tradition <em>Django Reinhards</em> und die Tuba ‚Ä¶ ja, was macht die Tuba eigentlich bei dem Trio? Au√üer verdammt gut klingen ‚Äì auch in dem Solo?</p>
<p>Nat√ºrlich stehen auch Namen hinter den Instrumenten: Das Akkordeon wird von <em>Will Holshouser</em> gespielt, an den Saiten der Gitarre h√∂ren wir <em>Matt Munisteri</em> und <em>last but not least</em> bl√§st <em>Marcus Rojas</em> in die Tuba. Aufgenommen wurde der ¬ªSwing Valse¬´ live im Oktober 2010 im Barbes in Brooklyn, NY.</p>
<p>Und jetzt lehnt Euch in Eure Ohrensessel zur√ºck und genie√üt ganz entspannt die Musik. <em>Let the Valse swing!</em></p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2023011501_dreiviertel_swing/index.html</guid>
  <pubDate>Sun, 15 Jan 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011501_dreiviertel_swing/images/wohnidylle.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Freie Tile- und Spritesets bis zum Abwinken</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011401_freie_tiles_und_sprites/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://img.itch.zone/aW1hZ2UvNTg0MjAxLzQzOTIyOTEucG5n/347x500/L6i0iA.png"><img src="https://kantel.github.io/posts/2023011401_freie_tiles_und_sprites/images/paperpixelsexample-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>F√ºr meinen <a href="https://kantel.github.io/posts/2023011001_pizzaplane_trailer/">kleinen Pizzaflieger</a> brauchte ich noch ein paar Bildchen, denn zum einen waren die Bilder von dem Gescho√ü des Fliegers wie auch der Explosion noch aus dem mitgelieferten Spriteset des bei mir <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">wegen seiner undurchsichtigen Lizenz in Ungnade</a> gefallenen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a>, zum anderen fehlten mir noch ein paar Bilder der b√∂sen <em>Meloni</em> (die Melone von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/twemoji.html">Twemoji</a> wirkte mir nicht furchterregend genug). Daher st√∂berte ich ein wenig auf den Seiten von Itch.io nach <a href="https://itch.io/game-assets/free/genre-platformer">freien Assets f√ºr Platformer</a> herum.</p>
<p>Ich h√§tte das besser nicht tun sollen. Zwar wurde ich f√ºndig, aber ich war stundenlang gefesselt und fasziniert, was es da alles zu entdecken gab. Doch zuerst die Fundst√ºcke f√ºr meinen Pizza-Flieger:</p>
<ul>
<li>Melonen und anderes gef√§hrliches Gem√ºse und gef√§hrlich Lebensmittel gibt es in diesem freien (<a href="https://creativecommons.org/licenses/by-nd/4.0/deed.en">CC BY-ND 4.0</a>) 16x16 <a href="https://poloviiinkin.itch.io/225-icons">Icon Pack</a> von <a href="https://itch.io/profile/poloviiinkin">Poloviiinkin</a>. Auf <a href="https://poloviiinkin.itch.io/">seinen Seiten</a> gibt es noch viele weitere Entdeckungen zu machen, so zum Beispiel dieses 32x32 Pixel gro√üe <a href="https://poloviiinkin.itch.io/mega-pixel-art-32x32-px-icons-sprite-sheet">Icon-Pack</a> (leider ohne Melonen).</li>
<li><a href="https://bdragon1727.itch.io/fire-pixel-bullet-16x16">Laserwaffen und Explosionen</a> (frei f√ºr nichtkommerzielle Nutzung) gibt es von <em>BDragon1727</em> der unter anderem mit diesen Sprites auch ein nettes Spiel ver√∂ffentlicht hat:</li>
</ul>
<iframe width="560" height="315" src="https://www.youtube.com/embed/iFB8of3COsc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<ul>
<li>Wenn ich das Head Up Display (HUD) meines Fliegers noch aufmotzen will ‚Äì hier gibt es <a href="https://spikerman.itch.io/health-bars-life-bars">Health und Live Bars</a> in bonbonbunten Farben (frei auch f√ºr die kommerzielle Nutzung).</li>
<li>Wer den W√ºstenhintergund langweilig findet, kann sich mit diesen <a href="https://saurabhkgp.itch.io/2d-cave-environment">Cave Environment for your 2D Platformer</a> (ebenfalls auch f√ºr kommerzeille Nutzung frei zu verwenden) ja einen neuen Hintergrund im Stil eines Horror-Games basteln.</li>
<li>Dann habe ich auch noch diese freien <a href="https://brullov.itch.io/fire-animation">Animationen eines Feuers</a> gefunden. Pa√üt zwar nicht zu meinem Pizza-Flieger, kann ich aber sicher irgendwann einmal gebrauchen.</li>
</ul>
<p><strong>Nun aber zu dem, womit ich die meiste Zeit verplempert habe</strong>: Wie regelm√§√üige Leser des <em>Schockwellenreiters</em> wissen, geh√∂rt meine (un-) heimliche Liebe den Retrogame-Engines <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> und/oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a> mit ihren minimalistischen, 8x8 Pixel gro√üen Sprites und Tiles (Bitsy ‚Äì um den Minimalismus auf die Spitze zu treiben ‚Äì auch noch monochrom). Und da war mir dieses wunderbare <a href="https://v3x3d.itch.io/paper-pixels">Paper Pixels Asset Pack</a> des Users <em>VEXED</em> aufgefallen, das verdient heute das Bannerbild zu diesem Beitrag ziert. Nicht nur, aber auch, weil es zu meiner bevorzugten Packpapier-Hintergrundfarbe pa√üt.</p>
<p>Da gab es dann kein Halten mehr, ich mu√üte auf die Jagd nach weiteren 8x8 Pixel gro√üen Sprites und Assets gehen. Herausgekommen ist dabei folgende Beute:</p>
<ul>
<li>Das <a href="https://s4m-ur4i.itch.io/minimal-futureset-pixelart-2d">Minimal Future Assetpack</a> mit 176 Tiles von <em><a href="https://s4m-ur4i.itch.io/">Sam Vieten</a></em> (auch bei ihm gibt es noch viele weitere Entdeckungen zu machen ‚Äì kommerzielle wie auch freie Assets).</li>
<li>Noch einmal <em>Sam Vieten</em> mit der freien (auch f√ºr kommerzelle Nutzung) <a href="https://s4m-ur4i.itch.io/free-sprites-elements-8x8-retro-pixelart-platformer-brawler">tinyElements 8x8 Retro Pixelart</a> f√ºr Platformer/Brawler.</li>
<li>Ein freies (CC0) <a href="https://0x72.itch.io/8x8-f24-tileset">8x8 F24 Tileset</a> des Users <em><a href="https://0x72.itch.io/">072</a></em>.</li>
<li>Das <a href="https://dani-maccari.itch.io/1bit-platformer-doungeoun">1-Bit dungeon platformer - Free 8x8 assetpack</a> von <em>Dani Maccari</em>, eine riesige Fundgrube f√ºr weitere Bitsy-Experimente.</li>
<li>Das freie <a href="https://killspika.itch.io/8x8-tileset-free">8x8 Minipack Tileset</a> des Users <em>kill4spika</em> ist zwar ein bi√üchen bunt, aber so minimalistisch in wenigen Farben gehalten, da√ü es sich sicher auch mit einigen Modifikationen in Bitsy verwenden l√§√üt.</li>
<li>Wieder viel bunter sind die 8x8 Mini-Pixel-Packs (<a href="https://grafxkid.itch.io/mini-pixel-pack-1">Pack 1</a>, <a href="https://grafxkid.itch.io/mini-pixel-pack-2">Pack 2</a>, <a href="https://grafxkid.itch.io/mini-pixel-pack-3">Pack 3</a> und <a href="https://grafxkid.itch.io/mini-fx-items-ui">Items und UI</a>) des Users <em><a href="https://grafxkid.itch.io/">GrafxKid</a></em>. Er wird weiter unten noch einmal Erw√§hnung finden.</li>
<li>Und H√∂hepunkt der Jagd war das <a href="https://thetgi.itch.io/basic-pico-platformer">Platformer Starter Pack</a> von <em>thetgi</em>. Entwickelt hat er das freie 8x8 Paket f√ºr die Retro-Fantasy-Konsole <a href="http://blog.schockwellenreiter.de/2020/10/2020102402.html">Pico-8</a>, doch es gibt kein Hindernis, anstelle des kommerziellen Produkts auch die freie Fantasy-Konsolse TIC-80 f√ºr die Entwicklung eines Super-Mario-√§hnlichen Plattformers einzusetzen. Das Pack l√§dt geradezu dazu ein.</li>
</ul>
<p><strong>Was mir sonst noch vor meine (virtuelle) Flinte lief</strong>: Da war einmal das <a href="https://safwyl.itch.io/oubliette-tileset">Oubliette Tileset</a>, ein extrem (farb-) minimalistisches (drei Farben: Schwarz, wei√ü und rot) 16x16 Tileset des Users <em><a href="https://safwyl.itch.io/">safwyl</a></em>, das vom 12x12 Pixel gro√üen Tileset <a href="https://arks.itch.io/dungeon-platform-tileset">Dunjo</a> (mehr als&nbsp;ü§ì) inspiriert wurde. Und dann mu√ü ich noch einmal zur√ºck auf <em>GrafxKid</em> zur√ºckkommen. Er hat n√§mlich auch einen Satz 16x16 gro√üer Sprite Packs (<a href="https://grafxkid.itch.io/sprite-pack-1">Sprite Pack 1</a>, <a href="https://grafxkid.itch.io/sprite-pack-2">Sprite Pack&nbsp;2</a>, <a href="https://grafxkid.itch.io/sprite-pack-3">Sprite Pack 3</a>, <a href="https://grafxkid.itch.io/sprite-pack-4">Sprite Pack 4</a>, <a href="https://grafxkid.itch.io/sprite-pack-5">Sprite Pack 5</a>, <a href="https://grafxkid.itch.io/sprite-pack-6">Sprite Pack 6</a> und <a href="https://grafxkid.itch.io/sprite-pack-7">Sprite Pack 7</a>) sowie das <a href="https://grafxkid.itch.io/seasonal-tilesets">Seasonal Tileset</a> und das <a href="https://grafxkid.itch.io/cave-tileset">Cave Tileset</a> zur freien Nutzung hochgeladen, die sich wegen ihres √§hnlichen Stils sehr gut kombinieren lassen. Und da ich in Pygame schon immer mal einen 16x16 Pixel gro√ües (nein, keinen Platformer, sondern ein) RPG oder Zelda-like programmieren wollte, sollte ich diese Tilesets nicht aus den Augen verlieren.</p>
<p><strong>Und keine Sprite-Sammlung ohne <a href="https://www.kenney.nl/">Kenney.nl</a></strong>: Seinen <a href="https://kenney.nl/assets/pixel-platformer">Pixel Platformer</a> (mit <a href="https://www.kenney.nl/assets/pixel-platformer-farm-expansion">Farm Expansion Kit</a>) gibt es nicht nur zuhause, sondern auch auf <a href="https://kenney-assets.itch.io/pixel-platformer">Itch.io</a>. Und neu ist Kenneys <a href="https://www.kenney.nl/assets/tiny-town">Tiny Town</a> (als Erg√§nzung zum <a href="https://kenney.nl/assets/tiny-dungeon">Tiny Dungeon</a>) ‚Äì interessant f√ºr mich wegen meiner oben erw√§hnten RPG-/Zelda-like-Pl√§ne.</p>
<p>Nach dieser letzten Entdeckung habe ich meine Jagd erst einmal beendet. Ich mu√ü schlie√ülich auch noch Zeit finden, meine Beute zu bewerten und zu sortieren. Falls es daher die n√§chsten Tage etwas ruhiger hier auf diesen Seiten werden sollte: Ich habe zu tun!</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Bilder</category>
  <guid>https://kantel.github.io/posts/2023011401_freie_tiles_und_sprites/index.html</guid>
  <pubDate>Sat, 14 Jan 2023 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011401_freie_tiles_und_sprites/images/paperpixelsexample.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Twine, Ren‚Äôpy or Treat: Video-Tutorials am Freitag</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011301_twine_renpy_or_treat/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://americanliterature.com/author/lewis-carroll/book/through-the-looking-glass/summary"><img src="https://kantel.github.io/posts/2023011301_twine_renpy_or_treat/images/humptydumptypeternewell-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch wenn ich an diesem Wochenende noch die objektorientierte Version <a href="https://kantel.github.io/posts/2023011001_pizzaplane_trailer/">meines kleinen Pizzafliegers</a> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> fertigstellen m√∂chte<sup>1</sup>, ist heute Freitag. Und Freitags gibt es nun einmal Video-Tutorials im <em>Schockwellenreiter</em>, damit Ihr √ºber das Wochenende besch√§ftigt seid und Euch nicht etwa die Langeweile ‚Äì was Gott beh√ºten m√∂ge ‚Äì in die Kirchen treibt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/37IT-8GQNpM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wenn ich mit diesem Pizzaflieger fertig bin, m√∂chte ich als erstes ‚Äì wie schon <a href="https://kantel.github.io/posts/2023010601_twine_und_statische_seiten/">letzte Woche angek√ºndigt</a> ‚Äì wieder an meinem <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>-Universum basteln und mit Alice <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">Ausfl√ºge ins Wunderland</a> unternehmen. Daf√ºr habe ich mir mit <a href="https://www.youtube.com/playlist?list=PLujRcYYssj76Q_seiXpXnXxzpj1fULa0s">Twine or Treat</a> eine weitere Playlist mit neun etwa zehnmin√ºtigen Videos (und einem Intro) zu Twine 2.3 und SugarCube 2.3.4. herausgesucht.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/uA1tEBUjrkg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Neben Twine scharrt ja auch noch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren‚ÄôPy</a> schon lange mit den Hufen und wartet darauf, da√ü ich mit <a href="https://kantel.github.io/posts/20221222201_renpy_app/">meiner kleinen R√§uberpistole</a> weitermache. Dazu hat der regelm√§√üigen Lesern des <em>Schockwellenreiters</em> hinl√§nglich bekannte YouTube-Kanal <em>Game Developer Training</em> eine neue <a href="https://www.youtube.com/playlist?list=PLKdE0Vv4UA59nK0yYR1ryGrT3AtgdGYg5">Playlist zu Ren‚ÄôPy und Python</a> gestartet. Bisher enth√§lt sie gerade einmal zwei Videos, aber der letzte Upload ist erst wenige Tage alt. Das letztj√§hrige <a href="https://www.youtube.com/playlist?list=PLKdE0Vv4UA59rd1g9ipzIlAklvfmH5cjE">Let‚Äôs Code 4</a> endete mit zwanzig Videos, daher erwarte ich Updates in etwa der gleichen Anzahl.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/gYodPl_wvzY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und <em>last but not least</em> hat der umtriebige <em>Len Pelletier</em> die Physik-Engine <a href="http://www.ricardmarxer.com/fisica/">Fisica</a> entdeckt, einen Wrapper um JBox2D, den <em>Ricard Marxer</em> f√ºr Processing entwickelt hat. In einer <a href="https://www.youtube.com/playlist?list=PL__Tph-7Dyp0d4_iUA_RBb5AwsRJxJv2u">zweiteiligen Playlist ¬ªFisica Volleyball¬´</a> gibt er eine kurze Einf√ºhrung in die Bibliothek um dann in ¬ª<a href="https://www.youtube.com/playlist?list=PL__Tph-7Dyp0yifP3b3-GZBz9TRW128xa">Making a Platformer in Processing with Fisica</a>¬´ so richtig loszulegen. Bisher besteht diese Playlist aus neun Videos, aber auch hier ist das letzte Update erst wenige Tage alt, also mit weiteren Fortsetzungen zu rechnen<sup>2</sup>.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/WcIczCxcH2g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, die <a href="https://www.youtube.com/playlist?list=PLGVZCDnMOq0p6o_fjjdNPqy1rps49z2S0">PyData Tel Aviv 2022</a> hat vorgestern ihre Playlist mit zwanzig hochinteressanten Vortr√§gen hochgeladen. Nat√ºrlich darf die in diesen Zeiten obligatorische <a href="https://www.youtube.com/watch?v=WcIczCxcH2g">Pandemie-Simulation</a> nicht fehlen.</p>
<p>√úbrigens: Die <a href="https://2023.pycon.de/">PyCon DE &amp; PyData Berlin 2023</a> findet vom 17. bis 23. April im Berliner Congress Center am Alexanderplatz statt. <em>Save the Date!</em></p>
<p>Das Bannerbild oben stammt von <em><a href="https://de.wikipedia.org/wiki/Peter_Sheaf_Hersey_Newell">Peter Newell</a></em>, einem US-amerikanischer Kinderbuchautor, Illustrator und Comiczeichner. Er lebte von 1862 bis 1924 (ist also hinreichend lange tot, so da√ü seine Werke gemeinfrei sind) und war unter anderem einer der ersten, der eine amerikanische Ausgabe von <em>Alice im Wunderland</em> und <em><a href="https://commons.wikimedia.org/wiki/Category:Peter_Newell%27s_illustrations_of_Through_the_Looking-Glass_and_What_Alice_Found_There">Alice hinter den Spiegeln</a></em> illustrierte. Seine Zeichnungen sind ziemlich schr√§g, er ist eine wunderbare Entdeckung und eine Bereicherung f√ºr meinen Wunderland-Kosmos<sup>3</sup>.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fu√ünoten</h2>

<ol>
<li id="fn1"><p>Die Fassung, die ich gerade in Arbeit habe, komplettiert die Spiele-Mechanik, danach folgt ‚Äì hoffentlich bald ‚Äì ¬ªnur¬´ noch der Feinschliff.‚Ü©Ô∏é</p></li>
<li id="fn2"><p>Notiz an mich: Testen, ob <em>fisica</em> auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> spielt.‚Ü©Ô∏é</p></li>
<li id="fn3"><p>Daher wird <em>Peter Newell</em> im Feburar 2023 auch der ¬ªK√ºnstler des Monats¬´ in diesem <del>Blog</del> Kritzelheft werden.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Twine</category>
  <category>RenPy</category>
  <category>Processing</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023011301_twine_renpy_or_treat/index.html</guid>
  <pubDate>Fri, 13 Jan 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011301_twine_renpy_or_treat/images/humptydumptypeternewell.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wahlwiederholung 2023 ‚Äì Die PARTEI</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011201_briefwahl_2023/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52623142744/"><img src="https://kantel.github.io/posts/2023011201_briefwahl_2023/images/briefwahl2023-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute bin ich meiner staatsb√ºrgerlichen Pflicht (so hie√ü das w√§hrend meiner Schulzeit in den fr√ºhen 1960er Jahren im ¬ªGemeinschaftskunde¬´-Unterricht in NRW) nachgekommen und habe die Chaos-Wahl vom letzten Jahr wiederholt. Die Briefwahlunterlagen kamen √ºberraschend schnell: Montag lag die Wahlbenachrichtigung in unserem Briefkasten, noch am gleichen Tag haben wir per Email die Briefwahlunterlagen beim Neuk√∂llner Bezirksamt angefordert und schon gestern, also am Mittwoch, kamem diese nach nur einem Tag bei uns an. Na bitte, wenn man sich nicht schon wieder zum Gesp√∂tt der Leute machen will, dann geht es doch!</p>
<p>Blieb nur die Frage, wohin mit den Kreuzchen? Die Marktwirtschaftsterroristen von Rechts (also F.D.P. und CDU) sind f√ºr mich genauso unw√§hlbar, wie die braune Kacke von der AfD. Und bei der SPD will eine Frau, die sich einen Doktortitel erschummelt hat, schamlos wieder Regierende B√ºrgermeisterin werden, statt sich in eine Ecke zu stellen und sich zu sch√§men. Und der damalige Innensenator, der die Wahl versemmelt hat, klebt auch noch an seinem Sessel und wird von seiner SPD dabei unterst√ºtzt.</p>
<p>Die Kriegstreiber von der gr√ºntet√ºnchten F.D.P. sind noch weniger w√§hlbar als das Original. Martialische Ostlandritte, um die Ukraine ¬ªheim¬´ <del>ins Reich</del> in die EU zu holen, das k√∂nnen die Bellizisten von CDU und F.D.P. besser als die b√ºndnisgr√ºnen Kirchentagstanten mit ihrer mehr als eigenwilligen Interpretation des f√ºnften Gebots.</p>
<p>Und die Linke? Nun, zumindest in Neuk√∂lln hat sie beschlossen, lieber Religioten und Salafisten in den Arsch zu kriechen (das h√§lt sie n√§mlich f√ºr rassismusfreie Politik), als sich um die Interessen der arbeitenden Bev√∂lkerung zu k√ºmmern. So schnell kann der olle Marx gar nicht in seinem Grab rotieren, wie sie durch Shisha-Pfeifen das ¬ªOpium des Volkes¬´ in sich reinzieht. Daf√ºr hat sie zwar j√ºngst ein gro√ües Lob von einer bekannten Neuk√∂llner Clangr√∂√üe bekommen, aber meine Stimme verloren.</p>
<p>Nein, da bleibt nur noch die PARTEI, denn sie hat nicht nur versprochen, keine Versprechen zu machen, sondern sich konsequent selbst an dieses Versprechen nicht zu halten. Von ihr ist also nichts zu erwarten, daher kann sie mich auch nicht entt√§uschen. Und wenn viele andere von Euch mir bei dieser Wahlempfehlung folgen, dann sind vielleicht in der n√§chsten Legislaturperiode die Sitzungen im Abgeordnetenhaus und in den Bezirksparlamenten nicht mehr so stinklangweilig. Denn: Die PARTEI, die PARTEI, die hat immer Recht!</p>
<p><b style="color:red">[Upadate]</b>: Mein Lob f√ºr das Neuk√∂llner Bezirksamt kam zu fr√ºh, wie der RBB gerade berichtet, gibt es eine neue Panne bei der Wiederholungswahl: <a href="https://www.rbb24.de/politik/wahl/abgeordnetenhaus/agh-2023/beitraege/wahlpanne-fdp-neukoelln-stimmzettel-kandidat-weggezogen.html">Auf Wahlzetteln in Berlin-Neuk√∂lln steht ein nicht w√§hlbarer FDP-Kandidat</a>. Wer will, darf die Briefwahl wiederholen und sich dabei als F.D.P.-W√§hler outen.</p>
<p><em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): J√∂rg Kantel)</em></p>



 ]]></description>
  <category>Neuk√∂lln</category>
  <category>Failed State Berlin</category>
  <guid>https://kantel.github.io/posts/2023011201_briefwahl_2023/index.html</guid>
  <pubDate>Thu, 12 Jan 2023 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011201_briefwahl_2023/images/briefwahl2023.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate f√ºr Adobe Reader und Acrobat</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011102_neues_jahr_neues_update_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Happy_Hooligan_1906_New_Year_postcard.jpg/1024px-Happy_Hooligan_1906_New_Year_postcard.jpg"><img src="https://kantel.github.io/posts/2023011102_neues_jahr_neues_update_2/images/happyhooligan1906-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Adobe liefert wieder Korrekturen f√ºr Sicherheitsl√ºcken im Reader und in Acrobat (unter Windows und Mac). <a href="https://helpx.adobe.com/security/products/acrobat/apsb23-01.html">N√§heres dazu</a> findet sich auch hier.</p>
<p>Das Update gelingt am einfachsten √ºber den internen Update-Mechanismus. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Happy_Hooligan_1906_New_Year_postcard.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023011102_neues_jahr_neues_update_2/index.html</guid>
  <pubDate>Wed, 11 Jan 2023 17:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011102_neues_jahr_neues_update_2/images/happyhooligan1906.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder Sicherheitsl√ºcken in Chrome</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011101_neues_jahr_neue_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Caricatures_of_William_Randolph_Hearst_detail%2C_from-_Friend_of_the_Comic_People_1906_%28cropped%29.jpg/1188px-Caricatures_of_William_Randolph_Hearst_detail%2C_from-_Friend_of_the_Comic_People_1906_%28cropped%29.jpg"><img src="https://kantel.github.io/posts/2023011101_neues_jahr_neue_update/images/friendofcomics-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google ver√∂ffentlicht ein neues Update der Version 109 (109.0.5414.74/75/87) seines Browsers Chrome und schlie√üt erneut kritische <a href="https://chromereleases.googleblog.com/2023/01/stable-channel-update-for-desktop.html">Sicherheitsl√ºcken</a>.</p>
<p>Chrome aktualisiert sich (au√üer bei Linux) √ºber die integrierte Update-Funktion, kann aber ‚Äì wenn es pressiert ‚Äì auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Caricatures_of_William_Randolph_Hearst_detail,_from-_Friend_of_the_Comic_People_1906_(cropped).jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023011101_neues_jahr_neue_update/index.html</guid>
  <pubDate>Wed, 11 Jan 2023 16:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011101_neues_jahr_neue_update/images/friendofcomics.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizza Plane Trailer</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023011001_pizzaplane_trailer/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52619367586/"><img src="https://kantel.github.io/posts/2023011001_pizzaplane_trailer/images/pizzaplanetrailer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Erprobung <a href="https://kantel.github.io/posts/2023010701_pygame_oop/">meines OOP-Konzepts</a> f√ºr ein <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Framework geht in die erste Runde. Als Praxistest habe ich meinem <a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">tapferen Pizza-Flieger</a> einen Startscreen/Trailer verpa√üt, der nach diesem OOP-Framework zusammengeschraubt wurde.</p>
<p>Den daf√ºr verwendeten Flieger habe ich aus dem <a href="https://www.openpixelproject.com/">Open Pixel Projekt</a> (OPP) √ºbernommen und dabei das ¬ªO¬´ aus OPP durch eine Pizza ersetzt. Und schon sieht es nach dem Pizza-Flieger aus, der gegen die p√∂sen Pizzas und Pepperonis der noch p√∂seren <a href="https://de.wikipedia.org/wiki/Giorgia_Meloni">Meloni</a> (wer wei√ü, vielleicht tausche ich die Pizza in dem Banner noch gegen eine Melone aus) in den Kampf zieht.</p>
<p>Der Wechsel von einem prozeduralen nach einem objektorientierten Programmierstil verlief eigentlich ohne Probleme. Damit Ihr das alles nachvollziehen k√∂nnt, hier der vollst√§ndige Quellcode:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pygame</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">from</span> pygame.<span class="bu" style="color: null;">locals</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> os, sys</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">from</span> random <span class="im" style="color: #00769E;">import</span> randint</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb1-7">DATAPATH <span class="op" style="color: #5E5E5E;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;">__file__</span>)),</span>
<span id="cb1-8">                                        <span class="st" style="color: #20794D;">"data"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;"># Konstanten deklarieren</span></span>
<span id="cb1-11">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">640</span>, <span class="dv" style="color: #AD0000;">480</span></span>
<span id="cb1-12">TITLE <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Pizzaplane Startscreen / Trailer"</span></span>
<span id="cb1-13">BG_WIDTH <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1664</span></span>
<span id="cb1-14">FPS <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;"># Farben</span></span>
<span id="cb1-17">BG_COLOR <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">231</span>, <span class="dv" style="color: #AD0000;">229</span>, <span class="dv" style="color: #AD0000;">226</span>)    <span class="co" style="color: #5E5E5E;"># W√ºstenhimmel</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="kw" style="color: #003B4F;">class</span> Background(pygame.sprite.Sprite):</span>
<span id="cb1-20">    </span>
<span id="cb1-21">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, _x, _y):</span>
<span id="cb1-22">        pygame.sprite.Sprite.<span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>)</span>
<span id="cb1-23">        <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> _x</span>
<span id="cb1-24">        <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">=</span> _y</span>
<span id="cb1-25">        <span class="va" style="color: #111111;">self</span>.start_x <span class="op" style="color: #5E5E5E;">=</span> _x</span>
<span id="cb1-26">        <span class="va" style="color: #111111;">self</span>.image <span class="op" style="color: #5E5E5E;">=</span> pygame.image.load(os.path.join(DATAPATH,</span>
<span id="cb1-27">                            <span class="st" style="color: #20794D;">"desert.png"</span>)).convert_alpha()</span>
<span id="cb1-28">        <span class="va" style="color: #111111;">self</span>.rect <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.image.get_rect()</span>
<span id="cb1-29">        <span class="va" style="color: #111111;">self</span>.bg_width <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1664</span></span>
<span id="cb1-30">        </span>
<span id="cb1-31">    <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-32">        <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">-=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb1-33">        <span class="co" style="color: #5E5E5E;"># print(self.x)</span></span>
<span id="cb1-34">        <span class="va" style="color: #111111;">self</span>.rect.x <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.x</span>
<span id="cb1-35">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">&lt;=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="va" style="color: #111111;">self</span>.bg_width:</span>
<span id="cb1-36">            <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.bg_width</span>
<span id="cb1-37"></span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="kw" style="color: #003B4F;">class</span> Player(pygame.sprite.Sprite):</span>
<span id="cb1-40">    </span>
<span id="cb1-41">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-42">        pygame.sprite.Sprite.<span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>)</span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;"># Load Images</span></span>
<span id="cb1-44">        <span class="va" style="color: #111111;">self</span>.image <span class="op" style="color: #5E5E5E;">=</span> pygame.image.load(os.path.join(DATAPATH,</span>
<span id="cb1-45">                            <span class="st" style="color: #20794D;">"pizzaplane_banner.png"</span>)).convert_alpha()</span>
<span id="cb1-46">        <span class="va" style="color: #111111;">self</span>.rect <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.image.get_rect()</span>
<span id="cb1-47">        <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span></span>
<span id="cb1-48">        <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">=</span> HEIGHT<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb1-49">        <span class="va" style="color: #111111;">self</span>.rect.x <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.x</span>
<span id="cb1-50">        <span class="va" style="color: #111111;">self</span>.rect.y <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.y</span>
<span id="cb1-51"></span>
<span id="cb1-52">    <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-53">        <span class="va" style="color: #111111;">self</span>.rect.x <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.x</span>
<span id="cb1-54">        <span class="va" style="color: #111111;">self</span>.rect.y <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.y</span>
<span id="cb1-55"></span>
<span id="cb1-56"><span class="kw" style="color: #003B4F;">class</span> GameWorld:</span>
<span id="cb1-57">    </span>
<span id="cb1-58">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span> (<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-59">        <span class="co" style="color: #5E5E5E;"># Initialisiert die Spielewelt</span></span>
<span id="cb1-60">        pygame.init()</span>
<span id="cb1-61">        <span class="co" style="color: #5E5E5E;"># Ein √ºbler Hack, um die Position des Fensters auf meinen</span></span>
<span id="cb1-62">        <span class="co" style="color: #5E5E5E;"># zweiten Bildschirm zu setzen</span></span>
<span id="cb1-63">        os.environ[<span class="st" style="color: #20794D;">'SDL_VIDEO_WINDOW_POS'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">,</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">"</span> <span class="op" style="color: #5E5E5E;">%</span> (<span class="dv" style="color: #AD0000;">1320</span>, <span class="dv" style="color: #AD0000;">60</span>)</span>
<span id="cb1-64">        <span class="va" style="color: #111111;">self</span>.screen <span class="op" style="color: #5E5E5E;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-65">        pygame.display.set_caption(TITLE)</span>
<span id="cb1-66">        <span class="va" style="color: #111111;">self</span>.clock <span class="op" style="color: #5E5E5E;">=</span> pygame.time.Clock()</span>
<span id="cb1-67">        <span class="va" style="color: #111111;">self</span>.keep_going <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb1-68">        </span>
<span id="cb1-69">    <span class="kw" style="color: #003B4F;">def</span> reset(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-70">        <span class="co" style="color: #5E5E5E;"># Neustart oder Status zur√ºcksetzen</span></span>
<span id="cb1-71">        <span class="co" style="color: #5E5E5E;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb1-72">        <span class="va" style="color: #111111;">self</span>.backs       <span class="op" style="color: #5E5E5E;">=</span> pygame.sprite.Group()</span>
<span id="cb1-73">        back1 <span class="op" style="color: #5E5E5E;">=</span> Background(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-74">        back2 <span class="op" style="color: #5E5E5E;">=</span> Background(BG_WIDTH, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-75">        <span class="va" style="color: #111111;">self</span>.backs.add(back1)</span>
<span id="cb1-76">        <span class="va" style="color: #111111;">self</span>.backs.add(back2)</span>
<span id="cb1-77">        <span class="va" style="color: #111111;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;">=</span> pygame.sprite.Group()</span>
<span id="cb1-78">        <span class="va" style="color: #111111;">self</span>.player <span class="op" style="color: #5E5E5E;">=</span> Player()</span>
<span id="cb1-79">        <span class="va" style="color: #111111;">self</span>.all_sprites.add(<span class="va" style="color: #111111;">self</span>.player)</span>
<span id="cb1-80">        <span class="va" style="color: #111111;">self</span>.run()</span>
<span id="cb1-81"></span>
<span id="cb1-82">    <span class="kw" style="color: #003B4F;">def</span> run(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-83">        <span class="co" style="color: #5E5E5E;"># Hauptschleife des Spiels</span></span>
<span id="cb1-84">        <span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">self</span>.keep_going:</span>
<span id="cb1-85">            <span class="va" style="color: #111111;">self</span>.clock.tick(FPS)</span>
<span id="cb1-86">            <span class="va" style="color: #111111;">self</span>.events()</span>
<span id="cb1-87">            <span class="va" style="color: #111111;">self</span>.update()</span>
<span id="cb1-88">            <span class="va" style="color: #111111;">self</span>.draw()</span>
<span id="cb1-89"></span>
<span id="cb1-90">    <span class="kw" style="color: #003B4F;">def</span> events(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-91">        <span class="cf" style="color: #003B4F;">for</span> event <span class="kw" style="color: #003B4F;">in</span> pygame.event.get():</span>
<span id="cb1-92">            <span class="cf" style="color: #003B4F;">if</span> ((event.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> pygame.QUIT)</span>
<span id="cb1-93">                <span class="kw" style="color: #003B4F;">or</span> (event.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> pygame.KEYDOWN</span>
<span id="cb1-94">                <span class="kw" style="color: #003B4F;">and</span> event.key <span class="op" style="color: #5E5E5E;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb1-95">                keep_going <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb1-96">                <span class="va" style="color: #111111;">self</span>.game_over()</span>
<span id="cb1-97"></span>
<span id="cb1-98">    <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-99">        <span class="va" style="color: #111111;">self</span>.backs.update()</span>
<span id="cb1-100">        <span class="va" style="color: #111111;">self</span>.all_sprites.update()</span>
<span id="cb1-101">    </span>
<span id="cb1-102">    <span class="kw" style="color: #003B4F;">def</span> draw(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-103">        <span class="va" style="color: #111111;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb1-104">        <span class="va" style="color: #111111;">self</span>.backs.draw(<span class="va" style="color: #111111;">self</span>.screen)</span>
<span id="cb1-105">        <span class="va" style="color: #111111;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;">self</span>.screen)</span>
<span id="cb1-106">        pygame.display.flip()</span>
<span id="cb1-107"></span>
<span id="cb1-108">    <span class="kw" style="color: #003B4F;">def</span> start_screen(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-109">        <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb1-110">    </span>
<span id="cb1-111">    <span class="kw" style="color: #003B4F;">def</span> win_screen(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-112">        <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb1-113">    </span>
<span id="cb1-114">    <span class="kw" style="color: #003B4F;">def</span> loose_screen(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-115">        <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb1-116">    </span>
<span id="cb1-117">    <span class="kw" style="color: #003B4F;">def</span> game_over(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-118">        <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"Bye, Bye, Baby!"</span>)</span>
<span id="cb1-119">        pygame.quit()</span>
<span id="cb1-120">        sys.exit()</span>
<span id="cb1-121"></span>
<span id="cb1-122"><span class="co" style="color: #5E5E5E;"># Hauptprogramm</span></span>
<span id="cb1-123">w <span class="op" style="color: #5E5E5E;">=</span> GameWorld()</span>
<span id="cb1-124">w.start_screen()</span>
<span id="cb1-125">w.reset()</span>
<span id="cb1-126">w.run()</span></code></pre></div>
<p><strong>Zwei Anmerkungen</strong>: Erstens: Gem√§√ü den Empfehlungen der <a href="https://www.pygame.org/docs/ref/surface.html?highlight=convert_alpha#pygame.Surface.convert_alpha">Pygame-Dokumentation</a> habe ich dem Ladevorgang der Bilder noch ein <code>convert_alpha()</code> spendiert. Dies ist zwar nicht unbedingt (mehr?) erforderlich, soll jedoch die Bearbeitung der Bilder immer noch erheblich beschleunigen. Und zweitens wei√ü ich nicht, ob der separate Import von <code>pygame.locals</code> (immer noch?) erforderlich ist. Eigentlich m√º√üte ‚Äì folgt man auch hier der <a href="https://www.pygame.org/docs/ref/locals.html">Dokumentation</a> ‚Äì der ¬ªnormale¬´ Pygame-Import die <code>locals</code> mitimportieren. Ich kann mich jedoch erinnern, da√ü ich mal Schwierigkeiten hatte, weil ich den separaten Import</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">from</span> pygame.<span class="bu" style="color: null;">locals</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span></code></pre></div>
<p>weggelassen hatte. Also habe ich ihn beibehalten. Er kostet ja nichts.</p>
<p>Den <a href="https://github.com/kantel/pygameprojects/blob/master/pizzaplane/pizzaplanestartscreen.py">Quellcode</a> und das <a href="https://github.com/kantel/pygameprojects/tree/master/pizzaplane/data">Bildchen</a> gibt es wie immer in meinem GitHub-Repositorium. Und f√ºr die Buchhaltung hier alle bisher erschienenen Beitr√§ge zu Pizzaplane und Pygame:</p>
<ol type="1">
<li>Auf ein neues: <a href="https://kantel.github.io/posts/20221222501_pizzaplane1_pygame/">Pizzaplane in Pygame</a> (Stage 1)</li>
<li><a href="https://kantel.github.io/posts/20221222601_pizzaplane2_pygame/">Jetzt mit Killer-Pizzas: Pizzaplane in Pygame</a> (Stage 2)</li>
<li><a href="https://kantel.github.io/posts/2022123101_pizzaplane3/">Pizzaplane Stage 3: Jetzt mit Punktestand!</a></li>
<li><a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">Pizzaplane Stage 4 ‚Äì jetzt mit gr√ºnem Spieler</a></li>
<li>Exkurs 1: <a href="https://kantel.github.io/posts/2023010701_pygame_oop/">Pygame objektorientiert</a></li>
<li>Exkurs 2: Pizza Plane Trailer ‚Äì ebenfalls objektorientiert</li>
</ol>
<p>Ich habe schon ein wenig vorgearbeitet. Die n√§chsten Folgen werden also nicht mehr lange auf sich warten lassen. <em>Still digging!</em></p>



 ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023011001_pizzaplane_trailer/index.html</guid>
  <pubDate>Tue, 10 Jan 2023 17:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023011001_pizzaplane_trailer/images/pizzaplanetrailer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>¬ªKunst¬´ mit Pythons Schildkr√∂te</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023010901_code_art_with_turtle/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=_W4xlQn4yuk"><img src="https://kantel.github.io/posts/2023010901_code_art_with_turtle/images/kunstturtle-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><em><a href="https://www.mindjoy.com/">Mindjoy</a></em> ist ein relativ junges, ambitioniertes Team, das K√ºnstliche Intelligenz mit einer Lernplattform (f√ºr Kinder) verbinden will. Ihr erstes Projekt wurde k√ºrzlich auf YouTube hochgeladen und hei√üt ¬ªCode Art with Python Turtle Graphics¬´. Die Idee ist eigentlich gut, aber f√ºr meinen Geschmack sind die Videos etwas zu einfach und zu naiv gehalten, aber das ist wohl der (Anf√§nger-) Zielgruppe geschuldet. Dennoch sind sie inspirierend, doch Achtung, die <a href="https://www.youtube.com/playlist?list=PLP4KEb557GDhga08BgeYtHy1uyC9XyzUR">gleichnamige Playlist</a> ist nicht vollst√§ndig (und in der Reihenfolge v√∂llig durcheinander), der Kanal selber enth√§lt noch mehr ¬ªProjekte¬´. Daher f√ºhre ich sie hier noch einmal einzeln und in der vermutlich beabsichtigten Reihenfolge auf:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=zYAsIAtTQaM">Intro to Code Art with Python Turtle Graphics</a> (41 Sekunden)</li>
<li><a href="https://www.youtube.com/watch?v=8Gew1d3ZFVA">Intro to Code Art: Project 0 - Meet the Turtle üê¢</a> (12:57)</li>
<li><a href="https://www.youtube.com/watch?v=mkuEOXimYFs">Intro to Code Art:Project 1 (Catch The Bugs)</a> (13:18)</li>
<li><a href="https://www.youtube.com/watch?v=gyZChDaq3AU">Intro to Code Art: Project 2: Navigating the Stars üß≠</a> (19:50)</li>
<li><a href="https://www.youtube.com/watch?v=wqJMJU6bReE">Intro to Code Art: Project 3 - Looping &amp; Curving ‚≠ïÔ∏è</a> (9:40)</li>
<li><a href="https://www.youtube.com/watch?v=JyJ-YeLaolY">Intro to Code Art: Project 4 - Your Name in the Stars üåå</a> (13:02)</li>
<li><a href="https://www.youtube.com/watch?v=oRwi8KjRFx8">Intro to Code Art: Project 5 - How RGB Colors Work üî¥ üîµ üü¢</a> (10:13)</li>
<li><a href="https://www.youtube.com/watch?v=9J-QKvutwkM">Intro to Code Art: Project 6 - Looping Shapes üåÄ</a> (12:09)</li>
<li><a href="https://www.youtube.com/watch?v=_W4xlQn4yuk">Intro to Code Art: Project 7 - Code an Artwork üñº</a> (5:45)</li>
</ul>
<p>Das Team nutzt <a href="http://cognitiones.kantel-chaos-team.de/programmierung/ides/replit.html">Replit</a> als Plattform, was ich nicht nur aufgrund meiner <a href="https://kantel.github.io/posts/20221222802_processingpy_replit/">j√ºngsten Erfahrungen</a> ‚Äì vorsichtig ausgedr√ºckt ‚Äì f√ºr etwas ungeschickt halte: Man legt sich damit auf einen Anbieter fest und ist danach auf Gedeih und Verderb an ihn gebunden. Doch die Replits Turtle scheint <a href="https://docs.python.org/3/library/turtle.html">Pythons Stadard-Turtle</a> zu sein, daher bekomme ich doch Lust, auch mal wieder etwas mit der Schildkr√∂te anzustellen. <em>Still digging!</em></p>
<p>Ob das Projekt noch fortgef√ºhrt wird, wei√ü ich nicht, aber ich habe <a href="https://www.youtube.com/@teammindjoy">den Kanal abonniert</a>, damit ich es gegebenenfalls nicht verpasse.</p>



 ]]></description>
  <category>Python</category>
  <category>Turtle</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023010901_code_art_with_turtle/index.html</guid>
  <pubDate>Mon, 09 Jan 2023 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023010901_code_art_with_turtle/images/kunstturtle.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Python, Code-Editoren und das Current Working Directory</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023010801_python_und_cwd/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52614766847/"><img src="https://kantel.github.io/posts/2023010801_python_und_cwd/images/pygamevscode-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Manchmal stellen einen die Code-Editoren (und IDEs) an Stellen Beine, wo man gar nicht damit gerechnet hat. So hatte ich zum Beispiel geglaubt, da√ü ich mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">DATAPATH <span class="op" style="color: #5E5E5E;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;">"data"</span>)</span></code></pre></div>
<p>eine saubere L√∂sung gefunden h√§tte, auch den st√∂rrischsten Editor und die st√∂rriste IDE darauf hinzuweisen, wo in Dreiteufelsnamen der Ordner mit den Assets zu suchen sei. Bei dem ‚Äì bis heute ‚Äì einzigen, von mir genutzten Python-Editor <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> funktionierte das auch hervorragend, doch dann kam ich auf die Idee, in den sauren Apfel zu bei√üen und es mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zu probieren.</p>
<p>Und was soll ich sagen: Nichts ging mehr! Die Wurzel des Problems lag darin, da√ü Thonny das <code>cwd</code>, das <em>current working directory</em>, in dem Verzeichnis verortet, wo die ausf√ºhrbare Python-Datei liegt, Visual Studio Code aber im Projektverzeichnis. Und das ist bei mir zum Beispiel bei meinem Pizzaflieger das Verzeichnis <code>pygameprojects</code>. Und so liegt f√ºr VS Code das <code>data</code>-Ordner in <code>pygameprojects -&gt; pizzaplane -&gt; data</code>, dagegen f√ºr Thonny schlicht und ergreifend in <code>pizzaplane -&gt; data</code>.</p>
<p>Okay, das Problem lies sich relativ leicht beheben, denn Pythons <code>os</code>-Modul liefert mit <code>os.path.dirname(os.path.abspath(__file__))</code> einen zwar geschw√§tzigen, aber funktionierenden Befehl, mit dem man das Verzeichnis der aufrufenden Datei ermitteln kann. Also flugs den Datenpfad in</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">DATAPATH <span class="op" style="color: #5E5E5E;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;">__file__</span>)),</span>
<span id="cb2-2">                       <span class="st" style="color: #20794D;">"data"</span>)</span></code></pre></div>
<p>ge√§ndert, und schon ist alles wieder schick.</p>
<p>Die Frage ist nur, wo der n√§chste Kn√ºppel lauert, den mir die Entwicklungsumgebungen zwischen die Beine stecken wollen?</p>



 ]]></description>
  <category>Python</category>
  <guid>https://kantel.github.io/posts/2023010801_python_und_cwd/index.html</guid>
  <pubDate>Sun, 08 Jan 2023 19:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023010801_python_und_cwd/images/pygamevscode.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pygame objektorientiert</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023010701_pygame_oop/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52613076234/"><img src="https://kantel.github.io/posts/2023010701_pygame_oop/images/pizzaplaneworldoop-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Entgegen meiner urspr√ºnglichen Absicht ‚Äì ich wollte ja eigentlich mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> in mein <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">Wunderland</a> abtauchen ‚Äì habe ich mich heute doch noch einmal hingesetzt und mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> gespielt. Denn letzte Nacht im Halbschlaf erinnerte ich mich daran, da√ü es ja meine urspr√ºngliche Absicht war, den Pizzaflieger in und mit einem sauberen, objektorientierten Framework zu implementieren und das war in der Begeisterung √ºber das <a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">bisher erreichte</a> v√∂llig untergegangen.</p>
<p>Die Inspiration f√ºr diese Idee lieferte <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/greenfoot.html">Greenfoot</a>, eine ausbildungsorientierte Spiele-Entwicklungsumgebung, die durch eine konsequente Objektorientierung hervorsticht<sup>1</sup>. So in etwa sollte dann auch mein Pygame-Framework aussehen.</p>
<p>Dazu habe ich erst einmal ein auf das Wesentliche reduzierte Pygame-Grundger√ºst entwickelt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pygame</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">from</span> pygame.<span class="bu" style="color: null;">locals</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> os, sys</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">from</span> random <span class="im" style="color: #00769E;">import</span> randint</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb1-7">DATAPATH <span class="op" style="color: #5E5E5E;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;">"data"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;"># Konstanten deklarieren</span></span>
<span id="cb1-10">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">640</span>, <span class="dv" style="color: #AD0000;">480</span></span>
<span id="cb1-11">TITLE <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"üêç Pygame Boilerplate üêç"</span></span>
<span id="cb1-12">FPS <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;"># Farben</span></span>
<span id="cb1-15">BG_COLOR <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">231</span>, <span class="dv" style="color: #AD0000;">229</span>, <span class="dv" style="color: #AD0000;">226</span>) <span class="co" style="color: #5E5E5E;"># Sandgrau</span></span>
<span id="cb1-16">           </span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb1-18">clock <span class="op" style="color: #5E5E5E;">=</span> pygame.time.Clock()</span>
<span id="cb1-19">pygame.init()</span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;"># Ein √ºbler Hack, um die Position des Fensters</span></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;"># auf meinen zweiten Bildschirm zu setzen</span></span>
<span id="cb1-22">os.environ[<span class="st" style="color: #20794D;">'SDL_VIDEO_WINDOW_POS'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">,</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">"</span> <span class="op" style="color: #5E5E5E;">%</span> (<span class="dv" style="color: #AD0000;">1320</span>, <span class="dv" style="color: #AD0000;">60</span>)</span>
<span id="cb1-23">screen <span class="op" style="color: #5E5E5E;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-24">pygame.display.set_caption(TITLE)</span>
<span id="cb1-25"></span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;"># Hauptschleife</span></span>
<span id="cb1-28">keep_going <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb1-29"><span class="cf" style="color: #003B4F;">while</span> keep_going:</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    clock.tick(FPS)</span>
<span id="cb1-32">    <span class="cf" style="color: #003B4F;">for</span> event <span class="kw" style="color: #003B4F;">in</span> pygame.event.get():</span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;">if</span> ((event.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> pygame.QUIT)</span>
<span id="cb1-34">            <span class="kw" style="color: #003B4F;">or</span> (event.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> pygame.KEYDOWN</span>
<span id="cb1-35">            <span class="kw" style="color: #003B4F;">and</span> event.key <span class="op" style="color: #5E5E5E;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb1-36">            keep_going <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb1-37">            <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"Bye, Bye, Baby!"</span>)</span>
<span id="cb1-38">            pygame.quit()</span>
<span id="cb1-39">            sys.exit()</span>
<span id="cb1-40">                           </span>
<span id="cb1-41">    screen.fill(BG_COLOR)</span>
<span id="cb1-42">    pygame.display.flip()</span></code></pre></div>
<p>Das ist zwar lauff√§hig (und war bisher auch meine Vorlage), aber von der gew√ºnschten Objektorientierung noch weit entfernt. Mir schwebte da so etwas wie in diesem Diagramm vor:</p>
<p><img src="https://kantel.github.io/posts/2023010701_pygame_oop/images/gameworld.jpg" class="img-fluid"></p>
<p>Von Pygame abgeleitet wird die Spielewelt (<code>class GameWorld()</code>) und in dieser leben die Objekte, wie zum Beispiel der <code>Player()</code>. Diese Objekte sind wiederum Unterklassen der <code>class Sprite()</code>, die wiederum zu Pygame als Oberklasse geh√∂rt.</p>
<p>Also habe ich erst einmal die <code>GameWorld()</code> impementiert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;">class</span> GameWorld:</span>
<span id="cb2-2">    </span>
<span id="cb2-3">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span> (<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-4">        <span class="co" style="color: #5E5E5E;"># Initialisiert die Spielewelt</span></span>
<span id="cb2-5">        pygame.init()</span>
<span id="cb2-6">        <span class="co" style="color: #5E5E5E;"># Ein √ºbler Hack, um die Position des Fensters</span></span>
<span id="cb2-7">        <span class="co" style="color: #5E5E5E;"># auf meinen zweiten Bildschirm zu setzen</span></span>
<span id="cb2-8">        os.environ[<span class="st" style="color: #20794D;">'SDL_VIDEO_WINDOW_POS'</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">,</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">"</span> <span class="op" style="color: #5E5E5E;">%</span> (<span class="dv" style="color: #AD0000;">1320</span>, <span class="dv" style="color: #AD0000;">60</span>)</span>
<span id="cb2-9">        <span class="va" style="color: #111111;">self</span>.screen <span class="op" style="color: #5E5E5E;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb2-10">        pygame.display.set_caption(TITLE)</span>
<span id="cb2-11">        <span class="va" style="color: #111111;">self</span>.clock <span class="op" style="color: #5E5E5E;">=</span> pygame.time.Clock()</span>
<span id="cb2-12">        <span class="va" style="color: #111111;">self</span>.keep_going <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb2-13">        </span>
<span id="cb2-14">    <span class="kw" style="color: #003B4F;">def</span> reset(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-15">        <span class="co" style="color: #5E5E5E;"># Neustart oder Status zur√ºcksetzen</span></span>
<span id="cb2-16">        <span class="co" style="color: #5E5E5E;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb2-17">        <span class="va" style="color: #111111;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;">=</span> pygame.sprite.Group()</span>
<span id="cb2-18">        <span class="va" style="color: #111111;">self</span>.player <span class="op" style="color: #5E5E5E;">=</span> Player()</span>
<span id="cb2-19">        <span class="va" style="color: #111111;">self</span>.all_sprites.add(<span class="va" style="color: #111111;">self</span>.player)</span>
<span id="cb2-20">        <span class="va" style="color: #111111;">self</span>.run()</span>
<span id="cb2-21"></span>
<span id="cb2-22">    <span class="kw" style="color: #003B4F;">def</span> run(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-23">        <span class="co" style="color: #5E5E5E;"># Hauptschleife des Spiels</span></span>
<span id="cb2-24">        <span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">self</span>.keep_going:</span>
<span id="cb2-25">            <span class="va" style="color: #111111;">self</span>.clock.tick(FPS)</span>
<span id="cb2-26">            <span class="va" style="color: #111111;">self</span>.events()</span>
<span id="cb2-27">            <span class="va" style="color: #111111;">self</span>.update()</span>
<span id="cb2-28">            <span class="va" style="color: #111111;">self</span>.draw()</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="kw" style="color: #003B4F;">def</span> events(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-31">        <span class="cf" style="color: #003B4F;">for</span> event <span class="kw" style="color: #003B4F;">in</span> pygame.event.get():</span>
<span id="cb2-32">            <span class="cf" style="color: #003B4F;">if</span> ((event.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> pygame.QUIT)</span>
<span id="cb2-33">                <span class="kw" style="color: #003B4F;">or</span> (event.<span class="bu" style="color: null;">type</span> <span class="op" style="color: #5E5E5E;">==</span> pygame.KEYDOWN</span>
<span id="cb2-34">                <span class="kw" style="color: #003B4F;">and</span> event.key <span class="op" style="color: #5E5E5E;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb2-35">                keep_going <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb2-36">                <span class="va" style="color: #111111;">self</span>.game_over()</span>
<span id="cb2-37"></span>
<span id="cb2-38">    <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-39">        <span class="va" style="color: #111111;">self</span>.all_sprites.update()</span>
<span id="cb2-40">    </span>
<span id="cb2-41">    <span class="kw" style="color: #003B4F;">def</span> draw(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-42">        <span class="va" style="color: #111111;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb2-43">        <span class="va" style="color: #111111;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;">self</span>.screen)</span>
<span id="cb2-44">        pygame.display.flip()</span>
<span id="cb2-45"></span>
<span id="cb2-46">    <span class="kw" style="color: #003B4F;">def</span> start_screen(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-47">        <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb2-48">    </span>
<span id="cb2-49">    <span class="kw" style="color: #003B4F;">def</span> win_screen(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-50">        <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb2-51">    </span>
<span id="cb2-52">    <span class="kw" style="color: #003B4F;">def</span> loose_screen(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-53">        <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb2-54">    </span>
<span id="cb2-55">    <span class="kw" style="color: #003B4F;">def</span> game_over(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb2-56">        <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"Bye, Bye, Baby!"</span>)</span>
<span id="cb2-57">        pygame.quit()</span>
<span id="cb2-58">        sys.exit()</span></code></pre></div>
<p>Die gesamte Initialisierung von Pygame wird jetzt im Konstruktor der <code>GameWorld()</code> vorgenommen und ist vom Rest des Programms isoliert. Auch die Eventbehandlung habe ich in die einzelnen Klassen verlagert, das Hauptprogramm wei√ü nichts mehr davon.</p>
<p>Die Befehle der Methode <code>reset()</code> k√∂nnten theoretisch auch im Konstruktor stehen. Ich habe sie jedoch separiert, da sie unter Umst√§nden bei einem Neustart des Spieles (ohne da√ü das Spiel beendet wird) noch einmal aufgerufen werden m√ºssen. Und die <code>run()</code>-Methode fa√üt einfach nur die Methoden <code>events()</code>, <code>update()</code> und <code>draw()</code> in einem Aufruf zusammen.</p>
<p>Auch die Aufrufe in <code>game_over()</code> sind in eine eigene Methode ausgelagert, da sie ‚Äì wenn ein Spiel an mehreren Stellen beendet werden kann ‚Äì ebenfalls mehrmals ben√∂tigt werden k√∂nnten.</p>
<p>Die Methoden <code>start_screen()</code>, <code>win_screen()</code> und <code>loose_screen()</code> habe ich leergelassen. Sie k√∂nnen bei Bedarf implementiert werden.</p>
<p>Um das alles mit Leben zu f√ºllen, habe ich als minimale, aber notwendige Erg√§nzung die Klasse <code>Player()</code> implementiert (denn was ist ein Spiel ohne Spieler?):</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">class</span> Player(pygame.sprite.Sprite):</span>
<span id="cb3-2">    </span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-4">        pygame.sprite.Sprite.<span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>)</span>
<span id="cb3-5">        <span class="co" style="color: #5E5E5E;"># Load Images</span></span>
<span id="cb3-6">        <span class="va" style="color: #111111;">self</span>.images <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb3-7">        <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span> (<span class="dv" style="color: #AD0000;">2</span>):</span>
<span id="cb3-8">            img <span class="op" style="color: #5E5E5E;">=</span> pygame.image.load(os.path.join(DATAPATH,</span>
<span id="cb3-9">                         <span class="st" style="color: #20794D;">"planegreen_"</span> <span class="op" style="color: #5E5E5E;">+</span> <span class="bu" style="color: null;">str</span>(i) <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">".png"</span>)) <span class="op" style="color: #5E5E5E;">\</span></span>
<span id="cb3-10">                         .convert_alpha()</span>
<span id="cb3-11">            <span class="va" style="color: #111111;">self</span>.images.append(img)</span>
<span id="cb3-12">        <span class="va" style="color: #111111;">self</span>.image <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.images[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb3-13">        <span class="va" style="color: #111111;">self</span>.rect <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.image.get_rect()</span>
<span id="cb3-14">        <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">75</span></span>
<span id="cb3-15">        <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">250</span></span>
<span id="cb3-16">        <span class="va" style="color: #111111;">self</span>.frame <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-17">        <span class="va" style="color: #111111;">self</span>.animation_cycle <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span></span>
<span id="cb3-18">        <span class="va" style="color: #111111;">self</span>.animation_time <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb3-19">        <span class="va" style="color: #111111;">self</span>.updown <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb3-20">  </span>
<span id="cb3-21">    <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-22">        keys <span class="op" style="color: #5E5E5E;">=</span> pygame.key.get_pressed()</span>
<span id="cb3-23">        <span class="cf" style="color: #003B4F;">if</span> keys[pygame.K_UP]:</span>
<span id="cb3-24">            <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">20</span>:</span>
<span id="cb3-25">                <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">-=</span> <span class="va" style="color: #111111;">self</span>.updown</span>
<span id="cb3-26">        <span class="cf" style="color: #003B4F;">elif</span> keys[pygame.K_DOWN]:</span>
<span id="cb3-27">            <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">&lt;</span> HEIGHT <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">20</span>:</span>
<span id="cb3-28">                <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">+=</span> <span class="va" style="color: #111111;">self</span>.updown</span>
<span id="cb3-29">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-30">            <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-31">        <span class="va" style="color: #111111;">self</span>.rect.center <span class="op" style="color: #5E5E5E;">=</span> (<span class="va" style="color: #111111;">self</span>.x, <span class="va" style="color: #111111;">self</span>.y)</span>
<span id="cb3-32">        <span class="va" style="color: #111111;">self</span>.animation_cycle <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-33">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.animation_cycle <span class="op" style="color: #5E5E5E;">&gt;=</span> <span class="va" style="color: #111111;">self</span>.animation_time:</span>
<span id="cb3-34">            <span class="va" style="color: #111111;">self</span>.animation_cycle <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-35">            <span class="va" style="color: #111111;">self</span>.frame <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-36">            <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.frame <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">1</span>:</span>
<span id="cb3-37">                <span class="va" style="color: #111111;">self</span>.frame <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-38">        <span class="va" style="color: #111111;">self</span>.image <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.images[<span class="va" style="color: #111111;">self</span>.frame]</span></code></pre></div>
<p>Auch hier f√§llt auf, da√ü ich in der <code>update()</code>-Methode die Event-Behandlung vom √ºbrigen Programm isoliert habe. Die Events, die den Player betreffen, werden in der Klasse <code>Player()</code> behandelt ‚Äì und sonst nirgendwo. Das Hauptprogramm ist daher entsprechend knapp ausgefallen:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;">import</span> pygame</span>
<span id="cb4-2"><span class="im" style="color: #00769E;">from</span> pygame.<span class="bu" style="color: null;">locals</span> <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb4-3"><span class="im" style="color: #00769E;">import</span> os, sys</span>
<span id="cb4-4"><span class="im" style="color: #00769E;">from</span> random <span class="im" style="color: #00769E;">import</span> randint</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb4-7">DATAPATH <span class="op" style="color: #5E5E5E;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;">"data"</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;"># Konstanten deklarieren</span></span>
<span id="cb4-10">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">640</span>, <span class="dv" style="color: #AD0000;">480</span></span>
<span id="cb4-11">TITLE <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Pizzaplane Objektorientiert"</span></span>
<span id="cb4-12">FPS <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">60</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;"># Farben</span></span>
<span id="cb4-15">BG_COLOR <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">80</span>, <span class="dv" style="color: #AD0000;">125</span>)    <span class="co" style="color: #5E5E5E;"># Mittelblau</span></span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;">### Hier kommen die Klassen-Definitonen hin</span></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;"># Snip</span></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;">### Ende der Klassendefinitionen</span></span>
<span id="cb4-20"></span>
<span id="cb4-21"><span class="co" style="color: #5E5E5E;"># Hauptprogramm</span></span>
<span id="cb4-22">w <span class="op" style="color: #5E5E5E;">=</span> GameWorld()</span>
<span id="cb4-23">w.start_screen()</span>
<span id="cb4-24">w.reset()</span>
<span id="cb4-25">w.run()</span></code></pre></div>
<p>Damit bin ich sehr zufrieden. Es entspricht meinen Vorstellungen eines objektorientierten Spieleframeworks. Jetzt mu√ü ich ¬ªnur¬´ noch testen, wie es sich in der Praxis bew√§hrt. Dazu werde ich als erstes mein Pizzaplane-Spiel darauf anwenden. Schaun wir mal‚Ä¶</p>
<p>Den <a href="https://github.com/kantel/pygameprojects/blob/master/boilerplate/boilerplateoop_msprites.py">Quellcode</a> und die <a href="https://github.com/kantel/pygameprojects/tree/master/boilerplate/data">Assets</a> gibt es wie immer auch in meinem GitHub-Repositorium.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fu√ünoten</h2>

<ol>
<li id="fn1"><p>Eigentlich wundert das nicht, denn Greenfoot ist ein Java-Framework, und in Java mu√ü man sich schon gewaltig anstrengen, um der Objektorientierung zu entgehen. Da√ü dies jedoch nicht ganz unm√∂glich ist, beweist aber <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a>.&nbsp;ü§ì‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023010701_pygame_oop/index.html</guid>
  <pubDate>Sat, 07 Jan 2023 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023010701_pygame_oop/images/pizzaplaneworldoop.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Twine und statische Seiten ‚Äì Video-Tutorials zum Wochenende</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023010601_twine_und_statische_seiten/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/9/9f/Alice%27s_Adventures_in_Wonderland_-_Carroll%2C_Robinson_-_S119_-_%27What_day_of_the_month_is_it%27_he_said%2C_turning_to_Alice.jpg"><img src="https://kantel.github.io/posts/2023010601_twine_und_statische_seiten/images/teapartyrobinson-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch wenn es schon sp√§t geworden ist, m√∂chte ich auch eine kurze Tradition nicht brechen und Euch heute ein paar Videos vorstellen, mit denen Ihr Euch vergn√ºgen k√∂nnt, falls Euch wegen der zu erwartenden Regentage am Wochenende die Decke auf den Kopf f√§llt:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/7nd98qsBVNk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Zuerst einmal: Ich m√∂chte die Arbeit an meinem kleinen Pizza-Flieger kurz unterbrechen, weil ich gro√üe Lust habe, an meinem <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>-Universum zu basteln und daher ein paar <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">Ausfl√ºge ins Wunderland</a> zu unternehmen. Inspiration f√ºr diesen Entschlu√ü war zum einem das Webinar ¬ª<a href="https://www.youtube.com/watch?v=7nd98qsBVNk">Making Interactive Fiction with Twine</a>¬´, das vor ein paar Tagen in meine Timeline auffpoppte.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/VC7TuFG1WYg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und dann tauchte zeitgleich auch noch das Tutorial ¬ª<a href="https://www.youtube.com/watch?v=VC7TuFG1WYg">Create Inventory in Harlowe (Twine)</a>¬´ auf, das ich Euch nicht vorenthalten m√∂chte.</p>
<p><strong>Es gibt aber auch noch andere Themen</strong>: Zwar hoffe ich, da√ü ich mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> meinen endg√ºltigen Generator f√ºr statische Seiten (und f√ºr dieses <del>Blog</del> Kritzelheft) gefunden habe, aber bekannterma√ü interessert mich das Thema ¬ª<a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/staticsites.html">Statische Seiten</a>¬´ und die Werkzeuge, mit denen man diese erstellen kann.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/F8iOU1ci19Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Denn auch andere M√ºtter haben sch√∂ne T√∂chter. Das ist vor allem der in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/ruby/ruby.html">Ruby</a> geschriebene Platzhirsch <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/jekyll.html">Jekyll</a>, der auch so etwas wie das ¬ªoffizi√∂se¬´ Werkzeug f√ºr <a href="http://cognitiones.kantel-chaos-team.de/programmierung/ruby/ruby.html">GitHub Pages</a> ist. Das Tool wird in ¬ª<a href="https://www.youtube.com/watch?v=F8iOU1ci19Q">Meet Jekyll</a>¬´ ausf√ºhrlich gew√ºrdigt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/_STFQc9Y2zY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und wenn es um Schnelligkeit geht, soll angeblich kein Weg an <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a>, den in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/go.html">Go</a> geschriebenen Generator f√ºr statische Seiten vorbeigehen. Dieses Teil wird in dem Tutorial ¬ª<a href="https://www.youtube.com/watch?v=_STFQc9Y2zY">Blogging with Hugo and GitHub Pages</a>¬´ von <em>Sarah Gibson</em> ausf√ºhrlich vorgestellt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/RyeWjQET0Zk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, zu meinen <a href="https://kantel.github.io/posts/20221222901_tiled_for_dummies/">hier vorgestellten</a> ¬ª<a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tiled.html">Tiled</a>¬´-Tutorials gibt es noch einen kurzen Nachschlag: ¬ª<a href="https://www.youtube.com/watch?v=RyeWjQET0Zk">Tiled - Creating Paths, Terrains, Trees, Collisions</a>¬´ von <em>Mike Cropper</em>. Ich wollte meinen Feedreader ein wenig aufr√§umen und mir fiel einfach nicht ein, wo ich den Link sonst noch unterbringen k√∂nnte.</p>
<p><em>(Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Alice%27s_Adventures_in_Wonderland_-_Carroll,_Robinson_-_S119_-_%27What_day_of_the_month_is_it%27_he_said,_turning_to_Alice.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Twine</category>
  <category>Statische Seiten</category>
  <guid>https://kantel.github.io/posts/2023010601_twine_und_statische_seiten/index.html</guid>
  <pubDate>Fri, 06 Jan 2023 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023010601_twine_und_statische_seiten/images/teapartyrobinson.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hilfe! Wo ist ¬ªEinf√ºgen¬´ auf meinem Mac?</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023010504_insert_key/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://animationresources.org/pics/opper02-big.jpg"><img src="https://kantel.github.io/posts/2023010504_insert_key/images/opper02-big-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Versehentlich (und unbemerkt) hatte ich bei <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rstudio.html">RStudio</a> vor ein paar Tagen irgendeine Taste gedr√ºckt, die den Editor in den <code>insert</code>-Mode versetzte und aus diesem Mode kam ich ums Verrecken nicht mehr heraus. Nur ein Neustart des Programms half mir aus der Patsche.</p>
<p>Als dies mir heute zum zweiten Mal passierte, war ich es leid und warf die <a href="https://duckduckgo.com/">Suchmaschine meines Vertrauens</a> an. Sie half mir aber auch nicht weiter, da sie meinte, da√ü ich mit der <code>Insert</code>-Taste dieses Verhalten ein- und wieder ausschalten k√∂nne. Nur‚Ä¶ mein Apple besitzt keine <code>Insert</code>-Taste. Und die vorgeschlagene Tastenkombination <code>fn</code> + <code>Enter</code> blieb auch wirkungslos.</p>
<p>Nach etlichen Minuten wilden Herumprobierens auf meiner angeschlossenen, erweiterten Tastatur fand ich heraus, da√ü die dort mit ¬ªHilfe¬´ beschriftete Taste wohl die von RStudio gemeinte <code>Insert</code>-Taste sei. Jedenfalls toggelte diese anstandslos zwischen dem <code>insert</code>- und dem normalen <code>edit</code>-Mode hin und her.</p>
<p>Damit ist mir erst einmal geholfen. Doch die Frage bleibt: Was machen MacBook-Nutzer ohne angeschlossene, externe Tastatur? Und welcher D√∂del ist bei RStudio auf die Idee gekommen, solch eine wichtige Funktion auf eine Taste zu legen, die nicht auf allen Keyboards zur Verf√ºgung steht? Wird man ja wohl noch mal fragen d√ºrfen ‚Ä¶</p>



 ]]></description>
  <category>Quarto</category>
  <guid>https://kantel.github.io/posts/2023010504_insert_key/index.html</guid>
  <pubDate>Thu, 05 Jan 2023 20:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023010504_insert_key/images/opper02-big.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Code the Classics: Rampart</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023010503_code_the_classics_rampart/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.raspberrypi.com/app/uploads/2023/01/Screenshot-2023-01-05-at-15.33.24-500x358.png"><img src="https://kantel.github.io/posts/2023010503_code_the_classics_rampart/images/towerdefence-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><a href="https://de.wikipedia.org/wiki/Rampart_(Computerspiel)">Rampart</a> ist ein Computerspiel, das von Atari im Jahre 1990 ver√∂ffentlicht wurde. Darin mu√ü der Spieler seine Burgen gegen Angriffe von der See verteidigen, in dem er versucht, seine von den gegnerischen Kanonen zerst√∂rten Mauern wieder zu flicken. Das Spiel begr√ºndete ein neues Computerspiel-Genre, das der <a href="https://de.wikipedia.org/wiki/Tower_Defense">Tower Defense Games</a>.</p>
<p>Folgegerichtig beschr√§nkt sich das <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html">Pygame Zero</a>-Remake von <em>Mark Vanstone</em>, das in der aktuellen <a href="https://wireframe.raspberrypi.com/articles/out-now-wireframe-70-the-final-print-edition">Wireframe 70</a> und zeitgleich in den Raspberry Pi News <a href="https://www.raspberrypi.com/news/tower-defence-wall-building-in-python-wireframe-70/">ver√∂ffentlicht</a> wurde, auf den Bau der Mauern, um die Burg vor den Angriffen zu sch√ºtzen. Die Implementierung der Angriffe selber wie auch das Zur√ºckschie√üen der Verteidiger ist der Phantasie der Leserinnen und Leser √ºberlassen.</p>
<p>Den <a href="https://github.com/Wireframe-Magazine/">Quellcode und die Assets</a> wird es sicher bald auf GitHub geben (momentan funktioniert <a href="https://github.com/Wireframe-Magazine/Wireframe-70">der Link</a> noch nicht (¬ªComing Soon¬´)). Und die aktuelle Wireframe k√∂nnt Ihr Euch wie jeden Monat <a href="https://wireframe.raspberrypi.com/issues/70/pdf">hier kostenlos als PDF</a> herunterladen.</p>



 ]]></description>
  <category>Retrogaming</category>
  <category>Pygame Zero</category>
  <guid>https://kantel.github.io/posts/2023010503_code_the_classics_rampart/index.html</guid>
  <pubDate>Thu, 05 Jan 2023 18:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023010503_code_the_classics_rampart/images/towerdefence.png" medium="image" type="image/png" height="103" width="144"/>
</item>
</channel>
</rss>
