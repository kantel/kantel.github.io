<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Fri, 21 Apr 2023 18:30:00 GMT</lastBuildDate>
<item>
  <title>Video-Tutorials zum Wochenende: Spieleprogrammierung mit Pygame</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=u7LPRqrzry8"><img src="https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/images/cameraspygame-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es ist wieder Freitag und ich m√∂chte Euch wieder mit ein ppar Video-Tutorials f√ºr das Wochenende versorgen, damit Ihr nicht vor lauter Langeweile in die Kirchen rennt. Auch wenn es langsam ein wenig monothematisch wirkt, der Bestand an (guten) Tutorials zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> scheinen einfach unersch√∂pflich zu sein und so sind mir in den letzten Tagen wieder ein paar Highlights untergekommen, die ich Euch nicht vorenthalten m√∂chte:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/u7LPRqrzry8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Den Anfang macht mal wieder <em>Clear Code</em>, dessen mehr als einst√ºndges Tutorial zu <a href="https://www.youtube.com/watch?v=u7LPRqrzry8">Cameras in Pygame</a> alleine schon einen Eintrag in dieses <del>Blog</del> Kritzelheft wert ist. Den <a href="https://github.com/clear-code-projects/Pygame-Cameras">Quellcode und die Assets</a> findet Ihr selbstverst√§ndlich auf GitHub.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/3Oc9ZqzPnSc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Doch wartet, das ist noch nicht alles, denn da ist mir noch das fast zweieinhalbst√ºndige ¬ª<a href="https://www.youtube.com/watch?v=3Oc9ZqzPnSc">Classic Arcade Style Shooting Game</a>¬´ untergekommen, dessen Programmierung ein gutgelaunter <em>LeMaster Tech</em> pr√§sentiert. Auch hier findet Ihr den <a href="https://github.com/plemaster01/ShootingGallery">Quellcode und die Assets</a> zum Download auf GitHub.</p>
<p>Und falls das Wetter doch nicht ‚Äì wie es die Wetterfr√∂sche eigentlich versprochen haben ‚Äì zu Freiluft-Aktivit√§ten animiert, das obige Video ist Teil der Playlist <a href="https://www.youtube.com/playlist?list=PLsFyHm8kJsx32EFcsJNt5sDI_nKsanRUu">PyGame Full Game Builds</a>, die derzeit aus 26 oft mehrst√ºndigen Videos besteht. Ihr findet also genug Material, um ja keine Langeweile aufkommen zu lassen. Da das j√ºngste Update erst wenige Wochen alt ist, habe ich den Kanal abonniert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/nEEzUijhbkc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, Klimawandel und Computerspiele war eines der Themen der diesj√§hrigen <em><a href="https://gdconf.com/news/welcome-first-day-gdc-2023">Game Developer Conference</a></em>, die vom 20. bis 24. M√§rz in San Francisco stattfand. <em>Arnaud Fayolle</em> von Ubisoft stellte dort (s)einen <em>Developer‚Äôs Field Guide</em> vor. Man merkte ihm seine Begeisterung an, aber ob dabei wirklich etwas herauskommt? Ich bin da eher skeptisch. Der Ansatz ist sicher gut gemeint, aber gut gemeint ist nicht automatisch auch gut gemacht.</p>



 ]]></description>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/index.html</guid>
  <pubDate>Fri, 21 Apr 2023 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042101_pygame_zum_wochenende/images/cameraspygame.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pillow-Tutorial: Wie bekommt man die Katze ins Kloster?</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023042001_pillow_tutorial/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://files.realpython.com/media/cat_monastery.c63df8376d54.jpg"><img src="https://kantel.github.io/posts/2023042001_pillow_tutorial/images/catmonastery-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe heute wieder ein wenig mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> spielen m√ºssen. Dabei interessierte mich insbesonders, welche Python-Bibliotheken ohne Klimmz√ºge mit Spyder zusammen funktionieren. Wenig √ºberraschend war, da√ü Spyder mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> nichts anstellen konnte, mehr √ºberrascht hat mich dagegen, da√ü auch die Zusammenarbeit mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> verweigert wurde, die ja immerhin Bestandteil der Standard-Bibliothek ist.</p>
<p>Da hat mich dann getr√∂stet, da√ü Spyder <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a>, Python Bibliothek f√ºr Bildbearbeitung, auf Anhieb unterst√ºtzte. Da sich damit ebenfalls einiges, auch Kreatives anstellen l√§√üt, habe ich nach einem Tutorial f√ºr das Modul gesucht, da ich es bisher ‚Äì trotz <a href="http://blog.schockwellenreiter.de/2020/04/2020040702.html">einiger</a> <a href="http://blog.schockwellenreiter.de/2020/04/2020041302.html">Anl√§ufe</a> ‚Äì str√§flich vernachl√§ssigt hatte.</p>
<p>F√ºndig geworden bin ich dann bei Real Python, wo <em>Stephen Gruppetta</em> mit seinem Beitrag ¬ª<a href="https://realpython.com/image-processing-with-the-python-pillow-library/">Image Processing With the Python Pillow Library</a>¬´ ein vorz√ºgliches Tutorial ablieferte. Es behandelt n√§mlich nicht nur die √ºblichen Bildbearbeitungsschritte, sondern auch, wie man Pillow kreativ einsetzen kann. Dort wird dann zum Beispiel gezeigt, wie man eine Katze in ein Kloster montiert.&nbsp;üò∏</p>
<p>Gleichzeitig hatte ich festgestellt, da√ü Pillow noch keinen Eintrag in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> besa√ü. Das habe ich dann <strong><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">nachgeholt</a></strong>.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/i7Njb3xO4Fw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Da√ü ich die oben genannten Module nicht zu einer Zusammenarbeit mit Spyder bewegen konnte, ist zwar kein <em>Showstopper</em> (ich habe ja noch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>, das sowohl auf meinem Mac wie auch auf meinem Chromebook anstandslos mit Py5, Pythons Turtle und auch mit Pygame spielt), aber ein wenig fuchst es mich doch. Die in Spyders FAQ <a href="https://docs.spyder-ide.org/5/faq.html#using-packages-installer">empfohlene L√∂sung</a> ist mir zu kompliziert. Irgendwie mu√ü das doch auch ohne eine separate, virtuelle Umgebung gehen. Falls also jemand von Euch da drau√üen eine Idee hat ‚Ä¶? <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Pillow</category>
  <category>Spyder</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023042001_pillow_tutorial/index.html</guid>
  <pubDate>Thu, 20 Apr 2023 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023042001_pillow_tutorial/images/catmonastery.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Dynamische Graphen mit der Matplotlib, Slider und Spyder</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041904_spyder_slider/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52830209399/"><img src="https://kantel.github.io/posts/2023041904_spyder_slider/images/spyderslider-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute nachmittag regnete es mal wieder. Das war nicht nur gut f√ºr die Natur drau√üen, sondern auch gut f√ºr mich, denn so konnte ich ungest√∂rt meine Expeditionen ins Reich der <a href="https://de.wikipedia.org/wiki/Dynamisches_System">Dynamischen Systeme</a> mit Python und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> fortsetzen. Mir schwebt vor, die geplanten Simulationen des <a href="https://de.wikipedia.org/wiki/SIR-Modell">S-I-R-Modells</a> mit dynamischen Graphen zu implementieren, um √Ñnderungen an den Parametern w√§hrend des laufenden Programms vornehmen und die Auswirkungen begutachten zu k√∂nnen.</p>
<p>Dazu mu√üte ich aber erst einmal austesten, wie gut sich Spyder mit den <a href="https://matplotlib.org/stable/gallery/widgets/slider_demo.html">Matplotlib-Widgets</a> schl√§gt. Was lag da n√§her, als den guten alten <em>Veit Steinkamp</em><sup>1</sup> hervorzukramen. Den hatte ich ja schon einmal <a href="http://blog.schockwellenreiter.de/2022/08/2022080401.html">im letzten Sommer als Referenz benutzt</a>, als ich √§hnliches mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> vorhatte. Statt der damals genutzten Parabel habe ich f√ºr das heutige Beispiel die Funktion <img src="https://latex.codecogs.com/png.latex?y%20=%20a%5Csin(b(x-c))"> ausgesucht und mich an die Darstellung in und mit Spyder gewagt.</p>
<p>Mir war schon klar, da√ü ich mich in diesem Fall von den <code>inline</code>-Plots verabschieden mu√ü, aber Spyder leistete mehr, als ich dachte: Der Plot wurde inklusiv der Schieberegler tats√§chlich auch <em>inline</em> angezeigt, nur lie√üen sich die Schieberegler nicht mehr (ver-) schieben. Ihr Dasein war also <em>inline</em> v√∂llig sinnbefreit. Aber wenn man in Spyder unter <code>Preferences ‚Ä¶ - IPython-Konsole - Grafik</code> das <code>Grafik-Backend</code> von <code>Eingebettet</code> auf <code>Automatisch</code> umschaltet, ist alles wieder schick: Der Nutzer bekommt den Plot dann in einem Standard-Matlab-Fenster mit funktionierenden Schiebereglern angezeigt (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/52830209399/">Screenshot</a>).</p>
<p>Jetzt erst einmal das vollst√§ndige Programm, das bis auf wenige Anpassungen an die Eigenschaften von Spyder und macOS aus dem Buch von <em>Veit Steinkamp</em> (Seiten 247 f) stammt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> matplotlib.widgets <span class="im" style="color: #00769E;">import</span> Slider</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;">def</span> f(x, a, b, c):</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;">return</span> (a<span class="op" style="color: #5E5E5E;">*</span>np.sin(b<span class="op" style="color: #5E5E5E;">*</span>np.radians(x) <span class="op" style="color: #5E5E5E;">-</span> np.radians(c)))</span>
<span id="cb1-7"></span>
<span id="cb1-8">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(figsize <span class="op" style="color: #5E5E5E;">=</span> (<span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">6</span>))</span>
<span id="cb1-9">plt.title(<span class="vs" style="color: #20794D;">r"$y = a\/sin(b\/(x-c))$"</span>)</span>
<span id="cb1-10">plt.subplots_adjust(left <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.12</span>, bottom <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.25</span>)</span>
<span id="cb1-11">plt.xlim(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">360</span>)</span>
<span id="cb1-12">plt.ylim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-13">plt.xlabel(<span class="vs" style="color: #20794D;">r"$x$"</span>)</span>
<span id="cb1-14">plt.ylabel(<span class="vs" style="color: #20794D;">r"$y$"</span>, rotation <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-15"></span>
<span id="cb1-16">x <span class="op" style="color: #5E5E5E;">=</span> np.arange(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">400</span>, <span class="fl" style="color: #AD0000;">0.001</span>)</span>
<span id="cb1-17">y, <span class="op" style="color: #5E5E5E;">=</span> plt.plot(x, f(x, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>), lw <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;"># x- und y-Position, L√§nge, H√∂he</span></span>
<span id="cb1-20">xyA <span class="op" style="color: #5E5E5E;">=</span> plt.axes([<span class="fl" style="color: #AD0000;">0.1</span>, <span class="fl" style="color: #AD0000;">0.12</span>, <span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">0.03</span>])</span>
<span id="cb1-21">xyB <span class="op" style="color: #5E5E5E;">=</span> plt.axes([<span class="fl" style="color: #AD0000;">0.1</span>, <span class="fl" style="color: #AD0000;">0.07</span>, <span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">0.03</span>])</span>
<span id="cb1-22">xyC <span class="op" style="color: #5E5E5E;">=</span> plt.axes([<span class="fl" style="color: #AD0000;">0.1</span>, <span class="fl" style="color: #AD0000;">0.02</span>, <span class="fl" style="color: #AD0000;">0.8</span>, <span class="fl" style="color: #AD0000;">0.03</span>])</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;"># Slider-Objekte erzeugen</span></span>
<span id="cb1-25">sldA <span class="op" style="color: #5E5E5E;">=</span> Slider(xyA, <span class="st" style="color: #20794D;">"a"</span>,   <span class="fl" style="color: #AD0000;">2.0</span>, <span class="fl" style="color: #AD0000;">10.0</span>, valinit <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span>, valstep <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb1-26">sldB <span class="op" style="color: #5E5E5E;">=</span> Slider(xyB, <span class="st" style="color: #20794D;">"b"</span>,   <span class="fl" style="color: #AD0000;">1.0</span>,  <span class="fl" style="color: #AD0000;">4.0</span>, valinit <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span>, valstep <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">0.1</span>)</span>
<span id="cb1-27">sldC <span class="op" style="color: #5E5E5E;">=</span> Slider(xyC, <span class="st" style="color: #20794D;">"c"</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">90.0</span>, <span class="fl" style="color: #AD0000;">90.0</span>, valinit <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>, valstep <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;"># Slider Update</span></span>
<span id="cb1-30"><span class="kw" style="color: #003B4F;">def</span> update(val):</span>
<span id="cb1-31">    a <span class="op" style="color: #5E5E5E;">=</span> sldA.val</span>
<span id="cb1-32">    b <span class="op" style="color: #5E5E5E;">=</span> sldB.val</span>
<span id="cb1-33">    c <span class="op" style="color: #5E5E5E;">=</span> sldC.val</span>
<span id="cb1-34">    y.set_data(x, f(x, a, b, c))</span>
<span id="cb1-35">    </span>
<span id="cb1-36"><span class="co" style="color: #5E5E5E;"># √Ñnderungen abfragen</span></span>
<span id="cb1-37">sldA.on_changed(update)</span>
<span id="cb1-38">sldB.on_changed(update)</span>
<span id="cb1-39">sldC.on_changed(update)</span>
<span id="cb1-40"></span>
<span id="cb1-41">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb1-42">plt.show()</span></code></pre></div>
<p>Da unter macOS der unterste Slider bei einer y-Position von 0.0 am unteren Fensterrand klebt, habe ich alle Slider um 0.02 Einheiten nach oben verschoben, um ihnen etwas mehr Luft zu g√∂nnen.</p>
<p>Ansonsten erinnere ich mich jetzt wieder, wie das mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> und den Slidern funktioniert und bin bereit f√ºr weitere Experimente. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fu√ünoten</h2>

<ol>
<li id="fn1"><p>Veit Steinkamp: <em><a href="https://www.rheinwerk-verlag.de/mathematische-algorithmen-mit-python/">Mathematische Algorithmen mit Python</a>. Aufgaben vom Sieb des Eratosthenes bis zur RSA-Verschl√ºsselung</em>, Bonn (Rheinwerk) 2022, Seiten 243 ff.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Matplotlib</category>
  <category>Spyder</category>
  <category>Dynamische Systeme</category>
  <guid>https://kantel.github.io/posts/2023041904_spyder_slider/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 18:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041904_spyder_slider/images/spyderslider.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate des Foxit Reader auf 12.1.2</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041903_foxit_reader_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.gutenberg.org/files/50405/50405-h/images/i-003a.jpg"><img src="https://kantel.github.io/posts/2023041903_foxit_reader_update/images/autosled-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mit der Version 12.1.2 des nicht nur unter Windows beliebten PDF Betrachters Foxit Reader haben die Entwickler auch <a href="https://www.foxit.com/support/security-bulletins.html">Schwachstellen</a> behoben.</p>
<p>Die neue Version kann <a href="https://www.foxitsoftware.com/downloads/#Foxit-Reader/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://www.gutenberg.org/files/50405/50405-h/50405-h.htm">Uncle Wiggily‚Äôs Auto Sled</a>, 1919, pictured by Lang Campbell.)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041903_foxit_reader_update/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041903_foxit_reader_update/images/autosled.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Free Texture Packer: Ein Tool (nicht nur) f√ºr Pixel-Artisten</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52829762508/"><img src="https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/images/freetexturepacker-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gar nicht so selten stehe ich vor der Aufgabe, aus einer Bilddatei (die meist euphemistisch ¬ªSprite Sheet¬´ genannt wird) einzelne Tiles oder Sprites extrahieren zu m√ºssen. Bisher habe ich dazu in der Regel <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tiled.html">Tiled</a> genutzt, doch da das Programm daf√ºr eigentlich nicht gedacht ist, war die Bedienung doch recht umst√§ndlich.</p>
<p>Doch gestern bin ich √ºber den Aufsatz ¬ª<a href="https://kenney.nl/learn/editing-2d-game-assets?s=03">Editing 2D game assets</a>¬´ aus dem <a href="https://kenney.nl/learn">Blog von Kenney.nl</a> gestolpert, in dem unter anderem das freie (MIT-Lizenz) Programm ¬ª<a href="http://free-tex-packer.com/">Free Texture Packer</a>¬´ vorgestellt wurde. Das Teil gibt es sowohl <a href="https://free-tex-packer.com/app/">online</a> als auch als <a href="http://free-tex-packer.com/download/">Desktop App</a> f√ºr Windows, Linux und macOS. Hauptzweck des Programms ist es, Sprite Sheets zu erstellen, aber leicht versteckt unter <code>Werkzeuge - Sprites aus Bildern extrahieren</code> findet man auch genau diese Funktion. Ich habe mir testweise mal ein Sheet aus dem <a href="https://cupnooble.itch.io/sprout-lands-asset-pack">Sproutlands Asset Pack</a>, das riesige L√ºcken zwischen den einzelnen Sprites aufwies, vorgenommen, und nachdem ich per <em>try and error</em> herausgefunden hatte, da√ü der Abstand zwischen den einzelnen 16x16 gro√üen Sprites ebenfalls je 16 Pixel betrug, hatte mir das Programm sauber sechzehn einzelne, durchnumerierte Bildchen aus dem Sheet gezaubert.</p>
<p>Es ist also ein sehr n√ºtzliches Teil (<a href="https://github.com/odrick/free-tex-packer">Quellcode</a> auf GitHub), das ich Euch nicht vorenthalten wollte.</p>
<p>Die Sprites und Tiles, die ich f√ºr diesen Test verwendet hatte, sind von <em>Cup Nooble</em>, der auf Itch.io noch mehr (teils kostenpflichtige) <a href="https://cupnooble.itch.io/">Assets hochgeladen hat</a>. Und wenn Ihr mich hier mal ein Spiel programmieren seht, in dem eine Katze K√ºhe √ºber eine Weide schubst, dann wi√üt Ihr, was mich auf die Idee gebracht hat.&nbsp;üò∏</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Game Design</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 12:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041902_tool_fuer_pixelartisten/images/freetexturepacker.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Security Alert: Neue Sicherheitsl√∂cher in Chrome</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041901_chrome_security_alert/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://pbs.twimg.com/media/EKODmMhXsAEzwGI.jpg"><img src="https://kantel.github.io/posts/2023041901_chrome_security_alert/images/iceboat-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google scheint momentan Schwierigkeiten zu haben, seinen Browser Chrome dicht zu bekommen. Denn im Nachtrag zu meiner <a href="https://kantel.github.io/posts/2023041502_chrome_update_v112/">Meldung vom Sonnabend</a> hat die Datenkrake ein neues Update der Version 112 (112.0.5615.137/138) nachgeschoben, das <a href="https://chromereleases.googleblog.com/2023/04/stable-channel-update-for-desktop_18.html">weitere kritische Sicherheitsl√ºcken schlie√üt</a>, die bereits ausgenutzt werden.</p>
<p>Wie immer gilt: Chrome aktualisiert sich (au√üer bei Linux) √ºber die integrierte Update-Funktion, kann aber ‚Äì wenn es pressiert ‚Äì auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: The Iceboat knocked the Lady Pig off her Feet, pictured by Lang Campbell.)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041901_chrome_security_alert/index.html</guid>
  <pubDate>Wed, 19 Apr 2023 10:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041901_chrome_security_alert/images/iceboat.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Abenteuer mit Spyder: Das S-I-R-Modell einer Grippe-Pandemie</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52827700899/"><img src="https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/images/grippemodellsir-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Entdeckungsreisen mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spynne</a> gehen weiter. Um mich mit der IDE noch mehr vertraut zu machen, habe ich als Finger√ºbung das seit dem Corona-Ausbruch zu einer gewissen Ber√ºhmtheit gelangte <a href="https://de.wikipedia.org/wiki/SIR-Modell">S-I-R-Modell</a> einer Grippe-Infektion noch einmal in Python implementiert (ich hatte es in einer vereinfachten Version<sup>1</sup> zu Beginn der Corona-Pandemie vor drei Jahren <a href="http://blog.schockwellenreiter.de/2020/03/2020032601.html">schon einmal in Python</a> und <a href="http://blog.schockwellenreiter.de/2020/03/2020032704.html">einmal in Maxima</a> programmiert).</p>
<p>Dieses Mal habe ich mich bei der Implementierung an die Vorgaben und Erl√§uterungen von <em>Linge/Langtangen</em><sup>2</sup> gehalten, die ihre Version mit ausf√ºhrlichen Erkl√§rungen und mathematische sauber fundiert, pr√§sentieren, so da√ü ich bei der Nachprogrammierung noch einmal einiges dazugelernt habe.</p>
<p>Ich werde in den n√§chsten Tagen das Modell noch etwas erweitern, auch um mein eigenes Verst√§ndnis des Modells zu verbessern. Schlie√ülich habe ich das ganze nicht nur angefangen, weil Spyder (im <em>Dark Mode</em>) so sch√∂ne Screenshot liefert ‚Äì auch wenn dies sicher meine Motivation befl√ºgelt hat.</p>
<p>Und dann habe ich Lust darauf bekommen, mich noch etwas mehr mit der Programmierung von ¬ªModellbildung und Simulation¬´ auseinanderzusetzen. Daf√ºr habe ich einen Klassiker<sup>3</sup> der Theorie <a href="https://de.wikipedia.org/wiki/Dynamisches_System">dynamischer Systeme</a> nebst Anhang<sup>4</sup> aus meinen B√ºcherregalen wieder hervorgekramt und entstaubt. Schaun wir mal, was dabei herauskommt ‚Äì ich denke, da√ü ich viel Spa√ü damit haben werde. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fu√ünoten</h2>

<ol>
<li id="fn1"><p>Eine einfachere Version des Modells findet Ihr zum Beispiel hier: Veit Steinkamp: <em><a href="https://www.rheinwerk-verlag.de/mathematische-algorithmen-mit-python/">Mathematische Algorithmen mit Python</a>. Aufgaben vom Sieb des Eratosthenes bis zur RSA-Verschl√ºsselung</em>, Bonn (Rheinwerk) 2022, Seiten 404 ff.‚Ü©Ô∏é</p></li>
<li id="fn2"><p>Svein Linge, Hans Petter Langtangen: <em><a href="https://link.springer.com/book/10.1007/978-3-030-16877-3">Programming for Computations - Python</a>. A Gentle Introduction to Numerical Simulations with Python 3.6</em>, Cham, Switzerland, (SpringerOpen) Second Edition 2020, pp 225. Das Buch steht unter Open Access und l√§√üt sich unter dem Link bei Springer kostenlos herunterladen.‚Ü©Ô∏é</p></li>
<li id="fn3"><p>Hartmut Bossel: <em><a href="https://link.springer.com/book/10.1007/978-3-322-83658-8">Modellbildung und Simulation</a>. Konzepte, Verfahren und Modelle zum Verhalten dynamischer Systeme</em>, Braunschweig (Vieweg), 2., ver√§nderte Auflage 1994‚Ü©Ô∏é</p></li>
<li id="fn4"><p>Hartmut Bossel: <em><a href="https://www.bod.de/buchshop/systeme-dynamik-simulation-hartmut-bossel-9783833409844">Systeme, Dynamik, Simulation</a>. Modellbildung, Analyse und Simulation komplexer Systeme</em>, Selbstverlag 2004‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Modellbildung</category>
  <category>Simulation</category>
  <category>Dynamische Systeme</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/index.html</guid>
  <pubDate>Tue, 18 Apr 2023 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041801_abenteuer_spyder_sir_modell/images/grippemodellsir.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tweaking Spyder</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041701_tweaking_spyder/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52824891673/"><img src="https://kantel.github.io/posts/2023041701_tweaking_spyder/images/spyder5neu-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nach meiner <a href="https://kantel.github.io/posts/2023041603_spyder/">gestrigen</a> Wiederentdeckung von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a>, der Python-IDE f√ºr <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a> (-<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">Lab</a>, -<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">Desktop</a>)-Ignoranten wie mich, mu√üte ich das Teil nun so lange tunen, bis es meinen Vorstellungen entsprach. Nun sieht Spyder wirklich so aus, wie ich mir <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rstudio.html">RStudio</a> w√ºnsche<sup>1</sup>. Und es f√ºhlt sich immer noch gut an.</p>
<p>Aus lauter Begeisterung habe ich auch meiner <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Wiki-Seite zu Spyder</a> ein Update spendiert. Und jetzt werde ich erst mal weiter mit der Spynne spielen. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fu√ünoten</h2>

<ol>
<li id="fn1"><p>Ich schreibe dieses <del>Blog</del> Kritzelheft mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> in RStudio, verf√ºge also √ºber reichlich Erfahrungen mit der Software.‚Ü©Ô∏é</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Numerik</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2023041701_tweaking_spyder/index.html</guid>
  <pubDate>Mon, 17 Apr 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041701_tweaking_spyder/images/spyder5neu.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Numerisches Python mit der Spynne</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041603_spyder/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52822515573/"><img src="https://kantel.github.io/posts/2023041603_spyder/images/spyder5-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Neben meiner Erkundung des <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>-Kosmos m√∂chte ich mich in der n√§chsten Zeit ein wenig mit Python, Physik und Numerik besch√§ftigen. Dazu habe ich das Buch ¬ª<a href="https://www.rheinwerk-verlag.de/der-python-kurs-fuer-ingenieure-und-naturwissenschaftler/">Der Python-Kurs f√ºr Ingenieure und Naturwissenschaftler</a>¬´ von <em>Veit Steinkamp</em> aus meinem B√ºcherregal wieder hervorgekramt. Nicht nur, da√ü es mir an sich schon ziemlich gut gef√§llt, ausschlaggebend war dieses Mal, da√ü die √ºber 500 Seiten fette Schwarte als eines der wenigen mir bekannten Lehrb√ºcher auch ein komplettes Kapitel zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/vpython.html">VPython</a> besitzt (und damit w√§re ich via <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/glowwscript.html">GlowScript</a> wieder bei Trinket).</p>
<p>Doch zur√ºck zu Numerik mit Python. Ein Anla√ü war, da√ü ich mich ‚Äì wie <a href="https://kantel.github.io/posts/2023032701_jupyter_and_jupyterlab/">versprochen</a> ‚Äì endlich mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> vertraut machen wollte. Doch ich mu√üte leider feststellen, da√ü ich ‚Äì wie schon mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> ‚Äì auch mit dieser Inkarnation eines Python-Notebooks einfach nicht warm werde.</p>
<p>In meiner Verzweiflung hatte ich dann <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> angeworfen. Diese freie (MIT-Lizenz) Python-IDE hatte bei fr√ºheren Versuchen mich auch mit einigen Ecken und Kanten abgeschreckt. Doch heute machte sie mich darauf aufmerksam, da√ü ich die Version 5.4.3 herunterladen k√∂nne.</p>
<p>Und was soll ich sagen? Nach der Installation f√ºhlte ich mich in Spyder wie zu Hause. Die IDE war schlank genug, um mich nicht mit √ºberfl√ºssigem Schnickschnack zu nerven, aber sie zeigte alles, was man von einer IDE und von einem Editor erwartet. Und wenn man von der ‚Äì auf meinem betagten MacBook Pro ‚Äì doch sehr gem√§chlichen Startzeit des Programms absieht ‚Äì mu√üte ich auch bei der Geschwindigkeit keine Abstriche machen.</p>
<p>Daher werde ich wohl in Zukunft bei allen Python-Programmen, mit denen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> √ºberfordert ist, auf Spyder setzen. Wundert Euch daher nicht, wenn Ihr in Zukunft entsprechende Screenshots vorgesetzt bekommt. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Numerik</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2023041603_spyder/index.html</guid>
  <pubDate>Sun, 16 Apr 2023 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041603_spyder/images/spyder5.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Frauen am Kontraba√ü: Alice und das wei√üe Kaninchen</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://listverse.com/wp-content/uploads/2013/10/alice.jpg"><img src="https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/images/alice_robinson-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich hatte schon lange nichts mehr in meiner Reihe ¬ªFrauen am Kontraba√ü¬´, doch nun kam mir ein Video unter, das sowohl dieses Thema wie auch mein Interesse an Geschichten um ¬ªAlice im Wunderland¬´ abdeckt: Die ziemlich geniale Bluegrass-Gitarristin <em><a href="https://de.wikipedia.org/wiki/Molly_Tuttle">Molly Tuttle</a></em> hat mir ihrer Band ¬ªThe Golden Highway¬´ eine Coverversion von <em>Jefferson Airplanes</em> ¬ªWhite Rabbit¬´ ganz neu auf YouTube ver√∂ffentlicht:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/LeHlvXvG6vA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das alleine w√§re noch keinen Beitrag in dieser Reihe wert, doch <em>The Golden Highway</em> ist nicht nur ‚Äì wie vielfach im Bluegrass Tradition ‚Äì eine Familienangelegenheit unter Geschwistern, sondern <em>Molly Tuttle</em> hat mit <em><a href="http://www.shelbyleemeans.com/">Shelby Means</a></em> auch eine phantastische Kontrabassistin an Ihrer Seite. Die Band ‚Äì die aktuell in den USA auf Tour ist ‚Äì besteht also aus <em>Molly Tuttle</em> als Red Queen (g, vocals), <em>Shelby Means</em> als Mad Hatter (bass, harmonies), <em>Kyle Tuttle</em> als Chesire Cat (Grinsekatze) (banjo), <em>Bronwyn Keith-Hynes</em> als Alice (fiddle) und <em>Dominick Leslie</em> als Caterpillar (mandoline). Und im Hintergrund turnt auch noch anonym das namengebende wei√üe Kaninchen herum.</p>
<p>Wenn ich irgendwann f√ºr meine eigenen Alice-Experimente ein Video ben√∂tigen sollte, steht dieses ganz weit oben auf der Favoritenliste.</p>



 ]]></description>
  <category>Musik</category>
  <category>Alice</category>
  <guid>https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/index.html</guid>
  <pubDate>Sun, 16 Apr 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041602_molly_tuttle_white_rabbit/images/alice_robinson.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kritzelheft statt Gesichtsbuch</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041601_kritzelheft_vs_gesichtsbuch/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52821758695/"><img src="https://kantel.github.io/posts/2023041601_kritzelheft_vs_gesichtsbuch/images/schweinchenallein-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>So langsam mu√ü ich mir ein Format oder eine Rubrik √ºberlegen, unter der ich hier im <del>Blog</del> Kritzelheft und nicht im Fratzenbuch meine Photos unterbringe. So zum Beispiel das obige <a href="https://www.flickr.com/photos/schockwellenreiter/52821758695/">verlorene Schweinchen</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52820781322/"><img src="https://kantel.github.io/posts/2023041601_kritzelheft_vs_gesichtsbuch/images/greenmonster.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Und <a href="https://www.flickr.com/photos/schockwellenreiter/52820781322/">hier</a> macht das gr√ºne Monster Werbung f√ºr einen Wohlt√§tigkeitslauf. Aber obacht, es l√§uft mit Sicherheit allen anderen davon. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">J√∂rg Kantel</a>)</em></p>



 ]]></description>
  <category>Neuk√∂lln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023041601_kritzelheft_vs_gesichtsbuch/index.html</guid>
  <pubDate>Sun, 16 Apr 2023 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041601_kritzelheft_vs_gesichtsbuch/images/schweinchenallein.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder Sicherheitsl√ºcken in Chrome</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041502_chrome_update_v112/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/f/f5/Uncle_Wiggily%27s_Apple_Roast_%28page_21%29.jpg"><img src="https://kantel.github.io/posts/2023041502_chrome_update_v112/images/appleroastp29-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google ver√∂ffentlicht ein neues Update der Version 112 (112.0.5615.121) seines Browsers Chrome und schlie√üt erneut <a href="https://chromereleases.googleblog.com/2023/04/stable-channel-update-for-desktop_14.html">kritische Sicherheitsl√ºcken</a>, die bereits ausgenutzt werden. Falls das Update also nicht automatisch erfolgen sollte, ist ein zeitnahes Einfahren dringend anzuraten.</p>
<p>Chrome aktualisiert sich (au√üer bei Linux) √ºber die integrierte Update-Funktion, kann aber ‚Äì wenn es wie in diesem Fall pressiert ‚Äì auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Uncle Wiggily sits in a chair and reads the newspaper, from ¬ª<a href="https://commons.wikimedia.org/wiki/Category:Uncle_Wiggily%27s_Apple_Roast">Uncle Wiggily‚Äôs Apple Roast</a>¬´, 1919, page 21, pictured by Lang Campbell. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Uncle_Wiggily%27s_Apple_Roast_(page_21).jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041502_chrome_update_v112/index.html</guid>
  <pubDate>Sat, 15 Apr 2023 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041502_chrome_update_v112/images/appleroastp29.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Das Ende von maiLab</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041501_das_ende_von_mailab/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.dwdl.de/images/1606996726_mai-thi-nguyen-kim.jpg"><img src="https://kantel.github.io/posts/2023041501_das_ende_von_mailab/images/mailab-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Aus der deutschen, nicht gerade mit Highlights verw√∂hnten Landschaft des Wissenschaftsjournalismus gibt es eine gute und eine schlechte Nachricht zu berichten. <a href="https://www.dwdl.de/nachrichten/92541/mai_thi_nguyenkim_beendet_ihren_youtubekanal_mailab/">Die schlechte Nachricht zuerst</a>: Die Chemikerin und Wissenschaftsjournalistin <em><a href="https://de.wikipedia.org/wiki/Mai_Thi_Nguyen-Kim">Mai Thi Nguyen-Kim</a></em> schlie√üt ihren vielfach (und zu Recht) preisgekr√∂nten und erfolgreichen (zuletzt knapp 1,5 Millionen Abonnentinnen und Abonnenten) YouTube-Kanal <a href="https://www.youtube.com/@maiLab">maiLab</a>. In ihrem <a href="https://www.youtube.com/watch?v=FiBpbWSkXvE">Abschiedsvideo</a> nennt sie als Gr√ºnde den Weggang der Redakteurin (und Freundin) <em>Meanie Gath</em> (die sich beruflich umorientieren will), die bevorstehende Geburt ihres zweiten Kindes und nicht zuletzt die √úberlastung durch ihre zahlreichen Engagements und andere Aufgaben (<em>Mai Thi Nguyen-Kim</em> ist unter anderem auch Mitglied des Senats der Max-Planck-Gesellschaft ‚Äì bis zu meiner Pensionierung auch mein Br√∂tchengeber).</p>
<p>Und damit komme ich auch zu der guten Nachricht: <em>Mai Thi Nguyen-Kim</em> bleibt uns als Wissenschaftsjournalistin erhalten und macht (nach der Babypause) weiter. Auf ZDFneo l√§uft die seit Oktober 2021 produziert Wissenschaftsshow ¬ª<a href="https://de.wikipedia.org/wiki/MaiThink_X_%E2%80%93_Die_Show">MaiThink X</a>¬´ (fast jeden Sonntag) und auch ihre Zusammenarbeit mit <em><a href="https://de.wikipedia.org/wiki/Harald_Lesch">Harald Lesch</a></em> und f√ºr <a href="https://de.wikipedia.org/wiki/Terra_X">Terra X</a> mit dem ZDF setzt sie fort.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/r0jXfwPQW9k" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wenn ich ein Argument f√ºr das √∂ffentlich-rechtliche Fernsehen und seine Geb√ºhren suche, dann f√§llt mir unter anderem und als eines der ersten auch und vor allem <em>Mai Thi Nguyen-Kim</em> ein (auch ¬ªmaiLab¬´ war Teil der √ñffentlich-Rechtlichen). Aus Dankbarkeit und zur Erinnerung an einen gro√üen YouTube-Kanal habe ich oben eine meiner Lieblingssendungen daraus ver√∂ffentlicht. Denn in ¬ª<a href="https://www.youtube.com/watch?v=r0jXfwPQW9k">So habt ihr Farben noch nie gesehen</a>¬´ erkl√§rt mir <em>Mai Thi Nguyen-Kim</em>, da√ü und warum ich als (Fast-) Farbenblinder nicht alleine stehe und warum es erst sehr sp√§t in der Menschheitsgeschichte ein Wort f√ºr die Farbe ¬ªBlau¬´ gab. <em>H√§ttet Ihr‚Äôs gewu√üt?</em></p>



 ]]></description>
  <category>Medien</category>
  <category>Science</category>
  <guid>https://kantel.github.io/posts/2023041501_das_ende_von_mailab/index.html</guid>
  <pubDate>Sat, 15 Apr 2023 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041501_das_ende_von_mailab/images/mailab.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Crab Dance Stage¬†3: Auch tanzende Krabben haben Gegner</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041403_dancing_crab_3/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52815218979/"><img src="https://kantel.github.io/posts/2023041403_dancing_crab_3/images/crabstage3-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da ich dringend ein paar andere Dinge ausprobieren m√∂chte, habe ich meiner <a href="https://kantel.github.io/posts/2023040803_dancing_crab_stage_2/">kleinen, tanzenden Krabbe</a> ein (vorl√§ufiges) finales Update verpa√üt. Die Krabbe kann nun die herunterschwebenden Luftblasen zum Platzen bringen. Und da ein Spiel ohne Gegner wenig Sinn macht, gibt es jetzt auch gef√§hrliche, rote Blasen, die mit etwas gr√∂√üer Geschwindigkeit nach unten fallen. Kollidiert die Krabbe mit einer dieser Blasen, stirbt sie und das Spiel ist verloren:</p>
<iframe src="https://trinket.io/embed/python/2f0553e21c?outputOnly=true&amp;runOption=run&amp;start=result" width="85%" height="570" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen="">
</iframe>
<p>Wie gewohnt wird die Krabbe mit der rechten und der linken Maustaste gesteuert. Es ist nicht wirklich schwer, damit den roten Blasen auszuweichen, aber das Spiel ist ja auch nur ein <em>proof of concept</em>.</p>
<p>F√ºr die Kollisionserkennung habe ich die Erkennung zweier Kreise implementiert, so wie ich sie <a href="http://blog.schockwellenreiter.de/2019/11/2019111103.html">hier schon einmal vorgestellt</a> hatte. Die Blasen sind sowieso schon Kreise und auch die Krabbe sieht sehr kreisf√∂rmig aus. Also dr√§ngte sich diese einfach zu implementierende Kollionserkennung geradezu auf. In meinem Krabbenprogramm sieht der Code so aus:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">  <span class="kw" style="color: #003B4F;">def</span> is_circle_collision(<span class="va" style="color: #111111;">self</span>, other):</span>
<span id="cb1-2">    distance <span class="op" style="color: #5E5E5E;">=</span> dist(<span class="va" style="color: #111111;">self</span>.x, <span class="va" style="color: #111111;">self</span>.y, other.x, other.y)</span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;">if</span> distance <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="va" style="color: #111111;">self</span>.r <span class="op" style="color: #5E5E5E;">+</span> other.r:</span>
<span id="cb1-4">      <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">False</span></span></code></pre></div>
<p>Daf√ºr mu√üten in den Klassen der Akteure <code>Crab()</code>, <code>Bubble()</code> und <code>EnemyBubble()</code> (neu) jeweils noch der Radius implementiert werden. Bei der Krabbe und den roten Blasen war das einfach, sie besitzen jeweils nur einen Radius. Bei den verschieden gro√üen Luftblasen erledigte</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">    <span class="va" style="color: #111111;">self</span>.r <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.img.width<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span></span></code></pre></div>
<p>in der <code>reset()</code>-Methode dies. (Da bei den Bildern der Blasen H√∂he und Weite identisch sind, ist es v√∂llig egal, ob der Durchmesser √ºber <code>img.width</code> oder <code>img.height</code> bestimmt wird.)</p>
<p>Die Klasse <code>EnemyBubble()</code> weist noch eine Besonderheit auf. Als Unterklasse von <code>Bubble()</code> erbt sie alle Eigenschaften und Methoden, die sie nicht selber √ºberschreibt. In diesem Fall sind das insbesondere die Methoden <code>update()</code>, <code>display()</code> und <code>is_circle_collision()</code>.</p>
<p>Ich habe in diesem Falle erstmals zur Initialisierung der Oberklasse Pythons <code>super().__init__()</code>-Methode verwendet. Sie kommt ohne explizite Erw√§hnung des Parameters <code>self</code> aus.</p>
<p>Wie gewohnt nun der komplette Quellcode f√ºr alle, die gerne Quellcode lesen und das Programm nachvollziehen wollen:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Dancing Crab</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;"># J√∂rg Kantel 2023</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># Inspiriert von Heiko Fehr: ¬ªLet's Code Python¬´, Bonn (Rheinwerk-Verlag) 2019, Seiten 247ff.</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;"># Krabbe: Nitin Chowdary (CC0), https://opengameart.org/content/crab</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;"># Luftblasen: HorrorPen (CC-BY 3.0), https://opengameart.org/content/bubbles8-colors</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;"># Bildhintergrund: Kenney.nl Fish Pack (CC0), https://www.kenney.nl/assets/fish-pack</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="im" style="color: #00769E;">from</span> processing <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb3-9"><span class="im" style="color: #00769E;">from</span> random <span class="im" style="color: #00769E;">import</span> randint</span>
<span id="cb3-10"></span>
<span id="cb3-11">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">640</span>, <span class="dv" style="color: #AD0000;">416</span></span>
<span id="cb3-12">NUM_BUBBLES <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span></span>
<span id="cb3-13">NUM_ENEMIES <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="kw" style="color: #003B4F;">class</span> Background():</span>
<span id="cb3-16">  </span>
<span id="cb3-17">  <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, _img):</span>
<span id="cb3-18">    <span class="va" style="color: #111111;">self</span>.img <span class="op" style="color: #5E5E5E;">=</span> loadImage(_img)</span>
<span id="cb3-19">    </span>
<span id="cb3-20">  <span class="kw" style="color: #003B4F;">def</span> display(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-21">    image(<span class="va" style="color: #111111;">self</span>.img, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb3-22"></span>
<span id="cb3-23"><span class="kw" style="color: #003B4F;">class</span> Crab():</span>
<span id="cb3-24">  </span>
<span id="cb3-25">  <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-26">    <span class="va" style="color: #111111;">self</span>.img1 <span class="op" style="color: #5E5E5E;">=</span> loadImage(<span class="st" style="color: #20794D;">"crab1.png"</span>)</span>
<span id="cb3-27">    <span class="va" style="color: #111111;">self</span>.img2 <span class="op" style="color: #5E5E5E;">=</span> loadImage(<span class="st" style="color: #20794D;">"crab2.png"</span>)</span>
<span id="cb3-28">    <span class="va" style="color: #111111;">self</span>.img <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.img1</span>
<span id="cb3-29">    <span class="va" style="color: #111111;">self</span>.w <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">64</span></span>
<span id="cb3-30">    <span class="va" style="color: #111111;">self</span>.h <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">64</span></span>
<span id="cb3-31">    <span class="va" style="color: #111111;">self</span>.r <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">32</span></span>
<span id="cb3-32">    <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> width<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">-</span> <span class="va" style="color: #111111;">self</span>.w<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb3-33">    <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">=</span> height<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb3-34">    <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"None"</span></span>
<span id="cb3-35">    <span class="va" style="color: #111111;">self</span>.speed <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb3-36">    <span class="va" style="color: #111111;">self</span>.animation_count <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-37">    <span class="va" style="color: #111111;">self</span>.score <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-38">    </span>
<span id="cb3-39">  <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-40">    <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"None"</span>:</span>
<span id="cb3-41">      <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-42">    <span class="cf" style="color: #003B4F;">elif</span> <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"RIGHT"</span>:</span>
<span id="cb3-43">      <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">&lt;=</span> width <span class="op" style="color: #5E5E5E;">-</span> <span class="va" style="color: #111111;">self</span>.w <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">5</span>:</span>
<span id="cb3-44">        <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">+=</span> <span class="va" style="color: #111111;">self</span>.speed</span>
<span id="cb3-45">    <span class="cf" style="color: #003B4F;">elif</span> <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"LEFT"</span>:</span>
<span id="cb3-46">      <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">2</span>:</span>
<span id="cb3-47">        <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">-=</span> <span class="va" style="color: #111111;">self</span>.speed</span>
<span id="cb3-48">    <span class="va" style="color: #111111;">self</span>.animation_count <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-49">    <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.animation_count <span class="op" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">10</span>:</span>
<span id="cb3-50">      <span class="va" style="color: #111111;">self</span>.animation_count <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-51">    <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.animation_count <span class="op" style="color: #5E5E5E;">&lt;=</span> <span class="dv" style="color: #AD0000;">5</span>:</span>
<span id="cb3-52">      <span class="va" style="color: #111111;">self</span>.img <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.img1</span>
<span id="cb3-53">    <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-54">      <span class="va" style="color: #111111;">self</span>.img <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.img2</span>
<span id="cb3-55"></span>
<span id="cb3-56">  <span class="kw" style="color: #003B4F;">def</span> display(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-57">    image(<span class="va" style="color: #111111;">self</span>.img, <span class="va" style="color: #111111;">self</span>.x, <span class="va" style="color: #111111;">self</span>.y)</span>
<span id="cb3-58">    </span>
<span id="cb3-59"><span class="kw" style="color: #003B4F;">class</span> Bubble():</span>
<span id="cb3-60">  </span>
<span id="cb3-61">  <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-62">    <span class="va" style="color: #111111;">self</span>.reset()</span>
<span id="cb3-63">    <span class="va" style="color: #111111;">self</span>.speed <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb3-64">    </span>
<span id="cb3-65">  <span class="kw" style="color: #003B4F;">def</span> reset(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-66">    dia <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">str</span>(randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb3-67">    <span class="va" style="color: #111111;">self</span>.img <span class="op" style="color: #5E5E5E;">=</span> loadImage(<span class="st" style="color: #20794D;">"bubbleblue"</span> <span class="op" style="color: #5E5E5E;">+</span> dia <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">".png"</span>)</span>
<span id="cb3-68">    <span class="va" style="color: #111111;">self</span>.r <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.img.width<span class="op" style="color: #5E5E5E;">//</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb3-69">    <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> randint(<span class="dv" style="color: #AD0000;">0</span>, width)</span>
<span id="cb3-70">    <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">=</span> randint(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>height, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">50</span>)</span>
<span id="cb3-71">    </span>
<span id="cb3-72">  <span class="kw" style="color: #003B4F;">def</span> is_circle_collision(<span class="va" style="color: #111111;">self</span>, other):</span>
<span id="cb3-73">    distance <span class="op" style="color: #5E5E5E;">=</span> dist(<span class="va" style="color: #111111;">self</span>.x, <span class="va" style="color: #111111;">self</span>.y, other.x, other.y)</span>
<span id="cb3-74">    <span class="cf" style="color: #003B4F;">if</span> distance <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="va" style="color: #111111;">self</span>.r <span class="op" style="color: #5E5E5E;">+</span> other.r:</span>
<span id="cb3-75">      <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb3-76">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb3-77">  </span>
<span id="cb3-78">  <span class="kw" style="color: #003B4F;">def</span> update(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-79">    <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">+=</span> <span class="va" style="color: #111111;">self</span>.speed</span>
<span id="cb3-80">    <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">&gt;</span> height <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">50</span>:</span>
<span id="cb3-81">      <span class="va" style="color: #111111;">self</span>.reset()</span>
<span id="cb3-82">    </span>
<span id="cb3-83">  <span class="kw" style="color: #003B4F;">def</span> display(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-84">    image(<span class="va" style="color: #111111;">self</span>.img, <span class="va" style="color: #111111;">self</span>.x, <span class="va" style="color: #111111;">self</span>.y)</span>
<span id="cb3-85"></span>
<span id="cb3-86"><span class="kw" style="color: #003B4F;">class</span> EnemyBubble(Bubble):</span>
<span id="cb3-87">  </span>
<span id="cb3-88">  <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-89">    <span class="bu" style="color: null;">super</span>().<span class="fu" style="color: #4758AB;">__init__</span>()</span>
<span id="cb3-90">    <span class="va" style="color: #111111;">self</span>.reset()</span>
<span id="cb3-91">    <span class="va" style="color: #111111;">self</span>.r <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">15</span></span>
<span id="cb3-92">    <span class="va" style="color: #111111;">self</span>.speed <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb3-93">    </span>
<span id="cb3-94">  <span class="kw" style="color: #003B4F;">def</span> reset(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-95">    <span class="va" style="color: #111111;">self</span>.img <span class="op" style="color: #5E5E5E;">=</span> loadImage(<span class="st" style="color: #20794D;">"bubblere1.png"</span>)</span>
<span id="cb3-96">    <span class="va" style="color: #111111;">self</span>.x <span class="op" style="color: #5E5E5E;">=</span> randint(<span class="dv" style="color: #AD0000;">0</span>, width)</span>
<span id="cb3-97">    <span class="va" style="color: #111111;">self</span>.y <span class="op" style="color: #5E5E5E;">=</span> randint(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>height, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">50</span>)</span>
<span id="cb3-98">    </span>
<span id="cb3-99"></span>
<span id="cb3-100">bubbles <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb3-101">enemybubbles <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb3-102">    </span>
<span id="cb3-103"><span class="kw" style="color: #003B4F;">def</span> setup():</span>
<span id="cb3-104">  <span class="kw" style="color: #003B4F;">global</span> bg, crab</span>
<span id="cb3-105">  size(WIDTH, HEIGHT)</span>
<span id="cb3-106">  <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"üê† Crab Dancing with Bubbles - Stage 3 üê°"</span>)</span>
<span id="cb3-107">  bg <span class="op" style="color: #5E5E5E;">=</span> Background(<span class="st" style="color: #20794D;">"background.png"</span>)</span>
<span id="cb3-108">  <span class="cf" style="color: #003B4F;">for</span> _ <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(NUM_BUBBLES):</span>
<span id="cb3-109">    bubble <span class="op" style="color: #5E5E5E;">=</span> Bubble()</span>
<span id="cb3-110">    bubbles.append(bubble)</span>
<span id="cb3-111">  <span class="cf" style="color: #003B4F;">for</span> _ <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(NUM_ENEMIES):</span>
<span id="cb3-112">    enemybubble <span class="op" style="color: #5E5E5E;">=</span> EnemyBubble()</span>
<span id="cb3-113">    enemybubbles.append(enemybubble)</span>
<span id="cb3-114">  crab <span class="op" style="color: #5E5E5E;">=</span> Crab()</span>
<span id="cb3-115">  </span>
<span id="cb3-116"><span class="kw" style="color: #003B4F;">def</span> draw():</span>
<span id="cb3-117">  background(<span class="dv" style="color: #AD0000;">49</span>, <span class="dv" style="color: #AD0000;">197</span>, <span class="dv" style="color: #AD0000;">244</span>) <span class="co" style="color: #5E5E5E;"># Hellblau</span></span>
<span id="cb3-118">  bg.display()</span>
<span id="cb3-119">  crab.update()</span>
<span id="cb3-120">  crab.display()</span>
<span id="cb3-121">  <span class="cf" style="color: #003B4F;">for</span> bubble <span class="kw" style="color: #003B4F;">in</span> bubbles:</span>
<span id="cb3-122">    bubble.update()</span>
<span id="cb3-123">    <span class="cf" style="color: #003B4F;">if</span> bubble.is_circle_collision(crab):</span>
<span id="cb3-124">      bubble.reset()</span>
<span id="cb3-125">      crab.score <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-126">    bubble.display()</span>
<span id="cb3-127">  <span class="cf" style="color: #003B4F;">for</span> enemybubble <span class="kw" style="color: #003B4F;">in</span> enemybubbles:</span>
<span id="cb3-128">    enemybubble.update()</span>
<span id="cb3-129">    <span class="cf" style="color: #003B4F;">if</span> enemybubble.is_circle_collision(crab):</span>
<span id="cb3-130">      <span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"GAME OVER"</span>)</span>
<span id="cb3-131">      crab.x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2000</span></span>
<span id="cb3-132">      crab.y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2000</span></span>
<span id="cb3-133">    enemybubble.display()</span>
<span id="cb3-134">  </span>
<span id="cb3-135"><span class="kw" style="color: #003B4F;">def</span> mousePressed():</span>
<span id="cb3-136">  <span class="cf" style="color: #003B4F;">if</span> mouseButton <span class="op" style="color: #5E5E5E;">==</span> LEFT:</span>
<span id="cb3-137">    crab.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"LEFT"</span></span>
<span id="cb3-138">  <span class="cf" style="color: #003B4F;">elif</span> mouseButton <span class="op" style="color: #5E5E5E;">==</span> RIGHT:</span>
<span id="cb3-139">    crab.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"RIGHT"</span></span>
<span id="cb3-140"></span>
<span id="cb3-141"><span class="kw" style="color: #003B4F;">def</span> mouseReleased():</span>
<span id="cb3-142">  crab.<span class="bu" style="color: null;">dir</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"NONE"</span></span>
<span id="cb3-143"></span>
<span id="cb3-144">run()</span></code></pre></div>
<p>Den <a href="https://github.com/kantel/trinket/tree/main/crabdance/stage3">Quellcode mit allen Assets</a> gibt es wieder in meinem GitHub Repositorium. Au√üerdem k√∂nnt Ihr hier das <a href="https://trinket.io/python/2f0553e21c">Trinket remixen</a> und Eure eigenen Ideen einbauen.</p>
<p>Dieses Krabben-Trinket-Tutorial besteht aus diesen drei Teilen:</p>
<ol type="1">
<li>Stage 1: <a href="https://kantel.github.io/posts/2023040403_crabdance%E2%80%93stage1/">Crab Dancing with Bubbles</a>, die spontan aus einer Laune heraus erstellte erste Fassung.</li>
<li>Stage 2: <a href="https://kantel.github.io/posts/2023040803_dancing_crab_stage_2/">Die tanzende Krabbe mit neuen (freien) Bildchen</a>, eine von <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">TigerJython</a>-Bez√ºgen gereinigte Version.</li>
<li>Crab Dance Stage 3: Auch tanzende Krabben haben Gegner - diese, die vorl√§ufig letzte Fassung.</li>
</ol>
<p>Nat√ºrlich ist das nur ein Prototyp und es sind Erweiterungen denkbar, zum Beispiel eine Anzeige des Punktestands, ein Start- und ein Endebildschirm und so weiter. Vielleicht fasse ich das Programm daher irgendwann noch einmal an, aber momentan m√∂chte ich mich mit anderen Schmuckst√ºcken befassen. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Processing</category>
  <category>Spieleprogrammierung</category>
  <category>Trinket</category>
  <guid>https://kantel.github.io/posts/2023041403_dancing_crab_3/index.html</guid>
  <pubDate>Fri, 14 Apr 2023 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041403_dancing_crab_3/images/crabstage3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Creative Coding und Physik-Simulationen ‚Äì Video-Tutorials am Freitag</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041402_creative_coding_und_physik/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://en.wikipedia.org/wiki/File:Blender3D_HiddenTextSoftbody.ogv#/media/File:Blender3D_HiddenTextSoftbody.jpg"><img src="https://kantel.github.io/posts/2023041402_creative_coding_und_physik/images/softbody-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch f√ºr den heutigen Freitag habe ich wieder einen Bunch von Video-Tutorials f√ºr Euch (und f√ºr mich) herausgesucht, damit Ihr am dem zu erwartenden verregneten Wochenende nicht von Langeweile geplagt wird und Ihr aus lauter Verzweiflung in die Kirchen rennt. Das Thema an diesem Wochenende ist einmal ¬ªCreative Coding mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>¬´ und zum zweiten ‚Äì inspiriert von <em>Daniel Shiffman</em> ‚Äì ¬ªPhysiksimulationen und Physik-Engines¬´.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/4fkRdKQ3DSM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Ich beginne mir Creative Coding und P5.js: Die Playlist ¬ª<a href="https://www.youtube.com/playlist?list=PLnJOmsprq3bErSNvxK0OV-Adh1uxRhVdo">P5.js Projects &amp; Programming</a>¬´ von <em>Steve`s Makerspace</em> ist eine Monsterplaylist mit 52 im Schnitt etwa viertelst√ºndigen Videos, die sich um Creative Coding mit P5.js drehen. Nachdem ich in die ersten Videos hineingeschaut habe, bekomme ich gro√üe Lust, den <a href="https://editor.p5js.org/">P5.js-Webeditor</a> anzuwerfen und mich selber endlich intensiver mit P5.js auseinanderzusetzen. <em>So viel zu spielen, so wenig Zeit</em>.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/-YhzDuF_kLs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Der <a href="https://www.youtube.com/@jeffkthompson">YouTube-Kanal von <em>Jeff Thompson</em></a> zu <em>Creative Programming</em> will auch noch von mir erforscht werden.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/-CzNlgpOVgs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das gleiche gilt f√ºr den Workshop ¬ª<a href="https://www.youtube.com/watch?v=-CzNlgpOVgs">Procedural pattern programming with p5.js</a>¬´ und f√ºr die Playlist ¬ª<a href="https://www.youtube.com/playlist?list=PLyhIajiyZLlPhrFYJqOFRq9aoY-Q0AYjU">P5.js Spirals</a>¬´ (f√ºnf Videos √° etwa 15 Minuten Spieldauer).</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/IxdGyqhppis" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Einen eleganten √úbergang zur Physik schafft dann ‚Äì wie angek√ºndigt ‚Äì <em>Daniel Shiffman</em> mit seiner 177. Coding Challenge ¬ª<a href="https://www.youtube.com/watch?v=IxdGyqhppis">Soft Body Physics</a>¬´, in der er zeigt, was er alles mit der Physik Engine ¬ª<a href="http://haptic-data.com/toxiclibsjs/">Toxiclibs.js</a>¬´ anstellen kann. Ein weiterer Grund f√ºr mich, den P5.js-Webeditor wieder hervorzukramen. Dazu gibt es auch eine nette <a href="https://en.wikipedia.org/wiki/Soft-body_dynamics">Seite in der englischsprachigen Wikipedia</a>, in der auch eine Reihe von <em>Physik Engines</em> und -Spielen vorgestellt werden.</p>
<p>In diesem Video erz√§hlt <em>Shiffman</em> auch, da√ü seine <a href="https://nature-of-code-2nd-edition.netlify.app/">Neuauflage von ¬ªThe Nature of Code¬´</a> kurz vor der Fertigstellung steht. Ich bin gespannt wie ein Flitzebogen.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/alhpH6ECFvQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>In seiner 132. Coding Challenge programmierte <em>Daniel Shiffman</em> eine ¬ª<a href="https://thecodingtrain.com/challenges/132-fluid-simulation">Fluid Simulation</a>¬´ in knallbunt und mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a>. Physik kann so sch√∂n (bunt) sein.&nbsp;ü§ì</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/tLsi2DeUsak" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Doch es gibt nat√ºrlich auch andere Physik (2D) Engines, die interessante Projekte erlauben. Eine sehr popul√§re Engine ist <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pymunk.html">Pymunk</a>, die auf der auf die sehr leistungsf√§higen, in C geschriebenen 2D-Physikbibliothek <a href="https://chipmunk-physics.net/">Chipmunk</a> basiert. Pymunk arbeitet unter anderem auch sehr sch√∂n mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> zusammen, wie <em>Tech With Tim</em> in obigem, einst√ºndigen Video ¬ª<a href="https://www.youtube.com/watch?v=tLsi2DeUsak">Physics Simulations With Python and PyMunk</a>¬´ demonstriert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/cCiXqK9c18g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Da aber auch andere M√ºtter sch√∂ne T√∂chter haben, m√∂chte ich Euch auch <a href="https://kantel.github.io/posts/2023012601_covid_is_over/">noch einmal</a> die Playlist ¬ª<a href="https://www.youtube.com/playlist?list=PL_N_kL9gRTm8lh7GxFHh3ym1RXi6I6c50">Pymunk Basics</a>¬´ des YouTubers <em>Ear Of Corn</em> vorstellen, die aus sieben Videos zwischen f√ºnf und dreissig Minuten Spieldauer besteht.</p>
<p>Und dann habe ich k√ºrzlich <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/vpython.html">VPython</a>, genauer <a href="https://glowscript.org/">WebVPython/GlowScript</a> (wieder-) entdeckt, eine Python-3D-Physics-Engine, die auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> zusammenspielt. Doch das ist eine ganz andere, neue Geschichte, √ºber die ich in einem separaten Beitrag berichten m√∂chte. Da will ich erst noch eine Weile selber experimentieren.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/5ncQDRvkpP8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, <em>Wassily Kandinskys</em> brachte in ¬ª<a href="https://shop.bauhaus-movement.com/poster-wassily-kandinsky-circles-de">Circles in a Circle</a>¬´ von 1923 erstmals seine Kreise in den Vordergrund. Es ist ein besonders ordentliches Werk, in dem die meisten Elemente sauber in einem gro√üen dicken Kreis platziert sind. Das schreit nach einem Re-enactment. Aber ich wiederhole mich: <em>So viel zu spielen, so wenig Zeit!</em></p>



 ]]></description>
  <category>Creative Coding</category>
  <category>P5.js</category>
  <category>Pymunk</category>
  <category>Pygame</category>
  <category>Physik</category>
  <category>Simulation</category>
  <guid>https://kantel.github.io/posts/2023041402_creative_coding_und_physik/index.html</guid>
  <pubDate>Fri, 14 Apr 2023 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041402_creative_coding_und_physik/images/softbody.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft ver√∂ffentlicht Update 16.72 f√ºr Office for Mac</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041401_update_office_for_mac/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/jl-incrowd/502175532/"><img src="https://kantel.github.io/posts/2023041401_update_office_for_mac/images/earstiger-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Microsoft liefert mit dem Update auf 16.72 f√ºr Office 365, 2021 und 2019 for Mac nat√ºrlich auch wieder aktuelle <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erh√§lt man die Korrekturen am einfachsten √ºber Microsofts AutoUpdate ‚Äì in einem beliebigen Office-Programm √ºber das Men√º <code>Hilfe &gt; Auf Updates √ºberpr√ºfen</code>. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: ¬´The Bad Tiger¬´, pictured by Lang Campbell.)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041401_update_office_for_mac/index.html</guid>
  <pubDate>Fri, 14 Apr 2023 13:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041401_update_office_for_mac/images/earstiger.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Photostrecke: Keine Tulpen vom Britzer Damm</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041302_keine_tulpen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52815190718/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute wollte ich eigentlich im <a href="https://de.wikipedia.org/wiki/Britzer_Garten">Britzer Garten</a> ein <a href="https://www.britzergarten.de/blueten-gaerten/bluetenschauen/tulipan/">bl√ºhendes Tulpenmeer</a> erleben. Doch die Pflanzen zierten sich noch. Trotzdem habe ich ein paar nette Photos mitgebracht, die wieder nicht im Gesichtsbuch, sondern nur hier in diesem <del>Blog</del> Kritzelheft ver√∂ffentlicht werden:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52815135850/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52814921439/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52814165637/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten04.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52814731836/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52814729811/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten06.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52814928909/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten07.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52815189588/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52814174837/"><img src="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten09.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr jeweils auf eine Seite mit einer Vergr√∂√üerung.</em></p>
<p>Doch auch ohne Tulpen war zu sp√ºren, da√ü der Fr√ºhling √ºberall in den Startl√∂chern steht. Warten wir mal die n√§chsten Tage ab. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">J√∂rg Kantel</a>)</em></p>



 ]]></description>
  <category>Parks und G√§rten</category>
  <category>Neuk√∂lln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023041302_keine_tulpen/index.html</guid>
  <pubDate>Thu, 13 Apr 2023 16:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041302_keine_tulpen/images/aprilbritzergarten01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mein Deutschland-Ticket: Ab dem 1. Mai geht‚Äôs lohos ‚Ä¶</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041301_dticket/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52814668315/"><img src="https://kantel.github.io/posts/2023041301_dticket/images/dticket-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute lag es im Briefkasten: Mein Deutschlandticket. Als Inhaber einer <a href="https://www.vbb.de/tickets/abonnements/vbb-abo-65plus/">VBB-Rentnerkarte</a> wurde diese automatisch umgeschrieben. Das Deutschlandticket ist etwa drei Euro g√ºnstiger und gilt nicht nur f√ºr Berlin und Brandenburg, sondern deutschlandweit.</p>
<p>Auch wenn ich erst coronabedingt und dann gehindert durch meinen Schlaganfall schon die Rentnerkarte nicht ausgenutzt hatte, habe ich nun mit der Deutschlandkarte doch ein paar Pl√§ne, die √ºber Brandenburg hinausreichen: <a href="https://de.wikipedia.org/wiki/Dessau">Dessau</a> und <a href="https://de.wikipedia.org/wiki/Halle_(Saale)">Halle (Saale)</a> w√ºrde ich gerne einmal besuchen und auch an die <a href="https://de.wikipedia.org/wiki/Warnem%C3%BCnde">Ostsee</a> w√ºrde ich gerne mal wieder fahren.</p>
<p>Dazu stehen noch all die Orte in Brandenburg auf meiner Liste, die ich schon, wie ich das Seniorenabo abgeschlossen hatte, besuchen wollte. Zwar ist meine Mobilit√§t immer noch ein wenig eingeschr√§nkt, aber die Bahn f√§hrt mich (hoffentlich!) hin.</p>
<p>Ab dem ersten Mai geht es daher los. Ich werde Euch hier auf diesen Seiten auf dem Laufenden halten.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2023041301_dticket/index.html</guid>
  <pubDate>Thu, 13 Apr 2023 12:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041301_dticket/images/dticket.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: WebR und WebRIDEr ‚Äì RStudio online</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041204_webr_und_webrider/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://i0.wp.com/rud.is/b/wp-content/uploads/2023/04/preview.png?resize=1200%2C754&amp;ssl=1"><img src="https://kantel.github.io/posts/2023041204_webr_und_webrider/images/webrider-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Entweder es dr√§ngt wirklich alles ins Web oder es f√§llt mir wegen meiner Chromebook-Nutzung nur verst√§rkt auf: Da habe ich doch schon im letzten Sommer mir alle M√ºhe gegeben, <a href="http://blog.schockwellenreiter.de/2021/12/2021120701.html">mein Chromebook</a> mit <a href="http://cognitiones.kantel-chaos-team.de/mathematik/r.html">R</a> und <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rstudio.html">RStudio</a> zu <a href="http://blog.schockwellenreiter.de/2022/07/2022072401.html">verkuppeln</a> und jetzt gibt es das alles online:</p>
<p>Da ist erst einmal <a href="https://docs.r-wasm.org/webr/latest/">WebR</a>, ein Interpreter f√ºr R im Browser, eine mehr oder weniger <a href="https://www.tidyverse.org/blog/2023/03/webr-0-1-0/">offizielle Implementierung</a>, die auf <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/nodejs.html">Node.js</a>, <a href="https://webassembly.org/">WebAssembly</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/emscripten.html">Emscripten</a> aufsetzt. Das Teil steht unter der MIT-Lizenz und der <a href="https://github.com/r-wasm/webr">Quellcode</a> ist auf GitHub zu finden.</p>
<p><em>Bob Rudis</em> <a href="https://rud.is/b/2023/04/10/introducing-webrider-the-webr-ide-ish-repl-you-didnt-know-you-needed/">war das aber nicht genug</a>, er wollte etwas, das mehr wie RStudio (oder Visual Studio Code) funktioniert und hat daher mit <a href="http://cognitiones.kantel-chaos-team.de/mathematik/webrider.html">WebRIDEr</a> eine freie (AGPL-3.0) Web-IDE f√ºr R gebastelt. Auch das Teil ist <a href="https://github.com/hrbrmstr/webr-monaco-repl">auf GitHub zu finden</a>. Ihr k√∂nnt Euch also ‚Äì mit mehr oder weniger Pfriemelei ‚Äì eine selbstgehostete Version auf Euren Server hochziehen.</p>
<p>Wem das zu viel Aufwand ist: Diese beiden Links zu <a href="https://webr.r-wasm.org/latest/">WebR</a> oder <a href="https://rud.is/w/webr-monaco-repl/">WebRIDEr</a> f√ºhren jeweils zu einer Online-Implementierung, die Ihr auch ohne Anmeldung nutzen k√∂nnt.</p>
<p>Die beiden Programme sind noch sehr jung, WebR ist vom M√§rz und WebRIDEr vom April dieses Jahres. Trotzdem wirken beide schon sehr vielversprechend. Daher habe ich sowohl <strong><a href="http://cognitiones.kantel-chaos-team.de/mathematik/webr.html">WebR</a></strong> wie auch <strong><a href="http://cognitiones.kantel-chaos-team.de/mathematik/webrider.html">WebRIDEr</a></strong> je eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert. Schaun wir mal, was daraus wird.</p>



 ]]></description>
  <category>R und RStudio</category>
  <guid>https://kantel.github.io/posts/2023041204_webr_und_webrider/index.html</guid>
  <pubDate>Wed, 12 Apr 2023 17:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041204_webr_und_webrider/images/webrider.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate f√ºr Adobe Reader und Acrobat</title>
  <dc:creator>J√∂rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023041203_adobe_updates/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://pbs.twimg.com/media/EKODm4iWwAEc32P?format=jpg&amp;name=small"><img src="https://kantel.github.io/posts/2023041203_adobe_updates/images/pumpkin-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Adobe liefert mit dem <a href="https://helpx.adobe.com/security/products/acrobat/apsb23-24.html">Update APSB23-24</a> wieder Korrekturen f√ºr Sicherheitsl√ºcken im Reader und in Acrobat (unter Windows und Mac).</p>
<p>Das Update gelingt am einfachsten √ºber den internen Update-Mechanismus. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">pers√∂nlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: From ¬ªUncle Wiggily and his Lady Muskrat Housekeeper story¬´, 1925, pictured by Lang Campbell.)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023041203_adobe_updates/index.html</guid>
  <pubDate>Wed, 12 Apr 2023 16:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023041203_adobe_updates/images/pumpkin.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
