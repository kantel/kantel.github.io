<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Tue, 28 Jan 2025 14:00:00 GMT</lastBuildDate>
<item>
  <title>All of Me (Akkordeon, ein schöner Ton)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025012802_all_of_me/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54292066522/"><img src="https://kantel.github.io/posts/2025012802_all_of_me/images/gypsyswing-b.jpg" class="img-fluid"></a></p>
<p>Neben dem Dudelsack ist wohl das Akkordeon eines der meistgehassten Instrumente. Das dies wirklich ungerecht ist und der Quetschkommode <em>(Squeeze Box)</em> durchaus swingende Melodien zu entlocken sind, beweist der schwedische Akkordeonist <em>Alf Hågedal</em>, der hier seinem so unterschätzten Instrument den Jazz-Standard »<a href="https://de.wikipedia.org/wiki/All_of_Me">All of Me</a>« entlockt:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/y3ZwoZU8rmg?si=seCLkUTPbvW4y2aq" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Dabei beginnt er den Song in der gewohnten, langsamen Geschwindigkeit, um dann bei der Improvisation Gas zu geben und das Tempo zu verdoppeln.</p>
<p>Begleitet wird <em>Alf Hågedal</em> von <em>Gabriel Karlsson</em> (Gitarre) und <em>Christian Karlsson</em> (Kontrabaß). Aufgenommen wurde das Stück 2016 von <em>Jan Olsson</em>.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54292066522/">Gypsy Swing</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>An accordion player, a man on the double bass, and a man on a guitar are sitting on a stage in a nightclub, performing Swing Jazz to a cheerful audience, in a colorful French comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2025012802_all_of_me/</guid>
  <pubDate>Tue, 28 Jan 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025012802_all_of_me/images/gypsyswing.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apple Patchday</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025012801_apple_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54060264503/"><img src="https://kantel.github.io/posts/2025012801_apple_patchday/images/apple2-b.jpg" class="img-fluid"></a></p>
<p>Nach dem <a href="https://kantel.github.io/posts/2025010702_ios_update/">Notfall-Update Anfang Januar</a> für seine mobilen Geräte hat der Riese aus Cupertino mit dem angebissenen Apfel im Logo nun seinen regulären, monatlichen Flickentag herausgehauen. Und wie immer sind der Updates so viele, daß ich sie nur <em>en bloc</em> ankündigen kann:</p>
<section id="apple-veröffentlicht-macos-sequoia-15.3" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sequoia-15.3">Apple veröffentlicht macOS Sequoia 15.3</h2>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sequoia 15.3 freigegeben und korrigiert damit auch wieder <a href="https://support.apple.com/en-us/122068">Sicherheitsprobleme</a>.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-sonoma" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-sonoma">Apple veröffentlicht Sicherheitsupdate für macOS Ventura und Sonoma</h2>
<p>Apple hat auch das Sicherheitsupdate auf <a href="https://support.apple.com/en-us/122070">macOS Ventura 13.7.3</a> und <a href="https://support.apple.com/en-us/122069">macOS Sonoma 14.7.3</a> freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-ios-ipados-18.3" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-ios-ipados-18.3">Apple veröffentlicht iOS / iPadOS 18.3</h2>
<p>Wie angekündigt hat Apple das Update auf iOS 18.3 und iPadOS 18.3 bereitgestellt. Die Updates bieten viele neue Funktionen und Fehlerbehebungen und korrigieren <a href="https://support.apple.com/en-us/122066">kritische Sićherheitslücken</a>.</p>
<p>Das Update auf auf iOS 18.3 und iPadOS 18.3 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-ipados-17.7.4-für-ältere-systeme" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-ipados-17.7.4-für-ältere-systeme">Apple veröffentlicht iPadOS 17.7.4 für ältere Systeme</h2>
<p>Apple hat nun das Update auf iPadOS 17.7.4 für ältere iPads und für die Anwender, die nicht auf iOS/iPadOS 18 updaten wollen, bereitgestellt. Das Update behebt <a href="https://support.apple.com/en-us/122067">kritische Sicherheitslücken</a>.</p>
<p>Das Update auf auf iPadOS 17.7.4 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-11.3" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-11.3">Apple veröffentlicht watchOS 11.3</h2>
<p>Und wie gewohnt zum Schluß die Uhr: Apple hat für die Apple Watch watchOS 11.3 bereitgestellt, bietet damit im wesentlichen Fehlerbehebungen und schließt <a href="https://support.apple.com/en-us/122071">Sicherheitslücken</a>.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p><em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54060264503/">Mad Hatter gives Apple to a sexy Woman</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>the mad hatter gives a sexy naked woman, with big boops, and a nice butt a apple in the summer enchanted forest colored french comic style</em>«. Modell: Flux.1.1 [pro], Style: None.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025012801_apple_patchday/</guid>
  <pubDate>Tue, 28 Jan 2025 12:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025012801_apple_patchday/images/apple2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tuesday JS Version 52 erschienen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025012302_tuesday_js_v52/</link>
  <description><![CDATA[ 




<p><a href="https://private-user-images.githubusercontent.com/13263198/384584356-847a7eba-af8a-4227-b8f7-d15c7b55cf9e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzc2NDM4NjIsIm5iZiI6MTczNzY0MzU2MiwicGF0aCI6Ii8xMzI2MzE5OC8zODQ1ODQzNTYtODQ3YTdlYmEtYWY4YS00MjI3LWI4ZjctZDE1YzdiNTVjZjllLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAxMjMlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMTIzVDE0NDYwMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTU2NTlhYTQzYjI0NjRhMWJkNzE3OTEwYWFhZGNkYTUzNzQ5N2EyMzMzZGRkZDgxMmEyNzkxMjU2YzliNGY2OTgmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.jB-FTbGgkLa8KtoyKIDqkxUt2upmzStVRa8_PRNDW64"><img src="https://kantel.github.io/posts/2025012302_tuesday_js_v52/images/tuesdayjs51-b.png" class="img-fluid"></a></p>
<p>Hatte ich zum Erscheinen der Version 50 von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> im Oktober letzten Jahres <a href="https://kantel.github.io/posts/2024100403_tuesday_js_v50/">schon geklagt</a>, daß es offensichtlich mein Schicksal sei, die – zugegeben häufigen – Updates der netten kleinen Engine für interaktive Geschichten, Visual Novels und anderen Spielen oder Anwendungen, die mich mit ihrer graphischen Oberfläche immer ein wenig an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erinnert, zu übersehen, so hat nun dieses Schicksal erneut zugeschlagen:</p>
<p>Denn das Update auf die <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/51.0.0">Version 51</a> vom 9.&nbsp;November&nbsp;2024 ist komplett unbemerkt an mir vorbeigerauscht und das Update auf die <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/52.0.0">Version&nbsp;52</a> vom 14.&nbsp;Dezember letzten Jahres habe ich auch erst nach über einem Monat bemerkt.</p>
<p>Und das hat die nette kleine Engine eigentlich nicht verdient. Ich habe mir daher heute fest vorgenommen, möglichst bald mir ihr etwas anzustellen, am besten noch bevor ich von der Version&nbsp;53, die sicher schon mit den Hufen scharrt, wieder überrascht werde.</p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025012302_tuesday_js_v52/</guid>
  <pubDate>Thu, 23 Jan 2025 14:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025012302_tuesday_js_v52/images/tuesdayjs51.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025012301_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54254018891/"><img src="https://kantel.github.io/posts/2025012301_chrome_update/images/octopussy1-b.jpg" class="img-fluid"></a></p>
<p>Das Mittwochs-Update kommt gewiß, auch wenn es erst am Donnerstag ist: Google veröffentlicht das Update der Version 132 (132.0.6834.110/111) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2025/01/stable-channel-update-for-desktop_14.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54254018891/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A sexy female robot evades from a gigantic data octopus, colored french comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025012301_chrome_update/</guid>
  <pubDate>Thu, 23 Jan 2025 13:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025012301_chrome_update/images/octopussy1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bouncing Faces mit Pygame und Pygbag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025012101_bouncing_faces/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54279409693/"><img src="https://kantel.github.io/posts/2025012101_bouncing_faces/images/bouncingfaces-b.jpg" class="img-fluid"></a></p>
<p>Der <a href="https://kantel.github.io/posts/2025012001_pygbag_revisited/">großspurigen Ankündigung von gestern</a>, daß ich etwas mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame (CE)</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> anstellen und die Ergebnisse auch auf diesen Seiten einbinden möchte, müssen ja auch Taten folgen. Daher habe ich mein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Experiment vom <a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Mai letzten Jahres</a> wieder ausgegraben und das Ganze nach Pygame portiert.</p>
<p>Auch wenn ich doch gemerkt hatte, daß ich, weil ich schon ewig nichts mehr mit Pygame angestellt hatte, etliches nachschlagen mußte, war es einfacher, als ich dachte. Und das Ergebnis könnt Ihr hier bewundern (falls es nicht von alleine startet, auf »Ready to start!« klicken):</p>
<iframe src="pygbag/web/index.html" class="if16_9" name="Bouncing Faces">
</iframe>
<p>Fünfzig Emojis mit zufällig ausgewählten Bildern und in unterschiedlichen Größen wuseln über den Bildschirm und prallen von den Bildschirmrändern wieder ab.</p>
<p>Zwar hat der Pygame-Quellcode wegen des notwendigen <em>Boilerplates</em> nicht die Kürze eines vergleichbaren Processing- oder P5.js-Sketches, dennoch ist er eigentlich vergleichsweise kurz und übersichtlich geraten:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bouncing Faces</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pg</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pygame.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">locals</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Settings</span></span>
<span id="cb1-9">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb1-10">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Faces"</span></span>
<span id="cb1-11">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Frames per second</span></span>
<span id="cb1-12">N_FACES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>               <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of Faces</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb1-15">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Array mit den Bildern</span></span>
<span id="cb1-17">face_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face01.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face02.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face03.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face04.png"</span>,</span>
<span id="cb1-18">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face05.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face06.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face07.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face08.png"</span>,</span>
<span id="cb1-19">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face09.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face10.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face11.png"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"face12.png"</span>]</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Farben</span></span>
<span id="cb1-22">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2b3e50"</span>)</span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb1-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb1-28"></span>
<span id="cb1-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb1-31">        pg.init()</span>
<span id="cb1-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-33">        pg.display.set_caption(TITLE)</span>
<span id="cb1-34"></span>
<span id="cb1-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.time.Clock()</span>
<span id="cb1-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-37"></span>
<span id="cb1-38">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurücksetzen</span></span>
<span id="cb1-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb1-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.sprite.Group()</span>
<span id="cb1-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.faces <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N_FACES):</span>
<span id="cb1-44">            face <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Face(face_images[randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(face_images) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)])</span>
<span id="cb1-45">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.faces.append(face)</span>
<span id="cb1-46">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(face)</span>
<span id="cb1-47">    </span>
<span id="cb1-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pg.event.get():</span>
<span id="cb1-50">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.QUIT)</span>
<span id="cb1-51">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.KEYDOWN</span>
<span id="cb1-52">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.K_ESCAPE)):</span>
<span id="cb1-53">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing:</span>
<span id="cb1-54">                    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-55">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-56"> </span>
<span id="cb1-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># self.face.check_edges()</span></span>
<span id="cb1-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb1-60"></span>
<span id="cb1-61">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-62">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb1-63">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb1-64">        pg.display.flip()</span>
<span id="cb1-65"></span>
<span id="cb1-66">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-68">    </span>
<span id="cb1-69">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> game_over_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("Game Over")</span></span>
<span id="cb1-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span>    </span>
<span id="cb1-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Ende Class GameWorld</span></span>
<span id="cb1-73">    </span>
<span id="cb1-74"></span>
<span id="cb1-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Face</span></span>
<span id="cb1-76"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Face(pg.sprite.Sprite):</span>
<span id="cb1-77"></span>
<span id="cb1-78">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, img):</span>
<span id="cb1-79">        pg.sprite.Sprite.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb1-80">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Image</span></span>
<span id="cb1-81">        img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.image.load(os.path.join(DATAPATH, img)).convert_alpha()</span>
<span id="cb1-82">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)</span>
<span id="cb1-83">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.transform.scale(img, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-84">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb1-85">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r, WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-86">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-87">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)</span>
<span id="cb1-88">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.math.Vector2(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)</span>
<span id="cb1-89">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.math.Vector2(randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-90">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-91">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-92">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-93">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-94">    </span>
<span id="cb1-95">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-96">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.check_edges()</span>
<span id="cb1-97">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel</span>
<span id="cb1-98">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x</span>
<span id="cb1-99">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y</span>
<span id="cb1-100">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)</span>
<span id="cb1-101">        </span>
<span id="cb1-102">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_edges(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-103">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r):</span>
<span id="cb1-104">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-105">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r)</span>
<span id="cb1-106">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r):</span>
<span id="cb1-107">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-108">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r</span>
<span id="cb1-109">            </span>
<span id="cb1-110">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r):</span>
<span id="cb1-111">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-112">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r)</span>
<span id="cb1-113">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r):</span>
<span id="cb1-114">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-115">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.r</span>
<span id="cb1-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## End Class Face</span></span>
<span id="cb1-117"></span>
<span id="cb1-118"></span>
<span id="cb1-119"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --------------------------- Hauptprgramm --------------------------- #</span></span>
<span id="cb1-120">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb1-121">world.start_screen()</span>
<span id="cb1-122"></span>
<span id="cb1-123"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb1-124"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb1-125">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb1-126">        world.reset()</span>
<span id="cb1-127">        world.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-128">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.playing:</span>
<span id="cb1-129">            world.clock.tick(FPS)</span>
<span id="cb1-130">            world.events()</span>
<span id="cb1-131">            world.update()</span>
<span id="cb1-132">            world.draw()</span>
<span id="cb1-133">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb1-134">        world.game_over_screen()</span>
<span id="cb1-135">    pg.quit()</span>
<span id="cb1-136">    sys.exit()</span>
<span id="cb1-137"></span>
<span id="cb1-138">asyncio.run(main())</span></code></pre></div>
<p>Die Bildchen habe ich den <a href="https://kantel.github.io/posts/2024042902_openmoji/">hier schon einmal vorgestellten</a>, freien <a href="https://kantel.github.io/posts/2024042902_openmoji/">OpenMojis</a> entnommen, mit denen ich schon lange etwas anstellen wollte. Und den <a href="https://github.com/kantel/pygameprojects/tree/master/bouncingfaces">Quellcode mit allen Assets</a> findet Ihr natürlich auch wieder in meinem GitHub-Repositorium. Habt also Spaß damit!</p>
<p>In meinem Kopf brodeln schon wieder etliche Ideen, was ich mit Pygame und Pygbag noch anstellen könnte. Denn Pygame im Browser ist einfach geil. <em>Still digging!</em></p>



 ]]></description>
  <category>Pygame</category>
  <category>Pygbag</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025012101_bouncing_faces/</guid>
  <pubDate>Tue, 21 Jan 2025 13:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025012101_bouncing_faces/images/bouncingfaces.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pygame und Pygbag revisited</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025012001_pygbag_revisited/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54277764208/"><img src="https://kantel.github.io/posts/2025012001_pygbag_revisited/images/pygbag-b.jpg" class="img-fluid"></a></p>
<p>Auch für mich bringt das neue Jahr neue Herausforderungen. Ich habe mir nämlich <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a></strong> wieder <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">vorgeknöpft</a>, den Übersetzer, der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Spiele, aber auch andere Python-Programme, nach WebAssembly (WASM) übersetzt und sie so im Browser spielbar macht. Und gegenüber meinem <a href="https://kantel.github.io/posts/2024042101_pygbag_standalone/">letzten Versuch vom April vergangenen Jahres</a> habe ich einige Unklarheiten ausräumen können.</p>
<p>Als Basis habe ich wieder mein <a href="https://kantel.github.io/posts/2023060804_pygbag_oop/">objektorientiertes Template</a> genommen, das sich an (m)ein an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/greenfoot.html">Greenfoot</a> angelehntes <a href="https://kantel.github.io/posts/2023010701_pygame_oop/">Pygame Framework</a> orientiert. Und mittlerweile weiß ich, daß der Kommandozeilenbefehl</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pygbag</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>your.app.folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>der Befehl ist, der aus dem Python-Programm die webtaugliche Web-Applikation erstellt und diese im Verzeichnis <code>web/build</code> des Projekts ablegt. Er muß also jedesmal, bevor ein Projekt im Web publiziert werden soll, aufgerufen werden. Und auch für das Problem der Datenverzeichnisse habe ich eine Lösung gefunden. Statt mich an dem <code>current working directory</code> oder <code>cwd</code> zu orientieren, wo jede Entwicklungsumgebung eine andere Meinung hat, wo das <code>cwd</code> eigentlich liegt, orientiere ich mich mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span></code></pre></div>
<p>an dem Pfad, in dem die Datei <code>main.py</code> liegt.</p>
<p>Während meiner Experimente war noch ein weiteres Problem aufgetaucht: Hat man einmal mit <code>pygbag</code> den lokalen Server gestartet, ist dieser belegt und daher lässt sich nach einer Änderung dieser auf dem gleichen Port (per default <code>8000</code>) nicht erneut aufrufen. Ich habe für dieses Problem bisher nur eine radikale Lösung gefunden. Mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> lsof <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i:8000</span></span></code></pre></div>
<p>lasse ich mir im Terminal die <code>PID</code> des Prozesses ausgeben, der den Port 8000 blockiert, um diesen dann mit</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PID</span></span></code></pre></div>
<p>oder in hartnäckigen Fällen mit</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">kill</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-9</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PID</span>  //to forcefully kill the port</span></code></pre></div>
<p>brutal abzuwürgen. Den Wert für die <code>$PID</code> gibt mir der erste Befehl aus.</p>
<p>Ich habe erst einmal zur Vorbereitung ein einfaches Boilerplate angelegt, das das im <a href="https://www.flickr.com/photos/schockwellenreiter/54277764208/">obigen Bannerbild</a> gezeigte Progrämmchen ausgibt. Der Quellcode ist dieser:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygbag Boilerplate</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pg</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pygame.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">locals</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Settings</span></span>
<span id="cb6-8">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb6-9">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pygbag Boilerplate"</span></span>
<span id="cb6-10">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Frames per second</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb6-13">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Farben</span></span>
<span id="cb6-16">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dunkelgrau</span></span>
<span id="cb6-17"></span>
<span id="cb6-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb6-19"></span>
<span id="cb6-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb6-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb6-22"></span>
<span id="cb6-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb6-25">        pg.init()</span>
<span id="cb6-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb6-27">        pg.display.set_caption(TITLE)</span>
<span id="cb6-28"></span>
<span id="cb6-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.time.Clock()</span>
<span id="cb6-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb6-31"></span>
<span id="cb6-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurücksetzen</span></span>
<span id="cb6-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb6-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.sprite.Group()</span>
<span id="cb6-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player()</span>
<span id="cb6-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player)</span>
<span id="cb6-38">    </span>
<span id="cb6-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game Loop</span></span>
<span id="cb6-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb6-42">  </span>
<span id="cb6-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pg.event.get():</span>
<span id="cb6-45">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.QUIT)</span>
<span id="cb6-46">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.KEYDOWN</span>
<span id="cb6-47">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pg.K_ESCAPE)):</span>
<span id="cb6-48">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing:</span>
<span id="cb6-49">                    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb6-50">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb6-51"> </span>
<span id="cb6-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-53">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb6-54"></span>
<span id="cb6-55">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-56">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb6-57">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb6-58">        pg.display.flip()</span>
<span id="cb6-59"></span>
<span id="cb6-60">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb6-62">    </span>
<span id="cb6-63">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> game_over_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("Game Over")</span></span>
<span id="cb6-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span>    </span>
<span id="cb6-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Ende Class GameWorld</span></span>
<span id="cb6-67">    </span>
<span id="cb6-68"></span>
<span id="cb6-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Player</span></span>
<span id="cb6-70"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player(pg.sprite.Sprite):</span>
<span id="cb6-71"></span>
<span id="cb6-72">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-73">        pg.sprite.Sprite.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb6-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Image</span></span>
<span id="cb6-75">        img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pg.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pygbag_logo.png"</span>)).convert_alpha()</span>
<span id="cb6-76">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img</span>
<span id="cb6-77">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb6-78">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-79">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)</span>
<span id="cb6-80">    </span>
<span id="cb6-81">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb6-82">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb6-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## End Class Player</span></span>
<span id="cb6-84"></span>
<span id="cb6-85"></span>
<span id="cb6-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --------------------------- Hauptprgramm --------------------------- #</span></span>
<span id="cb6-87">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb6-88">world.start_screen()</span>
<span id="cb6-89"></span>
<span id="cb6-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb6-91"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb6-92">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb6-93">        world.reset()</span>
<span id="cb6-94">        world.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb6-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.playing:</span>
<span id="cb6-96">            world.clock.tick(FPS)</span>
<span id="cb6-97">            world.events()</span>
<span id="cb6-98">            world.update()</span>
<span id="cb6-99">            world.draw()</span>
<span id="cb6-100">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb6-101">        world.game_over_screen()</span>
<span id="cb6-102">    pg.quit()</span>
<span id="cb6-103">    sys.exit()</span>
<span id="cb6-104"></span>
<span id="cb6-105">asyncio.run(main())</span></code></pre></div>
<p>Dieser Boilerplate kann sowohl in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> wie auch in jeder anderen IDE genutzt werden (ich habe dies auch mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> getestet). Und da ich im Sommer ja schon <a href="https://kantel.github.io/posts/2024081502_pygame_ce/">feststellen mußte</a>, daß Pygbag nur noch die Pygame-Fork <a href="https://pyga.me/">Pygame-CE</a> <em>(Pygame Community Edition)</em> unterstützt, habe ich mir mit <code>conda</code> eine virtuelle Umgebung für Pygame-CE erstellt, in der ich meine Versuche mit Pygbag durchführen möchte. Und auch Thonny habe ich ein eigenes Pygame-CE spendiert. Da sich hier Pygame und Pygame-CE in die Quere kamen, habe ich in Thonny Pygame deinstallieren müssen.</p>
<p>Wer damit rumspielen will, das Pygbag-Boilerplate findet Ihr nicht nur auf dieser Seite, sondern auch (mit den Assets) in <a href="https://github.com/kantel/pygameprojects/tree/master/pygbag/pygbag_boilerplate">meinem GitHub-Repositorium</a>. Auch ich habe vor, in der nächsten Zeit einiges mit Pygame-CE und Pygbag anzustellen. Denn Pygame im Browser, das hat schon was. <em>Still digging!</em></p>



 ]]></description>
  <category>Pygame</category>
  <category>Pygbag</category>
  <category>Python</category>
  <category>Spieleprogrammierung</category>
  <category>OOP</category>
  <guid>https://kantel.github.io/posts/2025012001_pygbag_revisited/</guid>
  <pubDate>Mon, 20 Jan 2025 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025012001_pygbag_revisited/images/pygbag.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neuanfänge: Videos zum Wochenende</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025011702_new_beginnings/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54151150373/"><img src="https://kantel.github.io/posts/2025011702_new_beginnings/images/kelleroffice-b.jpg" class="img-fluid"></a></p>
<p>Die Processing Foundation hat ein Förderprogramm unter dem Namen <a href="https://medium.com/@ProcessingOrg/new-beginnings-wrapping-up-the-first-pr05-developer-grant-program-71e82080032c">Processing Foundation Software Development Grant</a> (kurz: <em>pr05 Grant</em>, ausgesprochen »pros«) ins Leben gerufen. Diese neue Mentoring-Initiative soll das berufliche Wachstum von Softwareentwicklerinnen und -entwicklern durch praktische Beteiligung an Open-Source-Projekten unterstützen. In einer ersten Iteration des Programms haben sie fünf Entwicklerinnen mit Stipendien in Höhe von 10.000 US-Dollar und Mentoring durch erfahrene Open-Source-Mitwirkende unterstützt.</p>
<p>Das Thema des Programms dieses ersten Jahres war »Neuanfänge« und reagierte auf einen wichtigen Übergangsmoment für die Processing-Foundation-Projekte. <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a> macht nach dem Ausscheiden seiner Gründer wieder Fortschritte und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> bereitet sich auf die Veröffentlichung von Version 2.0 vor. Gleichzeitig wird der p5.js-Editor einem umfassenden Upgrade unterzogen, bei dem eine neuere und leistungsfähigere Version der Softwarebibliothek integriert wird, die die Codebearbeitungsfunktionen unterstützt.</p>
<p>Die Initiative hat eine Liste von fünf Projekten zusammengestellt, um diese Übergänge zu unterstützen, und ihre Stipendiaten ermutigt, sich intensiv mit der Infrastruktur auseinanderzusetzen. Einige dieser Projekte konzentrierten sich auf die Wartung bestehender Systeme, andere drehten sich um den Bau von Prototypen, die die kritische Infrastruktur erweitern würden. Diese fünf Projekte sind:</p>
<section id="diya-solanki-erstellen-einer-processing-vscode-erweiterung" class="level3">
<h3 class="anchored" data-anchor-id="diya-solanki-erstellen-einer-processing-vscode-erweiterung">Diya Solanki: Erstellen einer Processing VSCode-Erweiterung</h3>
<iframe class="if16_9" src="https://www.youtube.com/embed/KsHP7RExNzM?si=ugEb1pGmFEHa7bun" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><a href="https://medium.com/@diya.solanki.31/my-journey-with-pr05-processing-foundation-2e6c629d59da">Dieses Projekt</a> konzentrierte sich auf die Integration von Processing in <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> und erstellte eine <em>Language Server Protocol</em> (LSP)-Erweiterung, um robuste IntelliSense-Funktionen für Processing-Skizzen (<code>.pde-Dateien</code>) bereitzustellen, wie Dokumentation beim Hovern, Codevervollständigung, Syntaxhervorhebung und Skizzenausführung innerhalb von VSCode. Es wurde unter der GPL-2.0-Lizenz auf <a href="https://github.com/diyaayay/processing-language-server-extension/">GitHub veröffentlicht</a> und kann vom Visual Studio Code Marketplace <a href="https://marketplace.visualstudio.com/items?itemName=DiyaSolanki.processing-language-server-extension">installiert werden</a>.</p>
</section>
<section id="miaoye-que-überarbeitung-des-friendly-error-system-fes-für-p5.js-2.0" class="level3">
<h3 class="anchored" data-anchor-id="miaoye-que-überarbeitung-des-friendly-error-system-fes-für-p5.js-2.0">Miaoye Que: Überarbeitung des Friendly Error System (FES) für p5.js 2.0</h3>
<iframe class="if16_9" src="https://www.youtube.com/embed/HjtJ7JESJqo?si=ZFI1U2sVEIkns1qO" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Das <a href="https://medium.com/@pure.chinese.honey/6f589b7a453b">Friendly Error System</a> (FES 🌸) soll neuen Programmierern helfen, indem es Fehlermeldungen in einfacher, benutzerfreundlicher Sprache bereitstellt. Eine <a href="https://github.com/processing/p5.js/blob/main/contributor_docs/friendly_error_system.md">Einführung</a> gibt es hier.</p>
</section>
<section id="dora-do-prototyp-eines-kollaborativen-desktop-editors-für-processing" class="level3">
<h3 class="anchored" data-anchor-id="dora-do-prototyp-eines-kollaborativen-desktop-editors-für-processing">Dora Do: Prototyp eines kollaborativen Desktop-Editors für Processing</h3>
<iframe class="if16_9" src="https://www.youtube.com/embed/woGZGg5tvxU?si=FJbOWqqYJepCbYER" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Dora entwickelte den <a href="https://doradocodes.github.io/processing-collab-editor/">Processing Collaborative Editor</a> (PCE), einen Prototypen einer Desktop-App für Mac und Windows, der um neue Möglichkeiten, mit Processing-Skizzen zu arbeiten, erweitert wurde. PCE legt den Schwerpunkt auf die Zusammenarbeit in Echtzeit und ermöglicht es mehreren Benutzern, gemeinsam an Skizzen zu arbeiten, wie sie es bei einem Google-Dokument tun können.</p>
<p>Das Projekt wurde <a href="https://medium.com/@doradocodes/prototype-a-collaborative-editor-for-processing-10a665063d7b">hier vorgestellt</a> und unter der GPL-3.0-Lizenz auf <a href="https://github.com/doradocodes/processing-collab-editor">GitHub veröffentlicht</a>. Eine <a href="https://github.com/processing/pr05-grant/blob/main/2024_NewBeginnings/final-reports/pr05_2024_Final_report_DoraDo.md">technische Zusammenfassung</a> gibt es hier.</p>
</section>
<section id="nahee-kim-upgrade-von-codemirror-auf-version-6-für-den-p5.js-editor" class="level3">
<h3 class="anchored" data-anchor-id="nahee-kim-upgrade-von-codemirror-auf-version-6-für-den-p5.js-editor">Nahee Kim: Upgrade von CodeMirror auf Version 6 für den p5.js-Editor</h3>
<iframe class="if16_9" src="https://www.youtube.com/embed/b0A5zQlPbf4?si=URomiWadqJo93CNa" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Nahee arbeitete an der Aktualisierung des p5.js-Webeditors auf CodeMirror 6. Obwohl das Projekt noch läuft, wird dieses Update den Editor dank der neuen Funktionen in CodeMirror 6 letztendlich zugänglicher und benutzerfreundlicher machen, insbesondere auf mobilen Geräten.</p>
</section>
<section id="claudine-chen-vereinfachung-des-workflows-für-processing-bibliotheken--tools-und--modi" class="level3">
<h3 class="anchored" data-anchor-id="claudine-chen-vereinfachung-des-workflows-für-processing-bibliotheken--tools-und--modi">Claudine Chen: Vereinfachung des Workflows für Processing-Bibliotheken, -Tools und -Modi</h3>
<iframe class="if16_9" src="https://www.youtube.com/embed/WmUl5xTQzpw?si=WqY2BQDGH7GmGb5O" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Claudine arbeitete an der Vereinfachung des Prozesses zum Erstellen und Verwalten von Processing-Bibliotheken. Sie <a href="https://medium.com/@cloudnine_95355/simplifying-the-workflow-for-processing-libraries-tools-and-modes-abcbe5c67c8b">verbesserte das Processing Library Template</a>, ein Tool, das Entwicklern beim Erstellen neuer Bibliotheken hilft, indem sie die Verwendung vereinfachte und neue Funktionen für die lokale Einrichtung und Automatisierung der Dokumentation hinzufügte. Sie aktualisierte auch die Art und Weise, wie neue Bibliotheken zu Processing hinzugefügt werden, und ersetzte einen komplizierten manuellen Prozess durch ein automatisiertes System, das schneller und zuverlässiger ist.</p>
<p>Das <a href="https://github.com/processing/processing-library-template/">Processing Library Template</a> wie auch die <a href="https://github.com/processing/processing-contributions/">Processing Contributions</a> sind ebenfalls unter einer GPL auf GitHub veröffentlicht.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54151150373/">Keller-Arbeitsplatz</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>colored french comic style, an old man, white hair, clean-shaven, no beard, blue eyes, glasses, smiling, sits at a desk in front of huge monitors, looking. videos, there are other open books on the desk, and there is a large mug of steaming coffee next to them, and a computer keyboard in front of the monitor, on the wall there are shelves with files and books, the autumn sun shines through a large window</em>«. Negative Prompt: »<em>lowres, error, cropped, worst quality, low quality, jpeg artifacts, out of frame, watermark, signature, ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, tie</em>«. Modell: OpenArt SDXL, Style: None.</p>


</section>

 ]]></description>
  <category>Creative Coding</category>
  <category>Processing</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2025011702_new_beginnings/</guid>
  <pubDate>Fri, 17 Jan 2025 22:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025011702_new_beginnings/images/kelleroffice.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft veröffentlicht Update für Office for Mac</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025011701_update_office_mac/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54060471790/"><img src="https://kantel.github.io/posts/2025011701_update_office_mac/images/apple-b.jpg" class="img-fluid"></a></p>
<p>Microsoft liefert mit dem Update auf 16.93 für Office 365, 2021 und 2024 for Mac natürlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhält man die Korrekturen am einfachsten über Microsofts AutoUpdate – in einem beliebigen Office-Programm über Menü: <code>Hilfe &gt; Auf Updates überprüfen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: Microsoft Office unterstützt stets nur die drei Hauptversion von macOS. <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-für-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">Momentan sind dies Sequoia, Sonoma und Ventura</a>. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54060471790/">Mad Hatter gives Apple to a sexy Woman</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>the mad hatter gives a sexy naked woman, with big boops, and a nice butt a apple in the summer enchanted forest colored french comic style</em>«. Modell: Flux.1.1 [pro], Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025011701_update_office_mac/</guid>
  <pubDate>Fri, 17 Jan 2025 21:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025011701_update_office_mac/images/apple.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025011501_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54253118742/"><img src="https://kantel.github.io/posts/2025011501_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Es ist heute wieder Mittwoch und Mittwochs korrigiert unser aller Datenkrake ihr Flaggschiff: Google veröffentlicht das Update der Version 132 (132.0.6834.83/84) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2025/01/stable-channel-update-for-desktop_14.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54253118742/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A sexy female robot evades from a gigantic data octopus, colored french comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025011501_chrome_update/</guid>
  <pubDate>Wed, 15 Jan 2025 11:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025011501_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Baywobau-Bauzaun blockiert Bürgersteig</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025011201_baywobau/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54262018988/"><img src="https://kantel.github.io/posts/2025011201_baywobau/images/bauzaun-b.jpg" class="img-fluid"></a></p>
<p>Seit Tagen blockiert dieser vermutlich durch den Wind umgerissene Bauzaun (er war schon vorher miserabel verankert) der Firma Baywobau (<a href="https://www.baywobau.de/de/wohnungen-und-haeuser/kauf/project-civitano-berlin">darauf wird für »preisgünstige« Eigentumswohnungen geworben</a>) den Fußweg in der Neuköllner Bürgerstraße so massiv, daß kein Durchkommen mehr möglich ist. Und weder das Ordnungsamt noch die Baufirma interessiert das die Bohne.</p>
<p>Mit Fußgängern kann man das ja machen. Denn würde der Bauzaun die Durchfahrt für Autos nur leicht behindern, wäre er schon längst weggeräumt worden.</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2025 by <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Behördenversagen</category>
  <category>Failed City Neukölln</category>
  <category>Gentrifizierung</category>
  <category>Neukölln</category>
  <category>Verkehr</category>
  <guid>https://kantel.github.io/posts/2025011201_baywobau/</guid>
  <pubDate>Sun, 12 Jan 2025 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025011201_baywobau/images/bauzaun.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der rosarote Panther (mit fünf Kontrabässen)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025011002_pink_panther/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54258118596/"><img src="https://kantel.github.io/posts/2025011002_pink_panther/images/pinkpanther-b.jpg" class="img-fluid"></a></p>
<p>Was kann eigentlich einen Kontrabaß noch toppen? <strong>Fünf Kontrabässe</strong>! Das beweist der Musiker und Musikpädagoge <em><a href="https://www.bozoparadzik.com/de/biography.html">Božo Paradžik</a></em>, der hier zusammen mit vier seiner Studentinnen und Studenten auf fünf Kontrabässen (und <strong>nur</strong> auf fünf Kontrabässen) <em>Henry Mancinis</em> berühmte und Oscar-prämierte Filmmusik »<a href="https://de.wikipedia.org/wiki/The_Pink_Panther_Theme">The Pink Panther Theme</a>« aufführt:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/SRIIO408ats?si=R75hyWrRRWM7G4dF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Die Musikerinnen und Musiker sind (von links nach rechts): <em>Oskari Hänninen</em>, <em>Božo Paradžik</em> (auch Arrangement), <em>Madlaina Küng</em>, <em>Cecilia Perfetti</em> und <em>Marko Hristoskov</em>. Möge die Kraft der Kontrabässe mit Euch sein!</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54258118596/">Pink Panther with Double Bass</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A pink panther plays a double bass in a weekly market in Paris amidst a crowd of people. It is spring and the spring sun illuminates the scene. The market is bordered by a picturesque front of old buildings with balconies. colored french comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2025011002_pink_panther/</guid>
  <pubDate>Fri, 10 Jan 2025 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025011002_pink_panther/images/pinkpanther.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues Py5-Release: 0.10.4a2 (und ein Thonny-Update)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025011001_py5_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53828565515/"><img src="https://kantel.github.io/posts/2025011001_py5_update/images/pythonglasses-b.jpg" class="img-fluid"></a></p>
<p>In der letzten Woche des vergangenen Jahres verkündete <em>James Schmitz</em> stolz, daß mit dem <a href="https://ixora.io/blog/new-release-0104a2/">Py5-Release 0.10.4a2</a> er die vierte und letzte Version für 2024 von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>, dem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a>-Python3-Modul, das Processings Original-Bibliotheken (via JPype) nutzt, freigegeben hat. Der Hauptgrund für dieses Release ist, daß er das lange ausstehende <a href="https://py5coding.org/content/macos_users.html">macOS-Problem</a> durch einen neuen Ansatz zur Fensterfokussierung, der nicht nur das macOS-Problem behebt, sondern auch die Codequalität unter macOS und Windows verbessert, gelöst hat.</p>
<p>Es existieren aber immer noch kleine Probleme:</p>
<ol type="1">
<li>Leider wird auch das Fenster (also Terminal, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> (-<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">Desktop</a>)), das Ihr zum Importieren von Py5 verwendet habt, defokussiert. Das kann zur Folge haben, daß der Ausgabefenster mit dem Canvas <strong>hinter</strong> dem Fenster zum Beispiel von JuypterLab-Desktop oder Thonny versteckt wird.</li>
<li>Auf alten Macs mit Intel-Prozessoren und macOS 12.7.6 (Monterey), die nicht mehr auf eine aktuellere macOS-Version aktualisiert werden können (Somona oder neuer), stürzt der IPython-Kernel unter Jupyter gnadenlos ab, wenn der erste auszuführende Sketch den Standard-Renderer (JAVA2D), und die spätere Ausführung eines Sketches einen OpenGL-Renderer verwendet. Es ist nicht klar, ob dies an der Intel-CPU liegt oder an der alten (und nicht mehr unterstützten) macOS-Version 12.7.6. Auch wenn dieses Problem vermutlich nur wenige Py5-Nutzer betrifft, hofft <em>James Schmitz</em> auf ein Feedback aus der Community, um das Problem zu verstehen und zu lösen.</li>
</ol>
<p>Da ich ja momentan für Py5-Projekte mehr auf Jupyterlab-Desktop (in einer <a href="https://kantel.github.io/posts/2024062801_conda_env_python/">eigenen, virtuellen Py5-Umgebung</a>), denn auf Thonny setze, habe ich diese mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py5</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> py5 py5jupyter</span></code></pre></div>
<p>aktualisiert. Dabei sagte mir <code>pip</code> daß Py5Jupyter noch aktuell sei und führte nur das Update auf das neue Py5 durch. Ein kurzer Test bestätigte mir, daß die Aktualisierung problemlos gelungen war.</p>
<p>Da ich aber weiß, daß einige meiner Leserinnen und Leser (speziell mein Freund aus Bremen), gerne mit Thonny arbeiten, habe ich auch dieses aktualisiert. Es gibt eine <a href="https://github.com/thonny/thonny/releases/tag/v4.1.7">neue Version 4.17</a> von Thonny, die Ihr wie gewohnt über das Menü <code>Werkzeuge -&gt; Verwalte Plugins…</code> einspielen könnt. Das Plugin <a href="https://github.com/tabreturn/thonny-py5mode">thonny-py5mode</a> ist seit <a href="https://kantel.github.io/posts/2024111401_py5_updates/">meinem letzten Update</a> unverändert geblieben. Das könnt Ihr ebenfalls über <code>Verwalte Plugins…</code> überprüfen und gegebenenfalls aktualisieren.</p>
<p>Da ja <em>Daniel Shiffmans</em> neues »<a href="https://natureofcode.com/">The Nature of Code</a>« mit den JavaScript/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Sketchen endlich auch <a href="https://kantel.github.io/posts/2024121701_drei_p5js_buecher/">in meiner Bibliothek eingetroffen</a> ist, scharrt ja mein Projekt, wenigstens Teile daraus nach Python/Py5 zu portieren, wieder mit den Hufen. Die neue Py5-Version ist dabei für die Motivation sicher sehr hilfreich. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53828565515/">Python with Glasses</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A python with glasses+ and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Py5</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Jupyterlab Desktop</category>
  <category>Thonny</category>
  <guid>https://kantel.github.io/posts/2025011001_py5_update/</guid>
  <pubDate>Fri, 10 Jan 2025 14:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025011001_py5_update/images/pythonglasses.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 134.0 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010803_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54253125450/"><img src="https://kantel.github.io/posts/2025010803_thunderbird_update/images/donnervogel-b.jpg" class="img-fluid"></a></p>
<p>Wie fast immer jagt der Donnervogel den Feuerfuchs <a href="https://kantel.github.io/posts/2025010701_firefox_update/">genau einen Tag später</a>: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 134.0 freigegeben und damit auch wieder <a href="https://www.thunderbird.net/en-US/thunderbird/134.0/releasenotes/">Sicherheitslücken behoben</a>.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54253125450/">Thunderbird hunts Firefox</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>illustration of a majestic thunderbird with colored feathers soaring above a mountain range during a bright sunset, hunting a red firefox</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025010803_thunderbird_update/</guid>
  <pubDate>Wed, 08 Jan 2025 18:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010803_thunderbird_update/images/donnervogel.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>All That’s Jazz: Satchmo in Ost-Berlin (1965)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010801_satchmo_in_ost_berlin/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54254173381/"><img src="https://kantel.github.io/posts/2025010801_satchmo_in_ost_berlin/images/jazz-b.jpg" class="img-fluid"></a></p>
<p>Mein Vater als Klassik-Fan besaß nur weniger als eine Handvoll Jazz-Platten, alles Singles. Eine davon war ein Ausschnitt eines Konzertes, das <a href="https://de.wikipedia.org/wiki/Louis_Armstrong">Louis Armstrong</a> mit seinen All Stars 1965 im Friedrichstadtpalast in Ost-Berlin gegeben hatte. Auf der A-Seite war der <em>Tiger Rag</em> zu hören und auf der B-Seite gab es mit dem <em>Faithful Hussar</em> Armstrongs Version des Kölner Karnevalsschlagers vom <a href="https://de.wikipedia.org/wiki/Der_treue_Husar">Treuen Husaren</a>. Dies war vermutlich der Grund, warum mein Vater als Rheinländer sich überhaupt diese Single zugelegt hatte. Sie wurde jeden Rosenmontag bei uns zu Hause aufgelegt.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/okYPiP7K8OQ?si=XFoPyZ3pun0WPOZl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Dabei war die Scheibe gar nicht so einfach zu bekommen. Denn die <a href="https://de.wikipedia.org/wiki/Louis-Armstrong-Tournee_durch_die_DDR">Louis-Armstrong-Tournee durch die DDR</a> wurde in Westdeutschland so wenige Jahre nach dem Mauerbau weitestgehend ignoriert und boykottiert. Mein Vater hatte die Platte auch nur über den Umweg über die Niederlande bekommen, dort war sie bei Phillips erschienen.</p>
<p>Mich persönlich hatte die A-Seite mit dem <em>Tiger Rag</em> damals mit dem Jazz-Virus infiziert und ich hatte in der Folge kein Konzert von <em><a href="https://de.wikipedia.org/wiki/Chris_Barber">Chris Barber’s Jazzband</a></em>, von <em><a href="https://de.wikipedia.org/wiki/Acker_Bilk">Mr.&nbsp;Acker Bilk</a></em>, der <a href="https://de.wikipedia.org/wiki/Dutch_Swing_College_Band">Dutch Swing College Band</a> oder von <em><a href="https://de.wikipedia.org/wiki/Papa_Bue%E2%80%99s_Viking_Jazzband">Papa Bue’s Viking Jazzband</a></em> ausgelassen (andere Jazzbands besuchten Mitte bis Ende der 1960er Jahre die Stadthalle von Mülheim a.d. Ruhr nicht&nbsp;🥸).</p>
<p>Und in diesem Zusammenhang war ich sehr überrascht, als ich beim wilden Durchstöbern von YouTube zufällig auf einen <strong><a href="https://www.youtube.com/watch?v=okYPiP7K8OQ">kompletten Mitschnitt des Friedrichstadtpalastkonzertes vom 22. März 1965</a></strong> stieß. <em>Louis Armstrong</em> mit seinen All Stars <em>Tyree Glenn</em>, <em>Eddie Shu</em>, <em>Billy Kyle</em>, <em>Arvell Shaw</em>, <em>Jewel Brown</em> und <em>Danny Barcelona</em>.</p>
<p>In diesem fast zweistündigen Mitschnitt findet Ihr unter anderem den <em>Tiger Rag</em>, <em>Hello Dolly</em>, <em>Mack the Knife</em>, eine wunderschöne Version von <em>Blueberry Hill</em> und natürlich auch den <em>Treuen Husaren</em> (ab ca. 49:08). Da kamen Erinnerungen an meine Kindheit und frühe Jugend hoch. Ich habe mich über diesen Fund so gefreut, daß ich ihn Euch nicht vorenthalten wollte – auch wenn man der Bildqualität das Alter der Aufnahme anmerkt.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54254173381/">All that’s Jazz</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Louis Armstrong and his Jazz Band playing in 1965 live at Friedrichstadtpalast Berlin, colored french comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2025010801_satchmo_in_ost_berlin/</guid>
  <pubDate>Wed, 08 Jan 2025 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010801_satchmo_in_ost_berlin/images/jazz.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die ersten Updates in 2025 (4): Google Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010801_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54254254569/"><img src="https://kantel.github.io/posts/2025010801_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Auch 2025 scheint unser aller Datenkrake Mittwochs ein Aktualisierung ihres Flaggschiffes unters Volk bringen zu wollen: Google veröffentlicht das Update der Version 131 (131.0.6778.264/265) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2025/01/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54254254569/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A sexy female robot evades from a gigantic data octopus, colored french comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025010801_chrome_update/</guid>
  <pubDate>Wed, 08 Jan 2025 11:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010801_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die ersten Updates in 2025 (3): Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010703_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54068395902/"><img src="https://kantel.github.io/posts/2025010703_android_update/images/greenandroids-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen Sicherheitsupdate für Android (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/2025-01-01?hl=de">Pixel-Geräten</a>) wieder <a href="https://source.android.com/docs/security/bulletin/2025-01-01?hl=de">Sicherheitslücken geschlossen</a>.</p>
<p>Die Updates werden so nach und nach per OTA (over the air) auf Pixel 9,9 pro, 9 pro XL,Pixel 8a, Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54068395902/">Drei kleine Roboter</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Three little green robots dance on a colorful meadow in front of a small garden house, two goats in checkered vests watch them, the sun shines on the scenery, colored french comic style</em>«. Modell: Flux.1, Style: Comic Adventures.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025010703_android_update/</guid>
  <pubDate>Tue, 07 Jan 2025 19:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010703_android_update/images/greenandroids.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die ersten Updates in 2025 (2): Apple iOS/iPadOS</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010702_ios_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54060227909/"><img src="https://kantel.github.io/posts/2025010702_ios_update/images/apple-b.jpg" class="img-fluid"></a></p>
<p>Apple hat das Update auf iOS 18.2.1 und iPadOS 18.2.1 bereitgestellt. Die Updates <a href="https://support.apple.com/en-us/100100">bieten Fehlerbehebungen und korrigieren Sicherheitslücken</a>.</p>
<p>Das Update auf auf iOS 182.1 und iPadOS 18.2.1 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54060227909/">Mad Hatter gives Apple to a sexy Woman</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>the mad hatter gives a sexy naked woman, with big boops, and a nice butt a apple in the summer enchanted forest colored french comic style</em>«. Modell: Flux LoRA, Style: Bold Line Environment 2.0.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025010702_ios_update/</guid>
  <pubDate>Tue, 07 Jan 2025 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010702_ios_update/images/apple.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die ersten Updates in 2025 (1): Firefox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010701_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54252800933/"><img src="https://kantel.github.io/posts/2025010701_firefox_update/images/redpandas-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/134.0/releasenotes/">Version 134</a> und die neue <a href="https://www.mozilla.org/en-US/firefox/128.6.0/releasenotes/">Version ESR 128.6.0</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. Wie immer sind in diese Updates auch viele Veränderungen eingeflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54252800933/">Zwei rote Pandas</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Two red pandas in a snowy enchanted forest</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025010701_firefox_update/</guid>
  <pubDate>Tue, 07 Jan 2025 18:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010701_firefox_update/images/redpandas.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bye, bye Social Media</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010601_bye_social_media/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54249432599/"><img src="https://kantel.github.io/posts/2025010601_bye_social_media/images/adventurer-b.jpg" class="img-fluid"></a></p>
<p>Da ich weder die rechtsradikale Hetze eines <em>Elon Musk</em> und seiner Anhänger in Amerika und Deutschland, noch die Stupiditäten und Idiotien selbsternannter Influenzer und auch nicht die Moralwächter und Zensoren auf Fratzenbuch länger ertragen kann und will, habe ich mich zum Abschied aus den sogenannten sozialen Medien (die eigentlich eher asozial sind) entschlossen. Ich werde in Zukunft keine Beiträge mehr auf X (vormals Twitter) noch im Gesichtsbuch veröffentlichen.</p>
<p>Ich habe nämlich keine Lust mehr, mich über Beiträge von (angeblich) querdenkenden Verschwörungstheoretikern, AfD-Anhängern und anderen Rechtsradikalen oder Menschen, die mir mit Heilsversprechen das Geld aus der Tasche ziehen wollen, zu ärgern. Und auch die moralinsauren Zensoren auf Facebook mit ihren Restriktionen gehen mir auf den Senkel. Ich will nicht bei jedem Bildchen, das einen Nippel auf einer weiblichen Brust zeigt, darüber nachdenken müssen, ob es die Zensur der moralinsauren Sittenwächter passiert.</p>
<p>Lediglich auf <a href="https://mastodon.social/@kantel">Mastodon</a> werde ich noch präsent sein. Aber sie sind ebenfalls schon angezählt, denn auch hier habe ich schon die erste Mahnung wegen angeblich gegen die <del>Sittenregeln</del> Gemeinschaftsstandards verstoßende Bildchen bekommen. Doch aller schlechten Dinge sind drei. Noch zwei Anmahnungen, dann wird auch meine Zeit auf Mastodon zu Ende sein.</p>
<p>Meinen X-Account habe ich gelöscht (soweit wie das bei X überhaupt geht). Mein <a href="https://www.facebook.com/joerg.kantel/?locale=de_DE">Facebook-Account</a> besteht zwar weiterhin (da ich darüber viele Informationen aus meinem Kiez bekomme), wird aber von mir nicht mehr gepflegt werden. Daher macht es auch keinen Sinn, mir über das Gesichtsbuch oder dem damit verheirateten Messenger Nachrichten schicken zu wollen.</p>
<p>Wer weiter wissen will, was bei mir und auf diesen Seiten passiert, der <em>Schockwellenreiter</em> hat einen <a href="https://kantel.github.io/index.xml">(Volltext-) RSS-Feed</a>, über den ihr in einem Feedreader Eures Vertrauens keinen Beitrag verpassen müsst.</p>
<p>Ich habe diesen Abschied zum Jahreswechsel durchgezogen. Es ist erstaunlich, wieviel ruhiger es seitdem bei mir geworden ist und wie sehr sich mein Blutdruck gesenkt hat. Ich kann Euch daher solch einen Schritt nur empfehlen!</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54249432599/">Steampunk Adventurer (leaving Social Media Town)</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A (clean-shaven)+ steampunk adventurer, wearing a hat, leaves a desert town with a bag over his shoulder. The town behind him is chaotic and several man and woman can be seen (fighting each other)+. colored french comic style</em>«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Digitales Leben</category>
  <category>Medien</category>
  <guid>https://kantel.github.io/posts/2025010601_bye_social_media/</guid>
  <pubDate>Mon, 06 Jan 2025 01:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010601_bye_social_media/images/adventurer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Vodafone tritt Esel</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025010401_vodafone/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54246122205/"><img src="https://kantel.github.io/posts/2025010401_vodafone/images/vodafonetrittesel-b.jpg" class="img-fluid"></a></p>
<p>Vor einigen Tagen hatte der Digital-Receiver meines Kabelanschlusses seinen Geist aufgegeben. Seitdem versuche ich vergeblich, bei Vodafone jemanden zu erreichen, der entweder den Receiver repariert oder mir ein Ersatzgerät schickt. Die Hotline »versprach« mir bei meinen Anrufen eine <strong>Wartezeit von 11&nbsp;Stunden</strong>, bis ich einen Support-Mitarbeiter ans Telephon bekäme (darum heißt sie ja auch <em>Hotline</em>), die Vodafone-eigene, gekünstelte Intelligenzia verstand mein Problem nicht und empfahl mir, den Router neu zu starten. (Meine Fritzbox funktioniert jedoch meistens, und wenn sie mal hängt, dann ist ein Neustart das Erste, was ich versuche, dafür brauche ich keinen Support – und was hat meine Fritzbox mit meinen defekten Digital-Receiver zu tun?)</p>
<p>Also habe ich versucht, mit meiner Kundennummer (die hatte ich noch in einer alten Email gefunden), mir auf <a href="https://www.vodafone.de/meinvodafone/">MeinVodafone</a> ein Konto anzulegen, um vielleicht darüber einen Ansprechpartner für den Support zu finden. Das klappte auch einigermaßen, nur als ich meinen Vertrag hinzufügen wollte, verlangten sie einen Online-Registrierungscode von mir, der mir angeblich mit meinem Vertrag zugesandt wurde.</p>
<p>Mein Vertrtag ist jedoch von 2010 und ich hatte ihn seinerzeit noch mit Kabel Deutschland abgeschlossen und damals mit Sicherheit auch keinen Online-Registrierungscode erhalten. Also habe ich einen neuen angefordert. Kabel Deutschland – äh, Vodafone will ihn mir nun per Schneckenpost zuschicken. Das dauere mindestens fünf Tage. Häh? Wozu habe ich meine Email-Adresse angegeben?</p>
<p>Also weitere fünf Tage, in denen ich keinen Support bekommen kann. Das heißt, ich bin dann mindestens zehn Tage ohne TV-Empfang (und bis dahin ist der Receiver ja immer noch nicht repariert).</p>
<p>Bisher behelfe ich mich mit meinem Chromebook und den Mediatheken. <del>Kabel Deutschland</del> Vodafone muß aufpassen, daß ich da nicht auf den Geschmack komme. Denn dann kündige ich meinen Kabelanschluß und empfange Fernsehen nur noch über mein Chromebook. Servicewüste Deutschland!</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54246122205/">Vodafone tritt Esel</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>(ultra-detailed) huge donkey, kicking old-fashioned television, vast desert landscape, vibrant french comic style, sunny bright colors, dynamic action pose, whimsical atmosphere, dry sandy terrain under a clear blue sky, exaggerated features and expressions, playful yet surreal vibe, cartoonish clouds, engaging composition, high-quality visual impact, encapsulating the humor and absurdity of the scene</em>«. Modell: Flux.1 [dev]</p>



 ]]></description>
  <category>Digitales Leben</category>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2025010401_vodafone/</guid>
  <pubDate>Sat, 04 Jan 2025 13:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025010401_vodafone/images/vodafonetrittesel.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
