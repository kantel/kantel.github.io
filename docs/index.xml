<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Mon, 03 Mar 2025 15:00:00 GMT</lastBuildDate>
<item>
  <title>Die Mediadaten zum Ende des Winters</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025030301_mediadaten/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54363135575/"><img src="https://kantel.github.io/posts/2025030301_mediadaten/images/badgerspring-b.jpg" class="img-fluid"></a></p>
<p>Mit dem ersten MÃ¤rz beginnt nicht nur ein neuer Monat, sondern â€“ <a href="https://de.wikipedia.org/wiki/Fr%C3%BChlingsanfang">zumindest meteorologisch</a> â€“ auch der FrÃ¼hing. Und das (zugegeben leicht kitschige) <a href="https://www.flickr.com/photos/schockwellenreiter/54363135575">Bannerbild oben</a> soll deutlich machen, wie ich den FrÃ¼hling in den letzten Wochen vermisst habe. Aber Sonnabend war auch der Beginn eines neuen Monats und daher ist es Zeit fÃ¼r die Zahlen, die hochtrabend manches Mal auch <em>Mediadaten</em> genannt werden: Im Februar 2025 hatte der <em>Schockwellenreiter</em> laut seinem nicht immer zuverlÃ¤ssigen, aber dafÃ¼r (hoffentlich!) datenschutzkonformen <del>GeiÃŸenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>6.179 Seitenaufrufe</strong>. Wie immer tÃ¤uscht diese Exaktheit der Ziffer eine Genauigkeit der Zahl nur vor, trotzdem freue ich mich Ã¼ber jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>ðŸ˜Ž &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>SchlieÃŸlich noch der Blick auf die <em>Top Five</em> des Vormonats, der auch dieses Mal wenig Ãœberraschungen aufweist:</p>
<ol type="1">
<li>Immer noch unangefochten an der Spitze liegt â€“ wie schon seit Monaten â€“ mein Beitrag Â»<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html">Bildgeneratoren und KÃ¼nstliche Intelligenz â€“ ohne Zensoren</a>Â« vom 10.&nbsp;Januar&nbsp;2024.</li>
<li>Darauf folgt, allerdings schon weit abgeschlagen, das thematisch Ã¤hnliche Â»<a href="https://kantel.github.io/posts/2025020701_ki_und_bildergeschichten/">KÃ¼nstliche Intelligenz und Bildergeschichten: Video-Tutorials zum Wochenende</a>Â« aus der ersten Februarwoche&nbsp;2025.</li>
<li>Dann meine Entdeckung von Capacities Â»<a href="https://kantel.github.io/posts/2025020301_capacities/">Ein weiterer Kandidat fÃ¼r mein Â»Zweites GehirnÂ«?</a>Â«</li>
<li>Und danach wieder ein fast ein Jahr alter Dauerbrenner: Â»<a href="https://kantel.github.io/posts/2024031501_atom_wird_pulsar/">Der Atom-Editor lebt â€“ und heiÃŸt jetzt Pulsar</a>Â« vom 15.&nbsp;MÃ¤rz&nbsp;2024.</li>
<li>Und den AbschluÃŸ macht eine weitere Vorstellung von Video-Tutorals zum Wochenende: Â»<a href="https://kantel.github.io/posts/2025013101_video_tutorials/">Creative Coding, Simulationen und Generative Art</a>Â«.</li>
</ol>
<p>Puh, damit bin ich gerade noch an dem Eindruck vorbeigeschlittert, ein monothematisches <del>Weblog</del> Kritzelheft zu fÃ¼hren. Schauen wir mal, was der MÃ¤rz uns bringen wird. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54363135575/">Ein Biber im FrÃ¼hling</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style, a beaver in a red dressing gown sits on a bench in the garden with a laptop on his lap, next to him a small table with a steaming cup of coffee. It is spring, many flowering plants and many small birds can be seen, the warm spring sun is bathing the scenery</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Mediadaten</category>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2025030301_mediadaten/</guid>
  <pubDate>Mon, 03 Mar 2025 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025030301_mediadaten/images/badgerspring.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Version 24.8.5 von LibreOffice</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025022801_libre_office_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54355486897/"><img src="https://kantel.github.io/posts/2025022801_libre_office_update/images/owoman-b.jpg" class="img-fluid"></a></p>
<p>Es muÃŸ nicht immer Microsoft sein, denn in der <a href="https://www.libreoffice.org/about-us/security/advisories/cve-2025-0514/">neuen Version 24.8.5 des quelloffenen Officepaketes LibreOffice</a> wurden zahlreiche neue Funktionen bereitgestellt und zudem wurden SicherheitslÃ¼cken behoben.</p>
<p>Die korrigierte Version kann <a href="https://de.libreoffice.org/download/download/">hier heruntergeladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54355486897/">(Libre-) Office Woman</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored French Comic Style. A sexy young woman with long red hair, green eyes and red lipstick is sitting in an office at a desk in front of a monitor and a keyboard. She is wearing a white, open blouse with a low neckline and a rust-colored vest. She has a pencil in one hand. On the desk is an open notepad, a cup with writing utensils and a stack of books. There are shelves on the walls with many more books and files. The spring sun is shining through a window in the background</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>LibreOffice</category>
  <category>ProduktivitÃ¤t</category>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025022801_libre_office_update/</guid>
  <pubDate>Fri, 28 Feb 2025 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025022801_libre_office_update/images/owoman.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische SicherheitslÃ¼cken in Chrome</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025022601_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54254439705/"><img src="https://kantel.github.io/posts/2025022601_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Heute ist wieder Mittwoch, unser aller Datenkrake bringt pÃ¼nktlich die wÃ¶chentliche Aktualisierung ihres Flaggschiffs unters Volk und daher mÃ¶chte ich an PÃ¼nktlichkeit nicht nachstehen: Google verÃ¶ffentlicht das Update der Version 133 (133.0.6943.141/142) seines Browsers Chrome und schlieÃŸt damit <a href="https://chromereleases.googleblog.com/2025/02/stable-channel-update-for-desktop_25.html">kritische SicherheitslÃ¼cken</a>.</p>
<p>Chrome aktualisiert sich (auÃŸer bei Linux) Ã¼ber die integrierte Update-Funktion, kann aber â€“ wenn es pressiert â€“ auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54254439705/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>A sexy female robot evades from a gigantic data octopus, colored french comic style</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025022601_chrome_update/</guid>
  <pubDate>Wed, 26 Feb 2025 12:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025022601_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die rasende Schlange: Vektoren in Pygame</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025022501_noc_python/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54349010602/"><img src="https://kantel.github.io/posts/2025022501_noc_python/images/rasendepython-b.jpg" class="img-fluid"></a></p>
<blockquote class="blockquote">
<p><strong>Vorbemerkung</strong>: Leider hatte ich gestern auf meinem Mac Mini ein Betriebssystem-Update gewagt (von <em>Sonoma</em> auf <em>Sequoia</em>). Seitdem gibt Python seltsame Fehlermeldungen heraus (die irgendetwas von <code>IMKClient</code> und <code>IMKInputSession</code> faseln). Laut den allwissenden Gurus von <em>Stack Overflow</em> ist das ein Bug in macOS Sequoia, der nicht nur in Python, sondern auch in anderen Programmiersprachen, die Fenster benutzen, auftritt. Apple war wohl bisher nicht in der Lage, diesen Bug zu fixen, obwohl mein Sequoia schon die beeindruckende Versionsnummer 15.3.1 aufweist. Wie auch immer, meine Python/<a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>- und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/arcade.html">Arcade</a>-Skripte laufen unbeeindruckt von diesen Fehlermeldungen auf meinem Rechner weiter, nur <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> macht Probleme und kann keine im Browser lauffÃ¤higen Pygame-Skripte mehr erzeugen. Daher mÃ¼sst Ihr heute mit trockenem Quellcode und langweiligen Screenshots vorliebnehmen.</p>
</blockquote>
<p>Ãœber das Wochenende hatte ich mich hingesetzt und an meinem <a href="https://kantel.github.io/posts/2025021701_vectory_pygame/">vor wenigen Tagen angekÃ¼ndigten Vorhaben</a> gearbeitet, wenigstens die Vektorkapitel&nbsp;1 und 2 aus <em>Daniel Shiffmans</em> Â»<a href="https://natureofcode.com/">The Nature of Code</a>Â« nach Python/<a href="https://pyga.me/">Pygame (CE)</a> zu portieren. Und zumindest das erste Kapitel habe ich fast abgeschlossen. Als erstes hatte ich mir das Â»<a href="https://natureofcode.com/vectors/#example-17-motion-101-velocity">Example 1.7: Motion 101 (Velocity)</a>Â« vorgeknÃ¶pft. Das war recht einfach, da es im Wesentlichen meinem Â»<a href="https://kantel.github.io/posts/2025021701_vectory_pygame/">Bouncing Chicken</a>Â« entsprach (ich habe das <em>Bouncing</em>) daher auch in diesem Skript (<a href="https://github.com/kantel/pythoncuriosa/blob/main/noc/motion101b.py">motion101.py</a>) statt des <em>Wrappings</em> von <em>Shiffman</em> beibehalten:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Motion 101 (Velocity)</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einige nÃ¼tzliche Konstanten</span></span>
<span id="cb1-7">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span></span>
<span id="cb1-8">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb1-9">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Motion 101 (Velocity)"</span></span>
<span id="cb1-10">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb1-13">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Billardtisch-GrÃ¼n</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">vec2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.Vector2</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb1-21"></span>
<span id="cb1-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb1-24">        pygame.init()</span>
<span id="cb1-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-26">        pygame.display.set_caption(TITLE)</span>
<span id="cb1-27"></span>
<span id="cb1-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb1-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurÃ¼cksetzen</span></span>
<span id="cb1-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb1-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mover(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb1-35"></span>
<span id="cb1-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb1-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb1-39">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb1-40">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb1-41">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-42"></span>
<span id="cb1-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.update()</span>
<span id="cb1-45"></span>
<span id="cb1-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-47">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb1-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb1-49">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.draw()</span>
<span id="cb1-50"></span>
<span id="cb1-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Ã„nderungen auf den Bildschirm</span></span>
<span id="cb1-52">        pygame.display.flip()</span>
<span id="cb1-53"></span>
<span id="cb1-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-55"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Mover():</span>
<span id="cb1-56"></span>
<span id="cb1-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb1-58">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb1-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2((randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>), randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> )))</span>
<span id="cb1-60">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2((randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)))</span>
<span id="cb1-61">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb1-62"></span>
<span id="cb1-63">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-64">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb1-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb1-66">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-67">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb1-68">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-69"></span>
<span id="cb1-70">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-71">        pygame.draw.aacircle(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">191</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius)</span>
<span id="cb1-72">        pygame.draw.aacircle(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-73"></span>
<span id="cb1-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb1-76">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb1-77">world.reset()</span>
<span id="cb1-78"></span>
<span id="cb1-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb1-80"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb1-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb1-82">    world.clock.tick(FPS)</span>
<span id="cb1-83"></span>
<span id="cb1-84">    world.events()</span>
<span id="cb1-85">    world.update()</span>
<span id="cb1-86">    world.draw()</span>
<span id="cb1-87"></span>
<span id="cb1-88">pygame.quit()</span>
<span id="cb1-89">sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>Lediglich bei der Behandlung des Kreises gab es eine Ã„nderung. Pygames Shapes haben keinen Rand, daher habe ich erst einen gelbgefÃ¼llten Kreis zeichnen lassen und danach eine Kreis, der nur aus einem schwarzen Rand besteht. Und ich habe Anti-Aliasing-Version <a href="https://pyga.me/docs/ref/draw.html#pygame.draw.aacircle"><code>aacircle()</code></a> gewÃ¤hlt, die sieht einfach besser aus.</p>
<p>Und Shapes sind keine Sprites. Ich habe jedenfalls in der Dokumentation keinen Hinweis gefunden, daÃŸ auch Shapes ein umschlieÃŸendes <code>Rect</code> besitzen. Daher muÃŸte ich beim <em>Bouncen</em> doch wieder den Radius einbauen.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54349307862/"><img src="https://kantel.github.io/posts/2025022501_noc_python/images/constacc.jpg" class="img-fluid"></a></p>
<p>Als nÃ¤chstes stand dann das Â»<a href="https://natureofcode.com/vectors/#example-18-motion-101-velocity-and-constant-acceleration">Example 1.8: Motion 101 (Velocity and Constant Acceleration)</a>Â« an. Da muÃŸte ich erst einmal ein wenig in der Pygame-Dokumentation stÃ¶bern, da <a href="https://pyga.me/docs/ref/math.html">Pygames Vektorklassen</a> nicht die Methode <code>limit()</code> besitzen. Aber mit <a href="https://pyga.me/docs/ref/math.html#pygame.math.Vector2.clamp_magnitude_ip"><code>Vector2.clamp_magnitude_ip()</code></a> hatte ich eine Methode gefunden, die â€“ wenn auch nicht numerisch ein exakt gleiches â€“ ein Ã¤hnliches Verhalten erzeugt:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Motion 101 (Velocity and Constant Acceleration)</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einige nÃ¼tzliche Konstanten</span></span>
<span id="cb2-6">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span></span>
<span id="cb2-7">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb2-8">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Motion 101 (Velocity and Constant Acceleration)"</span></span>
<span id="cb2-9">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb2-12">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Billardtisch-GrÃ¼n</span></span>
<span id="cb2-13"></span>
<span id="cb2-14">vec2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.Vector2</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb2-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb2-20"></span>
<span id="cb2-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb2-23">        pygame.init()</span>
<span id="cb2-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb2-25">        pygame.display.set_caption(TITLE)</span>
<span id="cb2-26"></span>
<span id="cb2-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb2-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurÃ¼cksetzen</span></span>
<span id="cb2-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb2-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mover(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb2-34"></span>
<span id="cb2-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb2-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb2-38">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb2-39">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb2-40">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-41"></span>
<span id="cb2-42">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-43">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.update()</span>
<span id="cb2-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.check_borders()</span>
<span id="cb2-45"></span>
<span id="cb2-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-47">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb2-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb2-49">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.draw()</span>
<span id="cb2-50"></span>
<span id="cb2-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Ã„nderungen auf den Bildschirm</span></span>
<span id="cb2-52">        pygame.display.flip()</span>
<span id="cb2-53"></span>
<span id="cb2-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb2-55"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Mover():</span>
<span id="cb2-56"></span>
<span id="cb2-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb2-58">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb2-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-60">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-61">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb2-62">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb2-63">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.limit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb2-64"></span>
<span id="cb2-65">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-66">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration</span>
<span id="cb2-67">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.clamp_magnitude_ip(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.limit)</span>
<span id="cb2-68">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb2-69"></span>
<span id="cb2-70">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_borders(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check borders</span></span>
<span id="cb2-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH:</span>
<span id="cb2-73">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-74">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-75">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH</span>
<span id="cb2-76">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT:</span>
<span id="cb2-77">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-79">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT</span>
<span id="cb2-80"></span>
<span id="cb2-81">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-82">        pygame.draw.aacircle(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">191</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius)</span>
<span id="cb2-83">        pygame.draw.aacircle(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-84"></span>
<span id="cb2-85">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.font <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.font.SysFont(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"American Typewriter"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb2-86">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.font.render(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.magnitude()), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb2-87">                                        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb2-88">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen.blit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel_txt, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb2-89"></span>
<span id="cb2-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb2-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb2-92">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb2-93">world.reset()</span>
<span id="cb2-94"></span>
<span id="cb2-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb2-96"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb2-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb2-98">    world.clock.tick(FPS)</span>
<span id="cb2-99"></span>
<span id="cb2-100">    world.events()</span>
<span id="cb2-101">    world.update()</span>
<span id="cb2-102">    world.draw()</span>
<span id="cb2-103"></span>
<span id="cb2-104">pygame.quit()</span>
<span id="cb2-105">sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>ZusÃ¤tzlich habe ich noch eine Textausgabe implementiert, die die Magnitude des Vektors ausgibt. Auch den Quellcode dieses Skriptes (<a href="https://github.com/kantel/pythoncuriosa/blob/main/noc/motion101b.py">motion101b.py</a>) kÃ¶nnt Ihr auf GitHub finden.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54348964715/"><img src="https://kantel.github.io/posts/2025022501_noc_python/images/randacc.jpg" class="img-fluid"></a></p>
<p>Als letztes stand dann noch das Â»<a href="https://natureofcode.com/vectors/#example-19-motion-101-velocity-and-random-acceleration">Example 1.9: Motion 101 (Velocity and Random Acceleration)</a>Â« auf meinem Programm. Hier dachte ich eigentlich, daÃŸ das Fehlen der Methode <code>random2D()</code> mir etwas Kopfschmerzen verursachen wÃ¼rde, aber Pythons Methode <code>Random.uniform()</code> zusammen mit <a href="https://pyga.me/docs/ref/math.html#pygame.math.Vector2.update"><code>Vector2.update()</code></a> und <a href="https://pyga.me/docs/ref/math.html#pygame.math.Vector2.normalize_ip"><code>Vector2.normalize_ip()</code></a> lieÃŸen mich schnell eine LÃ¶sung finden.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Motion 101 (Velocity and Constant Acceleration)</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random, uniform</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einige nÃ¼tzliche Konstanten</span></span>
<span id="cb3-7">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span></span>
<span id="cb3-8">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb3-9">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Motion 101 (Velocity and Random Acceleration)"</span></span>
<span id="cb3-10">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb3-13">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Billardtisch-GrÃ¼n</span></span>
<span id="cb3-14"></span>
<span id="cb3-15">vec2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.Vector2</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb3-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb3-21"></span>
<span id="cb3-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb3-24">        pygame.init()</span>
<span id="cb3-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb3-26">        pygame.display.set_caption(TITLE)</span>
<span id="cb3-27"></span>
<span id="cb3-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb3-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-30"></span>
<span id="cb3-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurÃ¼cksetzen</span></span>
<span id="cb3-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb3-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mover(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb3-35"></span>
<span id="cb3-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb3-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb3-39">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb3-40">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb3-41">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb3-42"></span>
<span id="cb3-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.update()</span>
<span id="cb3-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.check_borders()</span>
<span id="cb3-46"></span>
<span id="cb3-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-48">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb3-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb3-50">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mover.draw()</span>
<span id="cb3-51"></span>
<span id="cb3-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Ã„nderungen auf den Bildschirm</span></span>
<span id="cb3-53">        pygame.display.flip()</span>
<span id="cb3-54"></span>
<span id="cb3-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb3-56"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Mover():</span>
<span id="cb3-57"></span>
<span id="cb3-58">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb3-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb3-60">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-61">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-62">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-63">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb3-64">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.limit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb3-65"></span>
<span id="cb3-66">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-67">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uniform(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-68">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uniform(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-69">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration.update(x, y)</span>
<span id="cb3-70">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration.normalize_ip()</span>
<span id="cb3-71">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> random()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.acceleration</span>
<span id="cb3-73">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.clamp_magnitude_ip(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.limit)</span>
<span id="cb3-74">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb3-75"></span>
<span id="cb3-76">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_borders(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check borders</span></span>
<span id="cb3-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH:</span>
<span id="cb3-79">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-80">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-81">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH</span>
<span id="cb3-82">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT:</span>
<span id="cb3-83">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-85">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT</span>
<span id="cb3-86"></span>
<span id="cb3-87">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-88">        pygame.draw.aacircle(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">191</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius)</span>
<span id="cb3-89">        pygame.draw.aacircle(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-90"></span>
<span id="cb3-91">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.font <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.font.SysFont(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"American Typewriter"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb3-92">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.font.render(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.magnitude()), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb3-93">                                        (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb3-94">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.world.screen.blit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel_txt, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb3-95"></span>
<span id="cb3-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb3-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb3-98">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb3-99">world.reset()</span>
<span id="cb3-100"></span>
<span id="cb3-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb3-102"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb3-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb3-104">    world.clock.tick(FPS)</span>
<span id="cb3-105"></span>
<span id="cb3-106">    world.events()</span>
<span id="cb3-107">    world.update()</span>
<span id="cb3-108">    world.draw()</span>
<span id="cb3-109"></span>
<span id="cb3-110">pygame.quit()</span>
<span id="cb3-111">sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>Das Programm heiÃŸt (Ãœberraschung!) <a href="https://github.com/kantel/pythoncuriosa/blob/main/noc/motion101c.py">motion101c.py</a> und ist natÃ¼rlich ebenfalls auf meinem GitHub-Account zu finden.</p>
<p>Jetzt fehlen mir Â»nurÂ« noch Beispiele zur InteraktivitÃ¤t und Ideen fÃ¼r ein paar Skripte, mit denen ich das Gelernte noch ein wenig aufhÃ¼bschen kann. DafÃ¼r hÃ¤tte ich aber gerne, das Pygbag wieder mit meinem Mac spielt, denn eigentlich machen Beispiele nur SpaÃŸ, wenn man sie auch im Browser vorfÃ¼hren kann.</p>
<p>Denn ich habe mich nur auf Pygame (CE) eingelassen, weil ich â€“ inspiriert durch die Online-PrÃ¤sentation von Â»The Nature of CodeÂ« â€“ meine Ports und Skripte auch online prÃ¤sentieren wollte. Denn sonst hÃ¤tte ich fÃ¼r das Projekt Â»Python-Port von Nature of CodeÂ« ja auch bei Arcade (gefÃ¤llt mir sogar mittlerweile ein wenig besser als Pygame) oder bei <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> bleiben kÃ¶nnen. Und wer weiÃŸ, vielleicht ist <em>James Schmitz</em> mit seinen BemÃ¼hungen, Py5 via <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html">PyScript</a> webtauglich zu machen, ja schneller. Das wÃ¤re dann ein echter <em>Game Changer</em>. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54349010602/">Die rasende Python</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>colored french comic style, a python with horn-rimmed glasses sits at the wheel of an open sports car and races at high speed through a dystopian city with crumbling skyscrapers, junk cars standing on the side of the road</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Creative Coding</category>
  <category>Python</category>
  <category>Pygame</category>
  <category>Nature of Code</category>
  <category>Pygbag</category>
  <guid>https://kantel.github.io/posts/2025022501_noc_python/</guid>
  <pubDate>Tue, 25 Feb 2025 12:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025022501_noc_python/images/rasendepython.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>SchlangenfraÃŸ: Video-Tutorials zum Wochenende</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025022101_python_video_tutorials/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54341544016/"><img src="https://kantel.github.io/posts/2025022101_python_video_tutorials/images/pythontv-b.jpg" class="img-fluid"></a></p>
<p>Da mein Programm fÃ¼r die nÃ¤chsten Wochen oder gar Monate darin besteht, mindestens die ersten drei Kapitel aus <em>Daniel Shiffmans</em> Â»<a href="https://natureofcode.com/">The Nature of Code</a>Â« nach Python und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> zu portieren und um eigene Beispiele zu erweitern, habe ich mir zur Vorbereitung erst einmal ein paar Video-Tutorials herausgesucht, die ich Euch nicht vorenthalten mÃ¶chte:</p>
<section id="pymunk" class="level2">
<h2 class="anchored" data-anchor-id="pymunk">Pymunk</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/tLsi2DeUsak?si=gU63EyKNNaVcjWET" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong><a href="https://www.pymunk.org/en/latest/">Pymunk</a></strong>, die nach eigenen Angaben leicht zu erlernende, freie (MIT-Lizenz) Physik-Bibliothek (<a href="https://github.com/viblo/pymunk">Quellcode</a> auf GitHub) steht zwar frÃ¼hestens erst dann auf meinder Liste, wenn ich mich auch an das Kapitel&nbsp;6 Ã¼ber Physik-Bibliotheken heranwage. Aber da ich schon lange mal etwas mit Pymunk anstellen wollte, habe ich mir das <a href="https://www.youtube.com/watch?v=tLsi2DeUsak">obige Video</a> vorab schon einmal reingezogen.</p>
</section>
<section id="vpython" class="level2">
<h2 class="anchored" data-anchor-id="vpython">VPython</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/LmNBp0TKmjI?si=42cj_tJy5vxJldI9" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Anders sieht es mit dem Kanal Â»<a href="https://www.youtube.com/@DotPhysics">Dot Physics</a>Â« von <em>Rhett Allain</em> aus. Der Ã¼beraus fleiÃŸge Physik-Professor und YouTuber deckt viele der Themen (und noch weit mehr) ab, die auch in <em>The Nature of Code</em> behandelt werden. Das fÃ¤ngt mit seinen beiden Videos Ã¼ber <a href="https://www.youtube.com/watch?v=dYtAq3vZXiY">ein</a>- und <a href="https://www.youtube.com/watch?v=LmNBp0TKmjI">zweidimensionale</a> <em>Random Walks</em> an (die bei <em>Shiffman</em> im Kapitel&nbsp;0 behandelt werden) und setzt sich in vielen weiteren physikalischen Themen fort. <em>Rhett Allain</em>, der auch ein fleiÃŸger Autor auf <a href="https://www.wired.com/author/rhett-allain/">Wired</a> und auf <a href="https://rjallain.medium.com/">Medium.com</a> ist, nutzt fÃ¼r seine Skripte <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/vpython.html">VPython</a>, eine Bibliothek, mit der man in Python einfach zwei- und dreidimensionale physikalische Probleme lÃ¶sen kann (und zwar in der Online-<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/glowwscript.html">Trinket</a>-Version). Ich hatte ihn <a href="https://kantel.github.io/posts/2025013101_video_tutorials/">Ende Januar</a> schon einmal kurz auf dem Schirm, aber wegen meiner aktuellen Interessen mÃ¶chte ich noch einmal ausfÃ¼hrlicher auf ihn eingehen:</p>
<ul>
<li>Die Playlist Â»<a href="https://www.youtube.com/playlist?list=PLWFlMBumSLSaqgYlK2wD7XSPRQ2p-_Tl4">Physics Python Tutorials</a>Â« besteht aus 35 im Schnitt etwa zwanzigminÃ¼tigen Videos. Danach dÃ¼rften in Bezug auf VPython keine Fragen mehr offen sein.</li>
<li>Die kurze Liste Â»<a href="https://www.youtube.com/playlist?list=PLWFlMBumSLSZNZ71I6J3NW1t4M9HlWhwp">Pi</a>Â« (vier Videos) ist etwas fÃ¼r den <a href="https://de.wikipedia.org/wiki/Pi-Tag">Pi Day</a>.</li>
<li>Die aus drei Videos bestehende Liste Â»<a href="https://www.youtube.com/playlist?list=PLWFlMBumSLSYBuPnVT16kL-q0IRfSsxqt">Double Pendulum</a>Â« behandelt einen Bereich, der ein beliebtes Physik-Problem mit Bezug zur Chaos-Theorie und dynamischen Systemen ist.</li>
<li>Wieder Bezug auf Kapitel&nbsp;0 (und weit darÃ¼ber hinaus) hat die Liste Â»<a href="https://www.youtube.com/playlist?list=PLWFlMBumSLSbNNqXI_bhwAHXIc5yYFqRi">Monte Carlo</a>Â« die aus 11 Videos (mit ein paar Ãœberschneidungen zur Liste Â»Physics Python TutorialsÂ« siehe oben) besteht.</li>
<li>Ganz aktuell sind die Listen Â»<a href="https://www.youtube.com/playlist?list=PLWFlMBumSLSaI4LTqDsjwFiIeXoeNUoAd">Introduction to Astrophysics</a>Â« und Â»<a href="https://www.youtube.com/playlist?list=PLWFlMBumSLSbc1ZSMIC7Ey9kpVywnpBks">Classical Mechanics 2 - Spring 2025</a>Â«. Sie bestehen zur Zeit aus je vier etwa halbstÃ¼ndigen Videos, werden aber noch stÃ¤ndig aktualisiert.</li>
</ul>
</section>
<section id="pygame" class="level2">
<h2 class="anchored" data-anchor-id="pygame">Pygame</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/8o0bGX_PYCs?si=Sxql_7ShGJCRlwYI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><em>J. Brandon George</em> (aka <em>GameElementGuy</em>) hat ein How To geschrieben: Â»<a href="https://darth-data410.medium.com/how-to-easily-implement-sprite-sheets-in-your-pygames-120ce5ea9780">Easily Implement Sprite Sheets In Your PyGames</a>Â«, aus dem auch das <a href="https://www.youtube.com/watch?v=8o0bGX_PYCs">obige Video</a> stammt. Inspiriert wurde er unter anderem von dem siebeneinhalbstÃ¼ndigen (sic!) Tutorial Â»<a href="https://www.youtube.com/watch?v=QU1pPzEGrqw">Creating a Zelda style game in Python [with some Dark Souls elements]</a>Â«, das man sich nur hÃ¤ppchenweise reinziehen kann.</p>
<p>Zum Thema Â»Spritesheets in PygameÂ« gibt es auch von <em>Coding wiith Russ</em> die zwei Tutorials Â»<a href="https://www.youtube.com/watch?v=M6e3_8LHc7A">Pygame Sprite Sheets</a>Â« und Â»<a href="https://www.youtube.com/watch?v=nXOVcOBqFwM">Pygame Sprite Animation</a>Â«, die unbedingt auch in dieser Reihenfolge konsumiert werden sollten.</p>
<p>Daneben gibt es auf diesen Kanal eine Reihe weiterer Playlisten, die jeweils die Programmierung eines Spieles in Pygame zeigen. Meine Favoriten sind:</p>
<ul>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLjcN1EyupaQm20hlUE11y9y8EY2aXLpnv">PyGame - Shooter Game</a>Â« (13 Videos).</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLjcN1EyupaQnjjBvXn4Ew1a9Ms-9QzVub">PyGame - Castle Defender</a>Â« (10 Videos).</li>
</ul>
<p>Dann sind mir noch (vÃ¶llig unsortiert und ungeprÃ¼ft) diese Playlisten aus diversen KanÃ¤len untergekommen:</p>
<ul>
<li>Â»<a href="https://www.youtube.com/playlist?list=PL4U0724Jn5ZxvILgwV1A786Aqg92wHSEQ">2D Game Development | Pygame</a>Â«, Playlist mit 9 etwa fÃ¼nfminÃ¼tigen Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLn8cgfOA2qzeXxXe7DBWxX1UR5fJ4MDTb">Pygame - Adventure Game</a>Â«, Playlist mit 20 Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLTwy92rWKPiHTwXoyygjW0ZQ1WfkEwhqV">Game programming</a>Â«, Playlist mit 73 Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLjcN1EyupaQmZw8C-q6a4Zekidxf8SUj3">PyGame - Misc Tutorials</a>Â«, Playlist mit 28 Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PL8ui5HK3oSiHnIdi0XIAVXHAeulNmBrLy">Pygame Fundamentals</a>Â«, Playlist mit 11 Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLLdd2IQ6qKU7OAOpVdaK304D_BGSOw3iW">Pygame ARPG Tutorial Series</a>Â«, Playlist mit 9 Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLwUc9C-upZIo4uF9z6jXybDgRAa41YAMr">Pygame Tutorials</a>Â«, Playlist mit 4 Videos.</li>
<li>Â»<a href="https://www.youtube.com/playlist?list=PLsFyHm8kJsx1g191CspASSTHuLDEXZRH9">Python Pygame tutorials! Build video games with python!!</a>Â«, Playlist mit 63 Videos.</li>
</ul>
<p>Das schafft natÃ¼rlich niemand, das kann man sich bestenfalls nur sehr selektiv reinziehen.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/OLXNAn7SvRY?si=9qRz3Fnqu_aTNKAt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, der User <em><a href="https://www.youtube.com/@masendor">Leaflet</a></em> hat eine von <a href="https://de.wikipedia.org/wiki/Elden_Ring">Elden Ring</a>Â« inspirierte interaktive Geschichte oder <em>Visual Novel</em> in Pygame realisiert. Dazu gibt es auch noch eine andere Geschichte Â»<a href="https://www.youtube.com/watch?v=ar8TsS8spMU">Royal Ordains</a>Â« auf YouTube und den <a href="https://github.com/remance/Masendor">Quellcode</a> fÃ¼r seine Elden Ring Variante (MIT-Lizenz) auf GitHub.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/ar8TsS8spMU?si=qbP3MglGVRXuY7iC" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Mir ist nicht ganz klar, ob und wie die Geschichten zusammengehÃ¶ren, fertiggestellt scheinen sie beide auch noch nicht zu sein. Aber es ist eine interessante Frage, warum der Autor fÃ¼r seine (Pseudo-) Mittelalter-Fantasy-Geschichten Pygame und nicht <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Renâ€™Py</a> verwendet. Weil es geht&nbsp;â€¦? Auf jeden Fall ist es interessantes und inspirierendes Projekt (und auch den <a href="https://github.com/remance/Royal-Ordains">Quellcode</a> fÃ¼r Rocal Ordains (GPL) gibt es auf GitHub).</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54341544016/">Python sits on a sofa and watches TV</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>colored french comic style, a large python with horn-rimmed glasses sits on a sofa in a living room in the evening and watches television, next to the sofa an old-fashioned floor lamp is lit, on the walls there are shelves with many books, the moon shines through a window</em>Â«. Modell: Flux (Pro), Style: None.</p>


</section>

 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Python</category>
  <category>Pygame</category>
  <category>Pymunk</category>
  <category>VPython</category>
  <category>Trinket</category>
  <category>Nature of Code</category>
  <guid>https://kantel.github.io/posts/2025022101_python_video_tutorials/</guid>
  <pubDate>Fri, 21 Feb 2025 17:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025022101_python_video_tutorials/images/pythontv.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische SicherheitslÃ¼cken in Chrome</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025022001_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54254242918/"><img src="https://kantel.github.io/posts/2025022001_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Nein, diese Woche hat sich die Aktualisierung des Flaggschiffs unser aller Datenkrake <a href="https://kantel.github.io/posts/2025021301_chrome_update/">nicht verspÃ¤tet</a>, aber ich war gestern den ganzen Tag unterweges, daher kann ich die Mittwochsmeldung erst am Donnerstag bringen: Google verÃ¶ffentlicht das Update der Version 133 (133.0.6943.126/127) seines Browsers Chrome und schlieÃŸt damit <a href="https://chromereleases.googleblog.com/2025/02/stable-channel-update-for-desktop_18.html">kritische SicherheitslÃ¼cken</a>.</p>
<p>Chrome aktualisiert sich (auÃŸer bei Linux) Ã¼ber die integrierte Update-Funktion, kann aber â€“ wenn es pressiert â€“ auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54254242918/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>A sexy female robot evades from a gigantic data octopus, colored french comic style</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025022001_chrome_update/</guid>
  <pubDate>Thu, 20 Feb 2025 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025022001_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wo ist unser Vektor, Viktor? Nachschlag zu Teil 2</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021802_vectory_pygame_2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54335639209/"><img src="https://kantel.github.io/posts/2025021802_vectory_pygame_2/images/bchicken2-b.jpg" class="img-fluid"></a></p>
<p>Zu meinem <a href="https://kantel.github.io/posts/2025021701_vectory_pygame/">gestrigen Versuch</a>, ein von der HÃ¼hnerhauswand abprallendes KÃ¼ken mithilfe von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> (<a href="https://pyga.me/">CE</a>) und <a href="https://pyga.me/docs/ref/math.html">Pygames Vektorklasse</a> zu programmieren, hatte der <em>Gravitar</em> in <a href="https://github.com/kantel/kantel.github.io/discussions/241#discussioncomment-12235025">meinen Kommentaren</a> noch ein paar Ã¤uÃŸerst hilfreiche Anmerkungen, die ich <em>stante pede</em> in meinem Programm (<a href="https://github.com/kantel/pythoncuriosa/blob/main/noc/bouncingball_vectors.py">bouncingball_vectors.py</a>) umgesetzt habe:</p>
<p>So sei der separate import von <code>pygame.math</code> nicht mehr notwendig, weil Pygame die Bibliothek gleich mitimportiere. AuÃŸerdem kÃ¶nne man den Aufruf der Methode noch mehr verkÃ¼rzen, wenn man zum Beispiel zu Beginn des Programms</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">vec2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.Vector2</span></code></pre></div>
<p>vereinbare. Denn da kÃ¶nne man die initiale Zuweisung mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<p>erledigen. AuÃŸerdem kÃ¶nne man bei <code>self.rect.topleft</code>(oder <em>center</em>, <em>bottom</em>, <em>midbottom</em> etc.) eine Zuweisung mit einem Vektor vornehmen, zum Beispiel:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.topleft <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position</span>
<span id="cb3-2">...</span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.topleft <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span></code></pre></div>
<p>Und <em>last but not least</em> wies er darauf hin, daÃŸ ich mir mit <code>self.rect.right</code> (oder <em>left</em> oder <em>top</em> oder <em>bottom</em>) die Addition (oder Subtraktion) des Radius sparen kÃ¶nne:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-2">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<p>Der VollstÃ¤ndigkeit halber hier noch einmal das gesamte Programm mit den vorgeschlagenen Ã„nderungen:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bouncing Chicken with Vectors</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb5-7">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einige nÃ¼tzliche Konstanten</span></span>
<span id="cb5-10">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span></span>
<span id="cb5-11">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb5-12">CHICKEN_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span></span>
<span id="cb5-13">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Chicken with Vectors (Pygame Version)"</span></span>
<span id="cb5-14">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate</span></span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb5-17">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Billardtisch-GrÃ¼n</span></span>
<span id="cb5-18"></span>
<span id="cb5-19">vec2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.Vector2</span>
<span id="cb5-20"></span>
<span id="cb5-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb5-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb5-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb5-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb5-25"></span>
<span id="cb5-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb5-28">        pygame.init()</span>
<span id="cb5-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb5-30">        pygame.display.set_caption(TITLE)</span>
<span id="cb5-31"></span>
<span id="cb5-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb5-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb5-34"></span>
<span id="cb5-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurÃ¼cksetzen</span></span>
<span id="cb5-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb5-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.sprite.Group()</span>
<span id="cb5-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Assets</span></span>
<span id="cb5-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chick.png"</span>)).convert_alpha()</span>
<span id="cb5-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.transform.scale(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im, (CHICKEN_SIZE, CHICKEN_SIZE))</span>
<span id="cb5-42">        chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chicken(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb5-43">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(chicken)</span>
<span id="cb5-44"></span>
<span id="cb5-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb5-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb5-48">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb5-49">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb5-50">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb5-51"></span>
<span id="cb5-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-53">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb5-54"></span>
<span id="cb5-55">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-56">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb5-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb5-58">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb5-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Ã„nderungen auf den Bildschirm</span></span>
<span id="cb5-60">        pygame.display.flip()</span>
<span id="cb5-61"></span>
<span id="cb5-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb5-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Chicken</span></span>
<span id="cb5-64"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Chicken(pygame.sprite.Sprite):</span>
<span id="cb5-65"></span>
<span id="cb5-66">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb5-67">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb5-68">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb5-69">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world.chicken_im</span>
<span id="cb5-70">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb5-71">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb5-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.topleft <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position</span>
<span id="cb5-73">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vec2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-74"></span>
<span id="cb5-75">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-76">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.topleft <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb5-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb5-78">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb5-80">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-81"></span>
<span id="cb5-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb5-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb5-84">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb5-85">world.reset()</span>
<span id="cb5-86"></span>
<span id="cb5-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb5-88"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb5-89">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb5-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb5-91">        world.clock.tick(FPS)</span>
<span id="cb5-92"></span>
<span id="cb5-93">        world.events()</span>
<span id="cb5-94">        world.update()</span>
<span id="cb5-95">        world.draw()</span>
<span id="cb5-96">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb5-97"></span>
<span id="cb5-98">    pygame.quit()</span>
<span id="cb5-99">    sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-100"></span>
<span id="cb5-101">asyncio.run(main())</span></code></pre></div>
<p>Jetzt habe ich aber Blut geleckt. Ich werde zumindest die Beispiele aus dem Vektoren-Kapitel <em>(Chapter&nbsp;1)</em> und aus dem Kapitel Ã¼ber Kraft <em>(Chapter&nbsp;2)</em> aus <em>Daniel Shiffmans</em> Â»<a href="https://natureofcode.com/">The Nature of Code</a>Â« nach Pygame portieren und um einige eigene Beispiele ergÃ¤nzen. Und dann lacht mich das Kapitel Ã¼ber Physik-Bibliotheken <em>(Chapter&nbsp;6)</em> an. Was spricht dagegen, <a href="https://brm.io/matter-js/">Matter.js</a> durch <a href="https://www.pymunk.org/en/latest/">Pymunk</a> zu ersetzen? Zumal ich schon lange mal etwas mit dieser Python-Physik-Engine anstellen wollte.</p>
<p>Ich habe in den nÃ¤chsten Tagen (oder Wochenâ€¦ oder Monatenâ€¦&nbsp;?) also wieder einiges zu tun und ich freue mich darauf. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54335639209/">Bouncing Chicken</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>A yellow chick flutters against a green painted wall in the henhouse</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Pygame</category>
  <category>Python</category>
  <category>Nature of Code</category>
  <guid>https://kantel.github.io/posts/2025021802_vectory_pygame_2/</guid>
  <pubDate>Tue, 18 Feb 2025 12:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021802_vectory_pygame_2/images/bchicken2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla verÃ¶ffentlicht neue Firefox-Version</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021801_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54252800973/"><img src="https://kantel.github.io/posts/2025021801_firefox_update/images/pandas_rot-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue Version 135.0.1 verÃ¶ffentlicht und darin auch wieder <a href="https://www.mozilla.org/en-US/firefox/135.0.1/releasenotes/">SicherheitslÃ¼cken</a> behoben. Wie immer sind in dieses Updates auch viele VerÃ¤nderungen eingeflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch Ã¼ber das MenÃ¼ <code>Hilfe &gt; Ãœber Firefox</code> angestoÃŸen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54252800973/">Zwei rote Pandas</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>Two red pandas in a snowy enchanted forest</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025021801_firefox_update/</guid>
  <pubDate>Tue, 18 Feb 2025 12:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021801_firefox_update/images/pandas_rot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wo ist unser Vektor, Viktor? Teil2: Vektoren in Pygame</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021701_vectory_pygame/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54333962761/"><img src="https://kantel.github.io/posts/2025021701_vectory_pygame/images/bchicken1-b.jpg" class="img-fluid"></a></p>
<p>Der <em>Gravitar</em> hat mich <a href="https://github.com/kantel/kantel.github.io/discussions/240#discussioncomment-12221394">angefixt</a>. Nachdem ich gestern (mehr oder weniger) erfolgreich die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/arcade.html">Python Arcade Bibliothek</a> mit <a href="https://kantel.github.io/posts/2025021601_arcade_tut_3/">Vektoren verheiratet</a> hatte, muÃŸte ich heute auf seine Anregung hin unbedingt noch testen, wie das denn mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> (genauer: <a href="https://pyga.me/">Pygame CE</a>) funktioniert.</p>
<p>Nicht, daÃŸ ich mit Arcade unzufrieden wÃ¤re, aber mir fehlte einfach die MÃ¶glichkeit, die Ergebnisse auch im Web und damit auf diesen Seiten zu prÃ¤sentieren, wie es eben recht einfach mit Pygame CE und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> geht. Also habe ich erst einmal eine Version des sich den Kopf an den FensterrÃ¤ndern anschlagenden KÃ¼kens in Pygame ohne VektorunterstÃ¼tzung implementiert (<a href="https://github.com/kantel/pythoncuriosa/blob/main/noc/bouncingball_no_vector.py">bouncingball_no_vector.py</a>):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bouncing Chicken with No Vectors</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb1-7">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einige nÃ¼tzliche Konstanten</span></span>
<span id="cb1-10">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span></span>
<span id="cb1-11">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb1-12">CHICKEN_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span></span>
<span id="cb1-13">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Chicken with No Vectors (Pygame Version)"</span></span>
<span id="cb1-14">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate</span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb1-17">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Billardtisch-GrÃ¼n</span></span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb1-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb1-23"></span>
<span id="cb1-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb1-26">        pygame.init()</span>
<span id="cb1-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-28">        pygame.display.set_caption(TITLE)</span>
<span id="cb1-29"></span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb1-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-32"></span>
<span id="cb1-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurÃ¼cksetzen</span></span>
<span id="cb1-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb1-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.sprite.Group()</span>
<span id="cb1-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Assets</span></span>
<span id="cb1-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chick.png"</span>)).convert_alpha()</span>
<span id="cb1-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.transform.scale(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im, (CHICKEN_SIZE, CHICKEN_SIZE))</span>
<span id="cb1-40">        chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chicken(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb1-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(chicken)</span>
<span id="cb1-42"></span>
<span id="cb1-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb1-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb1-46">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb1-47">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb1-48">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-49"></span>
<span id="cb1-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-51">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb1-52"></span>
<span id="cb1-53">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-54">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb1-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb1-56">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Ã„nderungen auf den Bildschirm</span></span>
<span id="cb1-58">        pygame.display.flip()</span>
<span id="cb1-59"></span>
<span id="cb1-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Chicken</span></span>
<span id="cb1-62"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Chicken(pygame.sprite.Sprite):</span>
<span id="cb1-63"></span>
<span id="cb1-64">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb1-65">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb1-66">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb1-67">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world.chicken_im</span>
<span id="cb1-68">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb1-69">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-70">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CHICKEN_SIZE</span>
<span id="cb1-71">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb1-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-73"></span>
<span id="cb1-74">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-75">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x_speed</span>
<span id="cb1-76">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y_speed</span>
<span id="cb1-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-78">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb1-80">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-81"></span>
<span id="cb1-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb1-84">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb1-85">world.reset()</span>
<span id="cb1-86"></span>
<span id="cb1-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb1-88"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb1-89">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb1-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb1-91">        world.clock.tick(FPS)</span>
<span id="cb1-92"></span>
<span id="cb1-93">        world.events()</span>
<span id="cb1-94">        world.update()</span>
<span id="cb1-95">        world.draw()</span>
<span id="cb1-96">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb1-97"></span>
<span id="cb1-98">    pygame.quit()</span>
<span id="cb1-99">    sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-100"></span>
<span id="cb1-101">asyncio.run(main())</span></code></pre></div>
<p>Ich wollte damit mich selber an mein Vorhaben Â»<a href="https://kantel.github.io/posts/2023010701_pygame_oop/">Pygame objektorientiert</a> erinnern und eine Blaupause schaffen, mit der ich zukÃ¼nftig objektorientierte Pygame-Programme schreiben kann, die sowohl <em>standalone</em> als auch mit Pygbag im Web funktionieren. Also so eine Art <em>Â»write once, run everywhereÂ«</em>&nbsp;ðŸ¥¸</p>
<p>Nachdem mir dies gelungen war, war die Erweiterung um eine VektorenunterstÃ¼tzung nur noch eine Frage von wenigen Ã„nderungen (<a href="https://github.com/kantel/pythoncuriosa/blob/main/noc/bouncingball_vectors.py">bouncingball_vectors.py</a>):</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bouncing Chicken with Vectors</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame.math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> math</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb2-8">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einige nÃ¼tzliche Konstanten</span></span>
<span id="cb2-11">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span></span>
<span id="cb2-12">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span></span>
<span id="cb2-13">CHICKEN_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span></span>
<span id="cb2-14">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Chicken with Vectors (Pygame Version)"</span></span>
<span id="cb2-15">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate</span></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb2-18">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Billardtisch-GrÃ¼n</span></span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb2-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb2-24"></span>
<span id="cb2-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb2-27">        pygame.init()</span>
<span id="cb2-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb2-29">        pygame.display.set_caption(TITLE)</span>
<span id="cb2-30"></span>
<span id="cb2-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb2-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-33"></span>
<span id="cb2-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurÃ¼cksetzen</span></span>
<span id="cb2-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb2-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.sprite.Group()</span>
<span id="cb2-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Assets</span></span>
<span id="cb2-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chick.png"</span>)).convert_alpha()</span>
<span id="cb2-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.transform.scale(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.chicken_im, (CHICKEN_SIZE, CHICKEN_SIZE))</span>
<span id="cb2-41">        chicken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Chicken(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb2-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(chicken)</span>
<span id="cb2-43"></span>
<span id="cb2-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb2-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb2-47">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb2-48">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb2-49">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-50"></span>
<span id="cb2-51">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-52">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb2-53"></span>
<span id="cb2-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-55">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb2-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb2-57">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb2-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Ã„nderungen auf den Bildschirm</span></span>
<span id="cb2-59">        pygame.display.flip()</span>
<span id="cb2-60"></span>
<span id="cb2-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb2-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Chicken</span></span>
<span id="cb2-63"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Chicken(pygame.sprite.Sprite):</span>
<span id="cb2-64"></span>
<span id="cb2-65">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb2-66">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb2-67">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb2-68">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world.chicken_im</span>
<span id="cb2-69">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb2-70">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.Vector2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-71">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position</span>
<span id="cb2-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CHICKEN_SIZE</span>
<span id="cb2-73">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.Vector2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-74"></span>
<span id="cb2-75">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-76">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x</span>
<span id="cb2-77">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y</span>
<span id="cb2-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-79">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-80">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-81">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-82"></span>
<span id="cb2-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb2-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb2-85">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb2-86">world.reset()</span>
<span id="cb2-87"></span>
<span id="cb2-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb2-89"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb2-90">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb2-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb2-92">        world.clock.tick(FPS)</span>
<span id="cb2-93"></span>
<span id="cb2-94">        world.events()</span>
<span id="cb2-95">        world.update()</span>
<span id="cb2-96">        world.draw()</span>
<span id="cb2-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> asyncio.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Very important, and keep it 0</span></span>
<span id="cb2-98"></span>
<span id="cb2-99">    pygame.quit()</span>
<span id="cb2-100">    sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-101"></span>
<span id="cb2-102">asyncio.run(main())</span></code></pre></div>
<p>Nach dem Import von <code>pygame.math</code> muÃŸten die Ã„nderungen nur noch in der Klasse <code>Chicken()</code> vorgenommen werden (ein Vorteil des strikt objektorientierten Designs).</p>
<p>NatÃ¼rlich muÃŸte ich dieses Ergebnis meiner heutigen Versuche auch gleich in diese Seiten einbinden. Mittlerweile weiÃŸ ich ja, <a href="https://kantel.github.io/posts/2025012001_pygbag_revisited/">wie dies geht</a>.</p>
<iframe src="pygbag/web/index.html" class="if16_9" name="Bouncing Chicken">
</iframe>
<p>Und jetzt stehe ich wieder vor der Frage, ob ich meine derzeitige LektÃ¼re von <em>Daniel Shiffmans</em> neuer, verbesserter und erweiterter Auflage von Â»<a href="https://natureofcode.com/">The Nature of Code</a>Â« nicht mit Pygame-Programmen begleiten soll. Denn das schÃ¶ne an der Online-Version des Buches ist ja, daÃŸ <em>Shiffmans</em> <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Skripte auf den Seiten leben. Und das kÃ¶nnte ich mit Pygame und Pygbag ebenfalls erreichen. Pygame im Browser ist einfach geil!</p>
<p><strong>Eine Bemerkung zum SchluÃŸ noch</strong>: Am <a href="https://www.flickr.com/photos/schockwellenreiter/54333962761/">Screenshot</a> im Bannerbild oben kÃ¶nnen aufmerksame Leserinnen und Leser erkennen, daÃŸ ich seit heute eine neue Python-IDE benutze: Ich bin zu <a href="https://www.jetbrains.com/de-de/pycharm/">PyCharm CE</a>, der freien (Apache-Lizenz) Version von JetBrains Python-Entwicklungsumgebung, gewechselt. Ich hatte langsam Angst, daÃŸ ich mein <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> mit all den Erweiterungen, die ich mittlerweile im Einsatz habe, einfach Ã¼berfrachte und wollte daher etwas nutzen, was <strong>nur</strong> fÃ¼r Python im Einsatz ist und VS Code entlastet. Und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> ist zwar ein schÃ¶nes Spielzeug fÃ¼r AnfÃ¤nger und Gelegenheitscoder, genÃ¼gt aber meinen AnsprÃ¼chen nicht (mehr). Bisher hat sich PyCharm trotz seines Funktionsumfangs als wenig stÃ¶rrisch gezeigt. Schauen wir mal, was daraus noch wird. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Python</category>
  <category>Pygame</category>
  <category>Nature of Code</category>
  <category>PyCharm</category>
  <category>Pygbag</category>
  <guid>https://kantel.github.io/posts/2025021701_vectory_pygame/</guid>
  <pubDate>Mon, 17 Feb 2025 18:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021701_vectory_pygame/images/bchicken1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wo ist unser Vektor, Viktor? (Vektoren in der Python Arcade Bibliothek)</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021601_arcade_tut_3/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54329782999/"><img src="https://kantel.github.io/posts/2025021601_arcade_tut_3/images/bouncingchicken-b.jpg" class="img-fluid"></a></p>
<p>Mit meiner <a href="https://kantel.github.io/posts/2025021402_arcade_tut_2/">vorgestrigen EinschÃ¤tzung</a>, daÃŸ ich mit der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/arcade.html">Python Arcade Bibliothek</a> relativ einfach die Beispiele aus dem <a href="https://natureofcode.com/vectors/">Vektorenkapitel</a> von <em>Daniel Shiffmans</em> Â»The Nature of CodeÂ« von JavaScript nach Python portieren kÃ¶nne, war ich etwas zu optimistisch, denn die Arcade zugrundeliegende <a href="https://pyglet.readthedocs.io/en/latest/modules/math.html#pyglet.math.Vec2">Vec2-Implementierung</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyglet.html">Pyglet</a> erwies sich widerspenstiger, als ursprÃ¼nglich angeommen. Zwar geht es, aber nicht mit <code>Vec2()</code>. Doch der Reihe nach:</p>
<section id="beispiel-1-bouncing-ball-ohne-vektoren" class="level2">
<h2 class="anchored" data-anchor-id="beispiel-1-bouncing-ball-ohne-vektoren">Beispiel 1: Bouncing Ball ohne Vektoren</h2>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54329336819/"><img src="https://kantel.github.io/posts/2025021601_arcade_tut_3/images/bb_novectors.jpg" class="img-fluid"></a></p>
<p>Der Anfang war noch recht einfach, denn das erste Beispiel aus <em>Shiffmans</em> Buch hieÃŸ Â»Bouncing Ball with No VectorsÂ«. Daher war das Programm (<a href="https://github.com/kantel/learningarcade/blob/master/noc/example1_1.py">example1_1.py</a>) schnell geschrieben:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Example 1.1: Bouncing Ball with No Vectors</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb1-7">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb1-8">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span></span>
<span id="cb1-9">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Ball with No Vectors"</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb1-12">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span></span>
<span id="cb1-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb1-24">            </span>
<span id="cb1-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb1-27">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_y,</span>
<span id="cb1-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb1-29">        arcade.draw_circle_outline(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_y,</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-31">    </span>
<span id="cb1-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb1-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x_speed</span>
<span id="cb1-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y_speed</span>
<span id="cb1-35">        </span>
<span id="cb1-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb1-37">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-38">            </span>
<span id="cb1-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.circle_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb1-40">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>    </span>
<span id="cb1-41"></span>
<span id="cb1-42">game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb1-43">window.show_view(game)</span>
<span id="cb1-44">arcade.run()</span></code></pre></div>
<p>Und frÃ¶hlich hÃ¼pfte der kleine, gelbe Ball Ã¼ber den Bildschirm.</p>
</section>
<section id="beispiel-2-bouncing-ball-mit-vektoren-pvector-version" class="level2">
<h2 class="anchored" data-anchor-id="beispiel-2-bouncing-ball-mit-vektoren-pvector-version">Beispiel 2: Bouncing Ball mit Vektoren (PVector-Version)</h2>
<p>Doch dann kam die EnttÃ¤uschung. Ich hatte in meiner Euphorie die <a href="https://pyglet.readthedocs.io/en/latest/modules/math.html#pyglet.math.Vec2">Dokumentation zu Vec2</a> nicht sorgfÃ¤ltig genug gelesen. Denn dort stand, daÃŸ <code>Vec2</code> eine <strong>immutable</strong> (unverÃ¤nderliche) Klasse sei. Und so lieÃŸ sich zwar die gewÃ¼nschten Vektoren mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Vec2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Vec2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<p>problemlos initialisieren, doch bei dem Versuch, mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span></code></pre></div>
<p>dem Vektor einen neuen Wert zuzuweisen, stieg das Programm gnadenlos aus. Was nun? Ich erinnerte mich, daÃŸ ich <a href="http://blog.schockwellenreiter.de/2018/01/2018012001.html">vor sieben Jahren</a> Processings <a href="https://www.processing.org/reference/PVector.html">PVektor-Klasse</a> nach Python portiert hatte. UrsprÃ¼nglich war sie fÃ¼r <em>Karsten Wolfs</em> Fork von der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/nodebox/nodebox.html">Nodebox&nbsp;1</a> gedacht, aber sie war in <em>pure Python</em> ohne AbhÃ¤ngigkeiten geschrieben, und so hatte ich sie im Laufe der Jahre weiterentwickelt und in diversen Umgebungen eingesetzt (zuletzt in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> (<a href="http://blog.schockwellenreiter.de/2021/02/2021020801.html">Beispiel</a>) und in der Python/<a href="https://brython.info/">Brython</a>-Variante von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> (noch ein <a href="https://kantel.github.io/posts/2024032801_microstudio_noc_1/">Beispiel</a>), aber auch schon einmal in Arcade (letztes <a href="http://blog.schockwellenreiter.de/2020/06/2020062801.html">Beispiel</a>)). Was lag also nÃ¤her, als diese Bibliothek wieder zu verwenden (Programm <a href="https://github.com/kantel/learningarcade/blob/master/noc/example1_2.py">example1_2.py</a>)?</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54329613680/"><img src="https://kantel.github.io/posts/2025021601_arcade_tut_3/images/bbpvector.jpg" class="img-fluid"></a></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Example 1.2: Bouncing Ball with Vectors</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pvector <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PVector</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb4-8">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb4-9">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span></span>
<span id="cb4-10">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Ball with Vectors"</span></span>
<span id="cb4-11"></span>
<span id="cb4-12">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb4-13">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb4-16"></span>
<span id="cb4-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb4-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb4-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb4-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb4-23">            </span>
<span id="cb4-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb4-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb4-26">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y,</span>
<span id="cb4-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb4-28">        arcade.draw_circle_outline(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y,</span>
<span id="cb4-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-30">    </span>
<span id="cb4-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb4-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb4-33">        </span>
<span id="cb4-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb4-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-36">            </span>
<span id="cb4-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb4-38">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>    </span>
<span id="cb4-39"></span>
<span id="cb4-40">game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb4-41">window.show_view(game)</span>
<span id="cb4-42">arcade.run()</span></code></pre></div>
<p>Die nur geringfÃ¼gig aktualiiserte Version von <a href="https://github.com/kantel/learningarcade/blob/master/noc/pvector.py">pvector.py</a> sieht so aus:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> PVector():</span>
<span id="cb5-5">    </span>
<span id="cb5-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x, y):</span>
<span id="cb5-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x</span>
<span id="cb5-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y</span>
<span id="cb5-9">    </span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.x</span>
<span id="cb5-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.y</span>
<span id="cb5-13">    </span>
<span id="cb5-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-15">        v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)</span>
<span id="cb5-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(v)</span>
<span id="cb5-17">    </span>
<span id="cb5-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> v.x</span>
<span id="cb5-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> v.y</span>
<span id="cb5-21">        </span>
<span id="cb5-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> sub(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> v.x</span>
<span id="cb5-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> v.y</span>
<span id="cb5-25">    </span>
<span id="cb5-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiplikation mit einem Skalar</span></span>
<span id="cb5-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mult(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, n):</span>
<span id="cb5-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> n</span>
<span id="cb5-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> n</span>
<span id="cb5-30">    </span>
<span id="cb5-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Division durch einen Skalar</span></span>
<span id="cb5-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> div(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, n):</span>
<span id="cb5-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> n</span>
<span id="cb5-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> n</span>
<span id="cb5-35"></span>
<span id="cb5-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Elementweise Multiplikation eines Vektor mit einem anderen Vektor</span></span>
<span id="cb5-37">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mult2(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> v.x</span>
<span id="cb5-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> v.y</span>
<span id="cb5-40"></span>
<span id="cb5-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Elementweise Division eines Vektor mit einem anderen Vektor</span></span>
<span id="cb5-42">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> div2(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-43">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> v.x</span>
<span id="cb5-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> v.y</span>
<span id="cb5-45"></span>
<span id="cb5-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Magnitude</span></span>
<span id="cb5-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mag(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (math.sqrt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y))</span>
<span id="cb5-49">    </span>
<span id="cb5-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalisierung</span></span>
<span id="cb5-51">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> normalize(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-52">        m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mag()</span>
<span id="cb5-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb5-54">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.div(m)</span>
<span id="cb5-55"></span>
<span id="cb5-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Berechnung der euklidischen Distanz zwischen zwei Vektoren</span></span>
<span id="cb5-57">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dist(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-58">        dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> v.x</span>
<span id="cb5-59">        dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> v.y</span>
<span id="cb5-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (math.sqrt(dx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>dy))</span>
<span id="cb5-61">    </span>
<span id="cb5-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Berechnung des Skalarprodukts (inneren Produkts) eines Vektors</span></span>
<span id="cb5-63">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dot(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, v):</span>
<span id="cb5-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>v.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>v.y</span>
<span id="cb5-65">    </span>
<span id="cb5-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Begrenzt die Magnitude eines Vektors auf max</span></span>
<span id="cb5-67">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> limit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>):</span>
<span id="cb5-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mag() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>:</span>
<span id="cb5-69">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.normalize()</span>
<span id="cb5-70">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.mult(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>)</span>
<span id="cb5-71">    </span>
<span id="cb5-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Berechnet den Winkel der Rotation eines Vektors</span></span>
<span id="cb5-73">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> heading(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-74">        angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.atan2(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x)</span>
<span id="cb5-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>angle</span>
<span id="cb5-76"></span>
<span id="cb5-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ãœberlagerung der +/- Operatoren</span></span>
<span id="cb5-78">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__add__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="cb5-79">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other.x</span>
<span id="cb5-80">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other.y</span>
<span id="cb5-81">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(x, y)</span>
<span id="cb5-82">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(result)</span>
<span id="cb5-83">    </span>
<span id="cb5-84">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__sub__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="cb5-85">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> other.x</span>
<span id="cb5-86">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> other.y</span>
<span id="cb5-87">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(x, y)</span>
<span id="cb5-88">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(result)</span>
<span id="cb5-89">    </span>
<span id="cb5-90">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__str__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb5-91">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"["</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"]"</span>)</span>
<span id="cb5-92">        </span>
<span id="cb5-93">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@classmethod</span></span>
<span id="cb5-94">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> random2D(cls):</span>
<span id="cb5-95">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.uniform(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-96">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.uniform(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-97">        v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cls(x, y)</span>
<span id="cb5-98">        v.normalize()</span>
<span id="cb5-99">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(v)</span>
<span id="cb5-100"></span>
<span id="cb5-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassenmethoden: Skalare Multiplikation und Division</span></span>
<span id="cb5-102">    </span>
<span id="cb5-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiplikation mit einem Skalar</span></span>
<span id="cb5-104">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> smult(v, n):</span>
<span id="cb5-105">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n</span>
<span id="cb5-106">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n</span>
<span id="cb5-107">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(x, y)</span>
<span id="cb5-108">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(result)</span>
<span id="cb5-109"></span>
<span id="cb5-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Division mit einem Skalar</span></span>
<span id="cb5-111">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> sdiv(v, n):</span>
<span id="cb5-112">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb5-113">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n</span>
<span id="cb5-114">            y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n</span>
<span id="cb5-115">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(x, y)</span>
<span id="cb5-116">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span>(result)</span>
<span id="cb5-117">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb5-118">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error. Divison durch Null!"</span>)</span></code></pre></div>
<p>Die <code>arcade.draw_circle()</code>-Implementierung erlauben leider keine Vektor-Zuweisung, daher mÃ¼ssen diese komponentenweise angegeben werden:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y,</span>
<span id="cb6-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb6-3">arcade.draw_circle_outline(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y,</span>
<span id="cb6-4">sself.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<p>Ansonsten ist das schon ein nettes ProgrÃ¤mmchen.</p>
</section>
<section id="beispiel-3-bouncing-ball-mit-vektoren-numpy.arry-version" class="level2">
<h2 class="anchored" data-anchor-id="beispiel-3-bouncing-ball-mit-vektoren-numpy.arry-version">Beispiel 3: Bouncing Ball mit Vektoren (numpy.arry-Version)</h2>
<p>Doch dies ist natÃ¼rlich nicht die einzige MÃ¶glichkeit, in Arcade mit Vektoren umzugehen. Wer numerische LÃ¶sungen in Python erstellt, greift oft auf <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a> und â€“ im Falle von Matrizen und Vektoren â€“ auf <a href="https://numpy.org/doc/stable/reference/generated/numpy.array.html">numpy.array()</a> zurÃ¼ck. Das ist eine stabile, weit verbreitete und ausgetestete Version, die auch ich allen empfehlen kann, die meiner PVector-Implementierung nicht trauen<sup>1</sup>.</p>
<p>Mit <code>numpy.array()</code> sieht das ProgrÃ¤mmchen (<a href="https://github.com/kantel/learningarcade/blob/master/noc/example1_2_b.py">example1_2_b.py</a>) so aus:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Example 1.2: Bouncing Ball with Vectors (Numpy Version)</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb7-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb7-8">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb7-9">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span></span>
<span id="cb7-10">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Ball with Vectors (Numpy Version)"</span></span>
<span id="cb7-11"></span>
<span id="cb7-12">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb7-13">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb7-16"></span>
<span id="cb7-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb7-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float64)</span>
<span id="cb7-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float64) </span>
<span id="cb7-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb7-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb7-23">            </span>
<span id="cb7-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb7-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb7-26">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb7-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb7-28">        arcade.draw_circle_outline(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb7-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-30">    </span>
<span id="cb7-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb7-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb7-33">        </span>
<span id="cb7-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb7-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-36">            </span>
<span id="cb7-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb7-38">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>    </span>
<span id="cb7-39"></span>
<span id="cb7-40">game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb7-41">window.show_view(game)</span>
<span id="cb7-42">arcade.run()</span></code></pre></div>
<p>Zu beachten ist eigentlich nur, daÃŸ man bei <code>numpy.array()</code> auf die einzelnen Komponenten eines Vektors nur Ã¼ber die Indizes zugreifen kann.</p>
</section>
<section id="beispiel-4-bouncing-ball-mit-vektoren-pygame.vector2-version" class="level2">
<h2 class="anchored" data-anchor-id="beispiel-4-bouncing-ball-mit-vektoren-pygame.vector2-version">Beispiel 4: Bouncing Ball mit Vektoren (pygame.Vector2-Version)</h2>
<p>Des weiteren ist mir noch etwas ganz Gemeines eingefallen. (Ich hoffe, daÃŸ <em>Paul Vincent Craven</em>, der SchÃ¶pfer der Python Arcade Bibliothek, keinen Herzinfarkt bekommt, sollte er diese Zeilen jemals lesen.) Denn auch <a href="https://pyga.me/docs/ref/math.html#pygame.math.Vector2">Pygames Vector2-Bibliothek</a> kann eigentlich Ã¼berall eingesetzt werden, da sie unabhÃ¤ngig von Pygame ist und selber keine graphischen Ausgaben vornimmt. Daher habe ich einfach mal im Bouncing-Ball-Programm Arcade mit <code>pygame.math.Vector2</code> verheiratet (<a href="https://github.com/kantel/learningarcade/blob/master/noc/example1_2_c.py">example1_2_c.py</a>):</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Example 1.2: Bouncing Ball with Vectors (Pygame Vector2)</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb8-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame.math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> math</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb8-8">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb8-9">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span></span>
<span id="cb8-10">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Ball with Vectors (Pygame Vector2)"</span></span>
<span id="cb8-11"></span>
<span id="cb8-12">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb8-13">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb8-16"></span>
<span id="cb8-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb8-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb8-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.Vector2(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb8-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.Vector2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) </span>
<span id="cb8-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span></span>
<span id="cb8-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb8-23">            </span>
<span id="cb8-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb8-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb8-26">        arcade.draw_circle_filled(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y,</span>
<span id="cb8-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb8-28">        arcade.draw_circle_outline(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y,</span>
<span id="cb8-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-30">    </span>
<span id="cb8-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb8-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb8-33">        </span>
<span id="cb8-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb8-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-36">            </span>
<span id="cb8-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb8-38">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>    </span>
<span id="cb8-39"></span>
<span id="cb8-40">game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb8-41">window.show_view(game)</span>
<span id="cb8-42">arcade.run()</span></code></pre></div>
<p>Auch wenn hier zwei Welten aufeinandertreffen, sie vertragen sich recht gut. Und die Vektorenklassen (Vector2 und Vector3) von Pygame sind extrem umfangreich und decken eigentlich alles ab, was an Methoden benÃ¶tigt wird<sup>2</sup>.</p>
<p>Auf Screenshots habe ich bei den letzten beiden Beispielen verzichtet. Sie sehen einfach gleich aus, bei allen Beispielen hÃ¼pft ein gelber Kreis Ã¼ber den Bildschirm.</p>
</section>
<section id="zugabe-bouncing-chicken" class="level2">
<h2 class="anchored" data-anchor-id="zugabe-bouncing-chicken">Zugabe: Bouncing Chicken</h2>
<p>Da ich ja bekanntlich ein Spielkalb bin, habe ich noch eine Zugabe geschrieben. SchlieÃŸlich ist Arcade eine Spielebibliothek, und daher wollte ich statt eines <em>Shapes</em> (einen Kreis) auch mal ein <em>Sprite</em> Ã¼ber den Bildschirm hÃ¼pfen lassen (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/54329782999/">Screenshot</a> im Bannerbild oben). Den passenden kreisrunden KÃ¼kenkopf habe ich in Kenneys freiem (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) <a href="https://kenney.nl/assets/animal-pack-redux">Animal Pack Redux</a> gefunden.</p>
<p>Das Programm (<a href="https://github.com/kantel/learningarcade/blob/master/noc/bouncingchicken.py">bouncingchicken.py</a>) unterscheidet sich nur unwesentlich von den Bouncing-Ball-Programmen:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Bouncing Chicken</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb9-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pvector <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PVector</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb9-8">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb9-9">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span></span>
<span id="cb9-10">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bouncing Chicken"</span></span>
<span id="cb9-11"></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a window class. This is what actually shows up on screen</span></span>
<span id="cb9-13">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position of the window (optional)</span></span>
<span id="cb9-15">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb9-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Main application class.</span></span>
<span id="cb9-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-21"></span>
<span id="cb9-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb9-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Call the parent class to set up the window """</span></span>
<span id="cb9-24">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb9-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb9-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb9-27">                </span>
<span id="cb9-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb9-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Set up the game here. Call this function to restart the game."""</span></span>
<span id="cb9-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.load_texture(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/chick.png"</span>)</span>
<span id="cb9-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb9-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb9-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y</span>
<span id="cb9-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb9-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># â‰ˆ 136 * 0.3 / 2</span></span>
<span id="cb9-36">        </span>
<span id="cb9-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our player</span></span>
<span id="cb9-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.SpriteList()</span>
<span id="cb9-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list.append(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite)</span>
<span id="cb9-40">        </span>
<span id="cb9-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">59</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb9-42"></span>
<span id="cb9-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb9-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Render the screen."""</span></span>
<span id="cb9-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()        </span>
<span id="cb9-46">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list.draw()</span>
<span id="cb9-47">    </span>
<span id="cb9-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb9-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Movement and Game Logic"""</span></span>
<span id="cb9-50">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb9-51">        </span>
<span id="cb9-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb9-53">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb9-54">            </span>
<span id="cb9-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.radius:</span>
<span id="cb9-56">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb9-57">        </span>
<span id="cb9-58">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.position.y</span>
<span id="cb9-59">        </span>
<span id="cb9-60">game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb9-61">window.show_view(game)</span>
<span id="cb9-62">game.setup()</span>
<span id="cb9-63">arcade.run()</span></code></pre></div>
<p>Hier fÃ¤llt auf, daÃŸ auch <code>self.player_sprite.position</code> auch nur mit einem Tupel und nicht mit einem Vektor belegt werden kann.</p>
<p>Das ist ein sehr langer Beitrag geworden. Aber die BeschÃ¤ftigung mit der Python Arcade Bibliothek hat mir auch SpaÃŸ gemacht. Was mir allerdings fehlt, ist, daÃŸ es (noch?) keine MÃ¶glichkeit gibt, die Ergebnisse im Web zu prÃ¤sentieren (wie es <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame (CE)</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> heute schon kann). Aber das hat Arcade zum Beispiel auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> gemein. Hier warte ich einfach die weitere Entwicklung bezÃ¼glich <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html">PyScript</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU</a> und <a href="https://developer.mozilla.org/en-US/docs/WebAssembly">WASM</a> ab, denn moderne Creative-Coding-Experimente sollten eigentlich auch im Browser prÃ¤sentiert werden kÃ¶nnen. Und fÃ¼r die (Ãœbergangs-) Zeit bis dahin habe ich auch schon einige Ideen. <em>Still digging!</em></p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">FuÃŸnoten</h2>

<ol>
<li id="fn1"><p>Das kann ich auch niemandem Ãœbel nehmen. Zwar habe ich alle Methoden getestet, aber bei den weniger gÃ¤ngigen Methoden bin ich mir selber nicht immer sicher. Wer mir einen Gefallen tun will, kann sie ja ebenfalls auf Herz und Nieren testen. Ãœber ein Feedback bin ich dankbar.â†©ï¸Ž</p></li>
<li id="fn2"><p>NatÃ¼rlich kann man/frau sich dabei zu Recht fragen, warum dann noch Arcade und nicht von vorneherein alles in Pygame entwickeln? Vielleicht, weil es geht?â†©ï¸Ž</p></li>
</ol>
</section></div> ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Python</category>
  <category>Arcade</category>
  <category>Numpy</category>
  <category>Pygame</category>
  <category>Nature of Code</category>
  <guid>https://kantel.github.io/posts/2025021601_arcade_tut_3/</guid>
  <pubDate>Sun, 16 Feb 2025 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021601_arcade_tut_3/images/bouncingchicken.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Endlich! Tuesday JS kann jetzt auch Linux</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021403_tuesdayjs_54/</link>
  <description><![CDATA[ 




<p><a href="https://github.com/Kirilllive/tuesday-js/releases/tag/54.0.0"><img src="https://kantel.github.io/posts/2025021403_tuesdayjs_54/images/tuesdayjs54-b.jpg" class="img-fluid"></a></p>
<p>Es gehÃ¶rt ja zu meinem Schicksal, daÃŸ ich die Updates von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> hÃ¤ufig Ã¼bersehe, der netten kleinen Engine fÃ¼r interaktive Geschichten, <em>Visual Novels</em> und anderen Spielen oder Anwendungen, die mich mit ihrer graphischen OberflÃ¤che immer ein wenig an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erinnert. Aber dieses Mal bin ich unschuldig: <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/54.0.0">Tuesday&nbsp;JS Release&nbsp;54</a> ist erschienen, ohne das ein Release&nbsp;53 vorausgegangen war (das letzte Release war die <a href="https://kantel.github.io/posts/2025012302_tuesday_js_v52/">Version&nbsp;52</a>).</p>
<p>Und das Update birgt eine riesige Ãœberraschung: Tuesday&nbsp;JS <strong>kann jetzt Linux!</strong> Ich hatte mich immer schon gefragt, warum es keine Linux-Version gab, bei dem zugrundeliegenden <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/electron.html">Electron</a>-Framework sollte eine Linux-Port problemlos mÃ¶glich sein. Jetzt haben sie diesen realisiert.</p>
<p>Und er kommt rechtzeitig, bevor der Winter uns endlich verlÃ¤ÃŸt und ich mit meinem Chromebook wieder auf meiner Terrasse sitzen kann. Denn das Linux-Release kommt sowohl als <code>deb</code>- wie auch als <code>rpm</code>-Paket. Damit dÃ¼rfte es sich problemlos auch auf einem Chromebook installieren lassen. Momentan bin ich noch mit anderen Dingen beschÃ¤ftigt (und der Winter hat sich ja auch erst einmal wieder zurÃ¼ckgemeldet), aber so bald ich wieder etwas Luft habe, werde ich die Installation wagen und darÃ¼ber berichten.</p>
<p>Ich kann es kaum erwarten, daÃŸ mir das Wetter endlich erlaubt, wieder mit meinem Chromebook in der Sonne zu sitzen und interaktive Geschichten zu spinnen. Denn langsam habe ich vom Winter die Schnauze gestrichen voll. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Chromebook</category>
  <guid>https://kantel.github.io/posts/2025021403_tuesdayjs_54/</guid>
  <pubDate>Fri, 14 Feb 2025 18:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021403_tuesdayjs_54/images/tuesdayjs54.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Weiter mit der Python Arcade Bibliothek?</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021402_arcade_tut_2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54326868476/"><img src="https://kantel.github.io/posts/2025021402_arcade_tut_2/images/arcade2-b.jpg" class="img-fluid"></a></p>
<p>Die <a href="https://kantel.github.io/posts/2025021001_arcade_neustart/">jÃ¼ngste (Wieder-) Entdeckung</a> der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/arcade.html">Python Arcade Spielebibliothek</a> hat mich ziemlich gefesselt und die letzten Tage nicht in Ruhe gelassen. Und so habe ich weiter mit ihr ein wenig experimentiert und dabei wieder einiges gelernt:</p>
<p>Als erstes habe ich das Template geÃ¤ndert. Aus der <code>GameWorld</code>-Klasse wurde eine <code>GameView</code>-Klasse, und diese erbt auch nicht mehr von <code>aracade.Window()</code>, sondern von <code>arcade.View()</code>. So kann ein Fenster mehrere, unterschiedliche <em>Views</em> aufnehmen. Dazu muÃŸ zu Beginn eines Programmes natÃ¼rlich immer ein Fenster initialisiert werden. In meinem Template habe ich das so implementiert:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb1-4">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">840</span></span>
<span id="cb1-5">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span></span>
<span id="cb1-6">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Arcade Herdplatte v2"</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a window class. This is what actually shows up on screen</span></span>
<span id="cb1-9">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position of the window (optional)</span></span>
<span id="cb1-11">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Main application class.</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-17"></span>
<span id="cb1-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Call the parent class to set up the window """</span></span>
<span id="cb1-20">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.color.AMAZON</span>
<span id="cb1-22">        </span>
<span id="cb1-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Set up the game here. Call this function to restart the game."""</span></span>
<span id="cb1-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-26">    </span>
<span id="cb1-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Render the screen."""</span></span>
<span id="cb1-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb1-30">    </span>
<span id="cb1-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Movement and Game Logic"""</span></span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-34">    </span>
<span id="cb1-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb1-36">    game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb1-37">    window.show_view(game)</span>
<span id="cb1-38">    game.setup()</span>
<span id="cb1-39">    arcade.run()</span>
<span id="cb1-40"></span>
<span id="cb1-41"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb1-42">    main()</span></code></pre></div>
<p>In der <code>main()</code>-Funktion muÃŸ dann zusÃ¤tzlich noch die Methode <code>window.show_view(game)</code> aufgerufen werden, ansonsten hat sich im Template kaum etwas geÃ¤ndert.</p>
<p>Auch mein Testprogramm â€“ in der unten abgedruckten, aktuellen Version&nbsp;2 â€“ wÃ¤re auch ohne diese Template-Ã„nderungen lauffÃ¤hig gewesen, aber ich wollte das Template einfach allgemeiner und vielseitig verwendbarer halten. Und so ist dieses nun dabei herausgekommen:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Simple Platformer Game with Arcade, Stage 2</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb2-7">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">944</span></span>
<span id="cb2-8">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span></span>
<span id="cb2-9">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Erste Schritte mit Arcade 3.0, Stage 2"</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">TILE_SCALING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-12">TILE_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb2-13">BL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>TILE_SIZE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Border left</span></span>
<span id="cb2-14">BR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TILE_SIZE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Border right</span></span>
<span id="cb2-15">DIAMOND_SCALING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-16"></span>
<span id="cb2-17">PLAYER_SPEED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-18">GRAVITY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-19">PLAYER_JUMP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a window class. This is what actually shows up on screen</span></span>
<span id="cb2-22">window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Window(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position of the window (optional)</span></span>
<span id="cb2-24">window.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameView(arcade.View):</span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Main application class.</span></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-30"></span>
<span id="cb2-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-32"></span>
<span id="cb2-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call the parent class to set up the window</span></span>
<span id="cb2-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb2-35">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.color.AMAZON</span>
<span id="cb2-36">        </span>
<span id="cb2-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variable to hold our texture for our player</span></span>
<span id="cb2-38">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-39">        </span>
<span id="cb2-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Separate variable that holds the player sprite</span></span>
<span id="cb2-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-42">        </span>
<span id="cb2-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our player</span></span>
<span id="cb2-44">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-45">        </span>
<span id="cb2-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our boxes and ground</span></span>
<span id="cb2-47">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-48">        </span>
<span id="cb2-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for diamonds the player can collect</span></span>
<span id="cb2-50">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.diamond_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-51">        </span>
<span id="cb2-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This variable will store our score as an integer.</span></span>
<span id="cb2-53">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-54">        </span>
<span id="cb2-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This variable will store the text for score that we will draw to the screen.</span></span>
<span id="cb2-56">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-57">        </span>
<span id="cb2-58">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.collect_coin_sound <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.load_sound(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":resources:sounds/coin1.wav"</span>)</span>
<span id="cb2-59">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.jump_sound <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.load_sound(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":resources:sounds/jump1.wav"</span>)</span>
<span id="cb2-60"></span>
<span id="cb2-61">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Set up the game here. Call this function to restart the game."""</span></span>
<span id="cb2-63">        </span>
<span id="cb2-64">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.load_texture(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/gameboy_idle.png"</span>)</span>
<span id="cb2-65">        </span>
<span id="cb2-66">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>)</span>
<span id="cb2-67">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.center_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb2-68">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.center_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-69">        </span>
<span id="cb2-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our player</span></span>
<span id="cb2-71">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.SpriteList()</span>
<span id="cb2-72">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list.append(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite)</span>
<span id="cb2-73">        </span>
<span id="cb2-74">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.SpriteList(use_spatial_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-75">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.diamond_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.SpriteList(use_spatial_hash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-76">        </span>
<span id="cb2-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the ground</span></span>
<span id="cb2-78">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This shows using a loop to place multiple sprites horizontally</span></span>
<span id="cb2-79">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WINDOW_WIDTH, TILE_SIZE):</span>
<span id="cb2-80">            wall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/grass001.png"</span>, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SCALING)</span>
<span id="cb2-81">            wall.center_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x</span>
<span id="cb2-82">            wall.center_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SIZE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-83">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.append(wall)</span>
<span id="cb2-84">        </span>
<span id="cb2-85">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put some crates on the ground</span></span>
<span id="cb2-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This shows using a coordinate list to place sprites</span></span>
<span id="cb2-87">        coordinate_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>]]</span>
<span id="cb2-88">        </span>
<span id="cb2-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> coordinate <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> coordinate_list:</span>
<span id="cb2-90">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a crate on the ground</span></span>
<span id="cb2-91">            wall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/box01.png"</span>, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SCALING)</span>
<span id="cb2-92">            wall.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coordinate</span>
<span id="cb2-93">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.append(wall)</span>
<span id="cb2-94">            </span>
<span id="cb2-95">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Level border</span></span>
<span id="cb2-96">        border_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">144</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span>],</span>
<span id="cb2-97">                       [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">208</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">272</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">304</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">336</span>], [BL, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">368</span>],</span>
<span id="cb2-98">                       [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">144</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">176</span>],</span>
<span id="cb2-99">                       [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">208</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">272</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">304</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">336</span>], [BR, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">368</span>]]</span>
<span id="cb2-100">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> border <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> border_list:</span>
<span id="cb2-101">            wall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/box01.png"</span>, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SCALING)</span>
<span id="cb2-102">            wall.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> border</span>
<span id="cb2-103">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.append(wall)</span>
<span id="cb2-104">            </span>
<span id="cb2-105">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add diamonds to the world</span></span>
<span id="cb2-106">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, WINDOW_WIDTH, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>):</span>
<span id="cb2-107">            diamond <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/diamond01.png"</span>, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DIAMOND_SCALING)</span>
<span id="cb2-108">            diamond.center_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x</span>
<span id="cb2-109">            diamond.center_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span></span>
<span id="cb2-110">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.diamond_list.append(diamond)</span>
<span id="cb2-111">        </span>
<span id="cb2-112">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Platformer Physics Engine.</span></span>
<span id="cb2-113">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.physics_engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.PhysicsEnginePlatformer(</span>
<span id="cb2-114">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite, walls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list, gravity_constant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRAVITY</span>
<span id="cb2-115">        )</span>
<span id="cb2-116">        </span>
<span id="cb2-117">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reset our score to 0</span></span>
<span id="cb2-118">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-119"></span>
<span id="cb2-120">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize our arcade.Text object for score</span></span>
<span id="cb2-121">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Text(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Score: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>score<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb2-122"></span>
<span id="cb2-123">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb2-124"></span>
<span id="cb2-125">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-126">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Render the screen."""</span></span>
<span id="cb2-127"></span>
<span id="cb2-128">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The clear method should always be called at the start of on_draw.</span></span>
<span id="cb2-129">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb2-130">        </span>
<span id="cb2-131">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Code to draw other things will go here</span></span>
<span id="cb2-132">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.draw()</span>
<span id="cb2-133">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.diamond_list.draw()</span>
<span id="cb2-134">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list.draw()</span>
<span id="cb2-135">        </span>
<span id="cb2-136">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw our Score</span></span>
<span id="cb2-137">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score_text.draw()</span>
<span id="cb2-138">    </span>
<span id="cb2-139">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb2-140">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Movement and Game Logic"""</span></span>
<span id="cb2-141"></span>
<span id="cb2-142">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move the player using our physics engine</span></span>
<span id="cb2-143">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.physics_engine.update()</span>
<span id="cb2-144">        </span>
<span id="cb2-145">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See if we hit any diamonds</span></span>
<span id="cb2-146">        diamond_hit_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.check_for_collision_with_list(</span>
<span id="cb2-147">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.diamond_list</span>
<span id="cb2-148">        )</span>
<span id="cb2-149"></span>
<span id="cb2-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through each coin we hit (if any) and remove it</span></span>
<span id="cb2-151">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> diamond <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> diamond_hit_list:</span>
<span id="cb2-152">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the coin</span></span>
<span id="cb2-153">            diamond.remove_from_sprite_lists()</span>
<span id="cb2-154">            arcade.play_sound(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.collect_coin_sound)</span>
<span id="cb2-155">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span></span>
<span id="cb2-156">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.score_text.text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Score: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>score<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-157">        </span>
<span id="cb2-158">    </span>
<span id="cb2-159">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_key_press(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, modifiers):</span>
<span id="cb2-160">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Called whenever a key is pressed."""</span></span>
<span id="cb2-161">                 </span>
<span id="cb2-162">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.ESCAPE:</span>
<span id="cb2-163">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.setup()</span>
<span id="cb2-164">        </span>
<span id="cb2-165">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.UP <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.W:</span>
<span id="cb2-166">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.physics_engine.can_jump():</span>
<span id="cb2-167">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_JUMP</span>
<span id="cb2-168">                arcade.play_sound(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.jump_sound)</span>
<span id="cb2-169"></span>
<span id="cb2-170">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.LEFT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.A:</span>
<span id="cb2-171">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>PLAYER_SPEED</span>
<span id="cb2-172">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.RIGHT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.D:</span>
<span id="cb2-173">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_SPEED</span>
<span id="cb2-174"></span>
<span id="cb2-175">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_key_release(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, modifiers):</span>
<span id="cb2-176">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Called whenever a key is released."""</span></span>
<span id="cb2-177">        </span>
<span id="cb2-178">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.LEFT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.A:</span>
<span id="cb2-179">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-180">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.RIGHT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.D:</span>
<span id="cb2-181">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-182"></span>
<span id="cb2-183"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb2-184">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Main function"""</span></span>
<span id="cb2-185">    game <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameView()</span>
<span id="cb2-186">    window.show_view(game)</span>
<span id="cb2-187">    game.setup()</span>
<span id="cb2-188">    arcade.run()</span>
<span id="cb2-189"></span>
<span id="cb2-190"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb2-191">    main()</span></code></pre></div>
<p>GegenÃ¼ber der <a href="https://kantel.github.io/posts/2025021001_arcade_neustart/">vor vier Tagen verÃ¶ffentlichten, ersten Version</a> habe ich noch TÃ¶ne implemeniert und ein paar Diamanten auf dem Spielfeld verteilt, die der Spieler einsammeln soll und fÃ¼r die er dann Punkte kassiert. Die Punkte werden unten angezeigt. Und damit die Spielfigur rechts und links auÃŸerhalb des Bildschirms (und auch auÃŸerhalb der Plattform) nicht ins Bodenlose fÃ¤llt, habe ich einfach rechts und links (gerade auÃŸerhalb des Fensters und damit fÃ¼r den Spieler nicht sichtbar) ein paar Kisten bis zur FensterhÃ¶he aufgestapelt. Die verwendete Physik-Engine sorgt dann dafÃ¼r, daÃŸ der Spieler an den FensterrÃ¤ndern stoppt. Das geht bestimmt eleganter, aber mir fiel gerade keine Â»elegante LÃ¶sungÂ« ein.</p>
<p>NatÃ¼rlich gibt es den Quellcode (<code>getting_started_02.py</code>) mit allen Assets wieder in <a href="https://github.com/kantel/learningarcade/tree/master/getting_started">meinem GitHub-Repositorium</a>. Die derzeige Version ist eine Abwandlung des <a href="https://api.arcade.academy/en/latest/tutorials/platform_tutorial/index.html">Simple Platformer Tutorials</a> (bis etwa <em>Step 10</em>) von den Arcade-Dokumentationsseiten und die Assets sind dem <a href="https://kenney.nl/assets/simplified-platformer-pack">Simplified Platformer Pack</a> aus dem schier unerschÃ¶pflichen, freien (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) Fundus von Kenney.nl entnommen.</p>
<p><strong>Wie weiter?</strong> Der <a href="https://github.com/kantel/kantel.github.io/discussions/239#discussioncomment-12164768">Diskussionsbeitrag</a> von <em>Gravitar</em> (dem wir so viele, nette <a href="https://www.youtube.com/@Gravitar">Python-Tutorials auf YouTube</a> verdanken) hat mich auf die Idee gebracht, um die (auf <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyglet.html">Pyglet</a> beruhende) Vektor-Implementiierung von Arcade zu verstehen und zu testen, mal das <a href="https://natureofcode.com/vectors/">Kapitel Ã¼ber Vektoren</a> aus <em>Daniel Shiffmans</em> Â»The Nature of CodeÂ« von JavaScript (P5.js) nach Python (Arcade) zu portieren.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/GMUhXMw1zZE?si=AaTWHU5askSPZuvv" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Dabei soll mir die (noch unvollstÃ¤ndige) Playlist Â»<a href="https://www.youtube.com/playlist?list=PL1P11yPQAo7qgk8uk_A5UxiTrMt6obCc5">Python Arcade Tutorials</a>Â« (aktuell â€“ Stand heute â€“ sieben, etwa zehnminÃ¼tige Videos) von <em>AtiByte</em>, aber auch die beiden YouTube-Videos Â»<a href="https://www.youtube.com/watch?v=GMUhXMw1zZE">Pyglet Crash Course</a>Â« (zweieinhalb Stunden Spieldauer) und â€“ als Grundlage fÃ¼r weitere Experimente â€“ Â»<a href="https://www.youtube.com/watch?v=rT6_uBalljQ">Pymunk physics simulations in Python and Pyglet</a>Â« (45 Minuten Spieldauer) des gleichen Autors helfen.</p>
<p>Und so kÃ¶nnte dieser Beitrag mit Fug und Recht auch unter dem Titel Â»Video-Tutorials fÃ¼r das WochenendeÂ« laufen. Ich habe also zu tun. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Python</category>
  <category>Arcade</category>
  <category>Pyglet</category>
  <category>Pymunk</category>
  <guid>https://kantel.github.io/posts/2025021402_arcade_tut_2/</guid>
  <pubDate>Fri, 14 Feb 2025 16:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021402_arcade_tut_2/images/arcade2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues von meiner digitalen Rumpelkammer: Anytype kann jetzt Web</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021401_anytype_web/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53589859149/"><img src="https://kantel.github.io/posts/2025021401_anytype_web/images/anytypeweb-b.jpg" class="img-fluid"></a></p>
<p>Gestern abend schneite <a href="https://www.youtube.com/watch?v=tOJNja1QvsE">ein Video</a> in meinen Feedreader, das ein Update meiner <a href="https://kantel.github.io/posts/2024081201_anytype/">digitalen Rumpelkammer</a> versprach: Von <a href="https://anytype.io/">Anytype</a> Desktop sei die <a href="https://community.anytype.io/t/anytype-desktop-0-45-0-released/26702">Version 4.45.0 (Beta)</a> freigegeben worden. Unter den vielen Neuerungen war eine, die mich elektrisierte: Anytype kann jetzt Web!</p>
<p>Denn das war etwas, was <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/notion.html">Notion</a> Anytype bisher voraus hatte: Man (oder frau) konnte einzelne Seiten als statisches HTML auf dem Server von Notion verÃ¶ffentlichen und damit anderen zugÃ¤nglich machen. Das macht vor allem dann Sinn, wenn man einen Entwurf zur Diskussion fÃ¼r eine mehr oder weniger breite Ã–ffentlichkeit (der muÃŸ immer noch die (in beiden FÃ¤llen) recht komplizierte URL bekannt sein) freigeben will. Ich hatte davon hin und wieder Gebrauch gemacht und es war der einzige Grund, warum ich gelegentlich immer noch auf Notion zurÃ¼ckegriffen hatte. Denn weder Anytype noch <a href="https://kantel.github.io/posts/2025020301_capacities/">Capacities</a> konnten dies â€“ bis gestern.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/tOJNja1QvsE?si=IG5-NrSe6D3-vryH" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Denn seit gestern bietet auch Anytype diese MÃ¶glichkeit: Im MenÃ¼ <code>Share</code> rechts oben im Anytype-Fenster findet Ihr nun den Eintrag <code>Publish to web</code> und auch gleich die URL, unter der Euer Beitrag auf dem Server von Anytype (unverschlÃ¼sselt) verÃ¶ffentlicht wird. Die URL solltet Ihr Euch gleich kopieren, denn auch wenn Ihr einen (geringen) EinfluÃŸ auf den Namen habt, sie ist â€“ wie auch bei Notion â€“ lang und kompliziert und nur Gehirnakrobaten kÃ¶nnen sie sich merken. Einmal publizierte Seiten kÃ¶nnt Ihr bei Bedarf auch wieder unter <code>Unpublish</code> vom Netz nehmen.</p>
<p>In den <em>Release Notes</em> warnen die Macher noch:</p>
<blockquote class="blockquote">
<p>This is an early version â€” linked Objects, and blocks like Sets and Collections arenâ€™t supported yet.</p>
</blockquote>
<p>Aber der nÃ¤chste Satz macht Hoffnung auf mehr:</p>
<blockquote class="blockquote">
<p>Multi-page publishing and other enhancements are on the way, and weâ€™d love your feedback to guide these improvements.</p>
</blockquote>
<p>Damit ist Anytype immer noch weit davon entfernt, ein Werkzeug fÃ¼r einen <a href="https://kantel.github.io/posts/2024050701_digital_garden/">Digitalen Garten</a> zu sein, aber meiner <a href="https://kantel.github.io/posts/2024082002_anytype2/">Idee eines Entwurfswerkzeugs</a> auch fÃ¼r umfangreichere Publikationen ist die (freie) Software wieder ein StÃ¼ck nÃ¤hergekommen. Und zusÃ¤tzlich ist mit der neuen Version die Synchronisation mit meinem Android-Smartphone (die seit dem letzten Android-Update nicht mehr funktionierte) wieder gefixt. Mir jedenfalls gefÃ¤llt Anytype immer mehr. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53589859149/">An Old Man in an Office</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>An old man, white hair, clean-shaven, without beard+, blue eyes, glasses, sits at a desk in front of huge monitors with lots of colorful diagrams, there are other open books on the desk, and there is a large mug of steaming coffee next to them, and a computer keyboard in front of the monitor, on the wall there are shelves with files and books, the spring sun shines through a large window, colored french comic style</em>Â«. Negative Prompt: Â»<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, tie</em>Â«. Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Anytype</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2025021401_anytype_web/</guid>
  <pubDate>Fri, 14 Feb 2025 15:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021401_anytype_web/images/anytypeweb.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft verÃ¶ffentlicht Update fÃ¼r Office for Mac</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021302_update_office_for_mac/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54320906399/"><img src="https://kantel.github.io/posts/2025021302_update_office_for_mac/images/madhatterapple-b.jpg" class="img-fluid"></a></p>
<p>Microsoft liefert mit dem Update auf 16.94 fÃ¼r Office 365, 2021 und 2024 for Mac natÃ¼rlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhÃ¤lt man die Korrekturen am einfachsten Ã¼ber Microsofts AutoUpdate â€“ in einem beliebigen Office-Programm Ã¼ber MenÃ¼: <code>Hilfe &gt; Auf Updates Ã¼berprÃ¼fen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: Microsoft Office unterstÃ¼tzt stets nur die drei Hauptversion von macOS. <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-f%C3%BCr-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">Momentan sind dies Sequoia, Sonoma und Ventura</a>. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54320906399/">ZauberÃ¤pfel im Zauberwald</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>the mad hatter gives a sexy naked woman, with big boops, and a nice butt an apple in the summer enchanted forest colored french comic style</em>Â«. Negative Prompt: Â»<em>lowres, error, cropped, worst quality, low quality, jpeg artifacts, out of frame, watermark, signature, ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>Â«. Modell: Stable Diffusion 3.5 Large Turbo, Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025021302_update_office_for_mac/</guid>
  <pubDate>Thu, 13 Feb 2025 14:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021302_update_office_for_mac/images/madhatterapple.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische SicherheitslÃ¼cken in Chrome</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021301_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54254243013/"><img src="https://kantel.github.io/posts/2025021301_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Das Mittwochs-Update kommt gewiss und wenn es spÃ¤t am Donnerstag ist: Unser aller Datenkrake verÃ¶ffentlichte eine Aktualisierung der Version 133 (133.0.6943.98/99) ihres Browsers Chrome und schloss damit <a href="https://chromereleases.googleblog.com/2025/02/stable-channel-update-for-desktop_12.html">kritische SicherheitslÃ¼cken</a>.</p>
<p>Chrome aktualisiert sich (auÃŸer bei Linux) Ã¼ber die integrierte Update-Funktion, kann aber â€“ wenn es pressiert â€“ auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54254243013/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>A sexy female robot evades from a gigantic data octopus, colored french comic style</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025021301_chrome_update/</guid>
  <pubDate>Thu, 13 Feb 2025 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021301_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Frauen am Kontrabass: All of Me</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021102_all_of_me/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54321128573/"><img src="https://kantel.github.io/posts/2025021102_all_of_me/images/swingjazz-b.jpg" class="img-fluid"></a></p>
<p>Der Jazzstandard Â»<a href="https://de.wikipedia.org/wiki/All_of_Me">All of Me</a>Â« aus dem Jahre 1931 ist unverwÃ¼stlich. WÃ¤hrend ich ihn hier schon in einer <a href="https://kantel.github.io/posts/2025012802_all_of_me/">Version fÃ¼r Akkordeon vorgestellt hatte</a>, folgt heute eine Interpretation des <em><a href="https://sanlyon.bandcamp.com/music">San Lyon Swing Quartetts</a></em> aus Los Angeles (CA) mit dem ebenfalls eher ungewÃ¶hnlichen <a href="https://de.wikipedia.org/wiki/Kazoo">Kazoo</a> als Lead-Instrument:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/C6ytevtLsH4?si=8AiBXJ0b29WplA07" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Die Musikerinnen und der Musiker sind <em>Katie Cavera</em> am Banjo, <em>Paige Herschell</em> mit Kazoo und Gesang, <em>Dani Vargas</em> an der Gitarre und <em>Jenna Colombet</em> am Kontrabass. Der Letztgenannten ist es geschuldet, daÃŸ dieser Beitrag Teil meiner Reihe Â»Frauen am KontrabassÂ« geworden ist.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54321128573/">Swing Jazz in Paris</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>colored french comic style, A female singer, a female banjo player, a female double bass player and a guitar player make jazz music under the Eiffel Tower in Paris</em>Â«. Modell: Flux, Style: PixelWave.</p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2025021102_all_of_me/</guid>
  <pubDate>Tue, 11 Feb 2025 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021102_all_of_me/images/swingjazz.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der regulÃ¤re, monatliche Apple Flickentag</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021101_apple_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54321078375/"><img src="https://kantel.github.io/posts/2025021101_apple_patchday/images/magicapple-b.jpg" class="img-fluid"></a></p>
<p>Nach den diversen Notfall-Aktualisierungen der letzten Wochen scheint der IT-Riese aus Cupertino mit dem angebissenen Apfel im Logo wieder zu seinem regulÃ¤ren, monatlichen Patchdays zurÃ¼ckgefunden zu haben. Wie fast immer sind alle Updates auf einmal freigegeben worden, so daÃŸ ich sie wieder <em>en bloc</em> abhandeln kann:</p>
<section id="apple-verÃ¶ffentlicht-macos-sequoia-15.3.1" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-macos-sequoia-15.3.1">Apple verÃ¶ffentlicht macOS Sequoia 15.3.1</h2>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sequoia 15.3.1 freigegeben und korrigiert damit auch wieder <a href="https://support.apple.com/en-us/100100">Sicherheitsprobleme</a>.</p>
<p>Das Update steht Ã¼ber die Systemeinstellungen zur VerfÃ¼gung.</p>
</section>
<section id="apple-verÃ¶ffentlicht-sicherheitsupdate-fÃ¼r-macos-ventura-und-sonoma" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-sicherheitsupdate-fÃ¼r-macos-ventura-und-sonoma">Apple verÃ¶ffentlicht Sicherheitsupdate fÃ¼r macOS Ventura und Sonoma</h2>
<p>Apple hat auch das Sicherheitsupdate auf <a href="https://support.apple.com/en-us/100100">macOS Ventura 13.7.4</a> und <a href="https://support.apple.com/en-us/100100">macOS Sonoma 14.7.4</a> freigegeben.</p>
<p>Die Updates stehen wie Ã¼blich Ã¼ber die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-verÃ¶ffentlicht-ios-ipados-18.3.1" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-ios-ipados-18.3.1">Apple verÃ¶ffentlicht iOS / iPadOS 18.3.1</h2>
<p>Wie angekÃ¼ndigt hat Apple das Update auf iOS 18.3.1 und iPadOS 18.3.1 bereitgestellt. Die Updates korrigieren <a href="https://support.apple.com/en-us/122174">kritische SicherheitslÃ¼cken</a>.</p>
<p>Das Update auf auf iOS 18.3.1 und iPadOS 18.3.1 kann Ã¼ber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-KapazitÃ¤t und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des GerÃ¤ts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-verÃ¶ffentlicht-ipados-17.7.5-fÃ¼r-Ã¤ltere-systeme" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-ipados-17.7.5-fÃ¼r-Ã¤ltere-systeme">Apple verÃ¶ffentlicht iPadOS 17.7.5 fÃ¼r Ã¤ltere Systeme</h2>
<p>Apple hat nun das Update auf iPadOS 17.7.5 fÃ¼r Ã¤ltere iPads bereitgestellt. Das Update behebt <a href="https://support.apple.com/en-us/122173">kritische SicherheitslÃ¼cken</a> fÃ¼r die Anwender, die nicht auf iOS/iPadOS 18 updaten kÃ¶nnen oder wollen.</p>
<p>Auch dieses Update auf iPadOS 17.7.5 kann Ã¼ber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-KapazitÃ¤t und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des GerÃ¤ts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-verÃ¶ffentlicht-watchos-11.3.1" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-watchos-11.3.1">Apple verÃ¶ffentlicht watchOS 11.3.1</h2>
<p>Zum SchluÃŸ wie immer ein Blick auf die Uhr: Apple hat fÃ¼r die Apple Watch watchOS 11.3.1 bereitgestellt, bietet damit im wesentlichen <a href="https://support.apple.com/en-us/100100">Fehlerbehebungen und Sicherheitsupdates</a>.</p>
<p>Die Aktualisierung wird Ã¼ber die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p><em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54321078375/">ZauberÃ¤pfel im Zauberwald</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>the mad hatter gives a sexy naked woman, with big boops, and a nice butt an apple in the summer enchanted forest colored french comic style</em>Â«. Negative Prompt: Â»<em>lowres, error, cropped, worst quality, low quality, jpeg artifacts, out of frame, watermark, signature, ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>Â«. Modell: Stable Diffusion 3.5 Large Turbo, Style: None.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025021101_apple_patchday/</guid>
  <pubDate>Tue, 11 Feb 2025 13:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021101_apple_patchday/images/magicapple.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein Neustart mit der Python Arcade Bibliothek?</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025021001_arcade_neustart/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54316831851/"><img src="https://kantel.github.io/posts/2025021001_arcade_neustart/images/arcadeneustart-b.jpg" class="img-fluid"></a></p>
<p>Vor einigen Jahren hatte ich ja schon einmal mit der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/arcade.html">Python Arcade Bibliothek</a> experimentiert. Damals (2021) waren meine Versuche eingeschlafen, weil das Teil fÃ¼r meinen Geschmack noch zu viele <em>Glitches</em> aufwies. Doch am Wochenende kam mir ein <a href="https://www.youtube.com/watch?v=qf47Zqs2xSw">erstes Video</a> einer geplanten <a href="https://www.youtube.com/playlist?list=PL1P11yPQAo7qgk8uk_A5UxiTrMt6obCc5">Tutorialreihe</a> unter, und das versprach, daÃŸ mit der brandneuen <a href="https://github.com/pythonarcade/arcade">Version&nbsp;3 von Arcade</a> â€“ erschienen vor zwei Wochen â€“ die Kinderkrankheiten endlich Ã¼berwunden sein sollten. Das machte mich natÃ¼rlich neugierig.</p>
<p><strong>Doch zuerst einmal zur Erinnerung</strong>: Was ist eigentlich Arcade? Arcade ist eine freie (MIT-Lizenz) Python-Bibliothek, die <em>Paul Vincent Craven</em> <a href="http://blog.schockwellenreiter.de/2018/05/2018051502.html">vor etwa sieben Jahren</a> aus Frust Ã¼ber den damaligen Stillstand und die dadurch nie gefixten Bugs von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">PyGame</a> entwickelt hatte. AuÃŸerdem sollte sie fÃ¼r AnfÃ¤nger einfach zu lernen (ohne Pygames groÃŸen <em>Boilerplate Overkill</em> â€“ das hat die Arcade-Bibliothek mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html">Pygame Zero</a> gemeinsam), aber dennoch leistungsfÃ¤hig sein. Arcade setzt auf <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyglet.html">Pyglet</a> (und damit auf OpenGL) auf und kann mit der Physik-Engine <a href="https://www.pymunk.org/en/latest/index.html">Pymunk</a> verkuppelt werden.</p>
<p>In der aktuellen Version&nbsp;3 von Arcade wurde die Bibliothek vollstÃ¤ndig Ã¼berarbeitet (was sich auch an einem <a href="https://github.com/pythonarcade/arcade">neuen GitHub-Repositorium</a> und einer <a href="https://api.arcade.academy/en/latest/">neu erstellten Dokumentation</a> festmachen lÃ¤sst). Daher liefen <a href="http://blog.schockwellenreiter.de/2021/04/2021040701.html">meine alten Versuche</a> mit der neuen Version der Bibliothek nicht mehr, ich muÃŸte also komplett neu beginnen.</p>
<p>Die Neuaufstellung hat aber der Arcade-Bibliothek gut getan, sie wurde einerseits schlanker und andererseits leistungsfÃ¤higer und offener. Ein minimales, aber dennoch lauffÃ¤higes Template kann zum Beispiel nun so aussehen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld(arcade.Window):</span>
<span id="cb1-4"></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Arcade Herdplatte"</span>)</span>
<span id="cb1-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb1-16">    window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb1-17">    window.setup()</span>
<span id="cb1-18">    arcade.run()</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb1-21">    main()</span></code></pre></div>
<p>Das ist ein vollstÃ¤ndiges Arcade-Programm und Ã¶ffnet ein Fenster mit einem grauen Hintergrund. Es ist zwar noch nicht ganz der Minimalismus von Pygame Zero, aber gegenÃ¼ber dem <em>Overhead</em>, den Pygame verlangt, doch schon eine Vereinfachung. Und nach einer ersten Durchsicht der Arcade-Dokumentation ist die Bibliothek bedeutend leistungsfÃ¤higer als Pygame Zero. Und Pygame Zero hat seit 2018 kein echtes Update mehr erfahren, wÃ¤hrend die Python Arcade Bbliothek aktuell 149 Kontributoren besitzt, die an der Weiterentwicklung arbeiten.</p>
<p>Das hat mich natÃ¼rlich angefixt und ich muÃŸte â€“ in Anlehnung an das <a href="https://api.arcade.academy/en/latest/tutorials/platform_tutorial/index.html">Â»offizielleÂ« Beginner-Tutorial</a> â€“ mit Arcade spielen. Meine (noch nicht fertige â€“ ich bin gestern bis <a href="https://api.arcade.academy/en/latest/tutorials/platform_tutorial/step_06.html">Step&nbsp;6</a> gekommen) Version sieht so aus (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/54316831851/">Screenshot</a> im Bannerbild oben):</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Simple Platformer Game with Arcade</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> arcade</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb2-7">WINDOW_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">840</span></span>
<span id="cb2-8">WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span></span>
<span id="cb2-9">WINDOW_TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Erste Schritte mit Arcade 3.0"</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">TILE_SCALING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb2-12">TILE_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb2-13"></span>
<span id="cb2-14">PLAYER_SPEED <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-15">GRAVITY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-16">PLAYER_JUMP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld(arcade.Window):</span>
<span id="cb2-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Main application class.</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-22"></span>
<span id="cb2-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-24"></span>
<span id="cb2-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call the parent class to set up the window</span></span>
<span id="cb2-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)</span>
<span id="cb2-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position of the window</span></span>
<span id="cb2-28">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.set_location(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb2-29">        </span>
<span id="cb2-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variable to hold our texture for our player</span></span>
<span id="cb2-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-32">        </span>
<span id="cb2-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Separate variable that holds the player sprite</span></span>
<span id="cb2-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-35">        </span>
<span id="cb2-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our player</span></span>
<span id="cb2-37">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-38">        </span>
<span id="cb2-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our boxes and ground</span></span>
<span id="cb2-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-41"></span>
<span id="cb2-42">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Set up the game here. Call this function to restart the game."""</span></span>
<span id="cb2-44">        </span>
<span id="cb2-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.load_texture(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/gameboy_idle.png"</span>)</span>
<span id="cb2-46">        </span>
<span id="cb2-47">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_texture, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.65</span>)</span>
<span id="cb2-48">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.center_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb2-49">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.center_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WINDOW_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-50">        </span>
<span id="cb2-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SpriteList for our player</span></span>
<span id="cb2-52">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.SpriteList()</span>
<span id="cb2-53">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list.append(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite)</span>
<span id="cb2-54">        </span>
<span id="cb2-55">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.SpriteList(use_spatial_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-56">        </span>
<span id="cb2-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the ground</span></span>
<span id="cb2-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This shows using a loop to place multiple sprites horizontally</span></span>
<span id="cb2-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WINDOW_WIDTH, TILE_SIZE):</span>
<span id="cb2-60">            wall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/grass001.png"</span>, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SCALING)</span>
<span id="cb2-61">            wall.center_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x</span>
<span id="cb2-62">            wall.center_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SIZE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-63">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.append(wall)</span>
<span id="cb2-64">        </span>
<span id="cb2-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put some crates on the ground</span></span>
<span id="cb2-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This shows using a coordinate list to place sprites</span></span>
<span id="cb2-67">        coordinate_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>]]</span>
<span id="cb2-68">        </span>
<span id="cb2-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> coordinate <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> coordinate_list:</span>
<span id="cb2-70">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a crate on the ground</span></span>
<span id="cb2-71">            wall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.Sprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/box01.png"</span>, scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TILE_SCALING)</span>
<span id="cb2-72">            wall.position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coordinate</span>
<span id="cb2-73">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.append(wall)</span>
<span id="cb2-74">        </span>
<span id="cb2-75">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Platformer Physics Engine.</span></span>
<span id="cb2-76">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This will handle moving our player as well as collisions between</span></span>
<span id="cb2-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the player sprite and whatever SpriteList we specify for the walls.</span></span>
<span id="cb2-78">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.physics_engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> arcade.PhysicsEnginePlatformer(</span>
<span id="cb2-79">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite, walls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list, gravity_constant<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRAVITY</span>
<span id="cb2-80">        )</span>
<span id="cb2-81"></span>
<span id="cb2-82">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.background_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb2-83"></span>
<span id="cb2-84">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-85">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Render the screen."""</span></span>
<span id="cb2-86"></span>
<span id="cb2-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The clear method should always be called at the start of on_draw.</span></span>
<span id="cb2-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It clears the whole screen to whatever the background color is</span></span>
<span id="cb2-89">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set to. This ensures that you have a clean slate for drawing each</span></span>
<span id="cb2-90">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># frame of the game.</span></span>
<span id="cb2-91">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clear()</span>
<span id="cb2-92"></span>
<span id="cb2-93">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Code to draw other things will go here</span></span>
<span id="cb2-94">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wall_list.draw()</span>
<span id="cb2-95">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_list.draw()</span>
<span id="cb2-96">    </span>
<span id="cb2-97">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, delta_time):</span>
<span id="cb2-98">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Movement and Game Logic"""</span></span>
<span id="cb2-99"></span>
<span id="cb2-100">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move the player using our physics engine</span></span>
<span id="cb2-101">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.physics_engine.update()</span>
<span id="cb2-102">    </span>
<span id="cb2-103">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_key_press(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, modifiers):</span>
<span id="cb2-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Called whenever a key is pressed."""</span></span>
<span id="cb2-105">        </span>
<span id="cb2-106">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.ESCAPE:</span>
<span id="cb2-107">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.setup()</span>
<span id="cb2-108">        </span>
<span id="cb2-109">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.UP <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.W:</span>
<span id="cb2-110">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.physics_engine.can_jump():</span>
<span id="cb2-111">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_JUMP</span>
<span id="cb2-112"></span>
<span id="cb2-113">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.LEFT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.A:</span>
<span id="cb2-114">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>PLAYER_SPEED</span>
<span id="cb2-115">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.RIGHT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.D:</span>
<span id="cb2-116">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_SPEED</span>
<span id="cb2-117"></span>
<span id="cb2-118">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> on_key_release(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, key, modifiers):</span>
<span id="cb2-119">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Called whenever a key is released."""</span></span>
<span id="cb2-120">        </span>
<span id="cb2-121">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.LEFT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.A:</span>
<span id="cb2-122">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-123">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.RIGHT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> arcade.key.D:</span>
<span id="cb2-124">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_sprite.change_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-125"></span>
<span id="cb2-126"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb2-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Main function"""</span></span>
<span id="cb2-128">    window <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb2-129">    window.setup()</span>
<span id="cb2-130">    arcade.run()</span>
<span id="cb2-131"></span>
<span id="cb2-132"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb2-133">    main()</span></code></pre></div>
<p>Bei aller Lobhudelei habe ich zwei Dinge zu bemÃ¤ngeln. Erstens: Mein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> gibt eine seltsame und fÃ¼r mich unverstÃ¤ndliche Meldung bei jedem Start eines Arcade-Skripts aus:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2025-02-10</span> 17:05:47.825 Python<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3168:94568</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> ApplePersistenceIgnoreState: Existing state will not be touched. New state will be written to /var/folders/bz/7v6zs8_x2rgb97_7tfb77x8h0000gp/T/org.python.python.savedState</span></code></pre></div>
<p>Das scheint zwar den Programmablauf nicht zu beeinflussen (und die Meldung klingt auch eigentlich harmlos), aber ich wÃ¼rde trotzdem gerne wissen, was sie bedeutet.</p>
<p>Der zweite Einwand ist gewichtiger: Im Gegensatz zu Pygame scheint es keine MÃ¶glichkeit zu geben, Arcade-Skripte webtauglich zu machem so daÃŸ die damit erstellten Spiele auch im Browser laufen. Zwar <a href="https://api.arcade.academy/en/latest/about/faq.html#can-arcade-run-on">verspricht die FAQ</a></p>
<blockquote class="blockquote">
<p>For the moment, the Arcade and <a href="https://pyglet.readthedocs.io/en/development/">pyglet</a> teams are eagerly watching ongoing developments in <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API">WebGPU</a> and its <a href="https://developer.mozilla.org/en-US/docs/WebAssembly">WASM</a> integrations</p>
</blockquote>
<p>aber in absehbarer Zeit rechne ich hier mit keinem Fortschritt.</p>
<p>Dennoch, im Gegensatz zu <a href="http://blog.schockwellenreiter.de/2021/04/2021040501.html">meinen</a> <a href="http://blog.schockwellenreiter.de/2021/04/2021040701.html">frÃ¼heren</a> <a href="http://blog.schockwellenreiter.de/2021/04/2021040801.html">Versuchen</a> macht das Entwickeln mit Arcade mir mittlerweile richtig SpaÃŸ. Daher kÃ¶nnt Ihr mit Sicherheit in der nÃ¤chsten Zeit weitere Arcade-Experimente in diesem <del>Blog</del> Kritzelheft erwarten. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Python</category>
  <category>Arcade</category>
  <guid>https://kantel.github.io/posts/2025021001_arcade_neustart/</guid>
  <pubDate>Mon, 10 Feb 2025 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025021001_arcade_neustart/images/arcadeneustart.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>KÃ¼nstliche Intelligenz und Bildergeschichten: Video-Tutorials zum Wochenende</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025020701_ki_und_bildergeschichten/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54312222406/"><img src="https://kantel.github.io/posts/2025020701_ki_und_bildergeschichten/images/dachstv-b.jpg" class="img-fluid"></a></p>
<p>Da <a href="https://kantel.github.io/posts/2025013101_video_tutorials/">trotz der Anstrengung von letzter Woche</a> mein Feedreader immer noch Ã¼berlÃ¤uft, mÃ¶chte ich Euch auch fÃ¼r dieses Wochenende noch ein paar Video-Tutorials empfehlen. Dieses Mal geht es zum einen um Tutorials zur bildgenerierenden gekÃ¼nstelten Intelligenzia und zum anderen â€“ da ich diese in der Hauptsache nutze, um Bilder fÃ¼r interaktive Geschichten zu generieren â€“ um meine bevorzugen Engines dafÃ¼r, um <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Renâ€™Py</a><sup>1</sup>.</p>
<section id="scenario" class="level2">
<h2 class="anchored" data-anchor-id="scenario">Scenario</h2>
<p><a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> gibt in unregelmÃ¤ÃŸigen AbstÃ¤nden und zu vÃ¶llig unsortierten Themen immer wieder mal kÃ¼rzere Video-Tutorials zur eigenen Engine heraus.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/GXdlhTPj6Lc?si=E0402l7zdNLci2u1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Meben dem obigen Â»<a href="https://www.youtube.com/watch?v=GXdlhTPj6Lc">Manage and Optimize Your Custom AI Models in Scenario</a>Â« waren das in den letzten Wochen:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=2zbjyTAqP1o&amp;list=WL">Introducing Skyboxes on Scenario</a>.</li>
<li><a href="https://www.youtube.com/watch?v=uztCBQzWI-E">Scenario Prompting Best Practices</a>.</li>
<li><a href="https://www.youtube.com/watch?v=WcYHKy6f_bs">Explore Dual Reference Image Mode on Scenario</a>.</li>
<li><a href="https://www.youtube.com/watch?v=MFkITxCaH30">Pixelate Your Images in Scenario</a>.</li>
<li>Generating Seamless Textures â€“ <a href="https://www.youtube.com/watch?v=hsvWcT1n-YI">Part 1</a> and <a href="https://www.youtube.com/watch?v=MGzvS8-Pags">Part 2</a>.</li>
<li><a href="https://www.youtube.com/watch?v=rVLKjjwBIhI">Seamlessly Expand Your Images in Scenario</a>.</li>
<li><a href="https://www.youtube.com/watch?v=dX4ADlMY-8Q">Create Consistent Content with Image-to-Image Mode</a>.</li>
</ul>
</section>
<section id="openart.ai" class="level2">
<h2 class="anchored" data-anchor-id="openart.ai">OpenArt.ai</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/k4xlqrHWGmM?si=0EuBvyKKcaa2whTt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><em>Excelerator</em>: <a href="https://www.youtube.com/watch?v=k4xlqrHWGmM">Easily Train Your Own AI Image Model with Flux on OpenArt</a>.</p>
<p><em>OpenArt.ai</em> hat einen <a href="https://www.youtube.com/@openart_ai">eigenen YouTube-Kanal</a>. Dort findet Ihr viele Tutorials, zum Beispiel Â»<a href="https://www.youtube.com/watch?v=nuhJih8pRl0">4K Image Upscaler with 3 Modes (Creative, Refined, Precise)</a> - Ultimate Upscale TutorialÂ« oder Â»<a href="https://www.youtube.com/watch?v=SY28s_omVxw">How to use the Pose Editor for Characters on OpenArt</a>Â«. FÃ¼r den Einstieg eignet sich die Playlist Â»<a href="https://www.youtube.com/playlist?list=PL8rr1SSHW3sm39rfmjiguKLUKhMcmB82N">OpenArt Tutorials</a>Â« mit aktuell 25 Videos (wird noch aktualisiert).</p>
<ul>
<li>OpenArt AI - <a href="https://www.youtube.com/watch?v=MjtDMKAvMN8">Tutorial and Complete Review</a> [COMPLETE].</li>
<li><a href="https://www.youtube.com/watch?v=o_jN3I4oIfE">I explore the Powerful AI IMAGE EDITING TOOLS in OpenArt.ai</a>.</li>
</ul>
</section>
<section id="leonardo-ai-und-sonstige-engines" class="level2">
<h2 class="anchored" data-anchor-id="leonardo-ai-und-sonstige-engines">Leonardo AI und sonstige Engines</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/Fyd2G7IP0GQ?si=JC-s87Mumwf9cIdl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><a href="https://www.youtube.com/watch?v=Fyd2G7IP0GQ">The ACTUAL Way to Create Consistent Characters with Leonardo Ai</a> â€“ Easy Consistent Ai Characters!</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=6XEfvospqYo">Erstellen Sie einen konsistenten Charakter â€“ Leonardo AI</a> ðŸ”¥ðŸ”¥ Bisher einfachste Methode.</li>
<li><a href="https://www.youtube.com/watch?v=m0GcqbV5BV4">Creating Consistent Characters in Leonardo AI</a> (Made Simple, Free Plan).</li>
<li><a href="https://www.youtube.com/watch?v=HAQfks97cls">How to make NSFW images with Leonardo AI</a>.</li>
<li><a href="https://www.youtube.com/watch?v=89w8rfyWDec">How To Create Unlimited AI Images With AI | Text to image AI</a>.</li>
<li>LoRA Training Tutorial: <a href="https://www.youtube.com/watch?v=Fo_x6XUhECg">TensorArt Feature Update</a>.</li>
<li>Luma Dream Machine Update: <a href="https://www.youtube.com/watch?v=pZUelsi3D4M">No Prompt Engineering Needed</a>!</li>
</ul>
</section>
<section id="twine" class="level2">
<h2 class="anchored" data-anchor-id="twine">Twine</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/hmAvZnYAy5w?si=ELk_Rb8L4uCOXUbF" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Von <em>Letâ€™s Make a Game!</em> gibt es ein neues Twine-Spiel Â»<a href="https://projectaon.org/">Project Aon</a>Â«. Er hat die Entstehungsgeschichte auf seinem YouTube-Kanal dokumentiert. In seiner Reihe sind neu erschienen: Â»<a href="https://www.youtube.com/watch?v=hmAvZnYAy5w">217: Project Aon</a>Â« und Â»<a href="https://www.youtube.com/watch?v=3ZfR08fQnNM">218: Using Fighting Fantasy rules in Twine games</a>. Davor hat er in seiner Reihe als Nummer 216 zu meiner Erbauung noch <a href="https://www.youtube.com/watch?v=ScYoESxSZCE">Archive.orgâ€™s Gamebook Collection</a> vorgestellt.</p>
<ul>
<li>Auch <em>Dan Cox</em> hat seine vor neun Monaten unterbrochene Tutorial-Reihe zu Â»Twine und SugarCubeÂ« vor vier Tagen wieder aufgenommen. Bisher sind die Videos Â»<a href="https://www.youtube.com/watch?v=VvjTZ5oOfhk">Button Macro</a>Â«, Â»<a href="https://www.youtube.com/watch?v=fA4MPGOib24">Checkbox Macro</a>Â«, Â»<a href="https://www.youtube.com/watch?v=DG2ivI4YdKU">Radiobutton Macro</a>Â« und Â»<a href="https://www.youtube.com/watch?v=Nj3XdZYqhik">Numberbox Macro</a>Â« erschienen.</li>
<li><em>Chay Collins</em>: Â»<a href="https://www.youtube.com/watch?v=ALSli4hzlKA">Transcending Time in Twine</a>Â«.</li>
<li>Von <em>Alejandro Quan-Madrid</em> gibt es eine siebenteilige Playlist Â»<a href="https://www.youtube.com/playlist?list=PLuPOIXwQwZKyMnFmv-bBTkg3vnEPOOpHr">Twine Tutorials</a>Â« mit eher kurzen Videos.</li>
<li><a href="https://www.youtube.com/watch?v=r3xNfIoYCyM">Adding 3D models to Twine passages with Three js</a> (Snowman Template) â€“ <a href="https://www.youtube.com/watch?v=TIsGbC2QK00">Updated</a>.</li>
</ul>
<p>Und zum SchluÃŸ noch einen Ausflug zu der ebenfalls freien, Twine-Ã¤hnlichen Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink und ihrer IDE Inky</a>: Â»<a href="https://www.youtube.com/watch?v=WEu7MaasdEo">Create WEB COMICS and INTERACTIVE STORIES</a>Â«. Denn von <em>Inkle</em>, der Spieleschmiede, die hinter <em>Ink und Inky</em> steht, gibt es ein neues Spiel: Â»<a href="https://www.inklestudios.com/overboard/">Overboard</a>!Â« Der YouTuber <em>NeatPick</em> hat es <a href="https://www.youtube.com/watch?v=Y8F1G9GDyEs">in 45 Minuten durchgespielt</a>.</p>
</section>
<section id="renpy" class="level2">
<h2 class="anchored" data-anchor-id="renpy">Renâ€™Py</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/RmJpnAvcjrA?si=FRXucstFro6mIPZg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Susan Shu Chang: Â»<em><a href="https://www.youtube.com/watch?v=RmJpnAvcjrA">Narrative-focused video games development with Renâ€™Py an open source engine</a></em>Â«, PyCon US von 2021.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/75NtGaBys-o?si=cV399TugpHdS9DmZ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Von <em>Cosmo Cat</em> gibt es eine 18 Videos umfassende Reihe Â»<a href="https://www.youtube.com/playlist?list=PL9xdFa4m3yaVaZNCFPBvpJZBn24CiCoiP">Renâ€™Py for Beginners</a>Â«.</p>
<ul>
<li><em>Kia Azad</em>: <a href="https://www.youtube.com/watch?v=E5urehtQTNQ">DnD style roll for renpy choices</a>.</li>
<li><em>Discover with Mia</em>: <a href="https://www.youtube.com/watch?v=eOtjvoICkFE">Master the Renâ€™Py Multipage Inventory System with Python</a> (Step-by-Step).</li>
<li><em>Timitu</em>: <a href="https://www.youtube.com/watch?v=30BPMkTRnTY">A look at Renâ€™py Basic Credits</a>.</li>
<li><em>Mime Media AS</em>: Renpy Tutorial: <a href="https://www.youtube.com/watch?v=RN7oYhWyh2U">Advanced Transitions</a>.</li>
<li><em>Per K Grog</em>: <a href="https://www.youtube.com/watch?v=Crocyzt3Ivo">Walking in Renâ€™Py with Keys</a>.</li>
<li><em>Zeil Learnings</em>: RenPy Tutorial using Flags: <a href="https://www.youtube.com/watch?v=j0N_gSyJMHw">Deciding the ending in a Renâ€™Py Game</a>.</li>
<li>Auf <em>Renâ€™Py Start Tutorials</em> gibt es die derzeit 118 Videos umfassende Reihe Â»<a href="https://www.youtube.com/playlist?list=PL0WLCTtC1EYUibimxDGhkPQin7bo39PlV">Renâ€™Py Visual Novel Engine</a>Â«, die aktuell noch stÃ¤ndig aktualisiert wird. Ich habe den Kanal daher abonniert.</li>
</ul>
<p><strong>War sonst noch was?</strong> Ach ja, <em><a href="https://de.wikipedia.org/wiki/Boris_Eldagsen">Boris Eldagsen</a></em> zeigt in seinem Â»<a href="https://www.youtube.com/watch?v=0XB-omD8Pls">TRAUMA P0RN Artist Talk</a>Â« wie er in seiner gleichnamigen, experimentellen Installation aus Photographien, KI-generierten Bildern und Objekten, sich mit den Traumata als Langzeitfolgen des (2. Welt-) Krieges auseinandersetzt.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/JYZcHSqqxtg?si=obS70sJaaVIp3aXW" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Und dann gibt es noch das interessante Video Â»<a href="https://www.youtube.com/watch?v=JYZcHSqqxtg">How AI pioneer Doug Hofstadter wrote GÃ¶del, Escher, Bach</a>Â« von <em>Game Thinking TV</em>. Das volle, fast vierzigminÃ¼tige Interview Â»<a href="https://www.youtube.com/watch?v=R6e08RnJyxo">GÃ¶del, Escher, Bach author Doug Hofstadter on the state of AI today</a>Â« findet Ihr ebenfalls auf diesem Kanal.</p>
<p>Zum krÃ¶nenden AbschluÃŸ fragt der <em>Bayerische Rundfunk</em>: <a href="https://www.youtube.com/watch?v=kLexLoLq7uw">KinderbÃ¼cher mit KI: Ersetzt kÃ¼nstliche Intelligenz kÃ¼nftig Illustratoren</a>? Wenn ja â€“ was wÃ¤re so schlimm daran? SchlieÃŸlich hat die Photographie vor Ã¼ber 150 Jahren ja auch schon die (schlechten â€“ die guten haben Ã¼berlebt) Portraitmalerinnen und -maler ersetzt.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54312222406/">Dachs guckt TV</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>A badger in a red dressing gown sits in a wing chair in a cave and watches television. Next to the chair, an old-fashioned floor lamp illuminates the scene. There are shelves with books on the walls. The moon shines through a window opening in the background. colored french comic style</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">FuÃŸnoten</h2>

<ol>
<li id="fn1"><p>NatÃ¼rlich gehÃ¶rt in meine Liste der bevorzugten Werkzeuge fÃ¼r interaktive Geschichten auch noch die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS Visual Novel Engine</a>, aber fÃ¼r diese scheint es zu meinem groÃŸen Bedauern kaum Tutorials auf YouTube zu geben.â†©ï¸Ž</p></li>
</ol>
</section></div> ]]></description>
  <category>KÃ¼nstliche Intelligenz</category>
  <category>Bilder</category>
  <category>Scenario</category>
  <category>OpenArt.ai</category>
  <category>Flux.1</category>
  <category>Leonardo AI</category>
  <category>Interactive Fiction</category>
  <category>RenPy</category>
  <category>Python</category>
  <category>Twine</category>
  <guid>https://kantel.github.io/posts/2025020701_ki_und_bildergeschichten/</guid>
  <pubDate>Fri, 07 Feb 2025 13:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025020701_ki_und_bildergeschichten/images/dachstv.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 135.0 freigegeben</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025020605_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54251805272/"><img src="https://kantel.github.io/posts/2025020605_thunderbird_update/images/thunderbird-b.jpg" class="img-fluid"></a></p>
<p>Und noch ein nachgeschobenes Update von gestern: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben die Version 135.0 freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/135.0/releasenotes/">SicherheitslÃ¼cken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer Ã¼ber das MenÃ¼ <code>Hilfe &gt; Ãœber Thunderbird</code> angestoÃŸen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54251805272/">Thunderbird hunts Firefox</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: Â»<em>illustration of a majestic thunderbird with colored feathers soaring above a mountain range during a bright sunset, hunting a red firefox</em>Â«. Modell: Flux Composition, Style: Expressive Comic Characters.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025020605_thunderbird_update/</guid>
  <pubDate>Thu, 06 Feb 2025 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025020605_thunderbird_update/images/thunderbird.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
