<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Thu, 05 Jun 2025 14:05:00 GMT</lastBuildDate>
<item>
  <title>Neue Version: Pygame-CE 2.5.4 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54569329440/"><img src="https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/images/pygamece-b.jpg" class="img-fluid"></a></p>
<p>Soeben erreichte mich die Nachricht, daß vor wenigen Tagen von <a href="https://pyga.me/">Pygame-CE</a>, der <a href="https://kantel.github.io/posts/2024081502_pygame_ce/"><em>Community Edition</em>-Fork</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> die <a href="https://github.com/pygame-community/pygame-ce/releases/tag/2.5.4">Version 2.5.4 freigegeben</a> wurde.</p>
<p><a href="https://github.com/pygame-community"><img src="https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/images/pygamecommunity.jpg" class="img-fluid"></a></p>
<p>In das Update sind einige nennenswerte Änderungen (unter anderem können jetzt animierte GIFs und WEBP als Animation geladen werden) und etliche Bugfixes eingeflossen. Außerdem wollen die Entwickler einen großen Schritt in Richtung SDL3-Unterstützung gemacht haben. Die <a href="https://github.com/pygame-community/pygame-ce/releases/tag/2.5.4">Release-Notes</a> verraten mehr. Und ein <a href="https://github.com/pygame-community/pygame-ce/compare/2.5.3...2.5.4">komplettes Changelog</a> der Versionen 2.5.3 bis 2.5.4 gibt es hier.</p>
<p>Ein Update kann mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> uninstall pygame     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if installed</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pygame-ce <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span></span></code></pre></div>
<p>erfolgen.</p>
<p>Da Pygame-CE die einzige Version ist, die offiziell von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> unterstützt wird und somit Pygame-Apps webtauglich macht, hatte ich im letzten Jahr auch den <a href="https://kantel.github.io/posts/2024081502_pygame_ce/">Schritt von Pygame nach Pygame-CE gewagt</a>. Und kürzlich hatte ich gesehen, daß auch <a href="https://webtigerpython.ethz.ch/">WebTigerPython</a> (via Pyodide) Pygame-CE <a href="https://pyodide.org/en/stable/usage/packages-in-pyodide.html">unterstützen soll</a>. Es gibt also noch viel zu spielen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54569329440/">Pygame-CE</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC-Comics Style. A python wearing horn-rimmed glasses with a gamepad and a laptop sits in a beer garden and playing computer games</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Pygame</category>
  <category>Python</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/</guid>
  <pubDate>Thu, 05 Jun 2025 14:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/images/pygamece.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Spaß mit Python, dem Tiger und der Schildkröte</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54565258311/"><img src="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/tigerpython-b.jpg" class="img-fluid"></a></p>
<p>Da nun doch ziemlich viel Zeit verstrichen war, seitdem ich das letzte Mal etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> angestellt hatte, habe ich ein über fünf Jahre altes Projekt hervorgekramt, um wieder mit der Programmierung in dieser Python-Umgebung vertrauter zu werden. Es ist der Beitrag »<a href="http://blog.schockwellenreiter.de/2021/02/2021020901.html">Fraktale überall</a>« vom 9. Februar 2021, in dem ich einen symmetrischen wie auch einen asymmetrtischen <a href="https://de.wikipedia.org/wiki/Pythagoras-Baum">Pythagoras-Baum</a> mit TigerJythons Turtle realisiert hatte.</p>
<p>Auch dieses Mal mußte ich nur minimale Änderungen vornehmen, die in der Hauptsache dem Umstand geschuldet waren, daß ich damals noch recht gedankenlos den auch von den Machern von TigerJython angewandeten Wildcard-Import eingesetzt hatte. Heute habe ich nun statt</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<p>lieber die Konstruktion</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span></code></pre></div>
<p>genutzt, um Namensraumverschmutzungen zu vermeiden. Zwar sind sie im Falle des Turtle-Moduls recht unwarscheinlich, aber ich fühle mich einfach wohler damit.</p>
<section id="symmetrischer-pythagoras-baum" class="level3">
<h3 class="anchored" data-anchor-id="symmetrischer-pythagoras-baum">Symmetrischer Pythagoras-Baum</h3>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54564211087/"><img src="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/sympythagoras.jpg" class="img-fluid"></a></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb3-3"></span>
<span id="cb3-4">palette <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">183</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>),</span>
<span id="cb3-5">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">251</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>),</span>
<span id="cb3-6">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">154</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">205</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">142</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">134</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>),</span>
<span id="cb3-7">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">115</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>)]</span>
<span id="cb3-8">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb3-9">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb3-10">maxRec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> tree(s):</span>
<span id="cb3-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> maxRec:</span>
<span id="cb3-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb3-15">    square(s)</span>
<span id="cb3-16">    p.forward(s)</span>
<span id="cb3-17">    s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-18">    p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb3-19">    tree(s1)</span>
<span id="cb3-20">    p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb3-21">    p.forward(s1)</span>
<span id="cb3-22">    tree(s1)</span>
<span id="cb3-23">    p.back(s1)</span>
<span id="cb3-24">    p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb3-25">    p.back(s)</span>
<span id="cb3-26">    </span>
<span id="cb3-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> square(s):</span>
<span id="cb3-28">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> palette[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(palette)]</span>
<span id="cb3-29">    p.setFillColor(col)</span>
<span id="cb3-30">    p.startPath()</span>
<span id="cb3-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb3-32">        p.forward(s)</span>
<span id="cb3-33">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb3-34">    p.fillPath()</span>
<span id="cb3-35"></span>
<span id="cb3-36">gt.Options.setPlaygroundSize(WIDTH, HEIGHT)      </span>
<span id="cb3-37">tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.TurtleFrame()</span>
<span id="cb3-38">tf.setTitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Symmetrischer Pythagoras-Baum"</span>)</span>
<span id="cb3-39">tf.clear(makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hintergrundfarbe</span></span>
<span id="cb3-40">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb3-41">p.setPenColor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#923545"</span>)</span>
<span id="cb3-42">p.hideTurtle()</span>
<span id="cb3-43">p.setPos(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb3-44">tree(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-45"></span>
<span id="cb3-46"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
</section>
<section id="asymmetrischer-pythagoras-baum" class="level3">
<h3 class="anchored" data-anchor-id="asymmetrischer-pythagoras-baum">Asymmetrischer Pythagoras-Baum</h3>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54565205826/"><img src="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/asympythagoras.jpg" class="img-fluid"></a></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb4-3"></span>
<span id="cb4-4">palette <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">183</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>),</span>
<span id="cb4-5">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">251</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>),</span>
<span id="cb4-6">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">154</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">205</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">142</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">134</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>),</span>
<span id="cb4-7">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">115</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>)]</span>
<span id="cb4-8">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb4-9">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> tree(s, level):</span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb4-15">        quadrat(s)</span>
<span id="cb4-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Linke Seite</span></span>
<span id="cb4-17">        ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-18">        p.forward(s)</span>
<span id="cb4-19">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-20">        p.forward(s)</span>
<span id="cb4-21">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb4-22">        p.forward(ls)</span>
<span id="cb4-23">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-24">        tree(ls, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rechte Seite</span></span>
<span id="cb4-26">        rs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-27">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)</span>
<span id="cb4-28">        p.forward(rs)</span>
<span id="cb4-29">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-30">        tree(rs, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-31">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb4-32">        p.back(s)</span>
<span id="cb4-33">        </span>
<span id="cb4-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> quadrat(s):</span>
<span id="cb4-35">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> palette[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(palette)]</span>
<span id="cb4-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p.setPenColor(col)</span></span>
<span id="cb4-37">    p.setFillColor(col)</span>
<span id="cb4-38">    p.startPath()</span>
<span id="cb4-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb4-40">        p.forward(s)</span>
<span id="cb4-41">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-42">    p.fillPath()</span>
<span id="cb4-43"></span>
<span id="cb4-44">gt.Options.setPlaygroundSize(WIDTH, HEIGHT)</span>
<span id="cb4-45">gt.Options.setFramePosition(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)       </span>
<span id="cb4-46">tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.TurtleFrame()</span>
<span id="cb4-47">tf.setTitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asymmetrischer Pythagoras-Baum"</span>)</span>
<span id="cb4-48">tf.clear(makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hintergrundfarbe</span></span>
<span id="cb4-49">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb4-50">p.setPenColor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#923545"</span>)</span>
<span id="cb4-51">p.hideTurtle()</span>
<span id="cb4-52">p.setPos(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb4-53">tree(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb4-54"></span>
<span id="cb4-55"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Im Prinzip liegen die Unterschiede in den beiden Versionen nur in der Funktion <code>tree()</code>, allerdings muß sich die Schildkröte in der Funktion <code>square()</code> resepektive <code>quadrat()</code> beim symmetrischen Pythagoras-Baum vom Startpunkt aus nach <strong>rechts</strong> (<code>p.right(90)</code>) und bei der asymmetrischen Variante nach <strong>links</strong> (<code>p.left(90)</code>) bewegen.</p>
</section>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Jarka Arnold, Tobias Kohn, Aegidius Plüss: <em><a href="https://programmierkonzepte.ch/index.php">Programmierkonzepte mit Python und der Lernumgenbung TigerJython</a></em>, Version 2.77, Letzte Aktualisierung: 1. Juni 2024</li>
<li>Jarka Arnold, Aegidius Plüss: <em><a href="https://www.jython.ch/index.php">Grafik, Robotik, Datenbanken und Spielprogrammierung mit TigerJython</a></em> (TigerJython für Gymnasien), Version 2.5, Letzte Aktualisierung: 12. Juli 2024</li>
</ul>
<p>Ich habe mal wieder Blut geleckt und werde daher in Zukunft noch einiges mit TigerJython, aber auch mit <a href="https://webtigerpython.ethz.ch/">WebTigerPython</a> (hier der Link zu der (Entwickler-) <a href="https://docs.webtigerpython.ethz.ch/index.html">Dokumentation</a>) anstellen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54565258311/">Tiger und Python unter einem Pythagoras-Baum</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC-Comics Style. A python wearing horn-rimmed glasses and a tiger in a red dressing gown sit under a giant Pythagoras tree in a beer garden and drink beer from large glasses</em>«. Modell: Flux Kontext, Style: None.</p>


</section>

 ]]></description>
  <category>TigerJython</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/</guid>
  <pubDate>Mon, 02 Jun 2025 14:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/tigerpython.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die »Mediadaten« für den Mai 2025</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060101_mediadaten_mai_2025/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54362957333/"><img src="https://kantel.github.io/posts/2025060101_mediadaten_mai_2025/images/biber-b.jpg" class="img-fluid"></a></p>
<p>Mit dem heutigen neuen Monat geht hoffentlich der Frühling <em>peu à peu</em> in den Sommer über. Daher ist es nicht nur Zeit für ein (zugegeben leicht kitschiges) <a href="https://www.flickr.com/photos/schockwellenreiter/54362957333/">Bannerbild</a>, das einen Biber mit Laptop in einem frühlingshaften Garten zeigt, sondern auch Zeit für das, was hochtrabend manches Mal auch <em>Mediadaten</em> genannt wird: Im Mai 2025 hatte der <em>Schockwellenreiter</em> laut seinem nicht immer zuverlässigen, aber dafür (hoffentlich!) datenschutzkonformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>6.598 Seitenaufrufe</strong>. Wie immer täuscht die Exaktheit der Ziffer eine Genauigkeit der Zahl nur vor, trotzdem freue ich mich über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> für des Vormonat bergen auch keine Überraschungen:</p>
<ol type="1">
<li>Weit vorne liegt immer noch – wie schon seit Monaten – der Beitrag »<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/">Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</a>« vom 10. Januar 2024.</li>
<li>Dann folgt – aber schon deutlich abgeschlagen – der Artikel über meine <em>neue digitale Rumpelkammer</em> »<a href="https://kantel.github.io/posts/2024081201_anytype/">All about Anytype</a>« vom 12. August 2024.</li>
<li>Auf Platz 3 der Rant »<a href="https://kantel.github.io/posts/2023091002_typst_1st_steps/">Erste (und vermutlich letzte) Schritte mit Typst</a>« vom 10.&nbsp;September&nbsp;2023.</li>
<li>Der einzige Newcomer aus dem Vormonat ist mein Beitrag »<a href="https://kantel.github.io/posts/2025051201_72_jahre/">Ich hatte gestern Geburtstag: 72&nbsp;Jahre</a>«, mit dem ich mich am 12. Mai 2025 selbst feierte.</li>
<li>Und zum Schluß noch ein über ein Jahr alter Post aus meinem Backkatalog: »<a href="https://kantel.github.io/posts/2024031501_atom_wird_pulsar/">Der Atom-Editor lebt – und heißt jetzt Pulsar</a>« vom 15. März 2024, dessen Popularität ich selber nicht wirklich verstehe.</li>
</ol>
<p>Bis auf eine Ausnahme sind alle Beiträge dieses Rankings aus dem letzten Jahr. Mein Backkatalog scheint also von unser aller Datenkrake ernst genommen zu werden. Ich weiß allerdings nicht, ob mir das Angst machen oder ob ich das gut finden soll.&nbsp;🤨</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54362957333/">Ein Biber im Frühling</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a beaver in a red dressing gown sits on a bench in the garden with a laptop on his lap, next to him a small table with a steaming cup of coffee. It is spring, many flowering plants and many small birds can be seen, the warm spring sun is bathing the scenery</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Mediadaten</category>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2025060101_mediadaten_mai_2025/</guid>
  <pubDate>Sun, 01 Jun 2025 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060101_mediadaten_mai_2025/images/biber.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Kaffeetrinken auf dem Kulturbunkerdach</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052901_kulturbunker_2025/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54548748006/"><img src="https://kantel.github.io/posts/2025052901_kulturbunker_2025/images/kulturbunker-b.jpg" class="img-fluid"></a></p>
<p>Die Saison hatte schon Anfang Mai begonnen und ich hatte es verschlampt. Nicht, daß ich nicht bei der Saisoneröffnung dabeigewesen wäre, aber ich habe – obwohl es eigentlich meine Chronistenpflicht ist – nicht in diesem <del>Weblog</del> Kritzelheft darauf hingewiesen. Jedenfalls: Es gibt morgen, <strong>Freitag, den 30. Mai 2025 von 15:00 Uhr bis 18:00 Uhr</strong> wieder ein Nachbarschaftskaffee auf dem <a href="https://kantel.github.io/posts/2023100601_kulturbunker/">Kulturbunkerdach in der Neuköllner Rungiusstraße&nbsp;19</a>, veranstaltet vom <a href="https://www.trial-error.org/projekte-1/kulturbunkerdach/">Kulturlabor Trial &amp; Error</a>.</p>
<p>Und es wird wieder einiges geboten: Es gibt Kinderspiele (Wasserspiel, Ezyroller und mathematische Puzzles) mit Matthias, die <a href="https://www.kiezakademie-neukoelln.de/">Kiezakademie Neukölln</a> bietet eine Berufsberatung an, und Ihr könnt Yoga mit Mira üben. Natürlich gibt es auch wieder Kaffee und Kuchen, Tee, Schorlen und frische Waffeln, sowie eine Tauschecke und Ihr könnt nette Menschen treffen (unter anderem auch mich).</p>
<p>Das Nachbarschaftskaffee findet in dieser Saison (von Mai bis September) jeden Freitag auf dem Kulturbunkerdach statt (außer bei Regen). Kommt also vorbei, trinkt mit Eurem Lieblingsblogger einen Kaffee und lasst Euch von den Aktivistinnen und Aktivisten von Trial&nbsp;&amp; Error überraschen.</p>
<p><strong>Das gewohnte Caveat</strong>: Ich bin vom <a href="https://qm-glasower-strasse.de/">Quartiersmanagement Glasower Straße</a> zum (ehrenamtlichen) Paten dieses Projektes »<a href="https://qm-glasower-strasse.de/nachbarschaftscafe-auf-dem-kulturbunker-wieder-geoeffnet/">Nachbarschaftliches Miteinander auf dem Kulturbunker</a>« bestellt worden und daher natürlich immer ein wenig Partei. Aber das bin ich in diesem Fall gerne&nbsp;🤓, und das bin ich auch <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Gabi</a> schuldig.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54548748006/">Nachbarschafts-Café</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Illustration of an open-air neighborhood café. People sit at tables under a tent roof, chatting, and drinking coffee from steaming cups. Factory buildings can be seen in the background</em>«, nach einem <a href="https://www.flickr.com/photos/schockwellenreiter/47040431434/">Referenzphoto</a> von <em><a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Gabriele Kantel</a></em>. Modell: Flux LoRA, Style: Animated Feature.</p>



 ]]></description>
  <category>Kiezfest</category>
  <category>Kulturbunker</category>
  <category>Neukölln</category>
  <guid>https://kantel.github.io/posts/2025052901_kulturbunker_2025/</guid>
  <pubDate>Thu, 29 May 2025 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052901_kulturbunker_2025/images/kulturbunker.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hello again, TigerJython: Kein Abschied ist für immer!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052801_tigerjython_reloaded/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54550426507/"><img src="https://kantel.github.io/posts/2025052801_tigerjython_reloaded/images/tigerjythonagain-b.jpg" class="img-fluid"></a></p>
<p>Da hatte ich doch im Oktober 2022 ziemlich sauer gekocht meinen <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">Abschied von TigerJython</a> verkündet, da sich die <a href="https://www.tjgroup.ch/index.php">TigerJython Group</a> vom Open-Source-Prinzip verabschiedet hatte. Doch die Zeiten ändern sich: Ich fragte mich, ob ich wegen meiner digitalen Souveränität und Unabhängigkeit von US-amerikanischen Firmen und einer DSGVO-konformen Software nicht doch meine Ansprüche an Open Source zurückstellen und auf das Schweizer Produkt wieder zurückgreifen sollte. Denn <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> wird in der Schweiz im Umfeld der ETH Zürich entwickelt.</p>
<p>Also habe ich die <a href="https://www.tigerjython.ch/de">Website von TigerJython</a> besucht und gleich zwei Überraschungen erlebt: Erstens ist offensichtlich TigerJython (zumindest in der <a href="https://www.tigerjython.ch/de/news/TigerJython%203">kommenden Version 3</a>) wieder Open Source Software (<a href="https://github.com/Tiger-Jython/TigerJython">laut GitHub</a> MPL&nbsp;2.0), zum anderen gibt es eine Online-Version <a href="https://www.tigerjython.ch/de/news/WebTigerPython">WebTigerPython</a>, die auf TigerJython&nbsp;3 aufsetzt, aber frei von Java sein will und die volle Funktionalität von Python&nbsp;3.11 besitzen soll (also zum Beispiel auch mit <code>numpy</code>, <code>sympy</code> oder der <code>matplotlib</code> spielt). Die Version wird noch weiter entwickelt, die Macher sind aber davon so überzeugt, daß sie sie <a href="https://webtigerpython.ethz.ch/">hier freigeschaltet</a> haben.</p>
<p>Neugierig geworden habe ich mir die aktuelle (Desktop-) Version TigerJython&nbsp;2.41 vom 23.&nbsp;März&nbsp;2025 heruntergeladen und mehrere Stunden damit herumgespielt (die Version <a href="https://github.com/Tiger-Jython/TigerJython/releases/tag/v3.0-beta%2B2">TigerJython&nbsp;3 Beta&nbsp;2</a> habe ich auf meinem Mac leider nicht zum Laufen bekommen). TigerJython hat mich wieder (und immer noch) überzeugt.</p>
<p>Unter den gegebenen Umständen werde ich natürlich wieder etwas mit TigerJython anstellen (vielleicht auch mit der Online-Version). Das Teil ist schließlich wieder Open Source, es kommt aus der Schweiz (also DSGVO-konform) und befreit mich aus der Abhängigkeit von US-amerikanischen Softwaregiganten. Und ich erinnere mich, daß die Programmierung mit TigerJython mir immer sehr viel Spaß gebracht hat. Herz, was willst du mehr?</p>



 ]]></description>
  <category>TigerJython</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025052801_tigerjython_reloaded/</guid>
  <pubDate>Wed, 28 May 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052801_tigerjython_reloaded/images/tigerjythonagain.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Tuesday JS Release 56 ist draußen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052602_tuesday_56/</link>
  <description><![CDATA[ 




<p><a href="https://private-user-images.githubusercontent.com/13263198/444736282-4f365e1c-dcd1-4beb-8235-f8b44dce7083.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDgyODczOTYsIm5iZiI6MTc0ODI4NzA5NiwicGF0aCI6Ii8xMzI2MzE5OC80NDQ3MzYyODItNGYzNjVlMWMtZGNkMS00YmViLTgyMzUtZjhiNDRkY2U3MDgzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MjYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTI2VDE5MTgxNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWRlZThkMGYwMmU0YzYyYzk2ZTY2MjA1MjNmZGU4Mzc3ZjdiMTA1MGU0YmM1MmNkMzc3MDk3YTE0MDZmMDYwODkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.b4ObDgN4c9JDK5K1hsqyi5xEwLxA2RD0HElp1A_Ubr8"><img src="https://kantel.github.io/posts/2025052602_tuesday_56/images/tuesdayjs56-b.jpg" class="img-fluid"></a></p>
<p>Dieses Mal bin ich fast pünktlich mit meiner Update-Meldung von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a>, der freien (Apache 2.0-Lizenz) Engine für <em>Visual Novels</em>, interaktive Geschichten und anderen Spielereien, die mich mit ihrer graphischen Oberfläche immer ein wenig an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erinnert. Denn erst vor wenigen Tagen wurde das <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/56.0.0">Release 56 »Chinese Version«</a> freigegeben.</p>
<p>Wie der Name schon vermuten lässt, kann Tuesday JS jetzt auch chinesisch, was auch zu den netten Pandas im Bannerbild oben geführt hat. Da mein Chinesisch-Kenntnisse aber sehr mangelhaft sind, habe ich weiterhin das englische Update heruntergeladen. Ansonsten gibt es nur kleinere Verbesserungen und Bug-Fixes.</p>
<p>Außerdem kann ich nur das wiederholen, was ich zu jeder Update-Meldung schreibe: Ich sollte endlich mal wieder etwas mit Tuesday&nbsp;JS anstellen. Denn diese wirklich nette Software hat ihren Dornröschenschlaf nicht verdient. <em>Still digging!</em></p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025052602_tuesday_56/</guid>
  <pubDate>Mon, 26 May 2025 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052602_tuesday_56/images/tuesdayjs56.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues über Q5.js, die rasend schnelle »Alternative« zu P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052601_q5js_updates/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54547351360/"><img src="https://kantel.github.io/posts/2025052601_q5js_updates/images/rasenderdachs-b.jpg" class="img-fluid"></a></p>
<p><a href="https://kantel.github.io/posts/2024061902_q5js/">Vor ungefähr einem Jahr</a> hatte ich auf diesen Seiten <a href="https://q5js.org/home/">Q5.js</a> von <em><a href="https://q5js.substack.com/">Quinton Ashley</a></em> als ein mögliches neues Spielzeug vorgestellt, das sich als schneller Nachfolger von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> empfahl. Mittlerweile ist <a href="https://q5js.substack.com/p/q5js-v30-is-finally-here">Q5.js in der Version 3.0</a> erschienen, will auch nicht mehr der Nachfolger, <a href="https://q5js.substack.com/p/p5js-q5js">sondern eine <strong>Alternative</strong> zu P5.js sein</a> und unternimmt große Anstrengungen, auch mit dem <a href="https://kantel.github.io/posts/2025050602_p5js_2_0/">kommenden P5.js Version 2.0</a> kompatibel zu bleiben.</p>
<p>Umgehauen hat mich aber der Beitrag »<a href="https://q5js.substack.com/p/is-q5js-the-fastest-2d-graphics-library">Is q5.js the Fastest 2D Graphics Library on the Web?</a>«. Hier vergleicht <em>Quinton Ashley</em> Q5.js mit seiem neuen WebGPU-Renderer nicht nur mit P5.js (etwa 30 bis 50 mal schneller), sondern auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a>. Hier will Q5.js 16 mal schneller sein. Zu guter Letzt wird dann noch die bisher angeblich schnellste WebGL-JavaScript Engine <a href="https://pixijs.com/">Pixi.js</a> herangezogen. Hier will Q5.js bis zu <strong>vier mal so schnell</strong> sein.</p>
<p>Nun gut, die Benchmarks hat der Schöpfer von Q5.js selber auf seinem MacBook Air durchgezogen, sie sind also mit Vorsicht zu genießen. Aber ohne Zweifel scheint Q5.js eine wirklich schnelle JavaScript-Graphic-Engine zu sein. Ich weiß ja nicht, ob ich diesen Geschwindigkeitszuwachs je benötigen werde. Aber auf jeden Fall werde ich Q5.js als (m)ein neues Spielzeug in Erwägung ziehen. Daher habe ich <a href="https://q5js.substack.com/archive?sort=new">Quinton’s Substack</a> erst einmal meinem Feedreader zum Futter vorgeworfen. Schaun wir mal, was da noch kommt. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54547351360/">Rasender Dachs</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style. A badger in a red dressing gown sits at the wheel of an open sports car and races at high speed through a dystopian city with crumbling skyscrapers, junk cars standing on the side of the road</em>«. Modell: Flux (pro), Style: None.</p>



 ]]></description>
  <category>Q5.js</category>
  <category>P5.js</category>
  <category>Processing</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025052601_q5js_updates/</guid>
  <pubDate>Mon, 26 May 2025 18:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052601_q5js_updates/images/rasenderdachs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ausgerutscht und eingebrochen: Das Ende von Glitch 🎏</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052402_glitch_ende/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54542235759/"><img src="https://kantel.github.io/posts/2025052402_glitch_ende/images/glitch-b.jpg" class="img-fluid"></a></p>
<p>Gestern erreichte mich eine Nachricht, <a href="https://blog.glitch.com/post/changes-are-coming-to-glitch/">die mich ein wenig traurig stimmte</a>: Verschwurbelt unter dem üblichen Marketing-Geblubber verkündete <em>Anil Dash</em>, daß <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/glitch.html">Glitch&nbsp;🎏</a>, der freundliche (und in der Grundversion kostenlose) Community-Webhoster zum <strong>8. Juli dieses Jahres seinen Dienst einstellt</strong>. Das betrifft – wie regelmäßige Leserinnen und Leser des <em>Schockwellenreiters</em> wissen – auch mich, denn auch ich hatte mir vor <a href="http://blog.schockwellenreiter.de/2022/04/2022040601.html">über drei Jahren</a> mit <a href="http://blog.schockwellenreiter.de/2022/04/2022040602.html">relativ großem Tam-Tam</a> einen <a href="https://schockwellenreiter.glitch.me/">Spielplatz auf Glitch&nbsp;🎏</a> zugelegt.</p>
<p>Zwar hatte ich <a href="https://kantel.github.io/posts/2023111701_more_glitch/">bisher nur wenig</a> von den geplanten Aktivitäten (ich wollte – wie zu den Anfangszeiten des Internets – (statische) <a href="http://blog.schockwellenreiter.de/2022/05/2022052401.html">Webseiten ohne Sinn und Verstand</a> basteln) realisiert, aber es war doch schön und nützlich, solch einen Hoster im Hintergrund zu haben, bei dem man ein paar Experimente (sei es mit HTML und CSS, sei es mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> oder sei es mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>) schnell online stellen konnte.</p>
<p>Jetzt bin ich <a href="http://blog.schockwellenreiter.de/2022/03/2022032801.html">mal wieder</a> auf der Suche nach Alternativen (mein <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html">GitHub Pages</a> Account ist schon mit diesem <del>Blog</del> Kritzelheft ziemlich ausgelastet). Auf die Schnelle fallen mir da erst einmal <a href="https://docs.gitlab.com/user/project/pages/">GitLab Pages</a> (das aber sehr schnell <a href="https://www.heise.de/news/Versionsverwaltung-GitLab-rudert-beim-Loeschen-inaktiver-Repositories-zurueck-7203006.html">Repositorien wegen Inaktivität löscht</a>), <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/netlify.html">Netlify</a> (in der <a href="https://www.netlify.com/pricing/">Grundversion kostenlos</a>) und <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/heroku.html">Heroku</a> (kostet in jedem Fall <a href="https://www.heroku.com/pricing/">»kleines« Geld</a>) ein. Wenn Ihr da draußen noch von weiteren Möglichkeiten wisst, bitte ich um eine kurze Nachricht in meinen Kommentaren. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54542235759/">Glitch ist eingebrochen</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A life-sized white rabbit wearing a colorful vest and holding a pocket watch breaks through the ice on a surfboard. Colorful fish leap from the ice hole through the air. It’s winter, and a red full moon illuminates the scene</em>«. Modell: Flux LoRA, Style: Euro Comix.</p>



 ]]></description>
  <category>Glitch 🎏</category>
  <category>Webworking</category>
  <category>Creative Coding</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2025052402_glitch_ende/</guid>
  <pubDate>Sat, 24 May 2025 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052402_glitch_ende/images/glitch.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft veröffentlicht Update 16.97.1 für Office for Mac</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052401_update_office_for_mac/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54491506216/"><img src="https://kantel.github.io/posts/2025052401_update_office_for_mac/images/officelady-b.jpg" class="img-fluid"></a></p>
<p>Microsoft liefert mit dem Update auf 16.97.1 für Office 365, 2021 und 2024 for Mac natürlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhält man die Korrekturen am einfachsten über Microsofts AutoUpdate – in einem beliebigen Office-Programm über Menü: <code>Hilfe &gt; Auf Updates überprüfen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: Microsoft Office unterstützt stets nur die drei Hauptversionen von macOS. Momentan sind dies <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-f%C3%BCr-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">Sequoia, Sonoma und Ventura</a>. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<section id="es-muß-natürlich-nicht-immer-nur-microsoft-sein" class="level2">
<h2 class="anchored" data-anchor-id="es-muß-natürlich-nicht-immer-nur-microsoft-sein">Es muß natürlich nicht immer nur Microsoft sein</h2>
<p>Obige Meldung bringe ich in der Hauptsache, um meiner Chronistenpflicht zu genügen. Denn wie ich <a href="https://kantel.github.io/posts/2025050201_libreoffice_25_2_3/">hier schon schrieb</a>:</p>
<blockquote class="blockquote">
<p>Gerade in diesen schweren Zeiten, in denen eine Unabhängigkeit von den US-amerikanischen Softwaregiganten immer dringender wird, wird auch das freie und quelloffene (MPL-2.0) <a href="https://de.wikipedia.org/wiki/LibreOffice">LibreOffice</a> als Alternative zu Microsofts proprietärem Office-Paket immer wichtiger. Denn hinter LibreOffice steht keine US-amerikanische Firma, sondern die <a href="https://de.wikipedia.org/wiki/LibreOffice#The_Document_Foundation">Document Foundation</a>, eine gemeinnützige Stiftung nach deutschem Recht.</p>
</blockquote>
<p>Denn mit LibreOffice gewinnt Ihr nicht nur Eure digitale Souveränität zurück, sondern das Office-Paket unterstützt auch bedeutend mehr ältere Versionen von macOS (aktuell macOS 10.10 (Yosemite) oder höher).</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54491506216/">(Libre-) Office Lady</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Colored French Comic Style. A sexy young woman with long red hair, green eyes and red lipstick is sitting in an office at a desk in front of a monitor and a keyboard. She is wearing a white, open blouse with a low neckline and a rust-colored vest. She has a pencil in one hand. On the desk is an open notepad, a cup with writing utensils and a stack of books. There are shelves on the walls with many more books and files. The spring sun is shining through a window in the background</em>«. Modell: Flux LoRA, Style: Classic French Roast.</p>


</section>

 ]]></description>
  <category>Produktivität</category>
  <category>Security</category>
  <category>LibreOffice</category>
  <category>Digitale Souveränität</category>
  <guid>https://kantel.github.io/posts/2025052401_update_office_for_mac/</guid>
  <pubDate>Sat, 24 May 2025 14:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052401_update_office_for_mac/images/officelady.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Py5-Releases: Auf Version 0.10.5a0 folgte ganz schnell Version 0.10.6a0</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052203_py5_010_6a0/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54538070554/"><img src="https://kantel.github.io/posts/2025052203_py5_010_6a0/images/pythonteaching-b.jpg" class="img-fluid"></a></p>
<p>Die letzte Aktualisierung für heute: Vor wenigen Tagen hatte <em>James Schmitz</em> stolz mit <a href="https://ixora.io/blog/new-release-0105a0/">Py5 Version 0.10.5a0</a> das erste Update in diesem Jahr von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>, dem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a>-Python3-Modul, das Processings Original-Bibliotheken (via JPype) nutzt, freigegeben. Neben vielen (meist kleineren) Bug-Fixes brachte es zwei wichtige Verbesserungen.</p>
<p>Zum einen wurde die Abhängigkeit von JPype, die in der letzten Version JPype 1.5.0 festgenagelt war, da JPype 1.5.1 Fehler enthielt, wieder gelöst und auf JPype &gt;= 1.5.2 freigegeben. Damit können alle Verbesserungen von JPype 1.5.2 genutzt werden.</p>
<p>Und zum zweiten nutzt Py5 nun wieder die <code>core.jar</code> des offiziellen Processing&nbsp;4.4.1 Release. Die letzten Versionen von Py5 nutzten eine eigene Fork von Processing, da einige für Py5 notwendige Code-Änderungen nicht so schnell in das offizielle Processing-Release aufgenommen wurden. Nun verspricht <em>James Schmitz</em> aber, daß alle zukünftigen Py5-Versionen wieder die »offizielle« Processing-Version nutzen werden.</p>
<p>Doch schon wenige Tage nach Veröffentlichung von dieser Py5-Version wurde festgestellt, daß diese offline nicht funtionierte, sie brauchte eine bestehende und aktive Internet-Verbindung. Daher wurde vor wenigen Tagen <a href="https://ixora.io/blog/new-release-0106a0/">Py5 Version 0.10.6a0</a> nachgeschoben, die diesen Fehler fixte. Dabei wurde dann auch noch die aktuellste Version Processing&nbsp;4.4.4 eingebunden.</p>
<p>Da ich in der Regel für Py5 <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JypterLab-Desktop</a> oder <a href="https://www.jetbrains.com/de-de/pycharm/">PyCharm CE</a> in einer <a href="https://kantel.github.io/posts/2024062801_conda_env_python/">eigenen, virtuellen Py5-Umgebung</a> nutze, war das Update mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate py5</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> py5 py5jupyter</span></code></pre></div>
<p>recht einfach und verlief schnell und problemlos. Da ich aber weiß, daß einige meiner Leserinnen und Leser (speziell ein Freund aus Bremen, dem ich den <a href="https://kantel.github.io/posts/2025052202_decker_goes_vn/">heutigen Hinweis auf das Decker-Update</a> verdanke), gerne mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> spielen, habe ich auch dieses über das Menü <code>Werkzeuge -&gt; Verwalte Plugins</code> auf die neue Py5-Version aktualisiert. Sicherheitshalber habe ich über das gleiche Menü auch nachgeprüft, ob der <a href="https://github.com/tabreturn/thonny-py5mode">thonny-py5mode</a> ebenfalls nach einem Update verlangt. Aber hier ist die im <a href="https://kantel.github.io/posts/2024111401_py5_updates/">November&nbsp;2024 von mir eingespielte Version 0.4.7a0</a> immer noch aktuell.</p>
<p>Auch dieses Update ließ sich anstandslos einspielen. Nun steht eigentlich neuen Experimenten mit Py5 nichts mehr im Wege. Aber vorher will ich noch testen, ob <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame-CE</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> tatsächlich <a href="https://kantel.github.io/posts/2025051202_sequoia_fix/">wieder mit meinem macOS Sequoia 15 spielt</a>. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54538070554/">Python Teaching</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comics Style. A python wearing horn-rimmed glasses and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«. Modell: Flux.1 (schnell), Style: PixelWave.</p>



 ]]></description>
  <category>Py5</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>JupyterLab Desktop</category>
  <category>PyCharm</category>
  <category>Thonny</category>
  <guid>https://kantel.github.io/posts/2025052203_py5_010_6a0/</guid>
  <pubDate>Thu, 22 May 2025 17:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052203_py5_010_6a0/images/pythonteaching.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Decker goes Visual Novel (und bringt neue Version 1.55)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052202_decker_goes_vn/</link>
  <description><![CDATA[ 




<p><a href="https://itch.io/jam/decker-vn-jam"><img src="https://kantel.github.io/posts/2025052202_decker_goes_vn/images/deckervn-b.png" class="img-fluid"></a></p>
<p>Über <a href="http://cognitiones.kantel-chaos-team.de/programmierung/decker.html">Decker</a>, den freien (MIT-Lizenz), nostalgischen und plattformübergreifenden (Linux, macOS, Windows) <a href="http://cognitiones.kantel-chaos-team.de/programmierung/hypercard.html">HyperCard</a>-Nachbau hatte ich das letzte Mal vor etwa einem Jahr berichtet. Diese monatelange Ignoranz war ein schändliches Versäumnis meinerseits. Denn nicht nur, daß zwischenzeitlich zahlreiche Aktualisierungen herausgekommen waren (aktuell ist die <a href="https://internet-janitor.itch.io/decker/devlog/946250/decker-155">Version 1.55</a> vor fünf Tagen erschienen), sondern Decker entwickelt sich mehr und mehr zu einer Game-Egine mit einem ganz besonderen Retro-Charme.</p>
<p>Dies unterstreicht auch die <a href="https://itch.io/jam/decker-vn-jam">Decker Visual Novel Jam</a>, bei der Ihr noch bis zum 16.&nbsp;Juni dieses Jahres Eure in Decker entwickelten interaktiven Geschichten einreichen könnt. Ihr könnt alle Arten von Visual Novels einreichen, inklusive NSFW-Geschichten. Leider sind keine mit gekünstelter Intelligenzia generierten Assets erlaubt, damit werden Menschen wie ich von der Teilnahme ausgeschlossen, denen kein Griffel in die Wiege gelegt wurde.</p>
<p>Diese auch in ähnlichen Jams auftauchende Angst vor KI-generierten Bildchen halte ich für unbegründet und unverständlich. Man kann nämlich auch mit Hilfe von einer gekünstelten Intelligenzia erzeugten Bilder durchaus kreative Geschichten erzählen. Aber egal, es ist ja nicht meine Jam und die Macher legen die Regeln fest. Wer sich also durch diese Vorschriften nicht eingeengt fühlt und Lust darauf hat, mit Decker eine retromäßige Visual Novel zu entwickelen, ist aufgefordert, an dieser Jam teilzunehmen. Dafür könnt Ihr das aktuelle Decker <a href="https://internet-janitor.itch.io/decker">hier für umme herunterladen</a>.</p>



 ]]></description>
  <category>Decker</category>
  <category>Retrocomputing</category>
  <category>Retrogaming</category>
  <category>Hypermedia</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2025052202_decker_goes_vn/</guid>
  <pubDate>Thu, 22 May 2025 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052202_decker_goes_vn/images/deckervn.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052201_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54369810306/"><img src="https://kantel.github.io/posts/2025052201_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Auch diese Woche erreichte mich das Mittwochs-Update des Flaggschiffs unser aller Datenkrake erst am Donnerstag. Und das hatte nichts damit zu tun, daß ich gestern den ganzen Tag unterwegs war, die Aktualisierungsmail trudelte tatsächlich erst heute Vormittag bei mir ein: Google veröffentlicht das Update der Version 137 (137.0.7151.40/41) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2025/05/early-stable-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54369810306/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025052201_chrome_update/</guid>
  <pubDate>Thu, 22 May 2025 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052201_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Endlich! Apple veröffentlicht iPadOS 17.7.8 für ältere Systeme</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025052001_ipados_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54531614407/"><img src="https://kantel.github.io/posts/2025052001_ipados_update/images/badapple-b.jpg" class="img-fluid"></a></p>
<p>Der prüde, kalifornische IT-Riese mit dem angebissenen Apfel im Logo hat das <a href="https://kantel.github.io/posts/2025051401_apfel_vergiftet/">Drama um das iPadOS-Update für ältere Systeme</a> beendet. Wirklich? Apple hat nun das Update auf iPadOS 17.7.8 für ältere iPads bereitgestellt und damit die zuvor fehlerhafte Version 17.7.7 ersetzt. Das Update ist nach wie vor für die Anwender, die nicht auf iOS/iPadOS 18 updaten wollen.</p>
<p>Das Update auf iPadOS 17.7.8 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54531614407/">Bad Apple</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>colored french comic style. the mad hatter with a blue hat gives a sexy naked woman with big boops and a nice butt a red apple in the summer magic forest full of giant mushrooms</em>«. Modell: Flux LoRA, Style: Animated Feature.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025052001_ipados_update/</guid>
  <pubDate>Tue, 20 May 2025 11:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025052001_ipados_update/images/badapple.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Java mit Greenfoot (OOP)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051802_greenfoot_oop/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54528141571/"><img src="https://kantel.github.io/posts/2025051802_greenfoot_oop/images/robots-b.jpg" class="img-fluid"></a></p>
<p><a href="https://kantel.github.io/posts/2024093001_greenfoot_revisited/">Vor etlichen Monaten</a> hatte ich schon einmal auf die Playlist »<a href="https://www.youtube.com/playlist?list=PLLSmiYOj4lwfBcldzcAdPx2YJ9mWED0WX">Greenfoot-Java-Kurs</a>« von <em>Berthold Metz</em> und die darin veröffentlichten Tutorials »Java mit Greenfoot&nbsp;2024« hingewiesen. Zwischenzeitlich hat er wieder etliche weitere Tutorials hochgeladen, den jüngsten Block&nbsp;5 zu objektorientierter Programmierung (OOP) gerade heute.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/jgDDEqyyizg?si=2IWFndZBFN6PgXe5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Da die Videos in der Playlist leider nicht immer in der richtigen, chronologischen Reihenfolge sortiert sind (was bei der Wiedergabe zu Verwirrungen führen kann), habe ich hier die bis heute erschienenen Tutorials einmal in der (hoffentlich!) korrekten Reihenfolge aufgeführt:</p>
<ol type="1">
<li><a href="https://www.youtube.com/watch?v=iXXBRs3oN9U">Block 1 »Grundlagen«, Greenfoot-Essentials</a></li>
<li><a href="https://www.youtube.com/watch?v=uNiHWyaQHwc">Block 2 »Variablen«, Part 1: Grundlagen</a></li>
<li><a href="https://www.youtube.com/watch?v=dBbPA-7g0yY">Block 2 »Variablen«, Part 2: Tastensteuerung, variable Geschwindigkeit</a></li>
<li><a href="https://www.youtube.com/watch?v=gEpwGEnBEww">Block 2 »Variablen«, Part 3: Vergleichsoperatoren, if-else, UND/ODER</a></li>
<li><a href="https://www.youtube.com/watch?v=9wfpIr-93As">Block 2 »Variablen«, Part 4: boolean-Variablen, PowerUp mit Timer</a></li>
<li><a href="https://www.youtube.com/watch?v=4ZYcDW8RoSc">Block 3 »Methoden«, Part 1: void-Methoden</a></li>
<li><a href="https://www.youtube.com/watch?v=09ysTywlCsM">Block 3 »Methoden«, Part 2: Übergabeparameter</a></li>
<li><a href="https://www.youtube.com/watch?v=JSCol89y9XU">Block 3 »Methoden«, Part 3: Parametrisierter Konstruktor</a></li>
<li><a href="https://www.youtube.com/watch?v=us0lLCSIb-w">Block 3 »Methoden«, Part 4: Schießen mit Greenfoot</a></li>
<li><a href="https://www.youtube.com/watch?v=Ji2Qtk9H6ow">Block 4 »Objektkommunikation«, Part 1: Lokale Variable vs.&nbsp;Klassenvariable</a></li>
<li><a href="https://www.youtube.com/watch?v=hVDcGMXkH2U">Block 4 »Objektkommunikation«, Part 2: Kommunikation zwischen Objekten</a></li>
<li><a href="https://www.youtube.com/watch?v=HxX2OATwnRU">Block 4 »Objektkommunikation«, Part 3: Methoden mit Rückgabewert</a></li>
<li><a href="https://www.youtube.com/watch?v=jgDDEqyyizg">Block 5 »Kapselung+Zugriffsmethoden«, Part 1: Geheimnisprinzip: Einführung</a></li>
<li><a href="https://www.youtube.com/watch?v=cCzWU6x1MWI">Block 5 »Kapselung+Zugriffsmethoden«, Part 2: Getter</a></li>
<li><a href="https://www.youtube.com/watch?v=ymNg8WD6ss8">Block 5 »Kapselung+Zugriffsmethoden«, Part 3: Geheimnisprinzip: Setter</a></li>
<li><a href="https://www.youtube.com/watch?v=fzvtiKfdwYk">Block 5 »Kapselung+Zugriffsmethoden«, Part 4: Übungen zu Getter / Setter</a></li>
<li><a href="https://www.youtube.com/watch?v=W2lG_354sUs">Block 5 »Kapselung+Zugriffsmethoden«, Part 5: Arbeit mit Gettern+Settern</a></li>
</ol>
<p>Alle zugehörigen Materialien findert Ihr <a href="https://informatik-bg.de/greenfoot">hier</a> (allerdings ebenfalls ein wenig unaufgeräumt).</p>
<p>Wie ich <a href="https://kantel.github.io/posts/2024093001_greenfoot_revisited/">damals schon schrieb</a>, habe ich nicht vor, etwas Ernsthaftes mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/greenfoot.html">Greenfoot</a> anzustellen (doch wer weiß, man soll ja bekanntlich niemals nie sagen&nbsp;🤓), doch ich mag die lockere, aber dennoch kompetente Art, wie <em>Berthold Metz</em> seine Tutorien präsentiert und auch die Unbekümmertheit, wie er mit seinen Assets (Bilder und Sound) umgeht. Außerdem fasziniert mich die strenge <a href="https://kantel.github.io/posts/2023062101_greenfoot_redux/">Objektorientierung von Greenfoot</a> (weil Java) und ich möchte diese auf meine Experimente mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> (die ich hoffentlich – weil <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> wieder funzt – bald wieder aufnehmen kann) <a href="https://kantel.github.io/posts/2023062001_gameworld_yes_no/">anwenden</a>. Und dafür kam mir der aktuelle Block&nbsp;5, der heute hochgeladen wurde, gerade recht. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54528141571/">Robots (Steampunk Style)</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A small red and a small gray robot in a steampunk-style spaceship cockpit with many quirky controls. The red robot controls the spaceship, while the gray robot monitors the controls</em>«. Flux Composition, Style: Forever After.</p>



 ]]></description>
  <category>Greenfoot</category>
  <category>OOP</category>
  <category>Java</category>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025051802_greenfoot_oop/</guid>
  <pubDate>Sun, 18 May 2025 19:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051802_greenfoot_oop/images/robots.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Versionen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051801_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54528172543/"><img src="https://kantel.github.io/posts/2025051801_firefox_update/images/firefox2-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/138.0.4/releasenotes/">Version 138.0.4</a> und die <a href="https://www.mozilla.org/en-US/firefox/128.10.1/releasenotes/">Version ESR 128.10.1</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. Wie immer sind in diese Updates auch viele Veränderungen eingeflossen.</p>
<p>Firefox weist selbst auf diese Updates hin. Diese Prozedur kann aber auch über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54528172543/">Zwei Feuerfüchse</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>two young fiery red foxes playing by a stream in a forest in early summer</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025051801_firefox_update/</guid>
  <pubDate>Sun, 18 May 2025 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051801_firefox_update/images/firefox2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kotau vor der Bleifußlobby: Berliner Senat kippt Kiezblocks</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051701_senat_kippt_kiezblocks/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54503408150/"><img src="https://kantel.github.io/posts/2025051701_senat_kippt_kiezblocks/images/abgaswolke-b.jpg" class="img-fluid"></a></p>
<p><a href="https://www.rbb24.de/politik/beitrag/2025/05/berlin-mitte-projekt-kiezblocks-fuss-verkehr-senat-finanzierung-ende.html">Die Berliner Senatsverwaltung kriecht mal wieder der Autolobby in den Arsch</a> und <a href="https://www.berlin.de/sen/uvk/presse/pressemitteilungen/2025/pressemitteilung.1559960.php">stoppt die Finanzierung von Kiezblocks ab sofort in der ganzen Stadt</a>. Sie befiehlt dem Bezirk Mitte, die Planungen des Fußverkehrsprojekts »Kiezblocks in Mitte« sofort einzustellen. Diese Entscheidung stelle »zugleich eine grundsätzliche Entscheidung für zukünftige Projekte dieser Art im gesamten Stadtgebiet dar«.</p>
<p><a href="https://changing-cities.org/kiezblock-aus-senat-stoppt-finanzierung/">73 Kiezblockinitiativen in Berlin mit zehntausenden engagierten Bürgerinnen und Bürgern setzen sich seit Jahren demokratisch für Verkehrsberuhigung ein</a>, für gute Luft und Sicherheit für die Kinder in ihrem Wohnumfeld. Der Senat hingegen bietet keine einzige Lösung für die massiven Probleme, die sich in der Stadt auftürmen: Verkehrschaos, steigende Unfallzahlen mit 55 Verkehrstoten in 2024, Hitzetote, Lärmbelastung und Luftverschmutzung.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53008190361/"><img src="https://kantel.github.io/posts/2025051701_senat_kippt_kiezblocks/images/kiezblock6-b.jpg" class="img-fluid figure-img" alt="(Photo: (cc-by-nc-nd 2.0) 2023: Kranold-Kiezblock)"></a></p>
<figcaption>(Photo: (cc-by-nc-nd 2.0) 2023: Kranold-Kiezblock)</figcaption>
</figure>
</div>
<p>Auch in meiner Nachbarschaft hatte die Neuköllner Bezirksverodnetenversammlung (BVV) mit großer Mehrheit mit den Stimmen von SPD, Grünen und Linken auch den Antrag der <a href="https://www.kiezblocks.de/kranold/">Kranold-Kiezblock-Initiative</a> (in der <a href="https://kantel.github.io/posts/2023072702_warum_kiezblocks/">ich bekanntlich ebenfalls aktiv</a> bin) auf Einrichtung eines Kiezblocks in meinem Kiez <a href="https://kantel.github.io/posts/2023111601_kiezblock_neubritz/">beschlossen</a>, nachdem dieser Antrag schon den zuständigen Neuköllner Verkehrsausschuß <a href="https://kantel.github.io/posts/2023111002_kiezblocks_bvv/">passiert hatte</a>. Hier fällt also <em><a href="https://de.wikipedia.org/wiki/Franziska_Giffey">Franziska Giffey</a></em> als Bürgermeisterin der großen Senatskomplikation aus CDU und SPD ihren eigenen Genossinnen und Genossen in den Rücken, weil sie lieber der Auto- und Autobahnlobby die Füße küsst, statt sich um die Gesundheit und das Wohlergehen der Mehrheit der Berliner Bevölkerung zu sorgen. Wir erinnern uns: <a href="https://de.wikipedia.org/wiki/Franziska_Giffey">Giffey fuhr 2023 als Spitzenkandidatin das schlechteste Wahlergebnis in der Geschichte der Berliner SPD ein</a>, nun arbeitet sie hart daran, diese mageren 18,4 Prozent noch einmal zu unterbieten.</p>
<p>Wir lassen uns diese eklatante Mißachtung demokratisch legitimierter BVV-Beschlüsse nicht bieten und planen zusammen mit <em><a href="https://changing-cities.org/">Changing Cities</a></em> umfassende Proteste nicht nur gegen diesen Kiezblock-Stop, sondern auch gegen den Ausbau der A&nbsp;100, die mit großer Regelmäßigkeit die <a href="https://kantel.github.io/posts/2025050702_verkehrschaos_im_kiez/">Autobahn in unsere Kieze kotzt</a>, und für einen Ausbau des ÖPNV. Wir brauchen nämlich mehr Busse und Bahnen und weniger Autos, damit Berlin wieder lebenswert wird.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54503408150/">Abgaswolke</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A multitude of cars trudge through narrow city streets. The air is filled with exhaust fumes, and pedestrians are pushed to the side of the road by the cars</em>«. Modell: Flux LoRA, Style: Classic French Roast.</p>



 ]]></description>
  <category>Kiezblock</category>
  <category>Verkehr</category>
  <category>Verkehrswende</category>
  <category>Politik</category>
  <category>Neukölln</category>
  <category>Städte für Menschen</category>
  <guid>https://kantel.github.io/posts/2025051701_senat_kippt_kiezblocks/</guid>
  <pubDate>Sat, 17 May 2025 16:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051701_senat_kippt_kiezblocks/images/abgaswolke.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051501_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54368941872/"><img src="https://kantel.github.io/posts/2025051501_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Das Mittwochs-Update des Flaggschiffs unser aller Datenkrake kommt gewiss, auch wenn es erst am Donnerstag ist: Google veröffentlicht das Update der Version 136 (136.0.7103.113/114) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2025/05/stable-channel-update-for-desktop_14.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54368941872/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025051501_chrome_update/</guid>
  <pubDate>Thu, 15 May 2025 11:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051501_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pyxel-Tutorial Stage 6: Zusammenfassung des bisher Erreichten</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051403_pyxel_tut_6/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54516330557/"><img src="https://kantel.github.io/posts/2025051403_pyxel_tut_6/images/pyxel6-b.jpg" class="img-fluid"></a></p>
<p>Ich dachte, daß es an der Zeit sei, alles, was ich bisher von und über <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a>, der kleinen (Python3-) Retrogame-Engine oder Fantasy-Konsole gelernt habe – und das ist nicht wenig – in einer Beispielapplikation zusammenzufassen, bevor ich zu neuen Ufern aufbreche. Das Beispielprogramm bringt also nicht wirklich etwas neues, sondern fasst nur zusammen, was ich in den letzten drei Tutorials erreicht habe:</p>
<p>Ich möchte eine Version <a href="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/">dieses Mini-Games</a> erstellen, das ich im August letzten Jahres schon einmal mit der Retrokonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> programmiert hatte (<a href="https://kantel.github.io/posts/2025041103_pyxel_tut_3/">Pyxel-Tutorial Stage 3</a>).</p>
<p>Dafür möchte ich aber eine andere, als die Default-Farbpalette von Pyxel einsetzen, nämlich aus Retro-Gründen die Palette <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/sweetie16.html">Sweety 16</a>, die die Default-Palette von TIC-80 ist (<a href="https://kantel.github.io/posts/2025041701_pyxel_und_paletten/">Pyxel-Tutorial Stage 4</a>).</p>
<p>Und dann – das ist eine echte Erweiterung zum TIC-80-Vorbild – soll die Figur des Spielers auch noch zappeln, also animiert werden (<a href="https://kantel.github.io/posts/2025041901_pyxel_tut_5/">Pyxel-Tutorial Stage 5</a>). So sieht also das bisher erreichte aus und ich finde, es ist ganz nett geworden:</p>
<iframe src="nigthimpark2.html" class="if16_9" name="Pyxel Tutorial Stage 6">
</iframe>
<p>Der Quellcode ist immer noch erstaunlich kompakt geraten. Vor allem, wenn man berücksichtigt, daß auch eine – zwar einfache, aber immerhin – Kollisionserkennung implementiert ist:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyxel</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ein paar nützliche Konstanten</span></span>
<span id="cb1-4">TS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tilesize</span></span>
<span id="cb1-5">COLKEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color Key</span></span>
<span id="cb1-6">PLAYER_WALK_CYCLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>)]</span>
<span id="cb1-7">WALLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb1-8">         (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tile(tile_x, tile_y):</span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyxel.tilemaps() gibt ein Tupel mit den x- und y-Koordinaten</span></span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aus der Tilemap des mit pget() identifizierten Tiles zurück</span></span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pyxel.tilemaps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pget(tile_x, tile_y)</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player:</span>
<span id="cb1-16"></span>
<span id="cb1-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TS</span>
<span id="cb1-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TS</span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TS</span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die x-Position des Sprites in der Imagebank (in Pixeln)</span></span>
<span id="cb1-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die y-Position des Sprites in der Imagebank (in Pixeln)</span></span>
<span id="cb1-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.imagebank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.frame_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Current frame in the sprite sheet</span></span>
<span id="cb1-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.animation_speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lower = faster animation</span></span>
<span id="cb1-27">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.animation_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tracks frame updates</span></span>
<span id="cb1-28"></span>
<span id="cb1-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.animation_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.animation_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.animation_speed:</span>
<span id="cb1-32">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.frame_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.frame_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(PLAYER_WALK_CYCLE)</span>
<span id="cb1-33">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.u, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PLAYER_WALK_CYCLE[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.frame_index]</span>
<span id="cb1-34">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.animation_counter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-35"></span>
<span id="cb1-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> move(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (pyxel.btnp(pyxel.KEY_LEFT)</span>
<span id="cb1-38">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-39">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_RIGHT)</span>
<span id="cb1-41">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-42">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_UP)</span>
<span id="cb1-44">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-45">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_DOWN)</span>
<span id="cb1-47">              <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-48">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-49"></span>
<span id="cb1-50"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> App:</span>
<span id="cb1-51"></span>
<span id="cb1-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-53">        pyxel.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel Tutorial Stage 6"</span>, display_scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-54">        pyxel.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assets/res.pyxres"</span>)</span>
<span id="cb1-55"></span>
<span id="cb1-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialisiere den Spieler</span></span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position in Map-Koordinaten</span></span>
<span id="cb1-58">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-59"></span>
<span id="cb1-60">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-61">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(get_tile(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-62">        pyxel.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.update, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.draw)</span>
<span id="cb1-63"></span>
<span id="cb1-64">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-65">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.update()</span>
<span id="cb1-66">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.move()</span>
<span id="cb1-67"></span>
<span id="cb1-68">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-69">        pyxel.cls(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-70"></span>
<span id="cb1-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichen die Map</span></span>
<span id="cb1-72">        pyxel.bltm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-73"></span>
<span id="cb1-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne den Player</span></span>
<span id="cb1-75">        pyxel.blt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.imagebank,</span>
<span id="cb1-76">                  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.u, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.v, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.h,</span>
<span id="cb1-77">                  COLKEY)</span>
<span id="cb1-78"></span>
<span id="cb1-79">App().run()</span></code></pre></div>
<p>Wenn ich mir vor Augen führe, daß die Zahl der Tutorials zu Pyxel, die man im Netz findet, doch recht überschaubar ist, bin ich auf das Erreichte ziemlich stolz. Als nächstes Ziel möchte ich Items, die der Spieler aufsammeln kann, und Gegner, die den Spieler verfolgen und angreifen, implementieren. Und dann stehen auch mehrere Räume (oder »Level«), die der Spieler erreichen kann, auf meiner Todo-Liste.</p>
<p>Den <a href="https://github.com/kantel/pyxel/tree/main/animtest">vollständigen Quelltext inklusive der Ressourcen- und Palettendatei</a> findet Ihr wieder in meinem GitHub-Repositorium, damit Ihr damit experimentieren könnt.</p>
<p>Bei den Bildern für die Sprites und für die Map habe ich mich von Kenneys freien (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) Tilesets <a href="https://kenney.nl/assets/pico-8-city">Pico-8 City</a> und <a href="https://kenney.nl/assets/micro-roguelike">Micro Roguelike</a> inspirieren lassen. Ich habe sie aber nicht einfach importiert (obwohl das auch geht), sondern sie Pixel für Pixel in Pyxels Ressourcen-Editor nachgezeichnet und einige auch stark bearbeitet.</p>
<p>Wer weiß, vielleicht ist dies der Startschuß zu einem mehr oder weniger kompletten Pyxel-Tutorial unter dem Titel »Retrogaming mit Pyxel«. Ich fühle mich momentan jedenfalls motiviert. <em>Still digging!</em></p>



 ]]></description>
  <category>Pyxel</category>
  <category>Python</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025051403_pyxel_tut_6/</guid>
  <pubDate>Wed, 14 May 2025 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051403_pyxel_tut_6/images/pyxel6.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der Donnervogel fliegt (schon wieder) solo</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051402_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54426912509/"><img src="https://kantel.github.io/posts/2025051402_thunderbird_update/images/thunderbird-b.jpg" class="img-fluid"></a></p>
<p><a href="https://kantel.github.io/posts/2025042901_thunderbird_update/">Zum zweiten Mal</a> ist ein Update des Donnervogels in meinen Feedreader gespült, ohne daß eine korrespondierende Aktualisierung des Feuerfuchses vorausgegangen wäre: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 138.0.1 freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/138.0.1/releasenotes/">Sicherheitslücken behoben</a>.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54426912509/">Thunderbird</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comic style, illustration of a majestic thunderbird with colored feathers soaring above a mountain range during a bright sunset, hunting a red firefox</em>«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025051402_thunderbird_update/</guid>
  <pubDate>Wed, 14 May 2025 12:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051402_thunderbird_update/images/thunderbird.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der vergiftete Apfel: Vom Update auf iPadOS 17.7.7 für ältere Systeme wird abgeraten (Update)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025051401_apfel_vergiftet/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54519047185/"><img src="https://kantel.github.io/posts/2025051401_apfel_vergiftet/images/giftapfel-b.jpg" class="img-fluid"></a></p>
<p><strong>Security Alert!</strong> Gestern hatte ich im Rahmen des monatlichen Patchdays der prüden kalifornischen Firma mit dem angebissenen Apfel im Logo auch das <a href="https://kantel.github.io/posts/2025051301_apple_patch_day/#apple-ver%C3%B6ffentlicht-ipados-17.7.7-f%C3%BCr-%C3%A4ltere-systeme">Update auf iPadOS 17.7.7 für ältere Systeme vorgestellt</a>. Vor diesem Update wird mittlerweile allgemein abgeraten. In den einschlägigen Foren kursieren inzwischen viele Beschwerden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><b style="color:red">Update</b> (17. Mai 2025): Apple hat inzwischen das Update aufgrund der Fehler zurückgezogen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54519047185/">Der vergiftete Apfel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>colored french comic style. the mad hatter with a blue hat gives snow white a red apple in the summer magic forest full of giant mushrooms</em>«. Modell: Flux Composition, Style: Forever After.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025051401_apfel_vergiftet/</guid>
  <pubDate>Wed, 14 May 2025 11:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025051401_apfel_vergiftet/images/giftapfel.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
