<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Tue, 11 Jun 2024 16:45:00 GMT</lastBuildDate>
<item>
  <title>Hugo auf Drogen – Halluzinierende Gekünstelte Intelligenzia</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061102_hallu_ki/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784475981/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo01-b.jpg" class="img-fluid"></a></p>
<blockquote class="blockquote">
<p>So, so, sprach der alte Oberförster. Hugo war sein Name und die Tiere des Waldes waren seine Freunde.</p>
</blockquote>
<p>Als ich eine <a href="https://beta.dreamstudio.ai/generate">gekünstelte Intelligenzia meines Vertrauens</a> mit einer Illustration zu dem letzten <a href="https://kantel.github.io/posts/2024061101_wikilinks_hugo/">Beitrag über Wikilinks und Hugo</a> beauftragen wollte, ging mir obiger Spruch nicht aus dem Kopf. Und so formulierte ich gedankenverloren und ohne besondere Absicht meinen Prompt auf deutsch und fütterte die KI damit: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«.</p>
<p>Offensichtlich kann <em>Stable Diffusion</em> aber kein deutsch und so passierte das, was mit den gekünstelten Intelligenzien immer passiert, wenn sie nicht weiterwissen: Sie halluzinieren munter darauf los und produzieren Bilder, die von dem gewünschten Ergebnis weiter kaum entfernt sein können:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784781674/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784670918/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784781839/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo04.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784455816/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784675578/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo06.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784460736/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo07.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784460801/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53783520652/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo09.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784680623/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo10.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784465896/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784466091/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo12.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784792029/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo13.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784797044/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo14.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784797424/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo15.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784471821/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo16.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53783535197/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo17.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784801444/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo18.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784899970/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo19.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784804654/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo20.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784694713/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo21.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784805299/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo22.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53784805389/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo23.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53783541742/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo24.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53784906345/"><img src="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo25.jpg" class="img-fluid"></a></p>
<p>Trotz oder vielleicht auch weil die KI halluziniert, als hätte sie Drogen eingepfiffen, haben die Bilder einen eigentümlichen Charme (mit einem Klick auf die <em>Thumbnails</em> kommt Ihr jeweils auf eine Seite mit den Originalen). Daher konnte ich auch erst damit aufhören, nachdem ich etwa zwei Dutzend dieser Trips erzeugt hatte. Einige der Ergebnisse könnten als Hintergrundbilder verwendet werden, für die anderen muß ich mir erst noch Geschichten ausdenken.</p>
<p><strong>War sonst noch was?</strong> Ach ja, wie sich die <a href="https://www.derstandard.de/story/3000000223702/deutsche-post-blamiert-sich-mit-ki-generierter-krypto-briefmarke">Deutsche Post mit einer halluzinierenden Künstlichen Intelligenz ziemlich blamiert</a> hatte, berichtete schadenfroh der österreichische »Standard«. Aber NFT und Krypto sind sowieso böse, und wenn man – wie die Deutsche Post – damit auch noch Geld generieren will, darf man sich über Schadenfreude nicht wundern.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53784475981/">Hugo? Hugo!</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Künstliche Intelligenz</category>
  <category>Bilder</category>
  <category>Stable Diffusion</category>
  <category>DreamStudio</category>
  <guid>https://kantel.github.io/posts/2024061102_hallu_ki/</guid>
  <pubDate>Tue, 11 Jun 2024 16:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061102_hallu_ki/images/halluhugo01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wikilinks in Hugo: Nachschlag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061101_wikilinks_hugo/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784894895/"><img src="https://kantel.github.io/posts/2024061101_wikilinks_hugo/images/hugobanner-b.jpg" class="img-fluid"></a></p>
<p>Der Gewährsmensch, der mich gestern mit <a href="https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/">Informationen zu Wikilinks</a> in <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> versorgt hatte, dem schnellen <em>Static Site Generator</em>, der eventuell in Zukunft auch den <em>Schockwellenreiter</em> antreiben wird, hat heute noch einmal nachgelegt:</p>
<p>Neben weiteren, eher technischen Tips hat er auf den Beitrag »<a href="https://kinsta.com/de/blog/hugo-statische-seite/">Wie man mit Hugo eine rasend schnelle statische Seite erstellt</a>« verwiesen, den <em>Brian Li</em> im August letzten Jahres auf den Seiten des WordPress-Hosters (sic!) <a href="https://kinsta.com/de/">Kinsta</a> veröffentlichte. Der Artikel ist ziemlich gut (nur warum er beim <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html">GitHub Pages</a> Hosting den Umweg über <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/netlify.html">Netlify</a> nimmt, <a href="https://towardsdatascience.com/create-your-own-stunning-website-in-minutes-for-free-63f0f7c75bf">statt das <em>Deployment</em> mit <em>GitHub Actions</em> direkt anzustoßen</a>, erschließt sich mir nicht so ganz), darum wollte ich ihn Euch nicht vorenthalten.</p>
<p>Außerdem hat mir eben dieser Gewährsmensch versichert, daß er bei seinen Experimenten mit Hugo keine Geschwindigkeitseinbußen beim Einsatz von Wikilinks feststellen konnte. Das läßt mich für meine Pläne hoffen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53784894895/">Hugo</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Interna</category>
  <category>Hugo</category>
  <category>Statische Seite</category>
  <category>Digital Garden</category>
  <guid>https://kantel.github.io/posts/2024061101_wikilinks_hugo/</guid>
  <pubDate>Tue, 11 Jun 2024 15:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061101_wikilinks_hugo/images/hugobanner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hugo für den Schockwellenreiter: Erste (Zwischen-) Ergebnisse</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53774572712/"><img src="https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/images/digigardenhugo-b.jpg" class="img-fluid"></a></p>
<p>Mit meinen Bemühungen, <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> zu lernen, weil dieser schnelle, in Go geschriebene Generator für statische Seiten (SSG) irgendwann vielleicht einmal <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">den <em>Schockwellenreiter</em> antreiben</a> soll, komme ich langsam, aber sicher voran. Ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/rubyfrontier.html">RubyFrontier</a> – das über zehn Jahre diese Seiten herausgeschrieben hat<sup>1</sup> – <a href="https://de.wikipedia.org/wiki/ERuby">ERB oder ERuby</a> als Template-Mechanismus nutzt, basiert vieles in Hugo auf <a href="https://pkg.go.dev/html/template">Go’s Template Library</a>. Man muß also einiges erst einmal lernen, damit man ein vorzeigbares Resultat bekommt.</p>
<p>Ich quäle mich daher durch das Büchlein »<a href="https://pragprog.com/titles/bhhugo/build-websites-with-hugo/">Build Websites with Hugo</a>« von <em>Brian P. Hogan</em> und an dem <a href="https://www.flickr.com/photos/schockwellenreiter/53774572712/">Screenshot</a> oben kann man erkennen, das ich jetzt ungefähr bei Seite 45 angekommen bin. Aber ich habe Spaß an so etwas und freue mich über meine Fortschritte. Schaun wir mal, wie es weitergeht. <em>Still digging!</em></p>
<p>In meinem Hinterkopf lauert ja auch die Überlegung, mit Hugo aus dem <em>Schockwellenreiter</em> eine Art <a href="https://kantel.github.io/posts/2024050701_digital_garden/">digitalen Wundergarten</a> zu basteln. Dafür sind aber <a href="https://python-markdown.github.io/extensions/wikilinks/">WikiLinks</a> zu internen Seiten eigentlich eine Grundvoraussetzung. Doch leider unterstützt Hugo diesen Linkmechanismus nicht von Haus aus. Daher war ich froh, als mich ein Leser des <em>Schockwellenreiter</em> auf den Artikel »<a href="https://www.radicaledward101.com/blag/2023/08/14/blag-article-wiki-links-in-hugo.html">Wiki Links in Hugo</a>« hinwies, der eine Lösung aufzeigt<sup>2</sup>.</p>
<p>Auch die vorgestellte Hugo-Lösung scheint ein wenig Bastelei und Pfriemelei zu erfordern. Und mir ist auch nicht klar, wie sich das auf die Geschwindigkeit beim Herausschreiben der einzelnen Seiten auswirkt. Bevor es also tatsächlich diese Seiten als mit Hugo erstellten <em>Digital Garden</em> gibt, werde ich wohl noch viele Tests und Experimente durchführen müssen. Aber wie jemand <a href="https://github.com/kantel/kantel.github.io/discussions/199#discussioncomment-9658236">in meinen Kommentaren</a> schrieb:</p>
<blockquote class="blockquote">
<p>Ein Blog ist eine Spielwiese per Definition, nicht? Also: ran an die Tastatur und spielen! :)</p>
</blockquote>
<p>Das ist übrigens auch noch eine offene Frage: <a href="https://giscus.app/de">Giscus</a> als quelloffenes Kommentarsystem hat sich als <a href="https://kantel.github.io/posts/2022120901_giscus/">überaus nützlich für den <em>Schockwellenreiter</em></a> herausgestellt, denn im Gegensatz zu anderen Systemen kommt es ohne Tracking und ohne Werbung aus. Außerdem speichert es die Kommentare nicht irgendwo fremd, sondern in meinem GitHub-Repositotium zu diesen Seiten. Ob ich aber Giscus mit Hugo verheiraten kann, habe ich auch noch nicht herausgefunden. Also noch einmal: <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Und mit dem <a href="http://cognitiones.kantel-chaos-team.de/index.html">mein Wiki</a> immer noch erstellt wird.↩︎</p></li>
<li id="fn2"><p>Das oben erwähnte RubyFrontier konnte so etwas wie WikiLinks (dort wurde es <a href="https://www.apeth.com/RubyFrontierDocs/defaultfolder/techfolder/howsapagefolder/glossary.html">Glossary</a> genannt). Dieser Mechanismus war so etwas wie Fluch und Segen bei RubyFrontier: Segen, weil es so etwas wie mein Wiki überhaupt erst ermöglicht hatte, Fluch, weil bei großen Seitenzahlen der Glossary-Mechanismus das Herausrendern der Seiten extrem verlangsamte.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Interna</category>
  <category>Hugo</category>
  <category>Statische Seite</category>
  <category>Digital Garden</category>
  <guid>https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/</guid>
  <pubDate>Mon, 10 Jun 2024 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061002_learning_hugo_1st_results/images/digigardenhugo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Versionen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024061001_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53782554036/"><img src="https://kantel.github.io/posts/2024061001_firefox_update/images/firefoxesta01-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/127.0/releasenotes/">Version 127.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/115.12.0/releasenotes/">Version ESR 115.12</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. In die Updates sind auch viele Veränderungen geflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53782554036/">Two Firefoxes</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor.Art</a>. Prompt: »<em>Two fire foxes in an enchanted garden in the spring sunshine. colored french comic style</em>«. Negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, additional tail</em>«. Modell: Stable Diffusion 1.5, Style: Realistic Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024061001_firefox_update/</guid>
  <pubDate>Mon, 10 Jun 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024061001_firefox_update/images/firefoxesta01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es lebe die Schildkröte: TurtleGFX und P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060901_turtle_gfx/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53412499596/"><img src="https://kantel.github.io/posts/2024060901_turtle_gfx/images/turtlegfx1-b.jpg" class="img-fluid"></a></p>
<p>Da habe ich mir <a href="https://kantel.github.io/posts/2024060701_p5play_matterjs/">am Freitag etwas eingebrockt</a>: Die beiläufig in einem Nebenabsatz eingefügte Bemerkung, daß mir in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> so etwas wie <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> fehlen würde, hat mir keine Ruhe gelassen und mich zum Sammeln von Material animiert, das mir helfen soll, <a href="https://codeguppy.com/index.html">CodeGuppys</a> Bibliothek <a href="https://github.com/CodeGuppyPrograms/TurtleGFX/tree/master">TurtleGFX</a>, die Pythons Schildkröte in P5.js (und in <a href="https://codeguppy.com/">CodeGuppy</a> selber) implementieren will (und die auch in <a href="https://github.com/nickmcintyre/numero">Numero</a> Einzug gehalten hat), zu verstehen und in P5.js anzuwenden.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/_OG4YTs8h3c?si=VghcYUvZcDi1iN6P" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Die Beispielanwendungen, die ich gefunden habe, sind alle von Mr.&nbsp;CodeGuppy itselfs, <em>Marian Veteanu</em>, und in CodeGuppy implementiert. Da diese IDE doch in Teilen sehr stark von P5.js abweicht, ist erst einmal die Lektüre des Beitrags »<a href="https://codeguppy.com/code.html?t=_p5">Getting started with CodeGuppy.com for P5.js Developers</a>« zu empfehlen. Danach kann man sich die übrigen Beiträge zu TurtleGFX eigentlich (mit einer Ausnahme) in beliebiger Reihenfolge reinziehen. Ich empfehle diese Abfolge:</p>
<ol type="1">
<li><a href="https://codeguppy.com/code.html?t=turtle_lines">Turtle Lines</a>: A simple line rotated using the turtle graphics library creates amazing patterns.</li>
<li><a href="https://codeguppy.com/code.html?t=hilbert_curve">Hilbert Curve</a>: Generate Hilbert curve using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=turtle_polygons">Turtle Polygons</a>. Generate polygons using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=turtle_sierpinski">Sierpinsky Triangle</a>. Draw Sierpinski triangle using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=turtle_etch">Etch with Turtle</a>. This is an implementation with Turtle Gfx of the famous Etch a Sketch.</li>
<li><a href="https://codeguppy.com/code.html?t=fractal_tree">Fractal Tree</a>. This program will show you how to generate a fractal tree using turtle graphics.</li>
<li><a href="https://codeguppy.com/code.html?t=forest_walk">Forest Walk</a>. Explore a virtual forest of fractal trees generated using turtle graphics. (Dieser Beitrag ist die oben erwähnte Ausnahme, er setzt die Lektüre von »Fraktal Tree« voraus.)</li>
</ol>
<p>Danach solltet Ihr und auch ich in der Lage sein, TurtleGFX in Eure (und ich in meine) P5.js-Sketche einzubauen. Wer dann Blut geleckt hat und wissen will, wie man eine eigene Turtle-Bibliothek implementiert, dem oder ihr sei noch dieser Beitrag empfohlen:</p>
<ol start="8" type="1">
<li><a href="https://codeguppy.com/code.html?t=turtle_graphics">Turtle Graphics</a>: Turtle graphics is the flagship feature of Logo programming language. See how easy is to add Logo like commands to your favorite JavaScript language.</li>
</ol>
<p>Jetzt fehlt mir eigentlich nur noch eine Bibliothek für die Mathematik mit komplexen Zahlen. Hier <a href="https://forum.processing.org/two/discussion/22883/complex-numbers-in-p5.html">empfiehlt das Processing-Forum</a> die JavaScript-Library <a href="https://mathjs.org/index.html">Math.js</a> mit dem Modul <a href="https://mathjs.org/docs/datatypes/complex_numbers.html">Complex Numbers</a>, das man via NPM auch <a href="https://mathjs.org/download.html">lokal installieren</a> kann. Das sollte ich auch noch testen. Aber erst einmal ist die Schildkröte an der Reihe. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53412499596/">Two Turtles drawing together</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A turtle and a python paint together at an easel, colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>Turtle</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <category>CodeGuppy</category>
  <guid>https://kantel.github.io/posts/2024060901_turtle_gfx/</guid>
  <pubDate>Sun, 09 Jun 2024 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060901_turtle_gfx/images/turtlegfx1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>P5.play und Matter.js: Video-Tutorials am Freitag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060701_p5play_matterjs/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53412937770/"><img src="https://kantel.github.io/posts/2024060701_p5play_matterjs/images/matterjsp5play-b.jpg" class="img-fluid"></a></p>
<p>Das Abenteuer JavaScript mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> geht weiter. Und wie ich hier schon einmal <a href="https://kantel.github.io/posts/2024052903_octopussy/">angedeutet hatte</a>, würde ich dabei gerne auch Bibliotheken wie <a href="https://brm.io/matter-js/">Matter.js</a>, vor allem aber <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> berücksichtigen. Zur Vorbereitung habe ich daher meine kleine Reihe »Video-Tutorials am Freitag« wiederbelebt, die heute Tutorials zu diesen beiden Bibliotheken vorstellt.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/TDQzoe9nslY?si=qIBqS83iPN7QULye" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Ich beginne mal mit <strong>Matter.js</strong>, eine freie (MIT-Lizenz) <em>Rigid Body Physik Engine</em> für JavaScript. <em>Daniel Shiffman</em> hatte sie schon vor sieben Jahren mit P5.js vermählt und unter dem Titel »<a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6bLh3T_4wtrmVHOrOEM1ig_">Matter.js Physics</a> eine neun Videos umfassende Playlist dazu veröffentlicht. Aber auch in seiner (P5.js/JavaScript) Neuauflage von »The Nature of Code« spielt Matter.js eine Rolle, daher hat er auch im <em>Coding Train</em> einen aktualisierten, <a href="https://thecodingtrain.com/tracks/lang/all/topic/matter-js">kompletten Track zu Matter.js</a> veröffentlicht.</p>
<p>Auch der YouTuber <em>flanniganable</em> (von dem auch die Playlist »<a href="https://www.youtube.com/playlist?list=PLuywqn95st9S2ciAgQw32ID3xBmxZBYQl">P5.js JavaScript for Beginners</a>« (22 kurze Videos) erwähnenswert ist) hat eine Playlist »<a href="https://www.youtube.com/playlist?list=PLuywqn95st9THjyjehRn3epVUdjbcYIAT">Matter.js on P5.js</a>« (18 ebenfalls recht kurze Videos) online gestellt.</p>
<p>Matter.js verdient zusätzlich eine Erwähnung, weil die Engine auch mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> – zumindest in der JavaScript-Version – <a href="https://microstudio.dev/community/questions/matterjs-and-microstudio-javascript/682/">zusammenspielt</a>. Und wenn man der <a href="https://microstudio.dev/documentation/Matter/">Dokumentation</a> glaubt, soll es auch mit Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> funktionieren. Das sollte ich unbedingt im Hinterkopf behalten.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/6E8hJOuGOkE?si=_pfFOx61XEF9fZiK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Doch nun zu <strong>P5.play</strong>, das ich ja <a href="http://blog.schockwellenreiter.de/2022/10/2022100401.html">schon einmal</a> auf diesen Seiten besprochen hatte: Seit der Version 3 hat diese direkt auf P5.js aufsetzende Game-Enginge von Matter.js zu <a href="https://piqnt.com/planck.js/docs">Planck.js</a> als zugrundeliegende Physik-Engine gewechselt. Das ist ein JavaScript-Port von <a href="https://box2d.org/">Box2D</a>, einer populären C++ Engine.</p>
<p>Es gibt dazu von <em>Teach Head Online</em> – von dem es unter dem Namen »<a href="https://www.youtube.com/playlist?list=PLoHS9P-kC-26y6dOZnv2sM0Cz0_8ean4N">P5.js Programming</a>« eine Monsterplaylist von 29 Videos zu P5.js gibt – eine Playlist »<a href="https://www.youtube.com/playlist?list=PLoHS9P-kC-252Pd9MJD_ItfaVuYV2kTCE">JavaScript Games Development</a>«, die mit 38 Video-Tutorials noch monstermäßiger daherkommt. Zwischen diesen beiden Playlists gibt es aber Überschneidungen.</p>
<p>Und dann hat auch noch der oben schon erwähnte <em>flanniganable</em> mit »<a href="https://www.youtube.com/playlist?list=PLuywqn95st9SA2Ka1misPHt84WxqRX3Uj">P5.play on P5.js</a>« eine Playlist mit zwanzig wieder eher kurzen Videos hochgeladen.</p>
<p>Wer lieber liest statt schaut: Von <em>Allison Parrish</em> gibt es den ausführlichen Beitrag »<a href="https://creative-coding.decontextualize.com/making-games-with-p5-play/">Making Games with P5.play</a>« und <em>brifetterley</em> hat auf Medium.com den zwar kürzeren, aber nett zu lesenden Artikel »<a href="https://medium.com/@brifetterley/using-the-p5-play-library-for-a-js-game-4df01708dd81">Using the P5.play Library for a JS Game</a>« veröffentlicht, der sich aber eventuell hinter einer Bezahlschranke versteckt.</p>
<p>Das dürfte mich und Euch mindestens über das Wochenende – vermutlich auch darüber hinaus – beschäftigen. Wenn dann noch Luft bleibt: P5.js fehlt es meiner Meinung nach an einer Turtle-Bibliothek. <a href="https://github.com/CodeGuppyPrograms/TurtleGFX">TurtleGFX</a> und darauf aufbauend <a href="https://github.com/nickmcintyre/numero">Numero</a> wollen dem abhelfen. Sollte ich mir daher auch mal genauer anschauen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53412937770/">Steampunk Reptils</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A turtle and a python paint together at an easel, colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>P5.js</category>
  <category>P5.play</category>
  <category>Matter.js</category>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024060701_p5play_matterjs/</guid>
  <pubDate>Fri, 07 Jun 2024 15:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060701_p5play_matterjs/images/matterjsp5play.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein neuer Versuch mit Ct.js (mit oder ohne Catnip)?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060601_ctjs_catnip/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53613105160/"><img src="https://kantel.github.io/posts/2024060601_ctjs_catnip/images/badgerctjs-b.jpg" class="img-fluid"></a></p>
<p>Im Februar dieses Jahres hatte ich die kleine, feine und freie (MIT-Lizenz) (JavaScript-) Spiele-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">Ct.js</a> (wieder-) <a href="https://kantel.github.io/posts/2024021001_ctJS/index.html">entdeckt</a>. Jedoch war meine Begeisterung darüber schnell <a href="https://kantel.github.io/posts/2024022001_microstudio_1st_steps/index.html">erloschen</a>, weil sich das Teil beharrlich weigerte, Assets zu laden. Und so hatte ich mich erst einmal enttäuscht, dann aber mit wachsender Begeisterung, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> zugewandt.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/DrgON3g7gFA?si=7_UlZt7Gqs4O8yux" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Jedoch nagte Ct.js immer wieder in den Tiefen meines Hinterkopfs und ich war mir eigentlich sicher, daß der Fehler irgendwo bei mir lag und ich irgendetwas übersehen hatte. Als daher nun die Meldung in meinen Feedreader schneite, daß <a href="https://gamefromscratch.com/ct-js-game-engine-gets-new-catnip-visual-scripting-language/">Ct.js nun auch die Visual Scripting Language Catnip</a> integriert habe (zur Zeit erst einmal nur im <a href="https://comigo.itch.io/ct-nightly#download">Nightly Build</a>) war die Entscheidung gefallen: Sobald mir meine <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">Hugo-Experimente</a> wieder etwas Luft lassen, werde ich mit Ct.js einen neuen Versuch wagen. Ich habe noch keine Ahnung ob und wenn ja, was dabei herauskommen wird, aber ich will es unbedingt wissen.</p>
<p><a href="https://github.com/ct-js/ct-js/issues/331">Catnip</a> ist übrigens eine visuelle Scriptsprache, die mich in den Screenshots ein wenig an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> erinnert (vielleicht aber auch an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/scratch.html">Scratch</a>). Ein weiterer Grund, dem Teil einen neuen Versuch zu gönnen. Ich habe mir daher zwecks Einarbeitung noch folgende Tutorials herausgesucht:</p>
<ol type="1">
<li>Der YouTube-User <em>Firecakes</em> hält in dem viertelstündigen Video »<a href="https://www.youtube.com/watch?v=9J7Z-HeXZdU">What ct.js v4 can do for you</a>!« Ct.js für eine total unterschätzte Game Engine. Ich hoffe, daß er Recht behält.</li>
<li>Und dann gibt es noch die relativ junge Playlist »<a href="https://www.youtube.com/playlist?list=PLWGY0ivGwOKIiJ6KcgmPF3eqV_TlYB0XT">Ct.js</a>« des YouTubers <em>Exceptional 3D tutorials</em> mit sieben, meist eher kurzen Videos.</li>
</ol>
<p>Vielleicht finde ich in der letztgenannten Playlist auch eine Lösung für mein Asset-Problem.</p>
<p><strong>Was übrigens meine Hugo-Experimente angeht</strong>: Ich mache langsam aber sicher Fortschritte und ich habe sehr viel Spaß dabei. Doch darüber zu gegebener Zeit mehr in einem eigenen Beitrag. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53613105160/">Dancing Badger</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A badger in a red dressing gown floats over the desert hanging from a blue balloon</em>« Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Cel Shaded + Icon Stylizer.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>Ct.js</category>
  <guid>https://kantel.github.io/posts/2024060601_ctjs_catnip/</guid>
  <pubDate>Thu, 06 Jun 2024 13:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060601_ctjs_catnip/images/badgerctjs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schließt am »Juni-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060501_android_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53561635081/"><img src="https://kantel.github.io/posts/2024060501_android_patchday/images/androidjuni-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen Sicherheitsupdate für Android (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-06-01">Pixel-Geräten</a>) wieder <a href="https://source.android.com/docs/security/bulletin/2024-06-01">Sicherheitslücken</a> geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53561635081/">Drei tanzende Androiden</a></em>, erstellt mit <a href="https://ideogram.ai/">Ideogram</a>. Prompt: »<em>Three little green robots dance on a colorful meadow in front of a small garden house, two goats in checkered vests watch them, the sun shines on the scenery, colored french comic style</em>«. Modell: Ideogram 1.0, Style: Illustration.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024060501_android_patchday/</guid>
  <pubDate>Wed, 05 Jun 2024 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060501_android_patchday/images/androidjuni.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Update zum Kulturbunker-Event »Kultur auf dem Dach«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060401_kulturbunker3/</link>
  <description><![CDATA[ 




<p><a href="https://www.trial-error.org/projekte-1/kulturbunker/"><img src="https://kantel.github.io/posts/2024060401_kulturbunker3/images/kulturdach-b.jpg" class="img-fluid"></a></p>
<p>Es gibt das <a href="https://kantel.github.io/posts/2024052902_kulturbunker_update/">versprochene</a> Update vom Update zum Event »Kultur auf dem Dach«, das am Sonnabend den 8. Juni 2024 auf dem Dach des <a href="https://kantel.github.io/posts/2023100601_kulturbunker/">Kulturbunkers in der Neuköllner Rungiusstraße</a> stattfindet: Ihr könnt die laue Sommernacht mit Poesie, Musik, Kino und einer Bar mit Erfrischungen genießen. Alle Nachbarinnen und Nachbarn, Freundinnen und Freunde und Familien sind herzlich eingeladen.</p>
<p>Die erste Veranstaltung dieses neuen Formats beginnt am Sonnabend um 18:00 Uhr mit einem <em>Open Dach</em>, ab 19:00 Uhr gibt es <em>Gedichte/Poetry</em> und um 20:30 Uhr startet der Dokumentarfilm »<a href="https://de.wikipedia.org/wiki/Das_Salz_der_Erde_(2014)">Das Salz der Erde</a>« über den Brasilianer <em>Sebastiao Salgado</em>, mit Schwarz-Weiß-Bildern von unendlicher Schönheit. Jahrzehntelang hat der Photograph Bilder von Kriegen, Flucht und Vertreibungen, Hungersnöten und Umweltkatastrophen auf der ganzen Welt aufgenommen. Nach all dem Elend wandte er sich der Naturphotographie zu. Sein Werk hat er als einen möglichen Weg der menschlichen Wiederentdeckung zu sich selbst und zur Natur konzipiert.</p>
<p>Regie bei der 2014 entstandenen Dokumentation führte sein Sohn <em>Juliano Ribeiro Salgado</em> zusammen mit <em>Wim Wenders</em>. Sebastian Salgado wurde 2019 mit dem Friedenspreis des Deutschen Buchhandels ausgezeichnet und ist damit erst der zweite Bildkünstler, der diese renommierte Auszeichnung erhalten hatte.</p>
<p>Auf der großen Leinwand entfalten die Bilder eine geradezu monumentale Wucht. Es wird daher bestimmt ein wunderbarer, aber auch zum Nachdenken anregender Abend und ein würdiger Auftakt der Reihe »Kultur auf dem Dach«.</p>
<p>Der Kulturbunker ist in der Rungiusstraße 19 in 12347 Berlin-Neukölln.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Kiezfest</category>
  <category>Kulturbunker</category>
  <guid>https://kantel.github.io/posts/2024060401_kulturbunker3/</guid>
  <pubDate>Tue, 04 Jun 2024 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060401_kulturbunker3/images/kulturdach.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf ein Neues? Braucht der Schockwellenreiter Hugo?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060301_auf_ein_neues/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53672121375/"><img src="https://kantel.github.io/posts/2024060301_auf_ein_neues/images/schockwellenreiterneu-b.jpg" class="img-fluid"></a></p>
<p>Ich weiß, es hört niemand gerne, aber so wie es aussieht, bin ich mit meinem <em>Static Site Generater</em> (SSG) <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> an die Grenzen dessen gestoßen, was dieser leisten kann. Mit den momentan über 800 Seiten dieses <del>Blogs</del> Kritzelhefts ist das Teil völlig überfordert, das Herausrendern eines neuen Beitrags benötigt mittlerweile etwa eine Viertelstunde<sup>1</sup>. Und das frustriert und behindert mich doch gewaltig in meinem kreativen Output.</p>
<p>Was ist also zu tun? Ein schnellerer und leichtgewichtiger <em>Static Site Generator</em> muß offensichtlich her. Und der schnellste, den ich kenne, ist zur Zeit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a>, der in Go geschriebene und als <em>Single Binary</em> laufende, kompilierte SSG, der nach eigenen Angaben tausende von Seiten auf einen Rutsch ohne nennenswerte Verzögerung herausschreiben kann.</p>
<p>Ich glaube natürlich nicht alles, was mir an Werbetexten unterkommt, und so werde ich Hugo erst einmal ausführlich testen. Ich schreibe das daher auch nur, damit Ihr Euch nicht wundert, wenn auf diesen Seiten völlig unvermittelt auf einmal Beiträge zu Hugo auftauchen sollten.</p>
<p>Schaun wir also mal, was daraus wird. <em>Still digging!</em></p>
<iframe class="if16_9" src="https://www.youtube.com/embed/0IfzATRf_T8?si=Gi_0y_HK5prYoE0Z" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, Hugo kann nicht nur mit Markdown umgehen, sondern zum Beispiel auch mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/asciidoc.html">AsciiDoc</a>, <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/restructuredtext.html">reStructuredText</a> oder den <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/orgmode.html">Org-mode</a> des <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/emacs.html">Emacs</a>. Mit AsciiDoc und <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/asciidoctor.html">AsciiDoctor</a> hatte ich <a href="http://blog.schockwellenreiter.de/2020/01/2020012301.html">vor einigen Jahren</a> schon einmal <a href="http://blog.schockwellenreiter.de/2020/01/2020012501.html">ein</a> <a href="http://blog.schockwellenreiter.de/2020/01/2020012902.html">wenig</a> <a href="http://blog.schockwellenreiter.de/2020/01/2020013002.html">experimentiert</a>, daher klingt das interessant. Nicht unbedingt für den <em>Schockwellenreiter</em>, da der Renderer ein externes Modul für Hugo verlangt und dies das Herausschreiben langsamer macht, aber als Teil einer zukünftigen Publikationsstrategie? Denn die Möglichkeiten von AsciiDoc gehen weit über die Möglichkeiten von Markdown hinaus. Also auch hier: <em>Still digging!</em></p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Brian P. Hogan: <em>Build Websites with Hugo. Fast Web Development with Markdown</em>, Raleigh NC (The Pragmatic Bookshelf) 2020</li>
<li>der.hans: <em><a href="https://www.youtube.com/watch?v=0IfzATRf_T8">AsciiDoc - Plainish text for fancy output</a></em>, YouTube vom 8. August 2017</li>
<li>Develpreneur: <em>Ascii Doc Tutorial (<a href="https://www.youtube.com/watch?v=GL1SEYOhEiQ">Part 1</a>, <a href="https://www.youtube.com/watch?v=wca5m7JpS_U">Part 2</a> und <a href="https://www.youtube.com/watch?v=cQ-IfqLTw8w">Part 3</a>)</em>, YouTube 2021</li>
</ul>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53672121375/">Rabbit rides the Shockwave</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>The Mad Hatter surfs on a board in the air between houses and trees in a futuristic city. A planet with a ring can be seen in the sky. Little white rabbits with vests and watches scurry about on the streets. colored french comic style</em>«. Negative Prompt: »<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Illustrated Anime + Ethereal Realism.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Zumindest auf meinem betagten MacBook Pro. Aber meine Tests auf meinem <a href="https://kantel.github.io/posts/2024051201_71_jahre/">zukünftigen Desktop Rechner</a> (einen halbwegs aktuellen Mac Mini von 2018) zeigten, daß darauf das Problem nur geringfügig nach hinten verschoben wird – Quarto ist auch dort nicht signifikant schneller.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Interna</category>
  <category>Quarto</category>
  <category>Statische Seiten</category>
  <category>Hugo</category>
  <category>AsciiDoc</category>
  <guid>https://kantel.github.io/posts/2024060301_auf_ein_neues/</guid>
  <pubDate>Mon, 03 Jun 2024 15:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060301_auf_ein_neues/images/schockwellenreiterneu.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Alice, die Grinsekatze und die Suche nach dem richtigen Weg</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060201_grinsekatze_weg/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53764618955/"><img src="https://kantel.github.io/posts/2024060201_grinsekatze_weg/images/grinsekatze2-b.jpg" class="img-fluid"></a></p>
<blockquote class="blockquote">
<p>»Grinse-Mieze,« fragte Alice die plötzlich erscheinende Grinsekatze, »willst du mir wohl sagen, wenn ich bitten darf, welchen Weg ich hier nehmen muß?«<br>
»Das hängt zum guten Teil davon ab, wohin du gehen willst,« sagte die Katze.<br>
»Es kommt mir nicht darauf an, wohin —« sagte Alice.<br>
»Dann kommt es auch nicht darauf an, welchen Weg du nimmst,« sagte die Katze.<br>
»— wenn ich nur&nbsp;<em>irgendwo</em>&nbsp;hinkomme,« fügte Alice als Erklärung hinzu.<br>
»O, das wirst du ganz gewiß,« sagte die Katze, »wenn du nur lange genug gehst.«<br>
(Lewis Caroll: <a href="https://www.gutenberg.org/files/19778/19778-h/19778-h.htm#Sechstes_Kapitel">Alice im Wunderland</a>, Leipzig 1869)</p>
</blockquote>
<p>Bei ihren Besuchen im Wunderland konnte sich Alice oft nicht entscheiden, ob sie die Teeparty des verrückten Hutmachers, das Haus der Herzogin oder die bekiffte Raupe auf ihrem Pilz besuchen solle. Alle drei Ziele lagen auf den Ecken eines Dreiecks. Doch wenn sie sich zum Beispiel entschloß, die Teeparty aufzusuchen, wurde sie genau auf der Hälfte des Weges unsicher. Sie ließ einen bunten Stein fallen und überdachte ihre Entscheidung noch einmal. Sie suchte also aus den drei möglichen Zielen zufällig eines aus (es konnte durchaus auch wieder die Party des verrückten Hutmachers sein). Doch es war wie verhext: Jedesmal, wenn sie genau den halben Weg zurückgelegt hatte, wurde sie wieder unschlüssig, ließ wieder einen bunten Stein fallen und überlegte neu, welches der drei möglichen Ziele (Hutmacher, Raupe oder Herzogin). sie aufsuchen sollte … möglicherweise das gleiche, möglicherweise ein anderes. Und das wieder, und wieder, und wieder …</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53764532524/"><img src="https://kantel.github.io/posts/2024060201_grinsekatze_weg/images/sierp1.jpg" class="img-fluid"></a></p>
<p>Schaut man sich Alices Irrweg anhand der zurückgelassenen, bunten Steine an, entdeckt man eine Figur, genauer ein Fraktal, das in der Literatur als <a href="https://de.wikipedia.org/wiki/Sierpinski-Dreieck">Sierpinski-Dreieck</a> bekannt ist, benannt nach dem polnischen Mathematiker <em>Wacław Sierpiński</em>, der das Fraktal schon 1915 als erster beschrieb. Normalerweise wird dieses Fraktal mit einem rekursiven Algorithmus erzeugt, aber es geht eben auch mithilfe dieses »Chaos-Spiels«, das ich hier einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> implementiert habe.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorMode</span>(HSB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frameRate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">}</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb1-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-14">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb1-17">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb1-20">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-22">  }</span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">point</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26">  i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-27">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24000</span>) {</span>
<span id="cb1-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noLoop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-30">  }</span>
<span id="cb1-31">}</span></code></pre></div>
<p>Die <code>draw()</code>-Schleife wird 24.000 Mal durchlaufen und obwohl ich die Framerate auf 120 FPS hochgetunt habe, müßt Ihr schon ein wenig Geduld aufbringen, bevor das erlösende »I did it, Babe!« in der Konsole erscheint. Aber man sieht sehr schön, wie sich das Dreieck zufällig, aber dennoch erkennbar, zusammensetzt. Je nach zufälligem Startwert liegen die ersten drei bis vier Punkte noch außerhalb des Fraktals, danach geht aber alles seinen geordneten Gang. Und an den Farben erkennt man, daß auch die Reihenfolge, in der die einzelnen Punkte des Fraktals von Alice angelaufen werden, ebenfalls zufällig sind.</p>
<p>Dieser Beitrag ist ein weiteres Puzzleteilchen für meine Tutorialreihe zu P5.js und läutet einen Abschnitt ein, der unter der Überschrift »Punkte und Pixel« steht. Und wie gewohnt, sind hier zum Schluß alle bisher erschienenen Tutorials aufgeführt, damit Ihr keine <del>Suchmaschine</del> Datenkrake bemühen müßt:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): <a href="https://kantel.github.io/posts/2024052903_octopussy/">Octopussy</a> (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
<li>Das Abenteuer P5.js geht weiter: <a href="https://kantel.github.io/posts/2024053001_planetensystem_p5js/">Ein kleines Planetensystem</a> (<a href="https://github.com/kantel/p5js/tree/master/planetensystem/small_planetary_system">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024053103_roating_images/">Rotating Images</a>: Nachtrag zum Planetensystem mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/rotating_image">GitHub</a>)</li>
<li>Punkte und Pixel 1: Alice, die Grinsekatze und die Suche nach dem richtigen Weg (<a href="https://github.com/kantel/p5js/tree/master/sierp01">GitHub</a>)</li>
</ol>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>William P. Beaumont: <em>Conquering the Math Bogeyman</em>, in Clifford A. Pickover (Ed.): <em>Fractal Horizons – The Future Use of Fractals</em>, New York (St.&nbsp;Martin’s Press) 1996, Seiten 3-15</li>
<li>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994, Seiten 132ff.</li>
</ul>
</section>
<section id="update-3.-juni-2024" class="level3">
<h3 class="anchored" data-anchor-id="update-3.-juni-2024">Update (3. Juni 2024)</h3>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
let i = 0;
let x = y = 0;

function setup() {
  createCanvas(300, 200);
  background(234, 218, 184);
  colorMode(HSB, 360, 100, 100);
  frameRate(120);
}

function draw() {
  let p = floor(random(0, 3));
  if (p == 0) {
    x /= 2;
    y = (y + height)/2;
  } else if (p == 1) {
    x = (x + width/2)/2;
    y /= 2;
  } else if (p == 2) {
    x = (x + width)/2;
    y = (y + height)/2
  }
  stroke(i%360, 100, 100);
  strokeWeight(2);
  point(x, y);
  i += 1;
  if (i > 12000) {
    noLoop();
  }
}
</script>
<p>Ich habe noch eine leicht modifizierte Version des Skriptes als <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5xjswidget.html">P5.js-Widget</a> eingebaut (ich habe die Canvasgröße und die Anzahl der Iterationen halbiert), damit Ihr da draußen etwas zum Spielen habt.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53764618955/">Alice und die Grinsekatze</a></em>, Collage aus mehreren, KI-generierten Bildern.</p>


</section>

 ]]></description>
  <category>P5.js</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024060201_grinsekatze_weg/</guid>
  <pubDate>Sun, 02 Jun 2024 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060201_grinsekatze_weg/images/grinsekatze2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mediadaten: Die Zahlen für den Monat Mai 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53565622884/"><img src="https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/images/dachsmorgenmantelmagespace-b.jpg" class="img-fluid"></a></p>
<p>Der vergangene Monat war der erste Monat, in dem ich komplett auf Gabi verzichten mußte, er war also kein einfacher Monat für mich. Das symbolisiert auch das <a href="https://www.flickr.com/photos/schockwellenreiter/53565622884/">Bannerbild</a>, das mich in der Isolation unseres (nun nur noch »meines«) Arbeitszimmers zeigen soll. Trotzdem, das Leben geht ja irgendwie weiter und daher gibt es – wie zu jedem Montatsersten gewohnt – die Zahlen des Vormonats, die manches Mal hochtrabend auch <em>Mediadaten</em> genannt werden: Im Mai 2024 hatte der <em>Schockwellenreiter</em> laut seinem nicht immer wirklich zuverlässigen, aber dafür (hoffentlich!) datenschutzkonformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>5.258 Seitenaufrufe</strong>. Auch wenn diese Exaktheit der Ziffern wie immer eine Genauigkeit der Zahlen nur vortäuscht, freue ich mich über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> des Vormonats sind noch immer von den Ereignissen geprägt, aber es gibt auch einige Platzierungen, die wieder einen Trend zur Normalität andeuten:</p>
<ol type="1">
<li>Der Beitrag »<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html">Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</a>« vom Januar dieses Jahres entpuppt sich zum Dauerbrenner und war auch in diesem Monat wieder ganz vorne dabei.</li>
<li>Dicht gefolgt von den Beiträgen zu <a href="https://kantel.github.io/posts/2024051702_gabis_letzter_weg/">Gabis Beisetzung</a>, der <a href="https://kantel.github.io/posts/2024051403_abschied_gabi/">Ankündigung</a> dazu und der eigentlichen <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Nachricht von ihrem Tod</a>.</li>
<li>Aber auch die <a href="https://kantel.github.io/posts/2024051201_71_jahre/">Nachricht über meinen 71. Geburtstag</a> und welche Pläne ich noch habe, fand erstaunlich viele Aufrufe.</li>
<li>Wo ich gerade bei Plänen bin: Diese beiden Meldungen, ob die mögliche <a href="https://kantel.github.io/posts/2024050402_logseq_oder_zettlr/">Zukunft meines zweiten Gehirns</a> entweder noch <a href="https://kantel.github.io/posts/2024050501_zettlr_catalina/">Logseq oder doch Zettlr</a> heißt, fanden erstaunlich viele Leserinnen und Leser.</li>
<li>Und <em>last but not least</em> sind auch viele von Euch an der <a href="https://kantel.github.io/posts/2024050103_nachbarschaftskaffee/">Zukunft des Neuköllner Kulturbunkers</a> interessiert.</li>
</ol>
<p>Euer Interesse hat mir viel Kraft gegeben, trotz der Stille des nun leeren Arbeitszimmers weiterzumachen. Denn ich habe noch viel vor. Euch werden sicher bis zum Ende des Sommers noch einige Überraschungen erwarten. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53565622884/">Dachs in seiner Höhle</a></em>, erstellt mit <a href="https://www.mage.space/">Mage.Space</a>. Prompt: »<em>A badger in a red dressing gown sits in a wing chair in his cave in front of a huge library with many shelves and reads a fairy tale from a thick book, colored french comic style</em>«. Negative Prompt: »<em>other animals</em>«. Modell: Stable Diffusion XL, Style: None.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/</guid>
  <pubDate>Sat, 01 Jun 2024 13:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024060101_mediadaten_mai_2024/images/dachsmorgenmantelmagespace.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rotating Images: Nachtrag zum Planetensystem mit P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024053103_roating_images/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53760170616/"><img src="https://kantel.github.io/posts/2024053103_roating_images/images/pythonp5js-b.jpg" class="img-fluid"></a></p>
<p>So wie es aussieht, hatte ich bei meinem <a href="https://kantel.github.io/posts/2024053001_planetensystem_p5js/">letzten Tutorial</a>, in dem ich ein kleines Planetensystem mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> gebastelt hatte, zu viel vorausgesetzt. Es war wohl nicht jedem Leser (und vielleicht auch jeder Leserin) klar, daß Bilder ebenfalls nur Rechtecke sind und sie daher bei Rotationen genau wie Rechtecke behandelt werden können.</p>
<p>Daher habe ich noch einmal ein kleines Skriptchen geschrieben, das exakt ein Bild einer Brillenschlange (einer Python?) mit <code>translate()</code> und <code>rotate()</code> um 90° dreht:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> python<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb1-4">  python <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/python.jpg"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">}</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageMode</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">angleMode</span>(DEGREES)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noLoop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">}</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(python<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span>
<span id="cb1-20">}</span></code></pre></div>
<p>Da die Rotation um den Mittelpunkt des Bildes stattfinden soll, muß mit <code>imageMode(CENTER)</code> der Ankerpunkt des Bildes in die Mitte gelegt werden. Und da es für mich – wie vermutlich auch den meisten von Euch – einfacher ist, bei Rotationen in Grad und nicht in Radians zu denken, wird dies mit <code>angleMode(DEGREES)</code> ebenfalls festgelegt.</p>
<p>In <code>draw()</code> wird dann mit <code>translate(width/2, height/2)</code> der Ursprung des Koordinatensystems genau in die Mitte des Canvas gelegt. Denn dann kann mit <code>image(python, 0, 0, 450, 450)</code> auch das rotierte Bild zentriert ausgegeben werden.</p>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
let python;

function preload() {
  python = loadImage("images/python.jpg");
}

function setup() {
  createCanvas(200, 200);
  imageMode(CENTER);
  angleMode(DEGREES);
  noLoop();
}

function draw() {
  background(220);
  translate(width/2, height/2);
  rotate(90);
  image(python, 0, 0, 200, 200);
}
</script>
<p>In obigem kleinen Demo-Skript könnt Ihr in <code>rotate(xx)</code> mal ein paar andere Werte als <img src="https://latex.codecogs.com/png.latex?90"> eingeben, um verschiedene Rotationswinkel zu testen.</p>
<p>Wie immer gibt es zum Abschluß eine Übersicht aller bisher in dieser Reihe erschienenen Tutorials, damit Ihr nicht die Datenkrake bemühen müßt:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): <a href="https://kantel.github.io/posts/2024052903_octopussy/">Octopussy</a> (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
<li>Das Abenteuer P5.js geht weiter: <a href="https://kantel.github.io/posts/2024053001_planetensystem_p5js/">Ein kleines Planetensystem</a> (<a href="https://github.com/kantel/p5js/tree/master/planetensystem/small_planetary_system">GitHub</a>)</li>
<li>Rotating Images: Nachtrag zum Planetensystem mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/rotating_image">GitHub</a>)</li>
</ol>
<p>Das <a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/">Bild von der Schlange</a> hatte ich mit einer <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">gekünstelten Intelligenzia meines Vertrauens</a> generieren lassen.</p>



 ]]></description>
  <category>P5.js</category>
  <category>P5.js-Widget</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024053103_roating_images/</guid>
  <pubDate>Fri, 31 May 2024 19:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024053103_roating_images/images/pythonp5js.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit neuer Version seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024053102_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53559883743/"><img src="https://kantel.github.io/posts/2024053102_chrome_update/images/datenkrakegelb-b.jpg" class="img-fluid"></a></p>
<p>Es ist heute kein Mittwoch, aber dennoch muß unser aller Datenkrake ein eiliges Sicherheits-Update unters Volk bringen: Google veröffentlicht ein weiteres Update der Version 125 (125.0.6422.141/142) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2024/05/stable-channel-update-for-desktop_30.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53559883743/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024053102_chrome_update/</guid>
  <pubDate>Fri, 31 May 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024053102_chrome_update/images/datenkrakegelb.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Security Alert: Sicherheitslücke im Linux-Kernel</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024053101_security_alert_linux/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53759920013/"><img src="https://kantel.github.io/posts/2024053101_security_alert_linux/images/dragon03-b.jpg" class="img-fluid"></a></p>
<p>Die US-amerikanische Cybersicherheitsbehörde CISA warnt vor einer Sicherheitslücke im Linux-Kernel, die bereits aktiv ausgenutzt wird. Bösartige Akteure könnten sich dadurch root-Rechte auf verwundbaren Systemen verschaffen.</p>
<p>Mehr dazu bei <a href="https://www.heise.de/news/Linux-Luecke-Angreifer-verschaffen-sich-root-Rechte-9742699.html">Tante Heise</a>. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53759920013/">Blauzahn</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>dragon with big blue teeth in an ancient city</em>«. Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024053101_security_alert_linux/</guid>
  <pubDate>Fri, 31 May 2024 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024053101_security_alert_linux/images/dragon03.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Das Abenteuer P5.js geht weiter: Ein kleines Planetensystem</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024053001_planetensystem_p5js/</link>
  <description><![CDATA[ 




<p><a href="https://www.solarsystemheritage.com/images/granville-un-autre-monde.jpg"><img src="https://kantel.github.io/posts/2024053001_planetensystem_p5js/images/grandville-un-autre-monde-b.jpg" class="img-fluid"></a></p>
<p>Als nächstes Projekt meiner kleinen Tutorialreihe zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und dem <a href="https://editor.p5js.org/">P5.js-Webeditor</a> möchte ich eine kleine Animation eines Planetensystems aus Kreisen und Rechtecken entwickeln. Ich weiß, Planeten sind eher kugelförmig und keine Kisten, aber mein Freund und regelmäßiger Leser aus Bremen hatte mich gebeten, zu zeigen, wie man Shapes in P5.js rotieren kann – und das ist an Kreisen oder Kugeln nahezu unmöglich zu demonstrieren. Außerdem probiere ich auf diesen Seiten erstmalig aus, wie man das <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5xjswidget.html">P5 Widget</a> für solche Tutorials mehr oder weniger sinnvoll einsetzen kann<sup>1</sup>. Es ist also auch für mich ein völlig neues Experiment und ich bin gespannt, wie es ausfällt.</p>
<p>Das Tutorial soll also in der Hauptsache zeigen, wie man <code>translate()</code> und <code>rotate()</code> sinnvoll einsetzt, und dazu brauchte ich eben Rechtecke zu Verdeutlichung.</p>
<p>Ich beginne mit einem einfachem System eines Planeten, der seinen Fixstern umkreist, und dieser besitzt einen Trabanten, der wiederum den Planeten umrundet. Der Einfachheit halber habe ich die Akteure Sonne, Erde und Mond genannt.</p>
<p>Zu Beginn des Sketches lege ich erst einmal ein paar Zahlen fest:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> sunDiam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> earthDiam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> earthOrbitRadius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> earthAngle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Diese Zahlen sind durch keine physikalische Wirklichkeit gedeckt, sondern einfach so lange durch Experimente herausgesucht worden, bis sich eine ansprechende Animation ergab.</p>
<p>Die <code>setup()</code>-Funktion legt einfach nur die Größe des Ausgabefensters fest:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">}</span></code></pre></div>
<p>In <code>draw()</code> setze ich den Hintergrund auf schwarz und dann zeichne ich die Sonne in die Mitte des Ausgabefensters:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3">  </span>
<span id="cb3-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sonne im Zentrum</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">circle</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sunDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Die Zeile <code>translate(width/2, height/2)</code> sorgt dafür, daß der Nullpunkt des Koordinatensystem vom linken oberen Rand der Zeichenfläche in die Mitte des Ausgabefensters gelegt wird und so die Sonne mit <code>circle(0, 0, sunDiam)</code> auch genau dort gezeichnet wird. Probiert es aus, der Sketch ist so lauffähig:</p>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
const sunDiam = 40;

function setup() {
  createCanvas(300, 200);
}

function draw() {
  background(0, 0, 0);
  
  // Sonne im Zentrum
  translate(width/2, height/2);
  fill(255, 200, 64);
  circle(0, 0, sunDiam);
}
</script>
<p>Nun zur Erde, die die Sonne umkreist: Zuerst müssen dafür ein paar weitere Variablen im globalen Kontext definiert werden:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> earthDiam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> earthOrbitRadius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> earthAngle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Und dann müssen sie in der <code>draw()</code>-Funktion des Sripts mit Leben gefüllt werden:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Erde dreht sich um die Sonne</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(earthAngle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(earthOrbitRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">circle</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> earthDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> earthDiam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> earthDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"></span>
<span id="cb5-8">  earthAngle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Wenn Ihr diese Zeilen Code in die <code>draw()</code>-Funktion unterhalb der Sonne einfügt, bekommt Ihr eine blaue Erde, die sich langsam um die Sonne bewegt. Denn mit <code>translate(earthOrbitRadius, 0)</code> wurde das Koordinatensystem erneut verschoben, 180 Pixel von der Sonne entfernt, aber auf der gleichen y-Achse wie das Koordinatensystem der Sonne. Da <code>rotate()</code> vor der Koordinatentransformation aufgerufen wird, dreht sich die Erde noch um die Sonne und das Koordinatensystem der Sonne rotiert. Ein <code>rotate()</code> hinter der Koordinatentransformation würde bewirken, daß sich die Erde um sich selbst dreht – das heißt, daß das Koordinatensystem der Erde um sich selbst rotieren würde.</p>
<p>Das ergibt dann folgendes Bild:</p>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
const sunDiam = 40;
const earthDiam = 15;
const earthOrbitRadius = 65;

let earthAngle = 0;

function setup() {
  createCanvas(300, 200);
}

function draw() {
  background(0, 0, 0);
  
  // Sonne im Zentrum
  translate(width/2, height/2);
  fill(255, 200, 64);
  circle(0, 0, sunDiam);
  
  // Erde dreht sich um die Sonne
  rotate(earthAngle);
  translate(earthOrbitRadius, 0);
  fill(64, 64, 255);
  circle(0, 0, earthDiam);

  earthAngle += 0.01;
}
</script>
<p>Jetzt wird noch der Mond angehängt. Er braucht ebenfalls ein paar Konstanten und Variablen:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> moonDiam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> moonOrbitRadius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> moonAngle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Und dann kommt innerhalb der <code>draw()</code>-Funktion sein Auftritt:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mond dreht sich um die Erde</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(moonAngle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(moonOrbitRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">circle</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> moonDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Das Ergebnis könnt Ihr in diesem Skript-Fragment bewundern:</p>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
const sunDiam = 40;
const earthDiam = 15;
const earthOrbitRadius = 65;
const moonDiam = 5;
const moonOrbitRadius = 25;

let earthAngle = 0;
let moonAngle = 0;

function setup() {
  createCanvas(300, 200);
}

function draw() {
  background(0, 0, 0);
  
  // Sonne im Zentrum
  translate(width/2, height/2);
  fill(255, 200, 64);
  circle(0, 0, sunDiam);
  
  // Erde dreht sich um die Sonne
  rotate(earthAngle);
  translate(earthOrbitRadius, 0);
  fill(64, 64, 255);
  circle(0, 0, earthDiam);
  
  // Mond dreht sich um die Erde
  rotate(moonAngle);
  translate(moonOrbitRadius, 0);
  fill(192, 192, 80);
  circle(0, 0, moonDiam);
    
  earthAngle += 0.01;
  moonAngle += 0.01;
}
</script>
<p>Durch diese Koordinatentransformation steht der Mond im gleichen Verhältnis zur Erde wie die Erde zur Sonne, der Ursprung des Koordinatensystems liegt nun 25 Pixel vom Erdmittelpunkt entfernt. Natürlich rotiert in diesen Zeilen das Koordinatensystem der Erde, damit der Eindruck entsteht, daß der Mond um die Erde kreist.</p>
<p>Das alles funktioniert natürlich nur, weil bei jedem erneuten Durchlauf der <code>draw()</code>-Funktion das Koordinatensystem jeweils neu zurückgesetzt wird, also alle bisherigen Transformationen »vergessen« (neu überschrieben) werden.</p>
<p>Nun kann man bei Kreisen schwer erkennen, ob sie wirklich rotieren, daher habe ich in einer zweiten Fassung, die Kreise von Erde und Mond durch Quadrate ersetzt (ich habe – damit Ihr die Position der Codezeilen findet, die ersetzte Kreisfunktion jeweils auskommentiert stehen lassen, die entsprechende Rechteckfunktion wird jeweils direkt unter der auskommentierten Zeile eingefügt):</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Erde dreht sich um die Sonne</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(earthAngle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(earthOrbitRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// circle(0, 0, earthDiam);</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> earthDiam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> earthDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7">  </span>
<span id="cb8-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mond dreht sich um die Erde</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(moonAngle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(moonOrbitRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// circle(0, 0, moonDiam);</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> moonDiam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> moonDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Da ein Rechteck in P5.js seinen Ursprung in der linken. obenren Ecke besitzt, eine Rotation aber immer um den Urprung/Mittelpunkt des Shapes stattfindet, mußte in <code>setup()</code> mit</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectMode</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>der Ursprung eines jeden Rechtecks und/oder Quadrats auf seinen Mittelpunkt gesetzt werden.</p>
<p>Wenn Ihr das Programm jetzt startet, dreht sich eine große blaue Kiste um die Sonne mit einer kleinen grauen Kiste, die ebenfalls drehend um die Erde kreist und Ihr könnt die Rotation der beiden Kisten genau beobachten.</p>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
const sunDiam = 40;
const earthDiam = 15;
const earthOrbitRadius = 65;
const moonDiam = 5;
const moonOrbitRadius = 25;

let earthAngle = 0;
let moonAngle = 0;

function setup() {
  createCanvas(300, 200);
  rectMode(CENTER);
}

function draw() {
  background(0, 0, 0);
  
  // Sonne im Zentrum
  translate(width/2, height/2);
  fill(255, 200, 64);
  circle(0, 0, sunDiam);
  
  // Erde dreht sich um die Sonne
  rotate(earthAngle);
  translate(earthOrbitRadius, 0);
  fill(64, 64, 255);
  // circle(0, 0, earthDiam);
  rect(0, 0, earthDiam, earthDiam);
  
  // Mond dreht sich um die Erde
  rotate(moonAngle);
  translate(moonOrbitRadius, 0);
  fill(192, 192, 80);
  // circle(0, 0, moonDiam);
  rect(0, 0, moonDiam, moonDiam);
    
  earthAngle += 0.01;
  moonAngle += 0.01;
}
</script>
<p>Doch was ist, wenn ein zweiter Mond – nennen wir ihn Nemesis – die Erde umkreisen soll? Das Koordinantensystem der Erde ist ja schon vom Koordinatensystem des Mondes ersetzt worden. Ihr braucht also eine Funktion, die das Koordinatensystem nur temporär verschiebt, so daß man auf das alte Koordinatensystem wieder zrückgreifen kann, wenn es benötigt wird. Genau dafür gibt es in P5.js das Funktionenpaar <code>push()</code> und <code>pop()</code>. Mit <code>push()</code> wird das bisherige Koordinatensystem auf einen Stack gelegt und mit <code>pop()</code> wird es wieder zurückgeholt.</p>
<p>Mit diesen Informationen im Hinterkopf braucht natürlich Nemesis ihren eigenen Satz Variablen</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> nemDiam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> nemOrbitRadius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> nemAngle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>und ich habe sie – damit Ihr seht, daß das alles nicht nur mit Quadraten funktioniert – als »echtes« Rechteck implementiert:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> nemDiam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>nemDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Und nun müssen Nemesis und der Mond jeweils eine eigene Koordinaten-Matrix spendiert bekommen:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mond dreht sich um die Erde</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(moonAngle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(moonOrbitRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> moonDiam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> moonDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-8">  </span>
<span id="cb12-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Nemesis dreht sich um die Erde</span></span>
<span id="cb12-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotate</span>(nemAngle)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">translate</span>(nemOrbitRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> nemDiam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>nemDiam)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Damit die Rotationen von Nemesis und Mond auch noch mit unterschiedlichen Geschwindigkeiten ablaufen, hat Nemesis mit</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb13-1">nemAngle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.015</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>einen abweichenden Rotationswinkel verpasst bekommen.</p>
<p>Mein endgültiges Skript sieht daher so aus:</p>
<script type="text/p5" data-autoplay="" data-preview-width="400" data-height="300" data-p5-version="1.9.4">
const sunDiam = 40;
const earthDiam = 15;
const earthOrbitRadius = 65;
const moonDiam = 5;
const moonOrbitRadius = 25;
const nemDiam = 6;
const nemOrbitRadius = 19;

let earthAngle = 0;
let moonAngle = 0;
let nemAngle = 0;

function setup() {
  createCanvas(300, 200);
  rectMode(CENTER);
}

function draw() {
  background(0, 0, 0);
  
  // Sonne im Zentrum
  translate(width/2, height/2);
  fill(255, 200, 64);
  circle(0, 0, sunDiam);
  
  // Erde dreht sich um die Sonne
  rotate(earthAngle);
  translate(earthOrbitRadius, 0);
  fill(64, 64, 255);
  rect(0, 0, earthDiam, earthDiam);
  
  // Mond dreht sich um die Erde
  push();
  rotate(moonAngle);
  translate(moonOrbitRadius, 0);
  fill(192, 192, 80);
  rect(0, 0, moonDiam, moonDiam);
  pop();
  
  // Nemesis dreht sich um die Erde
  push();
  rotate(nemAngle);
  translate(nemOrbitRadius, 0);
  fill(220, 75, 75);
  rect(0, 0, nemDiam, 1.5*nemDiam);
  pop();
  
  earthAngle += 0.01;
  moonAngle += 0.01;
  nemAngle += 0.015;
}
</script>
<p>Natürlich hätte man die Nemesis betreffenden Zeilen nicht in eine eigene <code>push()</code> – <code>pop()</code> Anweisung klammern müssen, aber so ist es sauberer und Ihr könnt der Erde noch einen dritten oder einen vierten Trabanten spendieren, ohne mit den Koordinatensystemen durcheinander zu geraten.</p>
<p>Wenn Ihr das Programm laufen lasst, werden Ihr sehen, warum ich für die Erde und ihre Trabanten Rechtecke gewählt habe. So ist zu erkennen, daß die Erde mit genau einer Seite immer zur Sonne zeigt und die beiden Trabanten ebenfalls mit genau einer Seite immer zur Erde. Das ist, weil sie sich jeweils in ihrem eigenen Koordinatensystem bewegen, dessen eine Achse immer das Zentrum des darüberliegenden Koordinatensystems schneidet.</p>
<p>Für die Monde ist das okay, wenn Ihr der Erde noch Tag und Nacht spendieren wollt, müßt Ihr ihr aber noch ein zweites <code>rotate()</code> nach der Koordinatentransformation spendieren.</p>
<p>Natürlich ist das Progrämmchen ausbaubar. Ihr könnt zum Beispiel mehrere Planeten jeweils mit ihren eigenen Koordinatensystemen um den Fixstern kreisen lassen. Alle diese Planeten könntet Ihr mit Monden umgeben, die wiederum ihr eigenes Koordinatensystem besitzen. Und wenn Ihr wirkliche Helden sein wollt: Schnappt Euch ein Buch mit den Keplerschen Gesetzen zur Planetenbewegung und simuliert damit ein realistischeres Planetensystem.</p>
<p>Das ist der sechste Beitrag meiner Reihe von P5.js-Tutorials. Bisher erschienen sind:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): <a href="https://kantel.github.io/posts/2024052903_octopussy/">Octopussy</a> (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
<li>Das Abenteuer P5.js geht weiter: Ein kleines Planetensystem (<a href="https://github.com/kantel/p5js/tree/master/planetensystem/small_planetary_system">GitHub</a>)</li>
</ol>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<p>Die Idee zu diesem Sketch und einige der Parameter habe ich dem wunderbaren Buch »Processing for Visual Artists – How to Create Expressive Images and Interactive Art« von <em>Andrew Glassner</em> (Natick, MA, 2010), Seiten 192-200 entnommen und von Java nach JavaScript (alleine und ohne die Hilfe von ChatGPT&nbsp;🤓) portiert.</p>
<hr>
<p><strong>Bild</strong>: Grandville: <em><a href="http://blog.schockwellenreiter.de/2013/07/20130719photo01.html">Un Autre Monde</a></em>, 1844</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich weiß, das Widget wird via eines CDN <em>(toolness)</em> eingebunden, aber da auch die P5.js-Bibliotheken im Webeditor über ein CDN <em>(Cloudflare)</em> eingebunden werden, nehme ich das erst einmal als gegeben hin. Glaubt mir, ich habe versucht eine selbstgehostete Version des Widgets zu implementieren, aber ich bin grandios gescheitert. Also, wenn jemand von Euch da draußen eine Alternative weiß … meine Kommentare stehen ihr oder ihm offen.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>P5.js-Widget</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <category>Simulation</category>
  <guid>https://kantel.github.io/posts/2024053001_planetensystem_p5js/</guid>
  <pubDate>Thu, 30 May 2024 16:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024053001_planetensystem_p5js/images/grandville-un-autre-monde.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Abenteuer P5.js (Teil 5): Octopussy</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024052903_octopussy/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53755303684/"><img src="https://kantel.github.io/posts/2024052903_octopussy/images/octopussyp5js-b.jpg" class="img-fluid"></a></p>
<p>Heute möchte ich die ersten Schritte, die ich in den bisherigen Tutorials zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und dem <a href="https://editor.p5js.org/">P5.js-Webeditor</a> veröffentlicht hatte, mit einer kleinen Fingerübung abrunden, die das bisher behandelte zusammenfasst.</p>
<p>Es geht um <em>Octopussy</em>, einer Freundin von <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hörnchen</a>, die mit ihrem Raumfisch von einer wichtigen Mission den Rückflug zu ihrem Heimatplaneten angetreten hat. Leider ist ihr Raumfisch ein wenig reparaturbedürftig und nur noch schwer zu steuern. Octopussy möchte aber auf keinen Fall die netten Käferpiloten, die ihr immer wieder entgegenkommen, rammen.</p>
<iframe src="octopussy/index.html" width="640" height="400" name="Octopussy">
</iframe>
<p>Deshalb muß ihr die Spielerin oder der Spieler helfen. Mit einem Mausklick wird Octopussys Raumfisch ein wenig angeliftet, während die Gravitationskraft es immer wieder nach unten sinken läßt<sup>1</sup>.</p>
<p>Der »endlos scrollende« Bildhintergrund ist genau wie beim <a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">ballonfliegenden Dachs</a> in einer eigenen Klasse implementiert:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Background {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y) {</span>
<span id="cb1-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">  }</span>
<span id="cb1-8"></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb1-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>bgWidth) {</span>
<span id="cb1-12">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-13">    }</span>
<span id="cb1-14">  }</span>
<span id="cb1-15"></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-18">  }</span>
<span id="cb1-19">}</span></code></pre></div>
<p>Der einzige Unterschied ist, daß dieses Mal zweimal das gleiche Bild aneinandergeklebt wird:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1">  backs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2">  backs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Ähnlich einfach ist die Klasse <code>Beetle</code> geraten, denn der Pilot in seinem Marienkäferraumschiff muß ja nur stur geradeaus von rechts nach links über den Bildschirm fliegen:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Beetle {</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> beetleIm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">  }</span>
<span id="cb3-8"></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>() {</span>
<span id="cb3-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13">  }</span>
<span id="cb3-14"></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb3-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>) {</span>
<span id="cb3-18">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-19">    }</span>
<span id="cb3-20">  }</span>
<span id="cb3-21"></span>
<span id="cb3-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb3-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24">  }</span>
<span id="cb3-25">}</span></code></pre></div>
<p>Kaum mehr Gehirnschmalz verlangt auch die Klasse <code>Octopussy</code>, nur daß sie zusätzlich noch die Eigenschaften <code>gravity</code> und <code>lift</code> besitzt. Deren Werte habe ich durch Experimentieren herausgefunden<sup>2</sup>.</p>
<p>Neu ist die Methode <code>up()</code>. Sie wird aufgerufen, wenn die Spielerin oder der Spieler mit der Maus ins Fenster klicken, und sie hebt einfach den Raumfisch ein wenig an:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Octopussy {</span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb4-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> octoIm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gravity</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lift</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12">  }</span>
<span id="cb4-13"></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">up</span>() {</span>
<span id="cb4-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lift</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16">  }</span>
<span id="cb4-17"></span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb4-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gravity</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check border</span></span>
<span id="cb4-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>) {</span>
<span id="cb4-24">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-25">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-26">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb4-27">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-28">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-29">    }</span>
<span id="cb4-30">  }</span>
<span id="cb4-31"></span>
<span id="cb4-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb4-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-34">  }</span>
<span id="cb4-35">}</span></code></pre></div>
<p>Außerdem achtet die <code>update()</code>-Methode noch darauf, daß Octopussy nicht oben oder unten aus dem Fenster verschwindet. Sie wird an den Bildrändern brutal abgestoppt.</p>
<p>Ich hätte ja gerne geschrieben, daß die Hauptdatei <code>sketch.js</code> wieder von erfrischender Kürze ist, und das ist sie eigentlich auch, oder?</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> bgWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> octopussy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> octoIm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> beetle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> beetleIm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> backs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb5-12">  octoIm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/octopus.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-13">  beetleIm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/beetleship.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14">  bg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/background.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-15">}</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb5-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(windowWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> windowHeight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-19">  backs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-20">  backs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-21">  octopussy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Octopussy</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22">  beetle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Beetle</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23">}</span>
<span id="cb5-24"></span>
<span id="cb5-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb5-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-27">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> back <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> backs) {</span>
<span id="cb5-28">    back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-29">    back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-30">    beetle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-31">    octopussy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-32">    beetle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-33">    octopussy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-34">  }</span>
<span id="cb5-35">}</span>
<span id="cb5-36"></span>
<span id="cb5-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mousePressed</span>() {</span>
<span id="cb5-38">  octopussy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">up</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-39">}</span></code></pre></div>
<p>Es ist eigentlich kein richtiges Spiel, weil es ohne Konsequenzen bleibt, wenn Octopussy den Beetle-Piloten rammt. Ich habe bewußt keine Kollisionserkennung implementiert, weil ich erst erkunden wollte, welche Methoden mir dafür die Bibliothek <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> bereitstellt. Doch wer will, kann sich ja mal selber daran versuchen. Bei der Form der beiden Sprites bietet sich die Kollisionserkennung zwischen zwei Kreisen an, wie ich sie hier auch für P5.js <a href="http://blog.schockwellenreiter.de/2019/11/2019111103.html">schon einmal vorgestellt</a> hatte. Bei einem Radius von etwa 40 Pixeln je Sprite dürfte eine einigermaßen realistisch wirkende Kollisionserkennung zustandekommen.</p>
<p>Wie immer gibt es zum Abschluß eine Übersicht aller bisher in dieser Reihe erschienenen Tutorials, damit Ihr nicht die Datenkrake bemühen müßt:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : <a href="https://kantel.github.io/posts/2024052601_hallo_hoernchen/">Hallo Hörnchen!</a> (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
<li>Abenteuer P5.js (Teil 5): Octopussy (<a href="https://github.com/kantel/p5js/tree/master/octopussy">GitHub</a>)</li>
</ol>
<p>Und <em>last but not least</em> die <strong>Credits</strong>: Das Hintergrundbild ist wieder von <em>RubberDuck</em>, der auch dieses auf <a href="https://opengameart.org/content/background-from-glitch-assets">OpenGameArt hochgeladen</a> und in die Public Domain (<a href="http://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) entlassen hat. Die beiden Akteure wiederum entstammen der Sammlung <a href="https://lostgarden.com/2007/04/07/spacecute-first-round-of-prototypes-and-new-graphics/">SpaceCute</a> von <em>Daniel Cook</em> (<a href="https://lostgarden.com/">Lost Garden</a>). Seine <a href="https://lostgarden.com/2007/03/15/lost-garden-license/">Lizenz</a> (<a href="https://creativecommons.org/licenses/by/3.0/us/">CC BY 3.0</a>) verlangt ausdrücklich die Namensnennung des Urhebers. Dem bin ich hiermit gerne nachgekommen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Wer jetzt fragt »Gravitation« und »unten« im Weltraum? Dem sei gesagt: Das ist <strong>mein</strong> Spiel und hier bestimme ich die Gesetze der Physik.↩︎</p></li>
<li id="fn2"><p>Und das die Schubkraft, die Octopussys Raumfisch anhebt, negativ ist, liegt schlicht und einfach daran, daß die y-Achse auch bei JavaScript von Null (oben) nach <code>height</code> (unten) reicht.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024052903_octopussy/</guid>
  <pubDate>Wed, 29 May 2024 17:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024052903_octopussy/images/octopussyp5js.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Update zum Kulturbunker</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024052902_kulturbunker_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53681015157/"><img src="https://kantel.github.io/posts/2024052902_kulturbunker_update/images/kulturbunkerkleidertausch-b.jpg" class="img-fluid"></a></p>
<p>Auch wenn es immer wieder Hindernisse aus dem Weg zu räumen gibt: Es geht weiter mit den Bemühungen, das Dach des <a href="https://kantel.github.io/posts/2023100601_kulturbunker/">Kulturbunkers in der Neuköllner Rungiusstraße</a> aus seinem Dornröschenschlaf wach zu küssen. Dies war ja bekanntlich eine Herzensangelegenheit von <em>Gabi</em>, und daß diese vorangetrieben wird, ist in erster Linie dem unermüdlichen Einsatz der Mitstreiterinnen und Mitstreiter des Projektträgers, des <a href="https://www.trial-error.org/">Kulturlabors Trial &amp; Error</a>, zu verdanken.</p>
<p><a href="https://www.trial-error.org/projekte-1/kulturbunker/">Was steht also an</a>? Seit letzten Freitag gibt es bis Ende September an jedem Freitag die Möglichkeit an einem kostenfreien <strong>Zirkus- und Kunstkurs</strong> für Roma, Sinti und Nachbarschaftskinder von etwa fünf bis fünfzehn Jahren und ihre Familien teilzunehmen. Zusammen mit erfahrenen Zirkuspädagogen und Trainern dürft ihr von 15:30 bis 17:30h beim Mit-Mach Zirkus folgendes ausprobieren: Jonglage, Balance, Akrobatik, Musik, Schauspielen, Clownerie und Upcycling Handwerk.</p>
<p>Am Sonnabend, den 1. Juni 2024 von 13:00 Uhr bis 19:00 Uhr organisiert der <strong>senegalesische Nachbarschaftstreff</strong> einen Nachmittag mit Diskussionen, Musik und großem Büffet. Es ist offen für alle und Ihr seid alle eingeladen.</p>
<p>In der Woche darauf, am 8. Juni 2024, findet erstmalig das neue Format <strong>Kultur auf dem Dach!</strong> statt. Es ist ein Freiluftkino geworden, mit Poetry und Musik. Leider habe ich noch nicht die genaue Uhrzeit, ich werde sie aber rechtzeitig auf diesen Seiten veröffentlichen.</p>
<p>Und natürlich findet auch weiterhin an jedem Donnerstag von 15:00&nbsp;Uhr bis 19:00&nbsp;Uhr das <strong>partizipative Nachbarschaftskaffee</strong> statt, wie immer mir Kaffee, Tee, Schorlen und frischen Waffeln. Und es gibt einen Kleidertausch, ab 18:00 Uhr Foodsharing Goodies und natürlich viele tolle Outdoorspiele für Kinder. Daneben finden auch immer wieder spontane Aktivitäten mit Basteln, Nähen, Gärtnern oder Mosaike legen statt. Außerdem könnt Ihr dort an fast jedem Donnerstag Euren Neuköllner Lieblingsblogger treffen.</p>
<p>Morgen ist der nächste Donnerstag. Kommt also vorbei und seid dabei, wenn der Kulturbunker aus seinem Dornröschenschlaf wachgeküsst wird. Der Kulturbunker ist in der Rungiusstraße&nbsp;19 in 12347&nbsp;Berlin-Neukölln.</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Kiezfest</category>
  <category>Kulturbunker</category>
  <guid>https://kantel.github.io/posts/2024052902_kulturbunker_update/</guid>
  <pubDate>Wed, 29 May 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024052902_kulturbunker_update/images/kulturbunkerkleidertausch.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>JupyterLab (Desktop) 4.2 und Jupyter Notebook 7.2 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024052901_jupyterlab_4_2_1/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53753950307/"><img src="https://kantel.github.io/posts/2024052901_jupyterlab_4_2_1/images/jupyterlab_4_2_1-b.jpg" class="img-fluid"></a></p>
<p>Die Programmierer der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a>-Distributionen haben von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> (und damit auch von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JuypterLab Desktop</a>) die <a href="https://github.com/jupyterlab/jupyterlab/releases/tag/v4.2.1">Version 4.2.1</a> freigegeben. Parallel dazu wurde von <a href="https://github.com/jupyter/notebook">Jupyter Notebook</a> die <a href="https://github.com/jupyter/notebook/releases/tag/v7.2.0">Version 7.2.0</a> veröffentlicht.</p>
<p>Die Updates besitzen nur wenige neue Features, die in der Hauptsache die Nutzererfahrung betreffen, dafür aber etliche Fehlerbehebungen und Verbesserungen. Einen Überblick gibt es <a href="https://blog.jupyter.org/jupyterlab-4-2-and-notebook-7-2-are-available-b5e6b3c753de">in diesem Beitrag</a>. Bemerkenswert für mich war, daß auch JupyterLab (Desktop) nun ein dunkles <em>High Contrast Theme</em> besitzt, ein Feature, das ich aktuell bei meiner Beschäftigung mit dem <a href="https://editor.p5js.org/">P5.js-Webeditor</a> zu schätzen gelernt habe.</p>
<p>Nattürlich erinnert mich das Update auch wieder daran, daß ich schon lange wieder mehr mit JupyterLab (Desktop) anstellen wollte. Und das nicht nur – aber auch – im Zusammenhang mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> (vergleiche zum Beispiel <a href="https://kantel.github.io/posts/2024040102_py5_v010_1a1/">hier</a>). Irgendwann und irgendwie muß ich mit wohl dafür auch noch ein paar Stunden freischaufeln. <em>So viel zu spielen, so wenig Zeit!</em></p>



 ]]></description>
  <category>Jupyter</category>
  <category>JupyterLab Desktop</category>
  <category>Python</category>
  <guid>https://kantel.github.io/posts/2024052901_jupyterlab_4_2_1/</guid>
  <pubDate>Wed, 29 May 2024 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024052901_jupyterlab_4_2_1/images/jupyterlab_4_2_1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Abenteuer P5.js (Teil 4): Hallo Hörnchen!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024052601_hallo_hoernchen/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53747993248/"><img src="https://kantel.github.io/posts/2024052601_hallo_hoernchen/images/hoernchen2-b.jpg" class="img-fluid"></a></p>
<p>Im vierten Teil meiner kleinen Tutorialreihe zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> möchte ich die grundlegende Struktur eines P5.js-Sketches vorstellen und darauf eingehen, was ihn von »einfachen« JavaScript-Anwendungen unterscheidet.</p>
<p>Was zuerst ins Auge fällt, wenn man den <a href="https://editor.p5js.org/">P5.js-Webeditor</a> aufruft, sind die beiden schon voreingestellten Funktionen <code>setup()</code> und <code>draw()</code>. Wer schon einmal irgendetwas mit JavaScript angestellt hatte, der erwartet, daß diese beiden Funktionen irgendwo im Sketch aufgerufen werden müssen. Dem ist aber nicht so, <code>setup()</code> und <code>draw()</code> werden von der P5.js-Bibliothek verdeckt (oder sollte ich schreiben »versteckt«?) im Hintergrund »automatisch« aufgerufen. Dabei hat es mit diesen beiden »besonderen« Funktionen folgende Bewandtnis:</p>
<p><code>setup()</code> wird exakt einmal zu Beginn des Sketches aufgerufen. Hier gehören daher alle Initialisierungen hinein, mit denen das Programm gestartet werden soll. Es wird also zum Beispiel die Größe des Canvasses festgelegt, hier werden Variablen und Objekte initialisiert und so weiter …</p>
<p><code>draw()</code> hingegen ist die Funktion, die in einer Endlosschleife läuft. Dabei versucht sie – wenn der Entwickler nichts anderes festgelegt hat – per Default so schnell wie möglich, aber nicht schneller als sechzig Mal in der Sekunde, durchzulaufen. In der Regel – und wenn man nicht sehr viele rechenintensive Operationen in die <code>draw()</code>-Schleife gepackt hat – sind moderne Computer damit nicht ausgelastet und idlen fröhlich vor sich hin und warten auf die Interaktion der Benutzerin oder des Benutzers (zum Beispiel auf Tastatureingaben oder Mausklicks).</p>
<p>Hat man eine Anwendung, die sowieso nur linear einmal von vorne nach hinten ausgeführt werden soll (zum Beispiel das Zeichnen eines Fraktals), dann kann man entweder alle Befehle in die <code>setup()</code>-Funktion packen, oder mit Hilfe des Befehls <code>noLoop()</code> bestimmen, daß auch die <code>draw()</code>-Schleife nur einmal durchlaufen wird<sup>1</sup>.</p>
<p>Aufmerksamen Leserinnen und Lesern ist sicher nicht entgangen, daß viele meiner Sketche auch noch eine <code>preload()</code>-Funktion besitzen und sich gefragt, was es damit auf sich hat. Nun, JavaScript ist aus guten Gründen eine asynchrone Sprache. Das heißt, Befehle, die zum Beispiel Dateien laden, halten das Skript nicht auf, bis die Datei geladen ist. Sondern JavaScript macht einfach fröhlich weiter und kümmert sich nicht darum, ob das Laden geklappt hat oder nicht. Grund dafür ist, daß JavaScript den Browser nicht anhalten will, nur weil es irgendeine Datei vom Rande der Welt nicht laden kann. Dafür, daß die Nutzung der Datei durch das Skript erst passiert, wenn sie vollständig geladen wurde, ist die Entwickerin oder der Entwickler zuständig. JavaScript bietet hierfür eine Reihe von Funktionen, wie zum Beispiel den <code>callback</code>-Mechanismus. All diesen Mechanismen ist gemein, daß sie von der Entwicklerin oder dem Entwickler ein wenig Gehirnschmalz abverlangen. P5.js möchte es uns aber so einfach wie moglich machen. Daher stellt es zusätzlich die <code>preload()</code>-Funktion zur Verfügung. Sie ist ausschließlich dafür da, Dateien zu laden, die das Skript benötigt und hält den weiteren Ablauf des Sketches an, bis alle Dateien vollständig geladen sind. Erst danach wird von P5.js <code>setup()</code> aufgerufen.</p>
<p>Um diesen Mechanismus zu demonstrieren, habe ich folgenden, kleinen Sketch geschrieben:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb1-4">  horngirl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/horngirl.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">}</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageMode</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// horngirl = loadImage("data/horngirl.png");</span></span>
<span id="cb1-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noLoop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">}</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">92</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">132</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-17">}</span></code></pre></div>
<p>Er macht nichts anderes, als ein (recht kleines – 37 KB) Bildchen zu laden und dieses in der Mitte des Canvasses anzuzeigen. Dabei wird mit <code>noLoop()</code> auch die <code>draw()</code>-Schleife nur genau einmal aufgerufen und durchlaufen. So wie es oben steht, findet die Durchführung wie gewünscht statt: Das »Hörnchen« wird geladen und angezeigt. Löscht man allerdings die Funktion <code>preload()</code> und lädt das Bild über die auskommentierte Zeile in <code>setup()</code>, dann sieht der Nutzer in der Regel nur einen blauen Hintergrund und kein Hörnchen mehr.</p>
<p>Denn die <code>draw()</code>-Funktion ist meistens schon fertig durchgelaufen, bevor das Bild geladen ist. Und JavaScript sagt einfach: Was ich nicht habe, kann ich auch nicht anzeigen. Und so muß der Nutzer ohne Hörnchen auskommen<sup>2</sup>.</p>
<p>Wenn keine Assets geladen werden müssen, kann <code>prelaod()</code> natürlich entfallen.</p>
<p>P5.js hat noch weitere Funktionen, die »automatisch« ausgeführt werden, und zwar alle die, die auf Ereignisse lauschen, die von der Nutzerin oder dem Nutzer ausgelöst werden. In der Regel sind das Tastatur- oder Mausabfragen. Auch dies habe ich in einem kleinen Sketch demonstriert. Dieses Mal wird das kleine Hörnchen mit Hilfe der Pfeiltasten über den Bildschirm bewegt.</p>
<iframe src="horngirl02/index.html" width="720" height="400" name="Hallo Hörnchen">
</iframe>
<p>Da ich es nicht nur mag, daß Applikationen sauber gegliedert sind, sondern – wie ich oben schon einmal erwähnte – auch mit einer schönen Struktur daherkommen, habe ich dem Hörnchen erst einmal eine eigene Klasse spendiert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Horngirl {</span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y) {</span>
<span id="cb2-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createVector</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createVector</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">  }</span>
<span id="cb2-10"></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb2-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check borders</span></span>
<span id="cb2-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-15">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">    }</span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-19">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-20">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-21">    }</span>
<span id="cb2-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-23">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-24">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-25">    }</span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-27">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-28">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-29">    }</span>
<span id="cb2-30">  }</span>
<span id="cb2-31"></span>
<span id="cb2-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb2-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">im</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-34">  }</span>
<span id="cb2-35">}</span></code></pre></div>
<p>Der Konstruktor macht das, was sein Name sagt: Er initialisiert die Werte für die Klasse. Das einzig Besondere dabei ist, daß Position und Bewegung als Vektoren erzeugt werden.</p>
<p>In der <code>update()</code>-Methode wird der Bewegungsvektor auf den Positionsvektor addiert und dann die Randbedinungen überprüft. Will die Nutzerin oder der Nutzer Hörnchen über den Bildschirmrand hinausschicken, wird der Bewegungsvektor auf Null gesetzt und Hörnchen verharrt trotzig auf seiner letzten Position.</p>
<p>Die einzeilige <code>display()</code>-Methode zeichnet einfach nur den Sprite an seiner aktuellen Position.</p>
<p>In Hauptsketch <code>sketch.js</code> habe ich vieles von dem oben gesagten hineingepackt und demonstriert. Er besteht ausschließlich aus Funktionen, die von P5.js »automatisch« ausgeführt werden. Neben <code>preload()</code>, <code>setup()</code> und <code>draw()</code> sind das <code>keyPressed()</code> und <code>keyReleased()</code>, die darauf reagieren, ob die Anwenderin oder der Anwender eine Taste gerdückt oder losgelassen hat:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb3-4">  horngirl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/horngirl.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">}</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imageMode</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">  horngirl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Horngirl</span>(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">}</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">92</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">132</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">168</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-15">  horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-16">  horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17">}</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyPressed</span>() {</span>
<span id="cb3-20">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> UP_ARROW) {</span>
<span id="cb3-21">    horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> DOWN_ARROW) {</span>
<span id="cb3-23">    horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> LEFT_ARROW) {</span>
<span id="cb3-25">    horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-26">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> RIGHT_ARROW) {</span>
<span id="cb3-27">    horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-28">  }</span>
<span id="cb3-29">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-30">}</span>
<span id="cb3-31"></span>
<span id="cb3-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyReleased</span>() {</span>
<span id="cb3-33">  horngirl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-34">}</span></code></pre></div>
<p>Da viele Browser recht gierig auf Tasteneingaben reagieren, ist es sinnvoll, <code>keyPressed()</code> – nachdem man die gewünschten Tastenbefehle konsumiert hat – mit einem <code>return false</code> abzuschließen. Damit sollen diese Befehle nicht mehr an die Browser durchgereicht werden. Eine Garantie gibt es natürlich nicht, aber die Browser der großen Hesteller verhalten sich in der Regel kooperativ. Aber wer kann, sollte es mit möglichst vielen Browsern testen.</p>
<p>Das ist das vierte Tutorial meiner Reihe zu P5.js und dem Webeditor. Bisher erschienen sind:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024051901_bouncing_faces/">Bouncing Faces</a>: Drei Wege, mit P5.js zu spielen (<a href="https://github.com/kantel/p5js/tree/master/bouncingfaces2">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052301_balloons_in_wonderland/">Luftballons im Wunderland</a>: Erstes Abenteuer mit P5.js (<a href="https://github.com/kantel/p5js/tree/master/balloons">GitHub</a>)</li>
<li><a href="https://kantel.github.io/posts/2024052501_dachs_im_eis_p5js/">Der fliegende Dachs im Wunderland</a>: Das Abenteuer P5.js geht weiter (<a href="https://github.com/kantel/p5js/tree/master/flyingbadger">GitHub</a>)</li>
<li>Abenteuer P5.js : Hallo Hörnchen! (<a href="https://github.com/kantel/p5js/tree/master/hoernchen">GitHub</a>)</li>
</ol>
<p>Zum Schluß noch die <em>Credits</em> an den Schöpfer des Hörnchens. Ich habe es von <em>Daniel Cook</em> (<a href="https://lostgarden.com/">Lost Garden</a>) aus seiner <a href="https://lostgarden.com/2007/05/27/cutegod-a-prototyping-challenge/">PlanetCute Sammlung</a> entnommen, der es dort unter der <a href="https://creativecommons.org/licenses/by/3.0/us/">CC BY 3.0</a> veröffentlicht hat. Die Lizenz verlangt ausdrücklich die Nennung des Urhebers. Dem bin ich hiermit nachgekommen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich bevorzuge in der Regel diese zweite Alternative: In <code>setup()</code> kommen tatsächlich nur die Initialisierungen und in <code>draw()</code> werden alle Befehle zur Berechnung und Darstellung des gewünschten ausgeführt. Ich mag es halt, wenn eine Applikation sauber gegliedert und strukturiert ist – aber das ist in den meisten Fällen nur eine Frage des persönlichen Geschmacks. Alles in <code>setup()</code> zu packen, ist auch nicht falsch.↩︎</p></li>
<li id="fn2"><p>Da JavaScript – aus Sicht der Entwickler einer asynchronen Programmierumgebung zu Recht – davon ausgeht, daß die Entwicklerin oder der Entwickler dafür zu sorgen hat, ob auch alles geladen ist, was man nutzen möchte, gibt es auch keine Fehlermeldung.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024052601_hallo_hoernchen/</guid>
  <pubDate>Sun, 26 May 2024 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024052601_hallo_hoernchen/images/hoernchen2.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
