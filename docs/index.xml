<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Wed, 10 Jul 2024 14:40:00 GMT</lastBuildDate>
<item>
  <title>Aus der Nachbarschaft: Kids-Kultur auf dem Dach</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024071001_kidskultur_dach/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53848140344/"><img src="https://kantel.github.io/posts/2024071001_kidskultur_dach/images/kidskulturbunker-b.jpg" class="img-fluid"></a></p>
<p>Save the Date! Auch an diesem <strong>Sonntag, den 14. Juli 2014 von 14:00 Uhr bis 18:00 Uhr</strong> gibt es wieder auf dem <a href="https://kantel.github.io/posts/2023100601_kulturbunker/">Dach des Kulturbunkers in der Neuköllner Rungiusstraße 19</a> im Rahmen der Reihe »<a href="https://www.trial-error.org/projekte-1/kulturbunker/">Kultur auf dem Dach</a>« eine Veranstaltung unter freiem Himmel. Sie heißt dieses Mal »<strong>Kids-Kultur auf dem Dach</strong>« und der Name ist Programm:</p>
<p>Denn an diesem Sonntag sollen Kinder das Dach des Kulturbunkers mit Spielen, Spaß und Puppentheater erobern. Um 14:30 Uhr gibt es ein Puppentheater vom <em>Figuren Kombinat</em> (bitte pünktliches Erscheinen) und danach von 15:00 Uhr bis 18:00 Uhr sind Schminken, Seifenblasen und Mitmachzirkus angesagt. Und während des ganzen Nachmittags wird für Snacks, Getränke und Spaß gesorgt.</p>
<p>Dieser 14. Juli ist nicht nur der 235. Jahrestag der Französischen Revolution, sondern er wäre auch der 35. Hochzeitstag von <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Gabi</a> und mir gewesen. Und Gabi lag das Kulturbunkerdach ja immer am Herzen. Darum kommt alle, bringt Eure Kinder und Enkel, Eure Omas und Opas, Eure Mamas und Papas und alle Nachbarinnen und Nachbarn mit und beweist, daß der Kulturbunker lebt! Gabi hätte sich darüber gefreut.</p>
<p><strong>Caveat</strong>: Ich bin vom <a href="https://qm-glasower-strasse.de/">Quartiersmanagement Glasower Straße</a> zum (ehrenamtlichen) Paten des Projekts »<a href="https://qm-glasower-strasse.de/kultur-auf-dem-dach-mit-kino-zirkus-musik-und-kreativangeboten/">Nachbarschaftliches Miteinander auf dem Kulturbunker</a>« bestellt worden und daher immer ein wenig Partei. Aber das bin ich gerne.&nbsp;🤓</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53848140344/">Kinderfest auf dem Bunkerdach</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/">DreamStudio</a> nach einem <a href="https://www.flickr.com/photos/schockwellenreiter/7294212942/">Referenzphoto</a> von mir. Prompt: »<em>Puppet theatre, children’s circus, colourful soap bubbles, in the sunshine</em>«. Modell: Stable Diffusion XL, Style: Comic Book, Image Strength: 30%.</p>



 ]]></description>
  <category>Kiezfest</category>
  <category>Kulturbunker</category>
  <category>Neukölln</category>
  <guid>https://kantel.github.io/posts/2024071001_kidskultur_dach/</guid>
  <pubDate>Wed, 10 Jul 2024 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024071001_kidskultur_dach/images/kidskulturbunker.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Versionen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070802_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53605744526/"><img src="https://kantel.github.io/posts/2024070802_firefox_update/images/firefoxcreek-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/128.0/releasenotes/">Version 128.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/115.13.0/releasenotes/">Version ESR 115.13</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. Wie (fast) immer sind auch in diese Updates viele Veränderungen geflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53605744526/">Ein Feuerfuchs kommt selten allein</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A fire fox in an enchanted garden in the spring sunshine. He is watched by naked nymphs bathing in a stream</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024070802_firefox_update/</guid>
  <pubDate>Mon, 08 Jul 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070802_firefox_update/images/firefoxcreek.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mini-Fantasy: »Freie« Tiles und Spritesets im 8x8-Raster</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070801_minifantasy/</link>
  <description><![CDATA[ 




<p><a href="https://img.itch.zone/aW1nLzkzODI5MjEucG5n/original/tqk97I.png"><img src="https://kantel.github.io/posts/2024070801_minifantasy/images/minifantasydungeon-b.jpg" class="img-fluid"></a></p>
<p>Für meine anstehenden <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>- (und eventuell <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.play</a><sup>1</sup>-) Tutorials, in denen ich einen Prototypen eines Retro-Topdown-RPG-Spiels entwickeln möchte, hatte ich nach brauchbaren Tiles und Sprites gesucht. Erste Wahl für diese Art von Spielen ist ja eigentlich immer das freie (<a href="https://creativecommons.org/licenses/by/4.0/https://creativecommons.org/licenses/by/4.0/">CC-BY 4.0</a>) Tileset <a href="https://opengameart.org/content/dawnlike-16x16-universal-rogue-like-tileset-v181">DawnLike</a> des Users <em>DragenDePlatino</em>. Jedoch sind diese für ein 16x16&nbsp;Pixel großes Raster ausgelegt, da ich die Prototypen aber vollständig in diese Seiten einbetten wollte, habe ich nach 8x8&nbsp;Pixel großen Bildchen gesucht, da kann das Spielefenster (der <em>Canvas</em>) kleiner ausfallen.</p>
<p>Tiles und Sprites in dieser Größe sind rar, daher war ich froh, als mir die Reihe »<a href="https://krishna-palacio.itch.io/">Minifantasy</a>« des Users <em>Krishna Palacio</em> auf Itch.io unterkam. Es ist eine ständig wachsende Sammlung phantastischer Asset-Packs für das 8x8-Raster. Die meisten sind zwar preiswert, aber kommerziell. Jedoch gibt es drei Asset-Packs, die man kostenlos herunterladen kann. Es sind dies:</p>
<ul>
<li><a href="https://krishna-palacio.itch.io/minifantasy-dungeon">Minifantasy⛓️Dungeon</a></li>
<li><a href="https://krishna-palacio.itch.io/minifantasy-creatures">Minifantasy🧌Creatures</a></li>
<li><a href="https://krishna-palacio.itch.io/minifantasy-forgotten-plains">Minifantasy🌳Forgotten Plains</a></li>
</ul>
<p>Mit diesen drei Paketen zusammen kann man schon einen kompletten Prototypen entwerfen: <em>Dugeon</em> ist für die Unterwelt (und den Spieler und einen Gegner), <em>Creatures</em> stellt weitere (animiert) Gegenspieler zur Verfügung, und mit <em>Forgotten Plains</em> kann man eine komplette Oberwelt entwerfen.</p>
<p>Einen Nachteil besitzen die Packs allerdings: Sie sind zwar kostenlos herunterzuladen, aber nicht frei (bestenfalls frei wie Freibier). Die Lizenz erlaubt lediglich eine Nutzung für nichtkommerzielle Spiele, wer mit seinen Spielen Geld verdienen will, muß eine kommerzielle Lizenz erwerben.</p>
<p>Für meine geplanten Tutorials reicht diese Lizenz (ich will und werde damit schließlich kein Geld verdienen), aber wer das nicht möchte, muß weiter nach wirklich freien Bildern suchen. Meine erste Anlaufstelle <a href="https://kenney.nl/">Kenney.nl</a> beherbergt bisher nur zwei Asset-Packs in diesem winzigen Format: <a href="https://kenney.nl/assets/pico-8-city">Pico-8 City</a> und <a href="https://kenney.nl/assets/micro-roguelike">Micro Roguelike</a>. Dafür sind beide – wie alles von Kenney – komplett frei. Sie sind <em>Public Domain</em> (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) – freier geht nicht! Wer angesichts dieser mageren Auswahl dann aber doch lieber auf 16x16&nbsp;Pixel zurückgreifen möchte, denn hier ist die Auswahl freier Sprites und Tilesets riesig. Ich empfehle (neben den oben schon erwähnten Dawnlike) natürlich wieder Kenney: Neben der <a href="https://kenney.nl/assets/series:Tiny">Tiny-Serie</a> gibt es noch ein paar <a href="https://kenney.nl/assets/size:16">weitere Asset Packs in dem Format</a>.</p>
<p>Eine <a href="https://opengameart.org/art-search-advanced?field_art_tags_tid=16x16">Suche auf OpenGameArt.org</a> bringt aktuell 628 Ergebnisser. So viele kann ja niemand besprechen, da müßt Ihr schon selber auswählen und ausprobieren.</p>
<p>Und <em>last but not least</em> bringt der Tag <a href="https://kantel.github.io/index.html#category=Tiles%20und%20Sprites">Tiles und Sprites</a> im (neuen) <em>Schockwellenreiter</em> ebenfalls noch ein paar Schätze hervor. Aber nach denen müßt Ihr schon selber buddeln. <em>Happy digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>An P5.play stört mich momentan allerdings, daß die Engine, wenn man sie zum Beispiel in diese Seiten einbindet, schon beim Start der Seite einen seitenfüllenden Start-Screen produziert (vergleiche zum Beispiel <a href="https://kantel.github.io/posts/2023060201_retro_platformer_4/">hier</a>). Nicht, daß ich den Machern ein wenig Reklame nicht gönne, aber das ist mir doch zu fett (innerhalbs des Spielefensters beim <em>Start des Spiels</em> fände ich hingegen okay). Daher noch einmal die Frage an Euch alle da draußen: Weiß eine oder einer, wie man der Engine diese Unart abgewöhnt? Vorher werde ich P5.play nämlich nicht mehr anfassen!↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Tiles und Sprites</category>
  <category>Game Design</category>
  <category>Spieleprogrammierung</category>
  <category>Retrogaming</category>
  <category>P5.js</category>
  <category>P5.play</category>
  <guid>https://kantel.github.io/posts/2024070801_minifantasy/</guid>
  <pubDate>Mon, 08 Jul 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070801_minifantasy/images/minifantasydungeon.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues aus der Werkzeugkiste - da will jemand Visual Studio Code beerben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070701_litexl/</link>
  <description><![CDATA[ 




<p><a href="https://lite-xl.com/assets/img/editor2.png"><img src="https://kantel.github.io/posts/2024070701_litexl/images/litexl-b.jpg" class="img-fluid"></a></p>
<p><a href="https://lite-xl.com/de/">LiteXL</a> (eine erweiterte, aber dennoch kompatible Fork von <a href="https://medium.com/swlh/i-switched-to-lite-after-using-vscode-for-3-years-16f2fffa6143">Lite</a>) ist ein kleiner, schneller, freier (MIT-Lizenz) und plattformübergreifender (macOS, Windows, Linux) Texteditor, der angetreten ist <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> das Fürchten zu lernen. Die <a href="https://levelup.gitconnected.com/vscodes-true-competitor-is-coming-litexl-22275759812e">Argumente</a>, die das Teil dafür in die Waagschale wirft, sind schon überzeugend:</p>
<ul>
<li><p><strong>Visual Studio Code</strong> ist eine <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/electron.html">Electron</a>-App (im Prinzip also so etwas wie eine Browser-Anwendung auf dem Desktop). Daher belegt das Teil mehr als 550 MB Hauptspeicher und mehr als 500 MB Plattenplatz. Es frisst bis zu 70 Prozent der CPU-Leistung (und mehr – das hat <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> auf meinem alten MacBook Pro den Rest gegeben) und braucht sechs Sekunden bis zum Start. (Diese Werte gelten im Prinzip auch für die VSCode-Alternative <a href="https://vscodium.com/">VSCodium</a>.)</p></li>
<li><p>Dagegen ist <strong>LiteXL</strong> eine in C geschriebene, <em>native</em> Anwendung, die das schlanke <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> als eingebaute Skriptsprache nutzt, und die gerade einmal 35 MB Hauptspeicher und minimale 5,6 MB Festplattenplatz belegt. Die CPU-Auslastung soll niemals 20 Prozent übersteigen und der Editor soll nach unter einer halben Sekunde Startzeit einsatzbereit sein.</p></li>
</ul>
<p>LiteXL ist noch jung, daher ist das Ökosystem des Editors bei weitem noch nicht so umfangreich (aber auch noch nicht so überfrachtet) wie das von Visual Studio Code. Aber es wird aktuell noch ständig weiter aufgebohrt und es gibt 90 <em>Contributors</em>, die an der Verbesserung und Erweiterung arbeiten. Daher überzeugen mich erst einmal die Argumente oben und so werde ich das Teil auf meine Testliste setzen. Den <a href="https://github.com/lite-xl/lite-xl">Quellcode</a> gibt es auf GitHub und Ihr könnt die Software <a href="https://lite-xl.com/de/downloads">hier herunterladen</a>. Auf jeden Fall scheint mir LiteXL eine Bereicherung auf dem ohnehin nicht so üppigen Sektor der freien Texteditoren zu sein.</p>



 ]]></description>
  <category>Texteditor</category>
  <category>LiteXL</category>
  <guid>https://kantel.github.io/posts/2024070701_litexl/</guid>
  <pubDate>Sun, 07 Jul 2024 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070701_litexl/images/litexl.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues von meinem Rechnerumzug: MkDocs reloaded</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070602_mkdocs_reloaded/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53835364968/"><img src="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/images/mkdocsreloaded-b.jpg" class="img-fluid"></a></p>
<p>Wenn man – wie ich – bei der <a href="https://kantel.github.io/posts/2024062301_mac_mini/">Einrichtung eines neuen Rechners</a> sich entschlossen hat, <a href="https://kantel.github.io/posts/2024062401_neustart_updates/">jedes Stück Software einzeln neu zu installieren</a>, um das über die Jahre gewachsene Chaos auf der Festplatte ein wenig aufzuräumen, dann stößt man zwangsläufig auf Programme, bei denen man sich fragt, warum man sie vergessen und lange nicht genutzt hat. So ist es mir mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/mkdocs.html">MkDocs</a> ergangen.</p>
<p><strong>MkDocs</strong> ist ein schneller, in Python geschriebener und freier (BSD-Lizenz), Markdown-basierter Generator für statische Seiten, der vor allem für die <a href="https://realpython.com/python-project-documentation-with-mkdocs/">Dokumentation von Software-Projekten</a> entwickelt und von all denen geliebt wurde, für die <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/sphinx.html">Sphinx</a> ein Overkill war. Ich hatte seinerzeit viel mit dem Teil gearbeitet und dies unter anderem auch auf diesen Seiten im <em>Schockwellenreiter</em> dokumentiert:</p>
<ul>
<li>MkDocs: <a href="http://blog.schockwellenreiter.de/2016/12/2016120601.html">Dokumentationen mit Markdown</a>, 6. Dezember 2016</li>
<li><a href="http://blog.schockwellenreiter.de/2016/12/2016121601.html">Nevernote</a>, 16. Dezember 2016</li>
<li>Worknote: <a href="http://blog.schockwellenreiter.de/2017/01/2017011304.html">MkDocs und die Admonition Extension</a>, 13. Januar 2017</li>
<li>Worknote: <a href="http://blog.schockwellenreiter.de/2017/01/2017011905.html">MkDocs und MathJax</a>, 19. Januar 2017</li>
<li>Worknote: <a href="http://blog.schockwellenreiter.de/2022/06/2022061601.html">Software-Dokumentation mit Markdown</a>, 16. Juni 2022</li>
<li><a href="http://blog.schockwellenreiter.de/2022/10/2022101301.html">Statische (Dokumentations-) Seiten mit MkDocs und Markdown</a>. 13. Oktober 2022</li>
</ul>
<p>Sichtbares Ergebnis dieser Bemühungen sind meine Seiten »<a href="http://py.kantel-chaos-team.de.s3-website-us-east-1.amazonaws.com/">Processing.py in Beispielen</a>«, eine Sammlung meiner <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a>-Tutorial, die ich von 2015 bis 2018 geschrieben und hochgeladen hatte. Danach hatte ich – etwa 2022 – noch die Idee, etwas ähnliches für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> zu realisieren, bin aber über einen frühen Prototypen (sie <a href="https://www.flickr.com/photos/schockwellenreiter/53835364968/">Screenshot</a> im Bannerbild oben) nicht hinausgekommen.</p>
<p>Als ich nun bei der (Neu-) Einrichtung meines Rechners wieder über MkDocs stolperte, war mir erst einmal ein wenig wehmütig zumute. Doch dann dachte ich: Warum nicht ein <em>Reload</em> versuchen? Mein wiedererwachtes Interess an P5.js hat ja schon zu einer Reihe von neuen Tutorials im <em>Schockwellenreiter</em> geführt, so daß ein »P5.js in Beispielen« Sinn machen würde. Also habe ich mir erst einmal mit Conda eine virtuelle Umgebung für MkDocs geschaffen und die Software darin installiert und dann damit unverändert meine alten P5.js-Seiten herausrendern lassen. Ich erhielt zwar viele Warnungen (in der Hauptsache wegen veralteter Aufrufe, die durch neue Funktionen ersetzt wurden), aber es funktionierte und die Seiten wurden anstandslos herausgeschrieben.</p>
<p>Dadurch angefixt habe ich einen ganzen Abend an den Seiten gebastelt, bis keine Warnungen mehr im Terminal angezeigt wurden. Und dann war mein Entschluß gefasst: Es wird einen Neuanfang für (m)ein »P5.js in Beispielen« geben. Ich bin mir nur noch nicht sicher, ob ich diese Seiten dann auf <a href="http://cognitiones.kantel-chaos-team.de/webworking/webservices/githubpages.html">GitHub Pages</a> oder auf <a href="https://about.readthedocs.com/">Read the Docs</a> veröffentliche soll. Es gibt beim letztgenannten einen <a href="https://about.readthedocs.com/pricing/#/community">Community Plan</a>, auf dem man – wenn man »ethisch korrekte« und nicht störende Anzeigen zuläßt (es ist <em>eine</em> kleine Anzeige pro Seite) – seine Projekte kostenlos veröffentlichen kann. Und <em>Read the Docs</em> <a href="https://docs.readthedocs.io/en/stable/intro/getting-started-with-mkdocs.html">unterstützt MkDocs</a> <em>out of the Box</em>.</p>
<p>Und – wie fast immer – hat mich bei meinen Überlegungen gleich der Größenwahn gepackt: Was ist mit »Py5 in Beispielen« oder »Pygame in Beispielen«. Aber angefangene Projekte tummeln sich ja schon zu Hauf auf meinen Festplatten. Daher wäre ich froh, wenn ich zumindest erst einmal das »P5.js in Beispielen« zum Abschluß bringen würde.</p>
<p>Ein weiteres Problem scheint mittlerweile auch gelöst: Hatte ich <a href="http://blog.schockwellenreiter.de/2017/01/2017011905.html">hier noch beklagt</a>, daß MkDocs <a href="http://cognitiones.kantel-chaos-team.de/mathematik/mathjax.html">MathJax</a> nur via eines CDN einbinden kann, verspricht der Beitrag »<a href="https://docs.mathjax.org/en/v3.2-latest/web/hosting.html">Hosting Your Own Copy of MathJax</a>«, daß eine selbstgehostete Lösung möglich sei.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53835177836/"><img src="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/images/nevernotereloaded.jpg" class="img-fluid"></a></p>
<p>Ein weiters altes (MkDocs-) Projekt habe ich aber dennoch testweise – wenn auch vielleicht nur kurzfristig – wiederbelebt: Während meiner damaligen Flucht aus den Datensilos hatte ich mit <a href="http://blog.schockwellenreiter.de/2016/12/2016121601.html">Nevernote</a> meine eigene, private Version von Evernote mit MkDocs realisiert. Es war so etwas wie der Vorgänger meines zweiten Gehirns. Doch von <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a> trudeln momentan <a href="https://kantel.github.io/posts/2024050402_logseq_oder_zettlr/">beunruhigende Nachrichten</a> bei mir ein, die mich über einen Wechsel der Software für mein zweites Gehirn nachdenken lassen (bisher dachte ich an <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/zettlr.html">Zettlr</a> oder <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/obsidian.html">Obsidian</a>). Als chronischer Bastler aber frage ich mich nun: Warum nicht (weiter) an etwas eigenem, selbstgeschraubtem bauen? Einen <a href="https://kantel.github.io/posts/2024050701_digital_garden/">digitalen Garten</a> kann ich unter Umständen auch mit MkDocs realisieren – wenn ich die <a href="https://stackoverflow.com/questions/48173267/mkdocs-how-to-enable-hyperlinks-based-on-keywords-found-in-the-content">Sache mit den Wikilinks</a> in den Griff bekomme. Doch dafür soll es in den neueren Releases von MkDocs zumindest Ansätze von Lösungen geben. <em>Still digging!</em></p>



 ]]></description>
  <category>Interna</category>
  <category>Webworking</category>
  <category>Statische Seite</category>
  <category>MkDocs</category>
  <category>Markdown</category>
  <guid>https://kantel.github.io/posts/2024070602_mkdocs_reloaded/</guid>
  <pubDate>Sat, 06 Jul 2024 16:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/images/mkdocsreloaded.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Neukölln’de futbol coşkusu</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070601_futbol/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53839310820/"><img src="https://kantel.github.io/posts/2024070601_futbol/images/poserneukoelln-b.jpg" class="img-fluid"></a></p>
<p>Seit den frühen Nachmittagsstunden fahren PS-starke Cabrios, SUVs und andere Boliden mit sehr jugendlichen Fahrern am Steuer, vermutlich Leihwagen, geschmückt mit türkischen Fahnen und Wimpeln, die Neuköllner Hermannstraße und den angrenzenden Britzer Damm unter Mißachtung sämtlicher Verkehrsregeln auf und ab. Das läßt für den heutigen Abend <a href="https://www.berliner-zeitung.de/mensch-metropole/neukoelln-wedding-steglitz-immer-mehr-raser-gefaehrden-berlins-strassenverkehr-li.2231942">das Schlimmste befürchten</a>.</p>
<p>Trotzdem wünsche ich allen und vor allem meinen türkisch[-stämmig]en Nachbarinnen und Nachbarn heute ein faires und schönes Spiel. Wir Neuköllner lassen uns die Freude am »Futbol« weder von <em><a href="https://www.tagesspiegel.de/politik/mitten-in-wolfsgruss-debatte-erdogan-soll-kurz-vor-dem-em-viertelfinale-der-turkei-in-berlin-ankommen-11974244.html">Erdoğan</a></em> und <em>Merih Demiral</em> (der ist ja gerechterweise gesperrt) und ihren faschistischen Freunden von den Grauen Wölfen, noch von Posern, die ihren kleinen Schwanz und ihr noch kleineres Hirn hinter einem fetten Motor verstecken müssen, verderben. Denn Neukölln ist vielfältig und bunt. Schließlich ist auch <em><a href="https://de.wikipedia.org/wiki/Antonio_R%C3%BCdiger">Antonio Rüdiger</a></em> Neuköllner, aufgewachsen in der <a href="https://www.weisse-siedlung.de/unser-quartier/die-weisse-siedlung">Weißen Siedlung</a>.</p>
<p>Mögen der Fußballabend und die anschließenden Feiern friedlich und ohne Verletzte verlaufen. Und möge die bessere Mannschaft gewinnen. Denn heute schlagen zwei Herzen in meiner Brust: Ich habe viele Monate meiner Kindheit in den Niederlanden auf <a href="https://de.wikipedia.org/wiki/Walcheren">Walcheren</a> verbracht.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53839310820/">Poser auf der Hermannstraße</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/">DreamStudio</a>. Prompt: »<em>High-horsepower convertibles, SUVs and other racing cars, decorated with Turkish flags and pennants, drive through a city street on a sunny afternoon, colored french comic style</em>«, Modell: Stable Diffusion XL, Style: None.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Modernes Leben</category>
  <guid>https://kantel.github.io/posts/2024070601_futbol/</guid>
  <pubDate>Sat, 06 Jul 2024 14:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070601_futbol/images/poserneukoelln.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>P5.js und Glitch: Die Wiederentdeckung (m)eines Spielplatzes</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070401_glitch_p5js/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53834971614/"><img src="https://kantel.github.io/posts/2024070401_glitch_p5js/images/glitchp5templ-b.jpg" class="img-fluid"></a></p>
<p>Da hatte ich mir doch <a href="http://blog.schockwellenreiter.de/2022/04/2022040601.html">vor über zwei Jahren</a> mit <a href="http://blog.schockwellenreiter.de/2022/04/2022040602.html">relativ großem Tam-Tam</a> einen <a href="https://schockwellenreiter.glitch.me/">Spielplatz</a> auf <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/glitch.html">Glitch 🎏</a> zugelegt, dem freundlichen (und in der Grundversion kostenlosen) Community-Webhoster – und ihn dann <a href="https://kantel.github.io/posts/2023111701_more_glitch/">relativ</a> <a href="https://kantel.github.io/posts/2023111801_smashing_pumpkins_v03/">schnell</a> wieder vergessen. Doch während meiner Recherchen zu <a href="https://kantel.github.io/posts/2024061601_openprocessing/">P5.js-Online-Editoren</a> rückte der Dienst wieder in meinen Fokus.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/dEdpmbtgznU?si=rxjG1hGNmmbZRdHs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Ich stolperte nämlich über das <a href="https://www.youtube.com/watch?v=dEdpmbtgznU">Einführungsvideo</a> zur Playlist »<a href="https://www.youtube.com/playlist?list=PLLx7jIm38p9mATGvW9sUT3Gjk0kGX9sot">Data as Material</a>«, in dem <em>David Bouchard</em> erläutert, warum er für diesen/seinen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Kurs Glitch gegenüber dem P5.js-Webeditor den Vorzug gibt. Mich überzeugten drei Gründe:</p>
<ol type="1">
<li>Glitch zeigt den Code <em>und</em> den Canvas nicht unbedingt in <em>einem</em> Browserfenster an (wie im <a href="https://www.flickr.com/photos/schockwellenreiter/53834971614/">Screenshot</a> im Bannerbild oben), sondern man kann das Ergebis (die fertige Website) auch in einem separaten Browserfenster anzeigen lassen.</li>
<li>Die umgebende <code>index.html</code> kann aus einer beliebig komplexen Website bestehen. Daher kann man zum Beispiel auch Experimente mit der <a href="https://p5js.org/reference/#DOM">DOM-Bibliothek</a> durchführen oder mehrere Sketche auf <em>einer</em> Website implementieren.</li>
<li>Und das gab bei <em>David Bouchard</em> wohl den Ausschlag: Glitch bietet von Haus aus einen Zugriff auf einen <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/nodejs.html">Node.js</a>-Server an. Damit kann man, wie er in seiner oben verlinkten Playlist zeigt, auf diverse APIs zugreifen und mit diversen Webservices kommunizieren, ohne einen eigenen Node.js-Server betreiben zu müssen.</li>
</ol>
<p>Allerdings bekommt man den Komfort nicht völlig geschenkt: Glitch kennt von Hause aus P5.js <strong>nicht</strong> und zeigt daher im Editor viele hässliche Warnungen an. Um diese abzuschalten, bietet <em>David Bouchard</em> auf Glitch in <a href="https://glitch.com/~rta842-blank">seinem Blanko-P5.js-Template</a> eine <code>.eslintrc.json</code> an. Mir ist selber nicht ganz klar, was diese bewerkstelligt, aber es funktioniert – die Warnungen sind weg.</p>
<p>Ich habe für Euch und für mich eine <a href="https://p5jsblankotemplate.glitch.me">eigene P5.js-Blanko-Template-Version</a> inklusive der <code>.eslintrc.json</code> auf Glitch erstellt, die Ihr (und die ich) für Eure/meine P5.js-Projekte nur remixen müßt und dann könnt Ihr loslegen. Meine Version ist fast genau so schlank wie die von <em>David Bouchard</em> (ich habe aus seinem Video gelernt, was man alles von dem Default-Website-Template von Glitch nicht braucht und wegwerfen kann), aber ich wollte, daß die Webseite auch nach einem Download auf Euren/meinen Rechnern ohne Internetverbindung lauffähig ist. Daher habe ich eine <code>p5.min.js</code> in das Template hochgeladen und sie nicht via eines CDN eingebunden. Habt viel Spaß damit, ich denke, ich werde das auch haben.</p>
<p>Für die Zukunft plane ich noch je ein Template mit P5.play (wahlweise mit P5.js oder <a href="https://q5js.org/home/">Q5.js</a> als darunterliegender Engine) und eventuell – je nachdem wie Q5.js sich bewährt – auch noch ein Template mit Q5.js pur. Aber erst einmal habe ich zu tun!</p>



 ]]></description>
  <category>Glitch 🎏</category>
  <category>P5.js</category>
  <category>Creative Coding</category>
  <category>Webworking</category>
  <guid>https://kantel.github.io/posts/2024070401_glitch_p5js/</guid>
  <pubDate>Thu, 04 Jul 2024 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070401_glitch_p5js/images/glitchp5templ.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Kino auf dem Dach – »Outgrow the System« – Abgesagt!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070302_kulturbunker_kino/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53833283020/"><img src="https://kantel.github.io/posts/2024070302_kulturbunker_kino/images/freiluftkino-b.jpg" class="img-fluid"></a></p>
<p>Es ist wieder soweit: Am <strong>Sonnabend, den 6.Juli 2024 um 20:00 Uhr</strong> gibt es wieder Kino unter freiem Himmel auf dem <a href="https://kantel.github.io/posts/2023100601_kulturbunker/">Dach des Kulturbunkers in der Neuköllner Rungiusstraße 19</a>. Gezeigt wird der schwedische Dokumentarfilm »<a href="https://rafilm.se/outgrow-the-system">Outgrow the System</a>« von <em>Cecilia Paulsson</em> und <em>Anders Nilsson</em> aus dem Jahr 2023. Der Film geht der Frage nach, wie wir ein Wirtschaftssystem entwickeln können, das wirklich gerecht mit unseren knappen Ressourcen umgeht und wie eine sozial-ökologische Transformation der Wirtschaft gelingen könnte.</p>
<iframe src="https://player.vimeo.com/video/863141958?h=6b06d6471d" class="if16_9" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen="">
</iframe>
<p>Der Film wurde unter anderem am 6. Juni dieses Jahres auf einer <a href="https://germany.ecogood.org/termine/outgrow-the-system-filmvorfuehrung-und-diskussion/">Veranstaltung von »Gemeinwohl Ökonomie« in Hamburg</a> gezeigt und mit diesen Zeilen angekündigt:</p>
<blockquote class="blockquote">
<p>… »Outgrow the System« feiert mit seinen transformativen Ideen die Fülle an Kreativität und Ideen, die es weltweit gibt. Wirtschaft sollte ein Thema sein, das für alle zugänglich ist, nicht nur für sogenannte Expert*innen. Der Film vermittelt ein breites Angebot an Ansätzen, wie Wirtschaft auch funktionieren könnte. Denn so wie jetzt, kann es nicht weiter gehen. Weltweit entwickeln sich Nischen, die neue Formen ausprobieren. Der Film zeigt, dass ein Wandel nicht nur möglich, sondern bereits im Gange ist – und bietet Zuschauer*innen eine Basis, um an einem breiteren Diskurs rund um die Wirtschaft teilzunehmen.</p>
</blockquote>
<p>Als kleinen Nachteil empfinde ich, daß der Film mit englischem O-Ton gezeigt wird. Ich befürchte, daß er so nur ein Publikum erreicht, das sowieso nicht mehr überzeugt werden muß und nicht den »gemeinen Neuköllner an sich«. Liebe Nachbarinnen und Nachbarn: Belehrt mich bitte eines Besseren und kommt am Sonnabend vorbei. Denn da werdet Ihr nicht dümmer von. Und nach dem Film habt Ihr außerdem die Gelegenheit, Fragen zu stellen und mit der Regisseurin des Films, <em>Cecilia Paulsson</em>, zu diskutieren.</p>
<p>Der Open-Air-Kinoabend wird im Rahmen der Reihe »<a href="https://www.trial-error.org/projekte-1/kulturbunker/">Nachbarschaftliches Miteinander auf dem Kulturbunker</a>« vom Kulturlabor »Trial &amp; Error« im Rahmen des <a href="https://www.recycledcreativity.de/">Recycled Creativity Festival</a> veranstaltet. Der Eintritt ist frei, um eine Spende wird jedoch gebeten. Und für Erfrischungen und Popcorn ist gesorgt.</p>
<p><strong>Caveat</strong>: Ich bin vom <a href="https://qm-glasower-strasse.de/kultur-auf-dem-dach-mit-kino-zirkus-musik-und-kreativangeboten/">Quartiersmanagement Glasower Straße</a> zum (ehrenamtlichen) Projektpaten bestellt worden und daher immer ein wenig Partei. Aber das bin ich gerne.&nbsp;🤓</p>
<p><b style="color:red;">[Update. 5. Juli 2024, 14:45 Uhr]</b>: Achtung, wegen Unwetterwarnung wurde die Veranstaltung leider kurzfristig abgesagt/verlegt und findet nun in den Räumen des Kulturlabors Trial &amp; Error in der Braunschweiger Straße 80, 12055 Berlin, statt. Ich bin darüber sehr traurig.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53833283020/">Freiluftkino auf dem Kulturbunker</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/">DreamStudio</a> nach einem <a href="https://www.flickr.com/photos/schockwellenreiter/7294212942/">Referenzphoto</a> von <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>. Prompt: <em>Open Air Cinema</em>. Modell: Stable Diffusion XL, Style: Comic Book, Image Strength: 30%.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Kino</category>
  <category>Kulturbunker</category>
  <category>Politik</category>
  <category>Wirtschaft</category>
  <category>Umwelt</category>
  <guid>https://kantel.github.io/posts/2024070302_kulturbunker_kino/</guid>
  <pubDate>Wed, 03 Jul 2024 16:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070302_kulturbunker_kino/images/freiluftkino.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schließt am »Juli-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070301_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53832749966/"><img src="https://kantel.github.io/posts/2024070301_android_update/images/dreikleineroboter-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-07-01?hl=de">Sicherheitsupdate für Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-07-01?hl=de">Pixel-Geräten</a>) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8a, Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53832749966/">Drei (?) kleine Roboter</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Three little green robots dance on a colorful meadow in front of a small garden house, two goats in checkered vests watch them, the sun shines on the scenery, colored french comic style</em>«. Modell: Stable Diffusion XL, Style: Casual Environments.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024070301_android_update/</guid>
  <pubDate>Wed, 03 Jul 2024 15:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070301_android_update/images/dreikleineroboter.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Alles neu macht der Julei: Neue P5.js Website</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070201_neue_p5js_site/</link>
  <description><![CDATA[ 




<p><a href="https://p5js.org/tutorials/"><img src="https://kantel.github.io/posts/2024070201_neue_p5js_site/images/p5jstuts-b.jpg" class="img-fluid"></a></p>
<p>Pünktlich zum Monatsbeginn <a href="https://x.com/p5xjs/status/1807761342679441885?t=hYgmIafWqi98gkkg-60ORA&amp;s=03">überraschte</a> mich das <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Team mit der Mitteilung, daß sie die bisherige <a href="https://p5js.org/">Website</a> komplett überarbeitet und aufgehübscht haben.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/0_r4HSmNb9o?si=zQ1PmdawlEUEih-6" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>War die <a href="https://archive.p5js.org/">bisherige Website</a> (Archiv-Link) funktional, aber eben auch langweilig, ist das neue Design dem Subjekt angemessener: Bunt, vielfältig, verspielt, aber dennoch für alle zugänglich. Mir jedenfalls gefällt’s.</p>



 ]]></description>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024070201_neue_p5js_site/</guid>
  <pubDate>Tue, 02 Jul 2024 15:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070201_neue_p5js_site/images/p5jstuts.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Goodbye Remove BG, welcome Photos for Mac (Vorschau)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070102_freistellen_vorschau/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53828529509/"><img src="https://kantel.github.io/posts/2024070102_freistellen_vorschau/images/homeoffice-bb.jpg" class="img-fluid"></a></p>
<p>Eines der Vorteile meines <a href="https://kantel.github.io/posts/2024062301_mac_mini/">Wechsels auf einen (fast) neuen Mac Mini</a> ist, daß nun auch eine aktuelle »<a href="https://de.wikipedia.org/wiki/Vorschau_(Software)">Vorschau</a>« <em>(Photos for Mac)</em> auf meinen Rechner werkelt. Diese kann nicht nur (endlich!) mit <a href="https://de.wikipedia.org/wiki/WebP">WebP-Bildern</a> umgehen, sondern beherrscht auch eine ziemlich gute Funktion, um Bilder vom Hintergrund freizustellen.</p>
<p>Bisher hatte ich dafür entweder Online-Dienste wie <a href="https://www.remove.bg/de">Remove BG</a> oder einer der diversen Online-KI-Bildgeneratoren oder die Python-Bibliothek <a href="https://github.com/danielgatis/rembg">Rembg</a> verwendet. Erstere hatten den Nachteil, daß sie nur eingeschränkt kostenlos zu nutzen waren und die zweite Lösung war mitunter doch <a href="https://kantel.github.io/posts/2024020702_rembg/">recht kompliziert</a> zu bedienen. Außerdem erforderten beide Lösungen doch meist noch etliches an Nachbearbeitung.</p>
<p>Auch Apples Vorschau ist nicht perfekt, doch meine ersten Tests zeigten, daß die Ergebnisse doch schon um etliches besser als meine früheren Versuche waren<sup>1</sup>. Man muß vermutlich nicht einmal ein Bildbearbeitungsprofi sein, um damit erstellte Montagen zu erkennen. Aber das Erzeugen von Fake-News mit gefakten Bildern ist ja auch nicht mein Ziel. Ich möchte einfach Collagen zusammenmontieren (zum Beispiel Personen vor Phantasie-Hintergründe stellen wie im <a href="https://www.flickr.com/photos/schockwellenreiter/53828529509/">Bannerbild oben</a>), um (interaktive) Geschichten oder <em>Visual Novels</em> zu schreiben und zu illustrieren.</p>
<p>Ich habe Ideen und für diese Ideen ein Vorbild: In den 1970er Jahren gab es von <em><a href="https://de.wikipedia.org/wiki/Leo_Leonhard">Leo Leonhard</a></em> (Zeichnung) und <em><a href="https://de.wikipedia.org/wiki/Otto_J%C3%A4gersberg">Otto Jägersberg</a></em> (Text) einen vierbändigen Comic-Zyklus mit den Helden <em>Flabby Jack</em> und <em>Rüssel und Schüssel</em>. Während ersterer eine knallbunte Comicfigur war, lebten letztere in einer im Stil von <em>Hieronymus Bosch</em> (meist in Schwarz-Weiß) gezeichneten Bilderwelt. Aber auch andere Stile quer durch die Kunstgeschichte (von <em>Pieter Brueghel d.Ä.</em> über <em>Grandville</em> bis <em>Winsor McCay</em>) wurden wild in die Bilder und Seiten einmontiert. Hier erst einmal die bibliographischen Angaben aus meiner Bibliothek<sup>2</sup>:</p>
<ul>
<li>Leo Leonhard, Otto Jägersberg: <em>Rüssel in Komikland</em>, Frankfurt/Main (Fischer Taschenbuch) 1974 (Originalausgabe: Darmstadt (Melzer) 1972)</li>
<li>Leo Leonhard, Otto Jägersberg: <em>Glücksucher in Venedig</em>, Frankfurt/Main (Fischer Taschenbuch) 1974 (Originalausgabe: Darmstadt (Melzer) 1973)</li>
<li>Leo Leonhard, Otto Jägersberg: <em>Flucht aus den Bleikammern</em>, Frankfurt/Main (Fischer Taschenbuch) 1975 (Originalausgabe: Darmstadt (Melzer) 1974)</li>
<li>Leo Leonhard: <em>Leben &amp; Traum mit Schellenfusz</em>, Frankfurt/Main (Fischer Taschenbuch) 1977 (Originalausgabe: Darmstadt (Melzer) 1974)</li>
</ul>
<p>Mir wurde ja bekanntlich bei meiner Geburt kein Zeichenstift mit in die Wiege gelegt. Daher bin ich froh, daß ich nun mit technischer Hilfe einiger KI-Bildgeneratoren und Bildbearbeitungsprogrammen wie Apples Vorschau meine wüsten Bildphantasien austoben kann.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53828529509/">Home Office Fake</a></em>, Montage aus einem Photo (© 2024: <em>Kirsten Heidler</em> – mit freundlicher Genehmigung) und einem mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> generiertem Bild (Prompt: »<em>A python with glasses+ and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook. Die Python wurde in diesem Fall von der gekünstelten Intelligenzia unterschlagen.&nbsp;🤓)</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Das ist jedoch kein Alleinstellungsmerkmal von Apples Software. So bringt zum Beispiel <em>Thorsten Lemkes</em> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/gc.html">Graphikkonverter</a>, der auch ab macOS Catalina das Freistellen von Bildern unterstützt, nahezu identische Ergebnisse hervor (getestet). Bei anderen, modernen Bildverarbeitungsprogrammen sieht es vermutlich ähnlich aus (noch nicht getestet). Aber die Vorschau ist halt bei jedem Mac dabei und immer schnell zur Hand.↩︎</p></li>
<li id="fn2"><p>Ich besitze leider nur die Taschenbuchausgaben. Diese waren damals noch schlecht gelumbeckt und drohen daher nun (nach 50 Jahren!) auseinanderzufallen. Eine kurze Recherche ergab jedoch, daß es auch die gebunden Ausgaben aus dem Melzer Verlag antiquarisch günstig zu erwerben gibt. Kauft sie also, es lohnt sich auf jeden Fall.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Bilder</category>
  <category>Interactive Fiction</category>
  <category>Remove BG</category>
  <category>Künstliche Intelligenz</category>
  <category>Comic</category>
  <category>Generative Art</category>
  <guid>https://kantel.github.io/posts/2024070102_freistellen_vorschau/</guid>
  <pubDate>Mon, 01 Jul 2024 16:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070102_freistellen_vorschau/images/homeoffice.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mediadaten: Die Zahlen für den Monat Juni 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024070101_mediadaten_2024_06/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53827892016/"><img src="https://kantel.github.io/posts/2024070101_mediadaten_2024_06/images/office02-b.jpg" class="img-fluid"></a></p>
<p><em>Tempus fuget!</em> Und so ist auch der Juni schon wieder viel zu schnell vorbeigeflogen. Daher ist es an der Zeit für ein paar Zahlen, die hochtrabend manches mal auch <em>Mediadaten</em> genannt werden. Im Vormonat hatte der <em>Schockwellenreiter</em> laut seinem (hoffentlich!) datenschutzkonformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>4.691&nbsp;Seitenaufrufe</strong>. Wie immer täuscht diese Exaktheit der Ziffern eine Genauigkeit der Zahlen nur vor. Dennoch freue ich mich über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> des Junis bieten wenig Überraschendes. Meine Überlegungen zu einem Wechsel nach <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> und der Umzug auf einen (fast) neuen Mac Mini haben die Zugriffe dominiert:</p>
<ol type="1">
<li>Allerdings steht weit vorne und ungeschlagen an erster Stille immer noch der Dauerbrenner vom Januar dieses Jahres: <a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html">Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</a>.</li>
<li>Darauf folgt aber schon die Frage: <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">Auf ein Neues? Braucht der Schockwellenreiter Hugo?</a></li>
<li>An dritter Stelle steht die Meldung: <a href="https://kantel.github.io/posts/2024062301_mac_mini/">Völlig losgelöst: Ein neuer Anfang mit Mac Mini und Sonoma</a>.</li>
<li>Dicht gefolgt von: <a href="https://kantel.github.io/posts/2024062601_2_monitore/">Ich habe fertig: Zwei Monitore an meinem »neuen« Mac Mini</a>.</li>
<li>Und zum Schluß dann noch ein Hugo-Nachschlag: <a href="https://kantel.github.io/posts/2024061101_wikilinks_hugo/">Wikilinks in Hugo</a>.</li>
</ol>
<p>Ich gelobe Besserung und werde mir Mühe geben, daß der Juli nicht wieder so monothematisch gerät. Meine jüngsten Experimente mit virtuellen Umgebungen für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> sowie meine Experimente mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und (anstehend) <a href="https://q5js.org/home/">Q5.js</a>/<a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> geben die Richtung vor. Außerdem stehen ja noch weitere Erkundungen mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a>, <a href="https://renjs.net/index.html">RenJS</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> in meiner Pipeline. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53827892016/">Office Man (Python?)</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A python with glasses+ and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024070101_mediadaten_2024_06/</guid>
  <pubDate>Mon, 01 Jul 2024 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024070101_mediadaten_2024_06/images/office02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Abenteuer Spynne: Spyder, Conda Environment und Pygame</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024063001_spyder_pygame/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53825996374/"><img src="https://kantel.github.io/posts/2024063001_spyder_pygame/images/pygamespyder-b.jpg" class="img-fluid"></a></p>
<p>Jetzt habe ich endgültig fertig, denn es ist mir gelungen, auch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> in einer eigenen, separaten <a href="https://kantel.github.io/posts/2024062502_python_envs/">Conda-Umgebung</a> zu installieren und dann in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> zu editieren und zum Laufen zu bringen. Damit habe ich auf <a href="https://kantel.github.io/posts/2024062301_mac_mini/">meinem »neuen« Mac Mini</a> – jetzt auch <a href="https://kantel.github.io/posts/2024062601_2_monitore/">mit zwei Monitoren</a> – in sauber aufgeräumten, virtuellen Umgebungen eigentlich alles, was ich mir für die Programmierung mit Python wünsche.</p>
<p>Nachdem ich dank der Hilfe von <em>Lee Vaughans</em> Buch »<a href="https://nostarch.com/python-tools-scientists">Python Tools for Scientists</a>« (ich wiederhole mich, aber Ehre, wem Ehre gebührt) endlich begriffen hatte, wie die virtuellen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda</a>-Umgebungen eigentlich funktionieren, war es recht einfach. Zuerst habe ich im Anaconda-Navigator eine neue Umgebung angelegt, die ich naheliegend <code>pygame</code> genannt habe. Da Pygame in den mir bekannten Anaconda-Channels nicht vorhanden war, mußte ich diese Installation mit <code>pip</code> erledigen. Also erst einmal im Terminal mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate pygame</span></code></pre></div>
<p>die virituelle Umgebung aktiviert und dann in dieser Umgebung mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pygame</span></code></pre></div>
<p>Pygame installiert. <code>pip</code> schlug mir ein Pygame 2.6.0 vor. Da dies meines Wissens die <a href="https://www.pygame.org/news/2024/6/pygame-2-6-0">aktuellste Version</a> (vom 25. Juni 2024) war, war ich damit einverstanden.</p>
<p>Da schon lange die Idee in meinem Hinterkopf schmort, nicht nur <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>, sondern auch Pygame mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> zu verbandeln, um interaktive Simulationen mit Charts aufzuhübschen, habe ich mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install matplotlib</span></code></pre></div>
<p>diese in dieser Umgebung gleich mitinstalliert. Das hatte als Seiteneffekt den Vorteil, daß auch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">NumPy</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> mitinstalliert wurden, da es Abhängigkeiten zwischen diesen beiden Paketen und der Matplotlib gibt.</p>
<p>Zu guter letzt habe ich dann – wie auch <a href="https://kantel.github.io/posts/2024062901_conda_py5_spyder/">gestern</a> schon – den Anaconda-Navigator gebeten, mir ein Spyder für diese Umgebung (mit dem »naiven Zugang«) zu installieren. Das war alles, Spyder konnte nun Pygame, wie der <a href="https://www.flickr.com/photos/schockwellenreiter/53825996374/">Screenshot im Banner oben</a> beweist.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53826046554/"><img src="https://kantel.github.io/posts/2024063001_spyder_pygame/images/pygamevscode.jpg" class="img-fluid"></a></p>
<p>Doch wartet, da war doch noch mehr: Jede im Navigator angelegte virtuelle Conda-Umgebung bekommt (im »modularen Zugang« – also ohne zusätzlichen Plattenspeicher zu belegen) ein <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> mitgegeben. Wird dieses von dort aus dem Navigator heraus gestartet, ist es gleich in der virtuellen Umgebung zu Hause (und kann dann ohne Klimmzüge natürlich auch Pygame-Skripte editieren und starten).</p>
<p>Wenn man nun zusätzlich auch noch ein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> aus dem Navigator heraus installiert, kann sogar <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> mit Pygame umgehen. Das macht natürlich nur Sinn, wenn man die eigentlich wahnsinnige Idee hat, Pygame aus einem Jupyter-Notebook heraus aufzurufen. Aber wer weiß, vielleicht bin ich im Rahmen meiner Idee, mit Pygame interaktive Simulationen zu realisieren, tatsächlich so wahnsinnig. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Spyder</category>
  <category>Pygame</category>
  <category>Spieleprogrammierung</category>
  <category>JupyterLab</category>
  <guid>https://kantel.github.io/posts/2024063001_spyder_pygame/</guid>
  <pubDate>Sun, 30 Jun 2024 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024063001_spyder_pygame/images/pygamespyder.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Weiter mit der Spynne: Spyder und Pythons Turtle</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062902_spyder_turtle/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53824041384/"><img src="https://kantel.github.io/posts/2024062902_spyder_turtle/images/pythagorasbunt-b.jpg" class="img-fluid"></a></p>
<p>Die Wiederentdeckung der »<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spynne</a>« hat mir keine Ruhe gelassen. Eine der Hauptgründe, warum ich sie <a href="https://kantel.github.io/posts/2023042001_pillow_tutorial/">seinerzeit aus den Augen verloren</a> hatte, war, daß sie die Zusammenarbeit mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> verweigerte. Neugierig und ohne viel Hoffnung auf Erfolg wollte ich herausfinden, wie sich das Spynnentier mit der Schildkröte verträgt, wenn es aus dem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda-Navigator</a> heraus gestartet wird.</p>
<p>Dafür hatte ich ein <a href="https://kantel.github.io/posts/2023072901_save_turtle_as_eps/">altes Skript</a> von mir hervorgekramt und es mit Spyder aus der Base-Umgebung (<code>root</code>) angeworfen. Wider Erwarten lief das Programm (beinahe – dazu weiter unten mehr) problemlos durch. Da die Turtle Teil des <code>root environment</code> von Anaconda ist, scheint Spyder im Gegensatz zur Standalone-Version mit ihr zu spielen.</p>
<p>Das auftretende Problem war <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> geschuldet. Zwar ist diese freundliche PIL-Fork Teil der Anaconda-Standard-Distribution, aber ohne <a href="https://www.ghostscript.com/">Ghostscript</a>, das aber in meinem Skript für die Erzeugung der Postscript-Datei benötigt wird. (Auf meinem alten Rechner hatte ich das irgendwann einmal installiert und vergessen.) Und Ghostscript ist auch auf dem Default-Conda-Server nicht vorhanden. Hier half mir – wie so oft – <a href="https://stackoverflow.com/questions/6848903/python-ghostscript-runtimeerror-can-not-find-ghostscript-library-libgs?rq=3">Stack Overflow weiter</a>: Dort fand ich den Hinweis, daß es auf <code>conda-forge</code> zu finden sei. Ein</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource shell number-lines code-with-copy"><code class="sourceCode"><span id="cb1-1">conda install -c conda-forge ghostscript</span></code></pre></div>
<p>leistete dann die erwartete Installation und mein kleines Skript schrieb dann auch die EPS-Datei ohne Fehlermeldung heraus.</p>
<p>Spyder gefällt mir immer mehr. Das Teil ist als Python-IDE nicht so überfrachtet wie <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>, aber leistungsfähiger als <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>. Ich werde damit noch ein wenig spielen müssen, aber das Teil könnte zu meinem Leib-und-Magen-Python-Editor avancieren. <em>Still digging!</em></p>
<p><strong>War sonst noch was?</strong> Ach ja, beim Erstellen der Screenshots für diesen Beitrag fiel mir noch ein weiterer Umstand auf, den ich auf meinem alten Rechner schon vor Jahren abgestellt hatte: Die mit den macOS-Bordmitteln hergestellten Screenshots besitzen zum ersten einen breiten, weißen Rand mit Schlagschatten und zum zweiten werden sie als <code>.png</code> abgespeichert. Das erste kann man im Terminal mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource shell number-lines code-with-copy"><code class="sourceCode"><span id="cb2-1">defaults write com.apple.screencapture "disable-shadow" -bool "true”</span></code></pre></div>
<p>abstellen (wenn man das wieder rückgängig machen will, das <code>true</code> im Befehl durch <code>false</code> ersetzen), das zweite benötigt – ebenfalls im Terminal – die Zeile</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource shell number-lines code-with-copy"><code class="sourceCode"><span id="cb3-1">defaults write com.apple.screencapture type JPG </span></code></pre></div>
<p>um die Screenshots als <code>.jpg</code> herauszuschreiben. Hier muß, wenn Ihr wieder auf den Default zurücksetzen wollt, das <code>JPG</code> durch <code>PNG</code> ersetzt werden.</p>
<p>Das alles steht hier nur, damit bei einem erneuten Rechnerwechsel ich das alles wiederfinde. <em>(Ich bin Optimist, ich hoffe, daß ich dann noch meine Seiten durchsuchen kann.)</em></p>



 ]]></description>
  <category>Python</category>
  <category>Spyder</category>
  <category>Turtle</category>
  <category>Pillow</category>
  <guid>https://kantel.github.io/posts/2024062902_spyder_turtle/</guid>
  <pubDate>Sat, 29 Jun 2024 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062902_spyder_turtle/images/pythagorasbunt.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Py5 mit Spyder in eigenem Conda-Environment</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062901_conda_py5_spyder/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53823834445/"><img src="https://kantel.github.io/posts/2024062901_conda_py5_spyder/images/py5spyder-b.jpg" class="img-fluid"></a></p>
<p>Heureka, es geht! Ich habe – wie gestern <a href="https://kantel.github.io/posts/2024062801_conda_env_python/">angekündigt</a> – es tatsächlich geschafft, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> im eigenen Conda-Environment mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> zu starten. Und dafür waren nur wenige Vorarbeiten notwendig:</p>
<p>Ich hatte ja vor einem Jahr schon <a href="https://kantel.github.io/posts/2023042001_pillow_tutorial/">festgestellt</a>, daß sich (Standalone-) Spyder per Design (das ist kein Bug, sondern ein Feature!) schwer tut, mit anderen als den mitgelieferten (Python-) Paketen zusammenzuarbeiten. Der in der Spyder-FAQ vorgeschlagene <a href="https://docs.spyder-ide.org/5/faq.html#using-packages-installer">Workaround</a> wies mich aber auf eine Lösung hin, die recht einfach mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda</a>-Navigator-Umgebung zu realisieren war. Dafür muß man einen Weg einschlagen, den <em>Lee Vaughan</em> in seinem Buch »<a href="https://nostarch.com/python-tools-scientists">Python Tools vor Scientists</a>« den »naiven Zugang« <em>(Naive Approach)</em> nennt<sup>1</sup>. Hierbei wird tatsächlich ein eigenes Spyder in der gewünschten Umgebung (in meinem Fall <code>py5</code>) installiert. Der Anaconda-Navigator schlägt (nach einem Wechsel in das Environment) die Installation auch schon vor, so daß diese mit einem Mausklick zu erledigen ist<sup>2</sup>.</p>
<p>Wenn man nun im Navigator in der aktivierten Umgebung Spyder startet, läuft ein Spyder, das alle Python-Pakete kennt, die in der aktiven Umgebung installiert sind – also in meinem Fall auch Py5. Der <a href="https://www.flickr.com/photos/schockwellenreiter/53823834445/">Screenshot im Banner oben</a> ist der Beweis.</p>
<p>Das macht die Spynne doch wieder zu einer möglichen <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>-Alternative. Ich brenne darauf zu testen, wie sich Py5 zum Beispiel zusammen mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> schlägt. Aber auch von Simulationen mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> als Simulationsoberfläche und der Matplotlib als Umgebung für die Charts wage ich zu träumen. Ihr seht, ich habe immer noch zu tun. <em>Still digging!</em></p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<p>Lee Vaughan: <em><a href="https://nostarch.com/python-tools-scientists">Python Tools for Scientists</a>. An Introduction to Using Anaconda, JupyterLab, and Python’s Scientific Libraries</em>, San Francisco CA (No Starch Press) 2022</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Im Gegensatz zum »modularen Zugang« <em>(Modular Approach)</em>, bei dem jedes Conda-Environment nur Aliase auf die im Base-Environment installierten Pakete bereitstellt.↩︎</p></li>
<li id="fn2"><p>Auch <em>Lee Vaughan</em> empfiehlt für Spyder den naiven Zugang, während er für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> den modularen Weg vorschlägt.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Py5</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024062901_conda_py5_spyder/</guid>
  <pubDate>Sat, 29 Jun 2024 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062901_conda_py5_spyder/images/py5spyder.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Virtuelle Umgebungen für P5 (Python) und Py5</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062801_conda_env_python/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53501582607/"><img src="https://kantel.github.io/posts/2024062801_conda_env_python/images/pythonenv-b.jpg" class="img-fluid"></a></p>
<p>Natürlich mußte ich die <a href="https://kantel.github.io/posts/2024062502_python_envs/">vor wenigen Tagen gemachte Entdeckung</a>, daß man mit <em>Conda Environments</em> sich nicht in einem unübersichtlichen Dschungel verirrt, sondern einen aufgeräumten Garten mit wiederauffindbaren Beeten anlegt, sofort testen. Was lag näher, als je eine Umgebung für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5py.html">P5 (Python)</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> anzulegen, denn diese beiden Processing-ähnlichen Python-Umgebungen sind sich so ähnlich, daß man schon Überschneidungen befürchten kann. (Es gibt meines Wissens zwar keine, aber sicher ist sicher&nbsp;…)</p>
<section id="p5-python" class="level3">
<h3 class="anchored" data-anchor-id="p5-python">P5 (Python)</h3>
<p>P5 (Python) hatte ich das erste Mal 2018 <a href="http://blog.schockwellenreiter.de/2018/10/2018103103.html">auf</a> <a href="http://blog.schockwellenreiter.de/2018/11/2018110103.html">dem</a> <a href="http://blog.schockwellenreiter.de/2018/11/2018112401.html">Schirm</a> und dann 2021 noch einmal <a href="http://blog.schockwellenreiter.de/2021/01/2021011001.html">angefaßt</a>. Doch das Teil schien mir damals – trotz einiger Fortschritte – noch nicht wirklich ausgereift. Erst als es mir im letzten Jahr (im Zusammenhang mit <a href="https://kantel.github.io/posts/2023040802_another_python_online_editor/">Python Online-Editoren</a> (<a href="https://kantel.github.io/posts/2023050402_p5_jupyter_und_mehr_online/">nicht nur</a>) für den Raspberry Pi, sondern auch für mein Chromebook) wieder unterkam, zeigten erste Tests, daß das Teil nun langsam erwachsen wird.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53818971972/"><img src="https://kantel.github.io/posts/2024062801_conda_env_python/images/p51.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53819002242/"><img src="https://kantel.github.io/posts/2024062801_conda_env_python/images/p52.jpg" class="img-fluid"></a></p>
<p>Also habe ich P5 (Python) eine Conda-Umgebung spendiert, die ich sinnvollerweise auch <code>p5</code> genannt habe. Das war nicht ganz so einfach wie ich gedacht hatte, da P5 (Python) einige Abhängigkeiten besitzt, die leider von <code>pip</code> und <code>conda</code> nicht automatisch aufgelöst werden. Daher habe ich mehrere Schritte benötigt:</p>
<ol type="1">
<li>Im <em>Anaconda-Navigator</em> mit <code>create</code> eine Umgebung <code>p5</code> angelegt.</li>
<li>Da P5 (Python) intern <a href="https://www.glfw.org/">GLFW</a> benötigt, um mit OpenGL zu kommunizieren, mit <code>brew install glfw</code> dieses installert.</li>
<li>Dann mußte ich mit <code>conda</code> separat <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> hinzufügen, da <code>pip</code> in der Umgebung Pillow nicht installieren konnte.</li>
<li><em>Last but not least</em> konnte ich dann mit <code>pip install p5</code> endlich auch P5 (Python) mit den restlichen Abhängigkeiten installieren.</li>
</ol>
<p>Wie die Bilder oben zeigen (ein Klick darauf führt je auf eine Seite mit Vergrößerungen), lief danach P5 (Python) in <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> in der neuen Umgebung, nachdem ich diese über die <em>Command Palette</em> (<code>⇧⌘P</code>) mit <code>Python: Select Interpreter</code> ausgewählt hatte. Im VSCode Terminal wie auch in der Statuszeile rechts unten wird der aktive Interpreter/die aktive Umgebung angezeigt.</p>
</section>
<section id="py5" class="level3">
<h3 class="anchored" data-anchor-id="py5">Py5</h3>
<p>Das Anlegen einer virtuellen Umgebung für Py5 verlief dagegen bedeutend unkomplizierter. Die einzige, unvorhergesehene Schwierigkeit war, daß mein frisch installiertes, aktuelles macOS Sonoma von Hause aus kein Java mehr mitbringt. (Meine bisherigen (älteren) macOS hatte alle noch ein per Default mitgeliefertes Java installiert.) Hier habe ich es mir allerdings einfach gemacht und – wie auf <em>Stack Overflow</em> <a href="https://stackoverflow.com/questions/65601196/how-to-brew-install-java">empfohlen</a> – ein aktuelles Java mit Homebrew aufgespielt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install Java</span></code></pre></div>
<p>Danach darf man aber nicht vergessen, mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ln <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sfn</span> /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk</span></code></pre></div>
<p>auch noch den <code>symlink</code> zu setzen, damit das Betriebssystem das Java auch findet.</p>
<p>Der Rest war dann – dank der hervorragenden <a href="https://py5coding.org/content/install.html#anaconda-or-miniconda-setup">Py5-Dokumentation</a>, die explizit behandelt, wie man Py5 in einer Anaconda- oder Miniconda-Umgebung installiert – ein Kinderspiel. Analog zur P5 (Python)-Umgebung <code>p5</code> oben wollte ich, daß diese <code>py5</code> heißt, und</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> env create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> py5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> http://py5coding.org/files/install/py5_environment.yml</span></code></pre></div>
<p>legte diese dann zuverlässig an.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53820259886/"><img src="https://kantel.github.io/posts/2024062801_conda_env_python/images/py51.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53820597929/"><img src="https://kantel.github.io/posts/2024062801_conda_env_python/images/py52.jpg" class="img-fluid"></a></p>
<p>Die Bilder zeigen (auch hier führt ein Klick wieder auf eine Seite mit Vergrößerungen), daß diese Umgebung nicht nur in Visual Studio Code, sondern auch mit Notebooks in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a> funzt. In JupyterLab Desktop wählt man die Umgebung in dem Menü rechts oben aus (neben dem »Hamburger-Menü« rechts außen).</p>
<p>Ich sehe auch keinen Grund, warum die virtuellen Umgebungen nicht auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> spielen sollten. Das steht als nächstes auf meiner Testliste. Ihr merkt also: Ich habe zu tun. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53501582607/">Python in neuer Umgebung</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>JupyterLab Desktop</category>
  <category>Visual Studio Code</category>
  <category>P5</category>
  <category>Py5</category>
  <guid>https://kantel.github.io/posts/2024062801_conda_env_python/</guid>
  <pubDate>Fri, 28 Jun 2024 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062801_conda_env_python/images/pythonenv.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ich habe fertig: Zwei Monitore an meinem »neuen« Mac Mini</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062601_2_monitore/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53817723190/"><img src="https://kantel.github.io/posts/2024062601_2_monitore/images/zweimonitore-b.jpg" class="img-fluid"></a></p>
<p><em>Alea iacta est!</em> Nachdem ich auf meinen <a href="https://kantel.github.io/posts/2024062301_mac_mini/">Beitrag vor drei Tagen</a> über sämtliche von mir genutzten <em>Social Media</em>-Kanäle (und darüber hinaus) viele Rückmeldungen bekommen hatte (dafür bedanke ich mich bei allen Tipgeberinnen und Tipgebern), habe ich mich für die günstigste aller vorgeschlagenen Lösungen entschieden und mir für unter zehn Euro ein USB-C-zu-HDMI-Kabel bestellt.</p>
<p>Heute wurde es geliefert, ich habe es in wenigen Minuten angeschlossen und es funktionierte alles wie gewünscht. Jetzt verfüge ich wieder über zwei Monitore, die ich bedenkenlos mit Fenstern zumüllen kann. Und da der Hauptmonitor nun ebenfalls eine höhere Auflösung besitzt, als der Monitor meines alten MacBook Pro, habe ich nun sogar noch mehr Platz für Müll. Das mußte ich doch gleich mit <a href="https://www.flickr.com/photos/schockwellenreiter/53555668163/">neuen</a> <a href="https://www.flickr.com/photos/schockwellenreiter/53502466426/">Hintergrundbildern</a> feiern.</p>
<p>Das ist doch gleich wieder ein angenehmeres Arbeiten (auch wenn ich mein Chromebook nur aus Angabe für das <a href="https://www.flickr.com/photos/schockwellenreiter/53817723190/">Titelphoto</a> dazugestellt habe). Zusätzlich habe ich – Luxus pur – sicherheitshalber auf Gabis Schreibtisch mein altes MacBook Pro (ebenfalls noch mit Gabis alten, eigentlich schon ausrangierten Zweitmonitor) in Betrieb. Man kann ja nie wissen&nbsp;…</p>
<p><strong>War sonst noch was?</strong> Ach ja, auf dem Mac Mini rendert <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> (noch!) die Seiten des <em>Schockwellenreiters</em> in einer (für mich) akzeptablen Geschwindigkeit (unter zwei Minuten) heraus. Das bedeutet nicht, das ich meine <a href="https://kantel.github.io/posts/2024060301_auf_ein_neues/">Umzugspläne</a> nach <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/hugo.html">Hugo</a> <em>ad acta</em> gelegt habe (das Problem ist ja nur nach hinten verschoben), aber der Druck ist nun nicht mehr so stark. Ich kann und werde das jetzt alles viel ruhiger angehen. <em>Still digging!</em></p>
<hr>
<p><strong>Photos</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024, <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>Interna</category>
  <category>Technik</category>
  <category>Quarto</category>
  <guid>https://kantel.github.io/posts/2024062601_2_monitore/</guid>
  <pubDate>Wed, 26 Jun 2024 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062601_2_monitore/images/zweimonitore.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Python Environments in Jupyter und JuypterLab Desktop</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062502_python_envs/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53784792029/"><img src="https://kantel.github.io/posts/2024062502_python_envs/images/environments-b.jpg" class="img-fluid"></a></p>
<p>Um Pythons »virtuelle Umgebungen« – neudeutsch auch <em><a href="https://docs.python.org/3/library/venv.html">Virtual Environments</a></em> (kurz <code>venv</code> genannt) – hatte ich bisher immer einen großen Bogen gemacht. Weniger, weil ich befürchtete, daß ich mir mit Mehrfach-Installationen meine Festplatte zumüllen würde, sondern mehr, weil ich bei meinem Chaos davon ausging (und das vermutlich zu Recht), daß ich die Übersicht über all die virtuellen Umgebungen verliere und nicht mehr weiß, welche ich schon angelegt hatte und welche ich noch anlegen wollte.</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://nostarch.com/python-tools-scientists"><img src="https://kantel.github.io/posts/2024062502_python_envs/images/pythontoolscover.webp" class="img-fluid"></a>
</div>
<p>Nun ist mir aber vor kurzem das wunderbare Buch »<a href="https://nostarch.com/python-tools-scientists">Python Tools vor Scientists</a>« von <em>Lee Vaughan</em> in die Hände gefallen, und das hat zu Beginn ein ganzes Kapitel (Chapter 2, p.&nbsp;21-48) den <em>Conda Environments</em> gewidmet. Dort las ich, daß der von mir bisher sträflich vernachlässigte <a href="https://docs.anaconda.com/navigator/">Anaconda Navigator</a> Buch über alle angelegten virtuellen Umgebungen führt (egal ob mit <code>conda create</code> oder <code>venv</code> angelegt) und diese auch anzeigt, so daß keine verlorengeht und selbst Chaoten wie ich den Überblick behalten.</p>
<p>Zudem wurde bestätigt, daß zumindest die mit <code>conda create</code> angelegten virtuellen Umgebungen – wie ich schon vorher vermutet hatte – nicht die Festplatte zumüllen, sondern jedes Paket nur einmal installiert wird (per Default im <code>pkgs</code>-Verzeichnis der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda</a>-Distribution) und in der virtuellen Umgebung nur ein <em>alias</em> zu diesem Paket angelegt wird.</p>
<p>Nun ist das alles ja schön und gut, aber die Frage, die sich mir stellte: Funktioniert das alles auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a>, meiner bevorzugten Python-IDE? Einmal die Suchmaschine meines Vertrauens angeworfen und die Bestätigung erhalten. Alles, mit dem mir <em>Lee Vaughan</em> die virtuellen Umgebungen schmackhaft machte, funktioniert ähnlich komfortabel auch in der Desktop-Applikation von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> und damit unabhängig vom Browser – nachzulesen in der Doumentation unter <a href="https://github.com/jupyterlab/jupyterlab-desktop/blob/master/python-env-management.md">Python environment management</a>.</p>
<p>Das ist natürlich ein echter <em>Game Changer</em>. Denn in der Vergangenheit war ich hin und wieder schon darauf gestoßen, daß sich (Python-) Pakete/Module/Bibliotheken in die Quere kamen und nicht miteinander spielen wollten. Bisher hatte ich dies mit komplett separaten Python-Installationen gelöst. Das ist natürlich <em>brute force</em>, da sind virtuelle Umgebungen viel eleganter.</p>
<p>Zudem kann ich damit auch <a href="https://kantel.github.io/posts/2023042001_pillow_tutorial/">mein Sypder-Problem</a> mit der Installation zusätzlicher Pakete angehen, denn die in der <a href="https://docs.spyder-ide.org/5/faq.html#using-packages-installer">Spyder-FAQ dafür empfohlene Lösung</a> verlangt explizit das Anlegen virtueller Umgebungen.</p>
<p>Damit hätte ich dann – neben JupyterLab Desktop – eine weitere, von <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rstudio.html">RStudio</a> inspirierte freie (MIT-Lizenz) Python-IDE im Portfolio. Denn <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> ist ebenfalls eine großartige Alternative für alle, die aus <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> herausgewachsen sind. Und glaube ich dem Raunen meines Feedreaders, steht <a href="https://www.spyder-ide.org/blog/cbi-installers/">Spyder 6</a> schon in den Startlöchern und scharrt mit den Hufen. Schaun wir mal, was mir da noch bevorsteht. <em>Still digging!</em></p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Martin Breuss: <em><a href="https://realpython.com/python-virtual-environments-a-primer/">Python Virtual Environments: A Primer</a></em>, Real Python, ohne Jahr</li>
<li>Conda Docs: <em><a href="https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html">Managing environments</a></em>, 2017</li>
<li>Lee Vaughan: <em><a href="https://nostarch.com/python-tools-scientists">Python Tools for Scientists</a>.An Introduction to Using Anaconda, JupyterLab, and Python’s Scientific Libraries</em>, San Francisco CA (No Starch Press) 2022</li>
<li>Visual Studio Code Docs: <em><a href="https://code.visualstudio.com/docs/python/environments">Python environments in VS Code</a></em>, 6. Dezember 2023</li>
</ul>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53784792029/">Der alte Oberförster in seiner gewohnten Umgebung</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Hugo, der alte Oberförster, im Zeitungsblätterwald. colored french comic style</em>«. Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Jupyter</category>
  <category>JupyterLab Desktop</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024062502_python_envs/</guid>
  <pubDate>Tue, 25 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062502_python_envs/images/environments.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062501_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53771736284/"><img src="https://kantel.github.io/posts/2024062501_chrome_update/images/octopussy20240625-b.jpg" class="img-fluid"></a></p>
<p>Zwar ist heute (noch) nicht Mittwoch, aber ich gehe davon aus, daß die heutige Aktualisierung das regelmäßige wöchentliche Update ist: Google veröffentlicht das Update der Version 126 (126.0.6478.126/127) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2024/06/stable-channel-update-for-desktop_24.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53771736284/">Octopussy</a></em>, erstellt mit <a href="https://ideogram.ai/">Ideogram</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>«. Modell: Ideogram 1.0, Style: Illustration.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024062501_chrome_update/</guid>
  <pubDate>Tue, 25 Jun 2024 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062501_chrome_update/images/octopussy20240625.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ren’Py, Tuesday JS, RenJS und Twine: Zahlreiche Updates zum Neustart</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024062401_neustart_updates/</link>
  <description><![CDATA[ 




<p><a href="https://github.com/Kirilllive/tuesday-js/releases/tag/48.0.0"><img src="https://kantel.github.io/posts/2024062401_neustart_updates/images/tuesdayjs48-b.jpg" class="img-fluid"></a></p>
<p>Da ich den <a href="https://kantel.github.io/posts/2024062301_mac_mini/">Wechsel auf den neuen Rechner</a> auch dazu nutzen möchte, das zwangsläufig während der über zehnjährigen Nutzung entstandene Chaos auf der Festplatte meines betagten MacBook Pro ein wenig aufzuräumen, habe ich die alte Festplatte nicht einfach als Klon herübergezogen, sondern beschäftige mich gerade damit, alle von mir (noch) genutzten Programme neu zu installieren. Das ist zwar ein wenig zeitraubend, aber ich habe ein besseres Gefühl dabei, da ich doch ein wenig den Überblick verloren habe, und sich Dateien auf meiner Platte tummeln, die ich seit Jahren nicht mehr angefasst hatte.</p>
<p>Heute war der erste Tag, an dem ich etliche der von mir genutzten Programme zur Spieleprogrammierung, speziell für interaktive Geschichten, neu installiert habe. Dabei sind mir ein paar Updates untergekommen, die auch für Euch da draußen interessant sein könnten:</p>
<p><strong>Tuesday JS</strong>: Ich hatte mit der Installation einer aktuellen Version der Visual Novel Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> begonnen, weil dies überfällig war. War doch das <a href="https://kirill-live.itch.io/tuesday-js/devlog/718065/tuesday-js-release-47">Release 47</a> mal wieder unbemerkt an mir vorbeigerauscht, daher wollte ich wenigstens auf das vor zwei Wochen freigegebene <a href="https://kirill-live.itch.io/tuesday-js/devlog/747977/tuesday-js-release-48">Release 48</a> aufmerksam machen. Denn beide Updates haben signifikante Neuerungen verpasst bekommen, die Ihr in den oben verlinkten, jeweiligen Devlogs nachlesen könnt. Die aktuelle Version könnt Ihr – wie immer – von den GitHub-Seiten des Projekts <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/48.0.0">herunterladen</a>.</p>
<p><strong>Ren’Py</strong>: Ein aktuelles Update von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> ist erst vor wenigen Tagen frisch freigegeben worden: Es ist die <a href="https://www.renpy.org/release/8.2.3">Version 8.2.3</a> respektive für diejenigen, die noch Python&nbsp;2 benötige, die <a href="https://www.renpy.org/release/7.7.3">Version 7.7.3</a>. Beide Updates sind ein schnell nachgeschobener Fix der Vorgängerversionen 8.2.2 beziehungsweise 7.7.2. Alle Änderungen könnt Ihr wie immer im <a href="https://www.renpy.org/doc/html/changelog.html#renpy-8-2-3">Changelog</a> nachlesen.</p>
<p><strong>RenJS</strong>: In diesem Beitrag sollte nach Ren’Py ein Hinweise auf <a href="https://renjs.net/index.html">RenJS</a> nicht fehlen. Zwar gibt es von dieser von Ren’Py inspirierten Visual Novel Engine kein aktuelles Update, aber in meinem <a href="https://kantel.github.io/posts/2024050901_monogatari_renjs/">internen Rennen</a> zwischen <a href="https://monogatari.io/">Monogatari</a> und RenJS hat letztgenannte Engine die Nase vorne. Alleiniger Grund ist, daß die RenJS-Skripte in YAML geschrieben werden, die Monogatari-Skripte hingegen in JSON. Und YAML liegt mir einfach mehr, bei Einrückungen verliere ich gelernter Pythonista weniger schnell die Übersicht als bei (geschweiften) Klammern. Ich hatte daher mit RenJS schon einige Versuche durchgeführt (dazu wird es irgendwann später noch einen separaten Beitrag geben) und dabei festgestellt, daß ich es mir erst einmal einfacher mache, wenn ich für ein 16:9-Format eine Fenstergröße von 1024 x 600 (576) verwende. Dann gerate ich nicht in Konflikt mit den (mitgelieferten) Default-GUI-Elementen. Das steht hier nur als Notiz an mich, damit ich es nicht vergesse.</p>
<p><strong>Twine</strong>: <em>Last but not least</em> ist vor etwa einer Woche <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> in der <a href="https://github.com/klembot/twinejs/releases/tag/2.9.0">Version 2.9.0</a> freigegeben worden. Die wichtigsten Neuerungen sind die Updates der Story-Formate <a href="https://github.com/klembot/twinejs/releases/tag/2.9.0">Chapbook auf 2.1.0</a> und <a href="https://twine2.neocities.org/#changes_3.3.9-changes-(unreleased)">Harlowe auf 3.3.9</a>. Und mich erinnert dies schmerzhaft daran, daß schon seit November letzten Jahres meine <a href="https://kantel.github.io/posts/2023111801_smashing_pumpkins_v03/">Geschichte</a> von der kleinen Hexe mit den zermantschten Kürbissen (<a href="https://kantel.github.io/posts/2023110901_smashing_pumpkins_devlog_1/">Devlog 1</a>, <a href="https://kantel.github.io/posts/2023111301_smashing_pumpkins_devlog_2/">Devlog 2</a> und <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Devlog 3</a>) der Fertigstellung harrt.</p>
<p>Sobald der Umzug des <em>Schockwellenreiters</em> eingermaßen eingetütet ist, werde ich auch wieder mit Twine, Tuesday&nbsp;JS und RenJS spielen. Versprochen!</p>



 ]]></description>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>RenPy</category>
  <category>RenJS</category>
  <category>Tuesday JS</category>
  <category>Twine</category>
  <guid>https://kantel.github.io/posts/2024062401_neustart_updates/</guid>
  <pubDate>Mon, 24 Jun 2024 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024062401_neustart_updates/images/tuesdayjs48.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
