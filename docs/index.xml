<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Sat, 12 Apr 2025 16:05:00 GMT</lastBuildDate>
<item>
  <title>Pyxel: Video-Tutorials am Wochenende</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025041202_pyxel_tuts/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54446849301/"><img src="https://kantel.github.io/posts/2025041202_pyxel_tuts/images/pyxelpycharm-b.jpg" class="img-fluid"></a></p>
<p>Wenn sie oder er â€“ angefixt durch <a href="https://kantel.github.io/#category=Pyxel">meine (Wieder-) Entdeckung</a> der minimalistischen (Python3-) Retrogame-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> â€“ ebenfalls etwas mit dieser Fantasykonsole anfangen wollt, so seid gewarnt: Die Anzahl der Tutorials zu Pyxel, die auf YouTube zu finden sind, ist nicht gerade Ã¼ppig (das hat Pyxel Ã¼brigens mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> gemein).</p>
<p>Daher habe ich heute eine Liste aller Tutorials zusammengestellt, die mir bisher untergekommen sind (und von vorneherein nicht absoluter Schrott waren). Einige davon hatte ich schon einmal auf diesen Seiten verlinkt, aber so sind sie alle an einem Ort versammelt.</p>
<section id="caffeinatedtech" class="level2">
<h2 class="anchored" data-anchor-id="caffeinatedtech">CaffeinatedTech</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/Qg16VhEo2Qs?si=SMHbNxiJRAVi1bmS" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Den Anfang macht der User <em>CaffeinatedTech</em>, auf seinem Kanal sind zwei sehr ausfÃ¼hrliche Tutorials zu finden (beide jeweils etwas Ã¼ber zwei Stunden Spieldauer). Auf dem ersten, dem obigen Â»<a href="https://www.youtube.com/watch?v=Qg16VhEo2Qs">Python Retro Game Tutorial</a>Â«, wird eine Variante des klassischen <em>Snake Game</em> entwickelt, das zweite, Â»<a href="https://www.youtube.com/watch?v=8Glx88BVMLs">Create a Retro Game with Pyxel in Python</a>Â«, zeigt eine Breakout-Version. Das erste Video ist schon etwa vier Jahre alt und daher nicht mehr unbedingt <em>up to date</em>, hier lohnt im Zweifelsfall ein Blick in die <a href="https://github.com/kitao/pyxel">Pyxel-Doku auf GitHub</a>, das zweite ist aus dem letzten Jahr und daher ziemlich aktuell. Ich habe aus beiden Videos fast alles gelernt, was ich bisher Ã¼ber Pyxel weiÃŸ, die insgesamt mehr als vier Stunden sind daher keine vergeudete Zeit.</p>
</section>
<section id="testing-coder" class="level2">
<h2 class="anchored" data-anchor-id="testing-coder">Testing Coder</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/gXpe9HZ3Au8?si=-4HcatsJ-oYwlC0g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Wer es etwas kompakter mag, dem empfehle ich die achtteilige Playlist Â»<a href="https://www.youtube.com/playlist?list=PLp_k-oh2bNHairxWQK_SYL5Me_OBJYJs8">Pyxel Tutorial</a>Â« von <em>Testing Coder</em>. Die Videos haben jeweils etwa eine Spieldauer zwischen fÃ¼nf und zehn Minuten und sind daher manchmal doch recht knapp. Aber man kann die Wiedergabe ja anhalten und das Gesehene ein wenig sacken lassen.</p>
</section>
<section id="r3ap3rpy" class="level2">
<h2 class="anchored" data-anchor-id="r3ap3rpy">R3ap3rPy</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/m7msykl-P9I?si=7b5R2cb0_LJC0Jvf" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Vom User <em>R3ap3rPy</em> gibt es ebenfalls zwei Videos zu Pyxel: Einmal das obige Â»<a href="https://www.youtube.com/watch?v=m7msykl-P9I&amp;">Making of a spaceship game!</a>Â« und dann noch Â»<a href="https://www.youtube.com/watch?v=WewNYTXS_Rc">Starry Sky</a>Â« (Jetzt wiÃŸt Ihr, woher ich die Idee fÃ¼r <a href="https://kantel.github.io/posts/2025041103_pyxel_tut_3/">meinen Sternen-Hintergrund</a> habe). Auch hier gilt: Die Tutorials sind beide vor sechs Jahren hochgeladen worden, also gelegentlich mit der Dokumentation abgleichen.</p>
</section>
<section id="gamedevtricks" class="level2">
<h2 class="anchored" data-anchor-id="gamedevtricks">Gamedevtricks</h2>
<iframe class="if16_9" src="https://www.youtube.com/embed/uuR6fdW4dSo?si=UokEkwpaM0ALdydl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><em>Last but not least</em> gibt es noch den Kanal <em>Gamedevtricks</em>, in dessen Videos Euch das gleiche Gesicht entgegenschaut, wie beim Kanal <em>R3ap3rPy</em> oben. Allerdings sind die Tutorials jÃ¼nger (vor etwa zwei Jahren entstanden) und daher recht aktuell. Leider gibt es auch hier keine Playlist, so daÃŸ ich die mÃ¼hsam zusammengeklaubten Videos einzeln auflisten muÃŸ:</p>
<ol type="1">
<li>Pyxel: <a href="https://www.youtube.com/watch?v=uuR6fdW4dSo">A Retro Game Engine coding guide for starters</a> (das Video oben, etwa sieben Minuten Spieldauer).</li>
<li>Retro Gaming in Python: <a href="https://www.youtube.com/watch?v=Xt00RWDUJJY">Writing a Class-Based Game in Pyxel</a> (sechseinhalb Minuten).</li>
<li><a href="https://www.youtube.com/watch?v=z_7nynTSPJ4">How to install examples in Pyxel game engine</a> (anderthalb Minuten).</li>
<li><a href="https://www.youtube.com/watch?v=yJpGx4kgPps">How to draw shapes and objects in Pyxel</a> (zweieinhalb Minuten).</li>
<li><a href="https://www.youtube.com/watch?v=QFojR2MzNG8">How to write code in Pyxel to move objects around</a>. (vier Minuten).</li>
<li><a href="https://www.youtube.com/watch?v=NfcUoHyAEvg">How to move objects around in Pyxel Game Engine</a> (full coding tutorial, fÃ¼nf Minuten).</li>
<li><a href="https://www.youtube.com/watch?v=v4SkqDb_4lQ">Collison Detection in Pyxel Game Engine</a> (complete coding guide, acht Minuten).</li>
<li><a href="https://www.youtube.com/watch?v=87bCFqzhHDU">How To Add Music in Pyxel Game Project</a> (full coding lesson, zweieinhalb Minuten).</li>
</ol>
<p>Trotz oder vielleicht auch gerade wegen ihrer KÃ¼rze fand ich diese Tutorials sehr hifreich, auch wenn der Macher den Ressourcen-Editor scheut, wie der Teufel das Weihwasser.&nbsp;ðŸ¤“</p>


</section>

 ]]></description>
  <category>Pyxel</category>
  <category>Python</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025041202_pyxel_tuts/</guid>
  <pubDate>Sat, 12 Apr 2025 16:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025041202_pyxel_tuts/images/pyxelpycharm.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wohnsitz NeukÃ¶lln: Freies Sofa JuliusstraÃŸe</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025041201_wohnsitz_juliusstrasse/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54406995192/"><img src="https://kantel.github.io/posts/2025041201_wohnsitz_juliusstrasse/images/juliusstrasse-b.jpg" class="img-fluid"></a></p>
<p>Neues aus der Nachbarschaft: Dieses exquisite Ensemble aus entlaufenem Sofa und begleitender Matratze habe ich am 24.&nbsp;MÃ¤rz&nbsp;2025 in der NeukÃ¶llner JuliusstraÃŸe aufgenommen. Wieder ein wunderschÃ¶nes FundstÃ¼ck fÃ¼r meine stetig wachsende Sammlung Â»<a href="https://www.flickr.com/photos/schockwellenreiter/albums/1244272/">Wohnsitz NeukÃ¶lln</a>Â« (aktuell 1.870 Photos).</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2025: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">JÃ¶rg Kantel</a></em></p>



 ]]></description>
  <category>NeukÃ¶lln</category>
  <category>NeukÃ¶llner Bilderbogen</category>
  <category>Wohnsitz NerukÃ¶lln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2025041201_wohnsitz_juliusstrasse/</guid>
  <pubDate>Sat, 12 Apr 2025 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025041201_wohnsitz_juliusstrasse/images/juliusstrasse.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retrogaming mit Python: Pyxel-Tutorial Stage 3</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025041103_pyxel_tut_3/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54441501429/"><img src="https://kantel.github.io/posts/2025041103_pyxel_tut_3/images/pyxel3-b.jpg" class="img-fluid"></a></p>
<p>Nachdem ich in der letzten Zeit ausgiebig mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> (mit Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> als Programmiersprache) <a href="https://kantel.github.io/#category=microStudio">herumgespielt</a> hatte, kam mit in den Sinn, auch meine im <a href="https://kantel.github.io/posts/2024081002_pyxel_tut_2/">August letzten Jahres unterbrochenen Versuche</a> mit der (Python3-) Retrogame-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> wieder aufzunehmen.</p>
<p>Denn Pyxel exportiert (unter anderem) ebenfalls nach HTML, basiert aber auf <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyodide.html">Pyodide</a> und kann daher fast den gesamten <em>Scientific Stack</em> (und mehr) von Python&nbsp;3 nutzen (also zumindest <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/scipy.html">SciPy</a>) und das ist schon etwas mehr als die Brython-Implementierung von microStudio kann. DafÃ¼r unterliegt allerdings Pyxel einigen (gewollten) EinschrÃ¤nkungen (es will halt eine Retro-Fantasy-Spielekonsole sein), die microStudio nicht besitzt.</p>
<p>Ziel war es, eine Pyxel-Version <a href="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/">dieses Mini-Games</a> zu erstellen, das ich ebenfalls im August letzten Jahres mit der Retrokonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> programmiert hatte. Und dies ist das Ergebnis:</p>
<iframe src="pyxel/index.html" class="if16_9" name="Pyxel Maze Game Stage 3">
</iframe>
<p><em>Mit den Pfeiltasten kÃ¶nnt Ihr das PixelmÃ¤nnchen durch das Spielfeld steuern.</em></p>
<p>Der Quellcode unterscheidet sich kaum von dem des <a href="https://kantel.github.io/posts/2024081002_pyxel_tut_2/">vorherigen Pyxel-Tutorials</a>, lediglich die Fensterbreite habe ich verdoppelt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyxel</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ein paar nÃ¼tzliche Konstanten</span></span>
<span id="cb1-4">TS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tilesize</span></span>
<span id="cb1-5">COLKEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color Key</span></span>
<span id="cb1-6">WALLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tile(tile_x, tile_y):</span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyxel.tilemaps() gibt ein Tupel mit den x- und y-Koordinaten</span></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aus der Tilemap des mit pget() identifizierten Tiles zurÃ¼ck</span></span>
<span id="cb1-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pyxel.tilemaps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pget(tile_x, tile_y)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player:</span>
<span id="cb1-14">    </span>
<span id="cb1-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TS</span>
<span id="cb1-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die x-Position des Sprites in der Imagebank</span></span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die y-Position des Sprites in der Imagebank</span></span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.imagebank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-22">        </span>
<span id="cb1-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> move(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (pyxel.btnp(pyxel.KEY_LEFT) </span>
<span id="cb1-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):            </span>
<span id="cb1-26">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_RIGHT)</span>
<span id="cb1-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-29">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_UP)</span>
<span id="cb1-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-32">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_DOWN)</span>
<span id="cb1-34">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> WALLS):</span>
<span id="cb1-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> App:</span>
<span id="cb1-38">    </span>
<span id="cb1-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-40">        pyxel.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel Tutorial Stage 3"</span>, display_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-41">        pyxel.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assets/ressources.pyxres"</span>)</span>
<span id="cb1-42">        </span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialisiere den Spieler</span></span>
<span id="cb1-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position in Map-Koordinaten</span></span>
<span id="cb1-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-46">        </span>
<span id="cb1-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-48">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(get_tile(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-49">        pyxel.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.update, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.draw)</span>
<span id="cb1-50">        </span>
<span id="cb1-51">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-52">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.move()</span>
<span id="cb1-53">    </span>
<span id="cb1-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-55">        pyxel.cls(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-56">        </span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichen die Map</span></span>
<span id="cb1-58">        pyxel.bltm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-59">        </span>
<span id="cb1-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne den Player</span></span>
<span id="cb1-61">        pyxel.blt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.imagebank,</span>
<span id="cb1-62">                  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.u, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.v, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.h,</span>
<span id="cb1-63">                  COLKEY)</span>
<span id="cb1-64">        </span>
<span id="cb1-65">App().run()</span></code></pre></div>
<p>Und da ich dieses Mal unterschiedliche Tiles fÃ¼r die Hindernisse genutzt habe, habe ich ihre Koordinaten aus der Ressourcendatei in der Liste <code>WALLS[]</code> abgelegt (bei mir sind daher auch BÃ¤ume Â»MauernÂ«). Die erste Position des Tupels ist die Spalte des entsprechenden Tiles und die zweite Position die Reihe:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54445386720/"><img src="https://kantel.github.io/posts/2025041103_pyxel_tut_3/images/pyxeleditor.jpg" class="img-fluid"></a></p>
<p>Wie Ihr dem Screenshot entnehmen kÃ¶nnt, hat daher die grÃ¼ne Hintergrundkachel (<strong>kein</strong> Hindernis) die Position <img src="https://latex.codecogs.com/png.latex?(0,%200)"> (erste Kachel in der ersten Reihe) und das Wasser (Hindernis) die Position <img src="https://latex.codecogs.com/png.latex?(3,%200)"> (vierte Kachel in der ersten Reihe), der Baum (ebenfalls ein Hindernis) hingegen die Position <img src="https://latex.codecogs.com/png.latex?(3,%201)"> (vierte Kachel in der zweiten Reihe) â€“ die ZÃ¤hlung beginnt jeweils bei Null. Die gewÃ¼nschte Position wird abgefragt und der Player darf sich nur dahin bewegen, wenn das Teil <strong>kein</strong> Hindernis (<code>not in WALLS</code>) ist. Die Pixelkoordinaten werden mit Hilfe der Division durch die KachelgrÃ¶ÃŸe (<code>(pixel_x//TS), (pixel_y//TS)</code>) in die Map-Koordinaten umgerechnet.</p>
<p>Da ich durch mÃ¼hsame Experimente nun herausgefunden habe, wie bei Pyxel die Umrechnung von Map-Koordinaten in Pixel-Koordinaten funktioniert, hoffe ich, daÃŸ ich nun auch in microStudio herausfinde, wie die Map-Koordinaten in Pixel-Koordinaten umgerechnet werden (hier schwimme ich leider immer noch, aber es scheint auch um einiges komplizierter zu sein).</p>
<p>Das Einbinden der HTML-Version in diese Seiten habe ich ebenfalls mit einer neuen Methode bewerkstelligt (die ich <a href="https://github.com/kitao/pyxel/blob/main/docs/pyxel-web-en.md">hier gefunden</a> hatte): Zuerst habe ich im Terminal mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyxel</span> package APP_DIR STARTUP_SCRIPT_FILE</span></code></pre></div>
<p>eine Pyxel-Standalone-App erzeugt, die mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyxel</span> play PYXEL_APP_FILE</span></code></pre></div>
<p>aufgerufen werden kann und diese dann mit</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyxel</span> app2html your_app.pyxapp</span></code></pre></div>
<p>in eine HTML-Datei gewandelt. Das Ergebnis ist zwar erstaunlich kompakt (trotz BASE64-Codierung), ruft aber leider immer noch die Webversion von Pyxel Ã¼ber ein CDN auf.</p>
<p>Mit</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyxel</span> app2exe your_app.pyxapp</span></code></pre></div>
<p>kann Ã¼brigens auch eine Standalone-Runtime Eures Betriebssystems aus der Pyxel-Python-Datei erteugt werden.</p>
<p>Den <a href="https://github.com/kantel/pyxel/tree/main/nightinpark">Quellcode und alle Assets</a> inklusive der <code>.pixapp</code> und der daraus erzeugten HTML-Datei findet Ihr in meinem GitHub-Repositorium, damit Ihr ebenfalls damit experimentieren kÃ¶nnt.</p>
<p>Jetzt bin ich hin- und hergerissen: Soll ich mit Pyxel erst einmal weiter experimentieren oder soll ich zu microStudio zurÃ¼ckkehren? Das Spielen mit Pyxel macht mir SpaÃŸ und speziell mit dem Ressourceneditor mÃ¶chte ich noch einiges anstellen (so gefÃ¤llt mir die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pyxelpal.html">Default-Farbpalette</a> nicht, ich wÃ¼rde sie gerne entweder durch die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pico8.html">Pico-8 Farbpalette</a> oder die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/sweetie16.html">TIC-80 Farbpalette</a> ersetzen). Ich habe auch schon testweise dem Player-Sprite eine Animation verpasst.</p>
<p>AuÃŸerdem gefÃ¤llt mir, daÃŸ Pyxel einerseits so retromÃ¤ÃŸig eingeschrÃ¤nkt daherkommt (denn wie ich in diesem Zusammenhang <a href="http://blog.schockwellenreiter.de/2018/08/2018080802.html">schon 2018 schrieb</a>: In der BeschrÃ¤nkung liegt die Kraft!), aber auf der anderen Seite fast das vollstÃ¤ndige Python&nbsp;3-Ã–kosystem genutzt werden kann. Ich muÃŸ daher noch ein wenig nachdenken und vermutlich auch experimentieren. <em>Still digging!</em></p>



 ]]></description>
  <category>Pyxel</category>
  <category>Python</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025041103_pyxel_tut_3/</guid>
  <pubDate>Fri, 11 Apr 2025 15:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025041103_pyxel_tut_3/images/pyxel3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft verÃ¶ffentlicht Update 16.95.4 fÃ¼r Office for Mac</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025041102_loffice_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54356571833/"><img src="https://kantel.github.io/posts/2025041102_loffice_update/images/officelady-b.jpg" class="img-fluid"></a></p>
<p>Microsoft liefert mit dem <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">Update auf 16.95.4 fÃ¼r Office 365, 2021 und 2024 for Mac</a> natÃ¼rlich auch wieder aktuelle Sicherheitskorrekturen.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhÃ¤lt man die Korrekturen am einfachsten Ã¼ber Microsofts AutoUpdate â€“ in einem beliebigen Office-Programm Ã¼ber MenÃ¼: <code>Hilfe &gt; Auf Updates Ã¼berprÃ¼fen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: Microsoft Office unterstÃ¼tzt stets nur die drei Hauptversionen von macOS. <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-f%C3%BCr-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">Momentan sind dies Sequoia, Sonoma und Ventura</a>. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54356571833/">Office Woman</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored French Comic Style. A sexy young woman with long red hair, green eyes and red lipstick is sitting in an office at a desk in front of a monitor and a keyboard. She is wearing a white, open blouse with a low neckline and a rust-colored vest. She has a pencil in one hand. On the desk is an open notepad, a cup with writing utensils and a stack of books. There are shelves on the walls with many more books and files. The spring sun is shining through a window in the background</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>ProduktivitÃ¤t</category>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025041102_loffice_update/</guid>
  <pubDate>Fri, 11 Apr 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025041102_loffice_update/images/officelady.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf der Suche nach dem FrÃ¼hling</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025041101_fruehling/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54443919900/"><img src="https://kantel.github.io/posts/2025041101_fruehling/images/fruehling-b.jpg" class="img-fluid"></a></p>
<p>Gestern auf dem NeukÃ¶llner <a href="https://evfbs.de/start/friedhoefe/region-sued/einzeldarstellung/emmaus/kurzportraet">Emmaus-Friedhof</a> an der HermannstraÃŸe.</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2025: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">JÃ¶rg Kantel</a></em></p>



 ]]></description>
  <category>NeukÃ¶lln</category>
  <category>NeukÃ¶llner Bilderbogen</category>
  <category>Parks und GÃ¤rten</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2025041101_fruehling/</guid>
  <pubDate>Fri, 11 Apr 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025041101_fruehling/images/fruehling.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Cute Planet mit microStudio</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040901_cute_planet/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54440578971/"><img src="https://kantel.github.io/posts/2025040901_cute_planet/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Ich scheine besessen von den scheinbar endlos scrollenden HintergrÃ¼nden in Spielen zu sein. So besessen, daÃŸ ich mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> (und Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> als Programmiersprache) noch ein neues Experiment gestartet habe â€“ dieses Mal mit einem Â»echtenÂ« endlos scrollenden Hintergrund.</p>
<p>Denn dieses Mal lasse ich den Hintergrund (einen Sternenhimmel) ebenfalls von microStudio erzeugen und der Zufallszahlengenerator setzt die Sterne jedesmal an eine andere Position, so daÃŸ es keine Wiederholungen gibt.</p>
<p>Doch zuerst einmal braucht jedes Spiel eine Geschichte: Octopussy hat auf einer entlegenen Raumstation monatelang Forschungsarbeiten betrieben und ist nun auf dem RÃ¼ckflug nach Hause. Leider hat Ihr Raumschiff einen Defekt (der Motor stottert) und lÃ¤sst sich nur noch schwer steuern. Das haben die bÃ¶sen Space-Beetles und Rocket-Boys mitbekommen und wollen Octopussys Raumkrake zerstÃ¶ren. Octopussy muÃŸ also auf ihrem Heimflug den feindlichen Raumschiffen ausweichen.</p>
<iframe src="cuteplanet/index.html" class="if16_9" name="Cute Planet (v1)">
</iframe>
<p><em>Mit der [SPACE]-Taste kann das Rumschiff Â»gesteuertÂ« werden.</em></p>
<p>Das ist die Geschichte, nun der Code fÃ¼r den endlos scrollenden Sternenhimmel, mit dem alles angefangen hat. DafÃ¼r habe ich die Klasse <code>Star</code> geschrieben:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Star:</span>
<span id="cb1-4">  </span>
<span id="cb1-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-8">    size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size, size</span>
<span id="cb1-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb1-11">    </span>
<span id="cb1-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w</span>
<span id="cb1-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-15">    </span>
<span id="cb1-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-17">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dx</span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb1-19">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-22">    screen.fillRound(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(255, 239, 0)"</span>)</span></code></pre></div>
<p>Jeder Stern wird mit einer zufÃ¤lligen GrÃ¶ÃŸe an eine zufÃ¤llig ausgewÃ¤hlte Position innerhalb des Fensters gesetzt und bewegt sich langsam nach links. Hat er links das Fenster wieder verlassen, wird er rechts auÃŸerhalb des Fensters erneut positioniert. Dabei wird seine vertikale Position wieder neu vom Zufallszahlengenerator gesetzt, so daÃŸ keine Wiederholung erkennbar ist.</p>
<p>Etwas seltsam ist das Casting auf <code>int()</code> innerhalb des Constructors. Denn eigentlich sollte die Integer-Division (<code>//</code>) einen Integerwert herausschreiben, aber in microStudio ergibt <code>screen.width//2</code> den Float-Wert <img src="https://latex.codecogs.com/png.latex?178.0"> und damit kommt <code>randint()</code> natÃ¼rlich nicht klar. <code>screen.height//2</code> gibt mir hingegen ein korrektes <img src="https://latex.codecogs.com/png.latex?100"> heraus, aber sicherheitshalber habe ich auch dieses mit <code>int()</code> gecastet.</p>
<p>Ansonsten ist das Spiel dem <a href="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/">Pizza-Flieger</a> sehr Ã¤hnlich, nur daÃŸ Octopussys Raumkrake einer <a href="https://de.wikipedia.org/wiki/Flappy_Bird">Flappy Bird</a> Ã¤hnlichen Mechanik folgt: Die Raumkrake schwebt aufgrund ihres Defektes langsam nach unten und nur wenn der Spieler die [SPACE]-Taste drÃ¼ckt, hÃ¼pft sie wieder ein wenig nach oben. Dies wird in der Klasse <code>Octopussy</code> realisiert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Octopussy:</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span></span>
<span id="cb2-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span> </span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"octopussy"</span></span>
<span id="cb2-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gravity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb2-11"></span>
<span id="cb2-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gravity</span>
<span id="cb2-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span></span>
<span id="cb2-15">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb2-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard.press, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPACE"</span>):</span>
<span id="cb2-17">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lift</span>
<span id="cb2-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check border</span></span>
<span id="cb2-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-20">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-23"></span>
<span id="cb2-24">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-25">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span>
<span id="cb2-26">    </span>
<span id="cb2-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_input(obj, val):</span>
<span id="cb2-28">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(obj, val):</span>
<span id="cb2-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> obj[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<p>Die Kraft, die die Raumkrake nach unten zieht, habe ich <code>gravity</code> genannt<sup>1</sup>. Und damit das Schiff, wenn es durch die BetÃ¤tigung der [SPACE]-Taste nach oben geschleudert wird, nicht im Nirwana verschwindet, wird die <em>velocity</em> durch die Multiplikation mit einem Reibungsfaktor (in meinem Fall <img src="https://latex.codecogs.com/png.latex?0.85"><sup>2</sup>) abgebremst, bis sie die Raumkrake wieder nach unten zieht.</p>
<p>Die Klasse <code>Spaceship</code> fÃ¼r die bÃ¶sen Buben ist nahezu identisch mit der Klasse <code>Enemy</code> (fÃ¼r die gefÃ¤hrlichen Pizzen) des <a href="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/">Pizza-Fliegers</a>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> uniform, randint, choice</span>
<span id="cb3-2"></span>
<span id="cb3-3">ship_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beetleship"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beetleship"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rocketship"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"planet"</span>]</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Spaceship():</span>
<span id="cb3-6">  </span>
<span id="cb3-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb3-9">    </span>
<span id="cb3-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-11">    </span>
<span id="cb3-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb3-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb3-15">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> choice(ship_images)</span>
<span id="cb3-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uniform(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb3-17">    </span>
<span id="cb3-18">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb3-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb3-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-23">      </span>
<span id="cb3-24">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-25">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Nur, daÃŸ mit <code>random.choice()</code> unterschiedliche Gegner aus der Liste <code>ship_images[]</code> ausgewÃ¤hlt werden<sup>3</sup>. DaÃŸ <code>beetleship</code> zweimal in der Liste auftaucht, ist kein Fehler â€“ ich wollte dadurch erreichen, daÃŸ der MarienkÃ¤fer-Bubbi hÃ¤ufiger im Spiel erscheint, als die anderen Figuren.</p>
<p>Das Hauptprogramm ist durch die Nutzung von Klassen wieder erfreulich kurz geraten:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">NUM_STARS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-2">NUM_ENEMIES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">stars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-5">spaceships <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb4-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_STARS):</span>
<span id="cb4-9">    stars.append(Star())</span>
<span id="cb4-10">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_ENEMIES):</span>
<span id="cb4-11">    spaceships.append(Spaceship())</span>
<span id="cb4-12">  octopussy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Octopussy()</span>
<span id="cb4-13">  spaceships.append(octopussy)</span>
<span id="cb4-14">  </span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb4-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> star <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> stars:</span>
<span id="cb4-18">    star.update()</span>
<span id="cb4-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ship <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> spaceships:</span>
<span id="cb4-20">    ship.update()</span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb4-23">  screen.clear(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(0, 80, 125"</span>)</span>
<span id="cb4-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> star <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> stars:</span>
<span id="cb4-25">    star.draw()</span>
<span id="cb4-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ship <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> spaceships:</span>
<span id="cb4-27">    ship.draw()</span></code></pre></div>
<p>Dadurch, daÃŸ ich <code>octopussy</code> auch mit in die Liste <code>spaceships[]</code> aufgenommen habe, konnte ich vermeiden, die Variable <code>octopussy</code> als <code>global</code> deklarieren zu mÃ¼ssen.</p>
<p>Die verwendeten Sprites sind nicht von mir (mir wurde leider kein Zeichenstift mit in die Wiege gelegt), sondern stammen aus der Sammlung Â»<a href="https://lostgarden.com/2007/04/07/spacecute-first-round-of-prototypes-and-new-graphics/">Space Cute</a>Â« von <em><a href="https://lostgarden.home.blog/">Daniel Cook</a></em>, die er unter einer <em>Creative Commons Licence</em> (<a href="https://creativecommons.org/licenses/by/3.0/us/">CC BY 3.0 US</a>) freigegeben hat. <a href="https://lostgarden.com/2007/03/15/lost-garden-license/">Diese Lizenz</a> (und der Anstand) verlangen die Namensnennung des Urhebers. Dem bin ich hiermit nachgekommen.</p>
<p>Wie immer habe ich auch dieses Skript auf den <a href="https://microstudio.io/i/kantel/cuteplanet/">Seiten von microStudio verÃ¶ffentlicht</a>, damit Ihr es klonen, erweitern oder einfach nur damit herumspielen kÃ¶nnt.</p>
<p>Und unter <a href="https://kantel.github.io/#category=microStudio">diesem</a> Link kÃ¶nnt Ihr Euch alle bisher im <em>Schockwellenreiter</em> erschienenen BeitrÃ¤ge zu microStudio anzeigen lassen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">FuÃŸnoten</h2>

<ol>
<li id="fn1"><p>Ja, ich weiÃŸ, daÃŸ es im Weltall keine Gravitation gibt, aber hey, das ist mein Spiel und da bestimme ich die Regeln!â†©ï¸Ž</p></li>
<li id="fn2"><p>Mit diesem Wert, genau wie mit den Werten fÃ¼r <code>gravity</code> und <code>lift</code>, kÃ¶nnt Ihr spielen.â†©ï¸Ž</p></li>
<li id="fn3"><p>Der kleine grÃ¼ne Planet ist eigentlich kein Gegner. In einer spÃ¤teren Version des Spieles soll er als <em>Power Up</em> fungieren, der Octopussy wieder neue Lebenspunkte gibt.â†©ï¸Ž</p></li>
</ol>
</section></div> ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025040901_cute_planet/</guid>
  <pubDate>Wed, 09 Apr 2025 11:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040901_cute_planet/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische SicherheitslÃ¼cken in Chrome</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040802_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370075273/"><img src="https://kantel.github.io/posts/2025040802_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Das Mittwochs-Update kommt gewiÃŸ, auch wenn es schon am Dienstag ist: Unser aller Datenkrake Google verÃ¶ffentlichte das Update der Version 135 (135.0.7049.84/85) seines Browsers Chrome und schloss damit <a href="https://chromereleases.googleblog.com/2025/04/stable-channel-update-for-desktop_8.html">kritische SicherheitslÃ¼cken</a>.</p>
<p>Chrome aktualisiert sich (auÃŸer bei Linux) Ã¼ber die integrierte Update-Funktion, kann aber â€“ wenn es pressiert â€“ auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370075273/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040802_chrome_update/</guid>
  <pubDate>Tue, 08 Apr 2025 19:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040802_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schlieÃŸt am Â»April-PatchdayÂ« wieder SicherheitslÃ¼cken in Android</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040801_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54438121257/"><img src="https://kantel.github.io/posts/2025040801_android_update/images/robot-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2025-04-01">Sicherheitsupdate fÃ¼r Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2025-04-01">Pixel-GerÃ¤ten</a>) wieder SicherheitslÃ¼cken geschlossen. Einige davon werden offenbar bereits ausgenutzt, so daÃŸ ein Update dringend empfehlenswert ist.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 9, 9 pro, 9 pro XL, Pixel 8a, Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a und Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie Ã¼blich in BÃ¤lde nachziehen, sofern sie Ã¼berhaupt noch entsprechenden Support leisten. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54438121257/">A Robot in Dystopia</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style. Illustration of a small green robot looking at his mobile phone in his hand. He is standing on a street in a run-down dystopian city with some car wrecks, the sun is shining</em>Â«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Android</category>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040801_android_update/</guid>
  <pubDate>Tue, 08 Apr 2025 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040801_android_update/images/robot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Frauen am KontrabaÃŸ: Die Kim-Sisters haben Fieber</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040701_kim_sisters/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54437153250/"><img src="https://kantel.github.io/posts/2025040701_kim_sisters/images/kimsisters-b.jpg" class="img-fluid"></a></p>
<p>Die <a href="https://en.wikipedia.org/wiki/The_Kim_Sisters">Kim Sisters</a> waren eine weibliche Gesangsgruppe aus SÃ¼dkorea, die in den 1950er und 1960er Jahren in den Vereinigten Staaten einige Erfolge feierten. Sie begannen ihre Karriere im Jahre 1953 schon als Kinder, als sie im Koreakrieg zur Unterhaltung US-Amerikanischer Soldaten auftraten. Ihre Eltern waren <em>Lee Nan-young</em>, eine berÃ¼hmte koreanische SÃ¤ngerin und <em>Kim Hae-song</em>, ein populÃ¤rer Dirigent, der im Koreakrieg starb.</p>
<p>Sie erhielten schon frÃ¼h eine musikalische Ausbildung, um mit ihren Aufgtrtitten vor den Soldaten zum Familienunterhalt beizutragen. Sie waren nicht nur SÃ¤ngerinnen und TÃ¤nzerinnen, sondern auch Multi-Instrumentalistinnen, von denen mindestens eine auch den KontrabaÃŸ virtuos beherrschte, wie das Video unten zeigt, in dem sie den durch <a href="https://zeitlupe.ch/panorama/kultur/musik/fever-von-peggy-lee/"><em>Peggy Lee</em> bekanntgewordenen Klassiker Â»FeverÂ«</a> hinreissend interpretieren:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/qE8vPoq8AfY?si=mRY7obdDwfSj9sOQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Der <a href="https://www.youtube.com/watch?v=qE8vPoq8AfY">Videomitschnitt</a> stammt aus der <em>Ed Sullivan Show</em> vom 10. Januar 1965, daher entschuldigt bitte die bescheidene BildqualitÃ¤t.</p>
<p>Das Trio bestand aus Sook-ja Â»SueÂ«, Ai-ja Â»AijaÂ« und Min-ja Â»MiaÂ« Kim, das nicht nur als eine der ersten Girl-Groups gilt, sondern auch als Vorreiter des <a href="https://de.wikipedia.org/wiki/K-Pop">K-Pop</a>, wie es <em>Melody Knox</em> in ihrem informativen Video Â»<a href="https://www.youtube.com/watch?v=buhXGuBLnho">How The Kim Sisters Brought K-Pop to America</a>Â« erlÃ¤utert:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/buhXGuBLnho?si=vHwqSmOCYxLuuJ6B" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Sie geht darin auch auf den Rassismus ein, unter dem nicht nur die Musikerinnen, sondern viele Amerikanerinnen und Amerikaner asiatischer Herkunft leiden mussten. Und â€“ leider meistens eine Ausnahme bei YouTube-Videos â€“ sie benennt im Begleittext ihre Quellen. Daher habe ich den <a href="https://www.youtube.com/@melodyknoxyt">Kanal von ihr</a> auch gleich abonniert.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54437153250/">The Kim Sisters</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style. A girl band of three young Korean women on a show stage sing a hit song. They play double bass, saxophone, and electric guitar. They are wearing a Korean hanbok</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2025040701_kim_sisters/</guid>
  <pubDate>Mon, 07 Apr 2025 17:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040701_kim_sisters/images/kimsisters.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische SicherheitslÃ¼cken in Chrome</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040203_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54369803956/"><img src="https://kantel.github.io/posts/2025040203_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Zwar ist es schon spÃ¤t, aber es ist immer noch Mittwoch, und Mittwochs aktualisiert (in der Regel) unser aller Datenkrake ihr Flaggschiff: Google verÃ¶ffentlicht das Update der <a href="https://stadt-bremerhaven.de/chrome-135-ist-da-und-bringt-sicherheitsupdates-mit/">Version 135 (135.0.7049.41/42/52) seines Browsers Chrome</a> und schlieÃŸt damit wieder <a href="https://chromereleases.googleblog.com/2025/04/stable-channel-update-for-desktop.html">kritische SicherheitslÃ¼cken</a>.</p>
<p>Chrome aktualisiert sich (auÃŸer bei Linux) Ã¼ber die integrierte Update-Funktion, kann aber â€“ wenn es pressiert â€“ auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54369803956/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>Â«. Modell: Flux.1 (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040203_chrome_update/</guid>
  <pubDate>Wed, 02 Apr 2025 19:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040203_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 137.0 freigegeben</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040202_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54426720921/"><img src="https://kantel.github.io/posts/2025040202_thunderbird_update/images/thunderbird-b.jpg" class="img-fluid"></a></p>
<p>Dieses Mal hat sich der Donnervogel <a href="https://kantel.github.io/posts/2025033101_firefox_update/">zwei Tage Zeit gelassen</a>, bevor er den Feuerfuchs jagte: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 137.0 freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/137.0/releasenotes/">SicherheitslÃ¼cken behoben</a>.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer Ã¼ber das MenÃ¼ <code>Hilfe &gt; Ãœber Thunderbird</code> angestoÃŸen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54426720921/">Thunderbird hunts Firefox</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored DC Comic style, illustration of a majestic thunderbird with colored feathers soaring above a mountain range during a bright sunset, hunting a red firefox</em>Â«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040202_thunderbird_update/</guid>
  <pubDate>Wed, 02 Apr 2025 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040202_thunderbird_update/images/thunderbird.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apple verÃ¶ffentlicht watchOS 11.4</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040201_apple_update_nachschlag/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54424039170/"><img src="https://kantel.github.io/posts/2025040201_apple_update_nachschlag/images/applewatch-b.jpg" class="img-fluid"></a></p>
<p>Der IT-Riese aus Cupertino hat die beim <a href="https://kantel.github.io/posts/2025040102_apple_updates/">gestrigen Flickentag</a> fehlende Aktualisierung seiner Uhr heute nachgeliefert: Apple hat fÃ¼r die Apple Watch nun auch <a href="https://support.apple.com/en-us/122376">watchOS 11.4 bereitgestellt</a> und bietet damit im wesentlichen Fehlerbehebungen.</p>
<p>Die Aktualisierung wird Ã¼ber die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54424038415/">Zauberapfel im Zauberwald</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored DC Comic style, a mad hatter gives a sexy naked woman, with big boops, and a nice butt an apple in the summer enchanted forest</em>Â«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040201_apple_update_nachschlag/</guid>
  <pubDate>Wed, 02 Apr 2025 18:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040201_apple_update_nachschlag/images/applewatch.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apples monatlicher Flickentag</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040102_apple_updates/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54424038415/"><img src="https://kantel.github.io/posts/2025040102_apple_updates/images/appleupdates-b.jpg" class="img-fluid"></a></p>
<p>Der monatliche Patchday des IT-Riesen aus Cupertino mit dem angebissenen Apfel im Logo kommt dieses Mal sehr frÃ¼h, was auf eine gewisse Dringlichkeit schlieÃŸen lÃ¤sst. Und bis auf die Uhr sind auch diesen Monat wieder alle Betriebssystem-Versionen betroffen, so daÃŸ ich sie der Einfachheit halber <em>en bloc</em> abhandeln kann:</p>
<section id="apple-verÃ¶ffentlicht-macos-sequoia-15.4" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-macos-sequoia-15.4">Apple verÃ¶ffentlicht macOS Sequoia 15.4</h2>
<p>Apple hat das Update auf die neue <a href="https://support.apple.com/en-us/122373">Betriebssystemversion macOS Sequoia&nbsp;15.4</a> freigegeben bietet auch hierzulande nun Â»Apple IntelligenceÂ« (KI) fÃ¼r die neueren GerÃ¤temodelle und korrigiert auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht â€“ nachdem <a href="https://www.mactechnews.de/news/article/Apple-veroeffentlicht-macOS-15-4-186910.html">anfÃ¤ngliche Schwierigkeiten</a> behoben wurden â€“ Ã¼ber die Systemeinstellungen zur VerfÃ¼gung.</p>
</section>
<section id="apple-verÃ¶ffentlicht-sicherheitsupdate-fÃ¼r-macos-ventura-und-sonoma" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-sicherheitsupdate-fÃ¼r-macos-ventura-und-sonoma">Apple verÃ¶ffentlicht Sicherheitsupdate fÃ¼r macOS Ventura und Sonoma</h2>
<p>Apple hat auch das Sicherheitsupdate auf <a href="https://support.apple.com/en-us/122375">macOS Ventura 13.7.5</a> und <a href="https://support.apple.com/en-us/122374">macOS Sonoma 14.7.5</a> freigegeben.</p>
<p>Die Updates stehen wie Ã¼blich Ã¼ber die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-verÃ¶ffentlicht-ios-ipados-18.4" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-ios-ipados-18.4">Apple verÃ¶ffentlicht iOS / iPadOS 18.4</h2>
<p>Wie angekÃ¼ndigt hat Apple das <a href="https://support.apple.com/en-us/122371">Update auf iOS 18.4 und iPadOS 18.4</a> bereitgestellt. Die Updates bieten auch hierzulande nun Â»Apple IntelligenceÂ« (KI) fÃ¼r die neueren GerÃ¤temodelle und darÃ¼ber hinaus viele neue Funktionen und Fehlerbehebungen und korrigieren SiÄ‡herheitslÃ¼cken.</p>
<p>Das Update auf auf iOS 18.4 und iPadOS 18.4 kann Ã¼ber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code> an ausreichende Akku-KapazitÃ¤t und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des GerÃ¤ts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-verÃ¶ffentlicht-ipados-17.7.6-fÃ¼r-Ã¤ltere-systeme" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-ipados-17.7.6-fÃ¼r-Ã¤ltere-systeme">Apple verÃ¶ffentlicht iPadOS 17.7.6 fÃ¼r Ã¤ltere Systeme</h2>
<p>Apple hat nun das Update auf iPadOS 17.7.6 fÃ¼r Ã¤ltere iPads bereitgestellt. Das Update behebt <a href="https://support.apple.com/en-us/122372">kritische SicherheitslÃ¼cken</a> fÃ¼r die Anwender, die nicht auf iOS/iPadOS 18 updaten wollen.</p>
<p>Das Update auf iPadOS 17.7.6 kann Ã¼ber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code> an ausreichende Akku-KapazitÃ¤t und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des GerÃ¤ts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-verÃ¶ffentlicht-updates-fÃ¼r-diverse-Ã¤ltere-systeme-von-iosipados" class="level2">
<h2 class="anchored" data-anchor-id="apple-verÃ¶ffentlicht-updates-fÃ¼r-diverse-Ã¤ltere-systeme-von-iosipados">Apple verÃ¶ffentlicht Updates fÃ¼r diverse Ã¤ltere Systeme von iOS/iPadOS</h2>
<p>Apple hat auch Updates fÃ¼r diverse Ã¤ltere Systeme von iOS/iPadOS bereitgestellt. Auch diese Updates auf <a href="https://support.apple.com/en-us/122346">iOS/iPadOS 16.7.11</a> und <a href="https://support.apple.com/en-us/122345">iOS/iPadOS 15.8.4</a> beheben kritische SicherheitslÃ¼cken fÃ¼r alle Anwender, die nicht auf iOS/iPadOS 18 updaten wollen.</p>
<p>Auch diese Updates kÃ¶nnen Ã¼ber OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code> an ausreichende Akku-KapazitÃ¤t und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des GerÃ¤ts ist wie immer sehr zu empfehlen.</p>
<p><em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54424038415/">Zauberapfel im Zauberwald</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored DC Comic style, a mad hatter gives a sexy naked woman, with big boops, and a nice butt an apple in the summer enchanted forest</em>Â«. Modell: Flux.1 (Dev), Style: PixelWave.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040102_apple_updates/</guid>
  <pubDate>Tue, 01 Apr 2025 11:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040102_apple_updates/images/appleupdates.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Mediadaten zum FrÃ¼hlingsanfang</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040101_mediadaten/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54362942869/"><img src="https://kantel.github.io/posts/2025040101_mediadaten/images/biber-b.jpg" class="img-fluid"></a></p>
<p>Ich hoffe <a href="https://kantel.github.io/posts/2025030301_mediadaten/">immer noch</a> auf den FrÃ¼hling und das soll Euch auch wieder das (zugegeben leicht kitschige) <a href="https://www.flickr.com/photos/schockwellenreiter/54362942869/">Bannerbild oben</a> vermitteln. Aber auch an einem 1.&nbsp;April beginnt ein neuer Monat und daher ist es Zeit fÃ¼r das, was manches Mal hochtrabend auch <em>Mediadaten</em> genannt wird: Im MÃ¤rz 2025 hatte der <em>Schockwellenreiter</em> laut seinem nicht immer zuverlÃ¤ssigen, aber dafÃ¼r (hoffentlich!) datenschutzkonformen <del>GeiÃŸenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>5.332&nbsp;Seitenaufrufe</strong>. Wie immer tÃ¤uscht diese Exaktheit der Ziffer eine Genauigkeit der Zahl nur vor, trotzdem freue ich mich Ã¼ber jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p><em>ðŸ˜Ž &nbsp; Bleibt mir gewogen!</em></p>
<p>Und dann noch der Blick auf die <em>Top Five</em> des Vormonats, der dieses Mal wieder ein paar interessante Einblicke aufweist:</p>
<ol type="1">
<li>Unangefochten an der Spitze steht â€“ wie schon seit Monaten â€“ der Artikel Â»<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html">Bildgeneratoren und KÃ¼nstliche Intelligenz â€“ ohne Zensoren</a>Â« vom 10.&nbsp;Januar&nbsp;2024.</li>
<li>Schon weit abgeschlagen folgt Â»<a href="https://kantel.github.io/posts/2025030901_marimo/">Marimo â€“ ein neuer Stern am (Python-) Notebook-Himmel?</a>Â« vom 9.&nbsp;des Vormonats.</li>
<li>Dann Ã¼berraschend wieder etwas aus meinem Backkatalog: Â»<a href="https://kantel.github.io/posts/2023061701_platformer_pygame_pygbag_1/index.html">Ein Jump and Run (Mario Style) in Pygame und Pygbag (Stage 1)</a>Â«, ein Beitrag, den ich schon am 17.&nbsp;Juni&nbsp;2023 verÃ¶ffentlicht hatte.</li>
<li>Doch auch (relativ) aktuelle Update-Meldungen finden ihre Leser, wie zum Beispiel die Â»<a href="https://kantel.github.io/posts/2025022801_libre_office_update/">Neue Version 24.8.5 von LibreOffice</a>Â«, erschienen am 28.&nbsp;Februar dieses Jahres.</li>
<li>Und <em>last but not least</em> fand die Ã¼ber ein Jahr alte Meldung Â»<a href="https://kantel.github.io/posts/2024031501_atom_wird_pulsar/">Der Atom-Editor lebt â€“ und heiÃŸt jetzt Pulsar</a>Â« Euer reges Interesse.</li>
</ol>
<p>Bemerkenswert finde ich, daÃŸ drei der fÃ¼nf BeitrÃ¤ge mindestens Ã¤lter als ein Jahr sind, aber dennoch im letzten Monat viele Leser fanden. Das lÃ¤sst zwei RÃ¼ckschlÃ¼sse zu: Erstens, daÃŸ unser aller Datenkrake mich in ihrem Suchmaschinen-Algorithmus hochgerankt hat oder zweitens, daÃŸ im letzten Monat keine interessanten neuen Artikel hier in diesem <del>Blog</del> Kritzelheft erschienen sind. Ich hoffe jedoch stark, daÃŸ nur der erste SchluÃŸ zutrifft.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54362942869/">Ein Biber im FrÃ¼hling</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style, a beaver in a red dressing gown sits on a bench in the garden with a laptop on his lap, next to him a small table with a steaming cup of coffee. It is spring, many flowering plants and many small birds can be seen, the warm spring sun is bathing the scenery</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Mediadaten</category>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2025040101_mediadaten/</guid>
  <pubDate>Tue, 01 Apr 2025 10:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040101_mediadaten/images/biber.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizza Plane â€“ jetzt in microStudio (Stage 1)</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54412341755/"><img src="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/images/pizzaplanev1-b.jpg" class="img-fluid"></a></p>
<p>Wer meinen BeitrÃ¤gen hier im <em>Schockwellenreiter</em> schon lÃ¤nger folgt, hat sicher geahnt, daÃŸ der vor einem <a href="https://kantel.github.io/posts/2025032501_seamless_scrolling_desert/">Â»endlosÂ« scrollenden Hintergrund durch die Luft schwebende Dachs</a> nicht grundlos den Weg auf diese Seiten fand. Ich mÃ¶chte nÃ¤mlich herausfinden, ob mein Projekt Â»<a href="http://blog.schockwellenreiter.de/2022/10/2022101502.html">Pizza Plane</a>Â«, das ich ursprÃ¼nglich einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> begonnen, dann aber â€“ nach meiner <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">Abkehr von TigerJython</a> â€“ in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> wieder <a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">aufgenommen</a> hatte, nicht auch in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> mit Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> realisieren kann.<sup>1</sup> Spoiler: Die ersten Experimente verliefen recht vielversprechend.</p>
<iframe src="pizzaplanev1/index.html" class="if16_9" name="Pzza Plane (v1)">
</iframe>
<p>Ich erinnere an die Spielidee: Die pÃ¶se Meloni mÃ¶chte mit Hilfe mutierter, tÃ¶dlicher und angriffslustiger Pizzen halb Europa unterdrÃ¼cken. Nur ein kleiner grÃ¼ner<sup>2</sup> Flieger leistet Widerstand und stellt sich den Pizzen Ã¼ber einer KulturwÃ¼ste entgegen. In einer ersten Version habe ich den Hintergrund, den Flieger und die Pizzen implementiert.</p>
<p>Zuerst einmal die Klasse <code>Background</code>, die sich kaum von der gleichnamigen Klasse im Dachsbeispiel unterscheidet:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Background:</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x</span>
<span id="cb1-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y</span>
<span id="cb1-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb1-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">285</span></span>
<span id="cb1-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb1-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert_bg"</span></span>
<span id="cb1-10">    </span>
<span id="cb1-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-12">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb1-14">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w</span>
<span id="cb1-15">      </span>
<span id="cb1-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-17">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Dann die Klasse <code>Plane</code>, bei der ich dem Flieger im Sprite-Editor eine kleine Animation (wie <a href="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/">hier beschrieben</a>) spendiert habe. Diese lÃ¤uft, ohne daÃŸ man etwas programmieren muÃŸ, automatisch ab:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Plane:</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span></span>
<span id="cb2-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span></span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span></span>
<span id="cb2-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"planefly"</span></span>
<span id="cb2-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.updown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-10">    </span>
<span id="cb2-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span>):</span>
<span id="cb2-13">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.updown</span>
<span id="cb2-14">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check border</span></span>
<span id="cb2-15">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span>):</span>
<span id="cb2-18">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.updown</span>
<span id="cb2-19">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb2-20">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-22">    </span>
<span id="cb2-23">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-24">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Die Klasse, die momentan nur die Pizzen beherbergt, habe ich <code>Enemy</code> genannt, weil sie eventuell spÃ¤ter auch noch feindliche Tomaten, Pepperoni, Auberginen oder sonstiges, gefÃ¤hrliches GemÃ¼se aufnehmen soll:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Enemy:</span>
<span id="cb3-4">  </span>
<span id="cb3-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span></span>
<span id="cb3-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pizza"</span></span>
<span id="cb3-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-9">    </span>
<span id="cb3-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-11">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb3-12">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb3-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-14">    </span>
<span id="cb3-15">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb3-19">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-20">      </span>
<span id="cb3-21">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-22">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Die Methode <code>reset()</code> setzt die Pizzen auf eine zufÃ¤llige Position rechts auÃŸerhalb des Bildschirmausschnitts zurÃ¼ck, so daÃŸ es â€“ obwohl nur eine endliche Anzahl von Sprites im Spiel ist â€“ so aussieht, als wÃ¼rden stÃ¤ndig neue Gegner den armen kleinen Flieger angreifen. Die Methode wird daher sowohl im Constructor als auch in <code>update()</code> (wenn eine Pizza das Fenster links verlassen hat) aufgerufen.</p>
<p>Der Vorteil der Objektorientierung ist ja, daÃŸ dadurch das Hauptprogramm relativ kurz und Ã¼bersichtlich gehalten wird:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">NUM_ENEMIES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">bgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-4">enemies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb4-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> plane</span>
<span id="cb4-8">  plane <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Plane()</span>
<span id="cb4-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_ENEMIES):</span>
<span id="cb4-10">    enemies.append(Enemy())</span>
<span id="cb4-11">  bgs.append(Background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-12">  bgs.append(Background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1152</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb4-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bgs:</span>
<span id="cb4-16">    bg.update()</span>
<span id="cb4-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> enemy <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> enemies:</span>
<span id="cb4-18">    enemy.update()</span>
<span id="cb4-19">  plane.update()</span>
<span id="cb4-20"></span>
<span id="cb4-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb4-22">  screen.clear()</span>
<span id="cb4-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bgs:</span>
<span id="cb4-24">    bg.draw()</span>
<span id="cb4-25">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> enemy <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> enemies:</span>
<span id="cb4-26">    enemy.draw()</span>
<span id="cb4-27">  plane.draw()</span>
<span id="cb4-28">  </span>
<span id="cb4-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_input(obj, val):</span>
<span id="cb4-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(obj, val):</span>
<span id="cb4-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> obj[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-32">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<p>Wie immer habe ich auch dieses Skript auf den <a href="https://microstudio.io/i/kantel/pizzaplanev1/">Seiten von microStudio verÃ¶ffentlicht</a>, damit Ihr es klonen, erweitern oder einfach nur damit herumspielen kÃ¶nnt.</p>
<p>Und unter <a href="https://kantel.github.io/#category=microStudio">diesem Link</a> kÃ¶nnt Ihr Euch alle bisher im <em>Schockwellenreiter</em> erschienenen BeitrÃ¤ge zu microStudio anzeigen lassen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">FuÃŸnoten</h2>

<ol>
<li id="fn1"><p>Das Projekt liegt mir wirlich am Herzen. Zwischenzeitlich hatte ich mich auch schon einmal an eine <a href="https://kantel.github.io/posts/2023032602_pizza_plane_with_pizzas/">Version</a> in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> (in der <a href="https://kantel.github.io/posts/2023021601_my_first_trinket/">Processing.py-Variante</a>) und an eine <a href="https://kantel.github.io/posts/2024012902_pizzaplane_3/">Version in JavaScript</a> (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>) versucht.â†©ï¸Ž</p></li>
<li id="fn2"><p>Das Â»GrÃ¼nÂ« ist nicht politisch gemeint, aber den ursprÃ¼nglich verwendeten <strong>roten</strong> Doppeldecker habe ich wegen einer mÃ¶glichen Assoziation mir dem Â»Roten BaronÂ« <a href="https://de.wikipedia.org/wiki/Manfred_von_Richthofen">Manfred von Richthofen</a> suspendiert.â†©ï¸Ž</p></li>
</ol>
</section></div> ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/</guid>
  <pubDate>Mon, 31 Mar 2025 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/images/pizzaplanev1.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Mozilla Firefox: RegulÃ¤re Updates nachgeschoben</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025033101_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54416583582/"><img src="https://kantel.github.io/posts/2025033101_firefox_update/images/pandas2-b.jpg" class="img-fluid"></a></p>
<p>Nachdem die <a href="https://kantel.github.io/posts/2025032901_firefox_update/">Aktualisierung vom Sonnabend</a> offensichtlich ein Notfall-Update war (auch erkenntlich an den Â»schrÃ¤genÂ« Versionsnummern) hat Mozilla heute die regulÃ¤ren Updates nachgeschoben: Die Entwickler des Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/137.0/releasenotes/">Version 137</a> und die <a href="https://www.mozilla.org/en-US/firefox/128.9.0/releasenotes/">Version ESR 128.9</a> verÃ¶ffentlicht und darin auch wieder SicherheitslÃ¼cken behoben. Auch in diese Updates sollen wieder viele VerÃ¤nderungen eingeflossen sein.</p>
<p>Firefox weist selbst auf diese Updates hin. Diese Prozedur kann aber auch Ã¼ber das MenÃ¼ <code>Hilfe &gt; Ãœber Firefox</code> angestoÃŸen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54416583582/">Zwei rote Pandas</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored DC comic style, two red pandas in a spring enchanted forest</em>Â«. Modell: Flux (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025033101_firefox_update/</guid>
  <pubDate>Mon, 31 Mar 2025 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025033101_firefox_update/images/pandas2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es muÃŸ nicht immer Microsoft sein: Neue Version 25.2.2 von LibreOffice</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032902_libre_office_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54356593908/"><img src="https://kantel.github.io/posts/2025032902_libre_office_update/images/officewoman-b.jpg" class="img-fluid"></a></p>
<p>In der <a href="https://blog.documentfoundation.org/blog/2025/03/27/libreoffice-25-2-2-and-24-8-6/">neuen Version 25.2.2 des quelloffenen Officepaketes LibreOffice</a> wurden zahlreiche neue Funktionen bereitgestellt und zudem wurden SicherheitslÃ¼cken behoben.</p>
<p>Die <a href="https://www.libreoffice.org/download/download-libreoffice/?type=mac-x86_64&amp;version=25.2.2&amp;lang=de">Downloads der korrigierten Versionen</a> finden sich hier. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54356593908/">(Libre-) Office Woman</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored French Comic Style. A sexy young woman with long red hair, green eyes and red lipstick is sitting in an office at a desk in front of a monitor and a keyboard. She is wearing a white, open blouse with a low neckline and a rust-colored vest. She has a pencil in one hand. On the desk is an open notepad, a cup with writing utensils and a stack of books. There are shelves on the walls with many more books and files. The spring sun is shining through a window in the background</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>LibreOffice</category>
  <category>ProduktivitÃ¤t</category>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032902_libre_office_update/</guid>
  <pubDate>Sat, 29 Mar 2025 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032902_libre_office_update/images/officewoman.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein Feuerfuchs kommt selten allein</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032901_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54416583502/"><img src="https://kantel.github.io/posts/2025032901_firefox_update/images/pandas-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/136.0.4/releasenotes/">Version 136.0.4</a> und die <a href="https://www.mozilla.org/en-US/firefox/128.8.1/releasenotes/">Version ESR 128.8.1</a> verÃ¶ffentlicht und darin auch wieder SicherheitslÃ¼cken behoben. Wie immer sind in diese Updates auch viele VerÃ¤nderungen eingeflossen.</p>
<p>Firefox weist selbst auf diese Updates hin. Diese Prozedur kann aber auch Ã¼ber das MenÃ¼ <code>Hilfe &gt; Ãœber Firefox</code> angestoÃŸen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54416583502/">Zwei rote Pandas</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored DC comic style, two red pandas in a spring enchanted forest</em>Â«. Modell: Flux (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032901_firefox_update/</guid>
  <pubDate>Sat, 29 Mar 2025 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032901_firefox_update/images/pandas.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>SicherheitslÃ¼cken im PDF/Postscript-Interpreter Ghostscript</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032701_ghostscript/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370053019/"><img src="https://kantel.github.io/posts/2025032701_ghostscript/images/ghost-b.jpg" class="img-fluid"></a></p>
<p>In dem besonders unter Linux/Unix verbreiteten Interpreter Ghostscript zum Umgang mit PDF- und PostScript-Dateien befindet sich einige Schwachstellen, die von Angreifer genutzt werden kÃ¶nnen, um Schadcode auszufÃ¼hren.</p>
<p><a href="https://ghostscript.readthedocs.io/en/gs10.05.0/News.html?utm_source=ghostscript&amp;utm_medium=website&amp;utm_content=inline-link">Eine Korrektur ist bereits verfÃ¼gbar</a> und sollte zeitnah eingefahren werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370053019/">Robo-Ghost</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032701_ghostscript/</guid>
  <pubDate>Thu, 27 Mar 2025 11:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032701_ghostscript/images/ghost.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische SicherheitslÃ¼cken in Chrome</title>
  <dc:creator>JÃ¶rg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032601_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370014529/"><img src="https://kantel.github.io/posts/2025032601_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Heute kommt die wÃ¶chentliche Mittwochs-Aktualisierung des Flaggschiffs unser aller Datenkrake tatsÃ¤chlich am Mittwoch, weder die Datenkrake noch ich haben geschlampt: Google verÃ¶ffentlicht das Update der Version 134 (134.0.6998.177/178) seines Browsers Chrome und schlieÃŸt damit <a href="https://chromereleases.googleblog.com/2025/03/stable-channel-update-for-desktop_25.html">kritische SicherheitslÃ¼cken</a>.</p>
<p>Chrome aktualisiert sich (auÃŸer bei Linux) Ã¼ber die integrierte Update-Funktion, kann aber â€“ wenn es pressiert â€“ auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persÃ¶nlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370014529/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: Â»<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>Â«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032601_chrome_update/</guid>
  <pubDate>Wed, 26 Mar 2025 15:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032601_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
