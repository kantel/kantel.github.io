<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Tue, 06 Feb 2024 15:05:00 GMT</lastBuildDate>
<item>
  <title>Google schließt am »Februar-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020601_android_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53377940333/"><img src="https://kantel.github.io/posts/2024020601_android_update/images/android202402-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-02-01?hl=de">Sicherheitsupdate für Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-02-01?hl=de">Pixel-Geräten</a>) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro, Pixel 5 verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53377940333/">Grüner Android</a></em>, erstellt mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a>. Prompt: »<em>a little green robot helds a mobilphone in an futuristic city. colored french comic style</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020601_android_update/index.html</guid>
  <pubDate>Tue, 06 Feb 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020601_android_update/images/android202402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google Bard mit Imagen: New KI on the Blog</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020502_bard_imagen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/"><img src="https://kantel.github.io/posts/2024020502_bard_imagen/images/pythonbard-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es rauscht im Blätterwald (eigentlich eine blöde Metapher – heutzutage rauscht es schon lange nicht mehr in Blättern, sondern spült in Webseiten und Feedreader), Googles als ChatGPT-Konkurrent gestarteter, aber bisher eher verborgen gebliebener Chatbot <a href="https://bard.google.com/">Bard</a> hat vor <a href="https://blog.google/intl/de-de/unternehmen/technologie/bard-mit-gemini-pro/">wenigen Tagen</a> als Update die KI-Engine <a href="https://blog.google/intl/de-de/unternehmen/technologie/gemini/">Gemini</a> verpaßt bekommen und soll damit endlich aus dem Dornröschenschlaf geweckt werden.</p>
<p>Doch das ist nicht alles: Bard kann mit diesem Update endlich das, was ChatGPT schon lange kann – nämlich Bilder generieren. Google nutzt dafür <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/imagegen.html">Imagen</a>, die bisher eigentlich nur als <a href="https://imagen.research.google/">Forschungspapier</a> existierende Antwort auf <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/dalle.html">DALL-E</a>. <a href="https://medium.com/the-generator/google-bards-new-ai-image-generator-everything-to-know-7180e52a7554">Erste Reaktionen</a> (Medium.com-Link) sind sehr positiv.</p>
<p>Google will einiges besser (oder besser: anders) machen als die Konkurrenz: Erstens soll der Dienst – im Gegensatz zu ChatGPT – auch weiterhin kostenlos bleiben. Zweitens will Google gegen <a href="https://generativeai.pub/google-bard-can-now-generate-images-this-is-huge-a98a0897ce44"><em>Deep Fakes</em> vorgehen</a> und bestimmte Prompts (zum Beispiel Photos von Personen) zurückweisen – Zeichnungen im Comic-Stil sollen aber akzeptiert werden. Wem das nach Zensur stinkt, der hat natürlich recht. Aber für bedenklicher halte ich, daß die Bilder ein unsichtbares Wasserzeichen verpaßt bekommen, das auf den Urheber zurückverfolgbar sein soll. Was autoritäre Regime damit anstellen könnten, will ich mir gar nicht erst ausmalen.</p>
<p>Wie auch immer, momentan ist das Tool in Deutschland <a href="https://www.mactechnews.de/news/article/Google-Bard-erhaelt-Update-Gemini-Pro-auf-Deutsch-aktualisiertes-KI-Bildmodell-184234.html">noch nicht verfügbar</a><sup>1</sup>. Aber wenn es da ist (eine Einführung ist angekündigt), werde ich das Teil auf jeden Fall testen.</p>
<p><strong>War sonst noch was?</strong> Ach ja, auf dem Weltwirtschaftsforum in Davos letzten Monat machte die französische Softwarefirma <a href="https://mistral.ai/">Mistral AI</a> von <a href="https://mistral.ai/">sich reden</a>. Deren KI-Modelle <em>Mistral 7B</em> und <em>Mixtral 8x7B</em> sollen nicht nur sehr leistungsfähig sein, sondern sind auch als <em>Open Source</em> für jeden frei nutzbar. Neben der aus London stammenden, ebenfalls freien KI-Software <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> ist das ein weiterer europäischer Player mit freier Software gegen die meist US-amerikanischen, kommerziellen und großen Softwareriesen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/">Schlange am Schreibtisch</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>. Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Bevor hier wieder blöde Kommentare reinschneien: Ich weiß, wie man einen Proxy-Server hochzieht, aber ich habe keine Lust darauf.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Chatbot</category>
  <category>Bilder</category>
  <category>Imagen</category>
  <category>Künstliche Intelligenz</category>
  <guid>https://kantel.github.io/posts/2024020502_bard_imagen/index.html</guid>
  <pubDate>Mon, 05 Feb 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020502_bard_imagen/images/pythonbard.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Berlin Attack auf Itch.io hochgeladen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020501_berlinattack_itch/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53511069090/"><img src="https://kantel.github.io/posts/2024020501_berlinattack_itch/images/attackberlin_v02-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe meinen <a href="https://kantel.github.io/posts/2024020401_renpy_scenario/">gestern erstellten</a> Prototypen eines <em><a href="https://de.wikipedia.org/wiki/Point-and-Click-Adventure">Point-and-Click-Adventures</a></em>, den ich in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> entwickelt und mit Bildern und Charakteren aufgehübscht habe, die ich mit dem KI-Bildgenerator <a href="https://app.scenario.com/">Scenario</a> generiert hatte, nach <a href="https://kantel.itch.io/attack-berlin">Itch.io hochgeladen</a>, damit Ihr Euch ein Bild von dem bisherigen Ergebnis machen könnt.</p>
<p>Und da Itch.io auch das Einbinden von HTML-Games in die eigene Website ermöglicht, hier das eingebundene Spielchen:</p>
<iframe frameborder="0" src="https://itch.io/embed-upload/9663602?color=ede4d4" allowfullscreen="" width="640" height="392">
<a href="https://kantel.itch.io/attack-berlin">Play Attack Berlin on itch.io</a>
</iframe>
<p>Wohlgemerkt, es ist nicht mehr als ein <em>Proof of Concept</em>, in dem ich ausprobieren möchte, ob und wie weit mit gekünstelter Intelligenzia erzeugte Avatare als Spielcharaktere geeignet sind. Dennoch möchte ich diesen Prototypen so <em>peu a peu</em> weiterentwickeln, bis er mindestens den Stand meiner <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">Twine-Version</a> (<a href="https://kantel.itch.io/berlin-attack">Itch.io-Link</a>) erreicht hat. Dabei werde ich sicher auch noch mit anderen KI-Bildgeneratoren experimentieren. Schaun wir mal, was dabei herauskommt. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Stable Diffusion</category>
  <guid>https://kantel.github.io/posts/2024020501_berlinattack_itch/index.html</guid>
  <pubDate>Mon, 05 Feb 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020501_berlinattack_itch/images/attackberlin_v02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf ein Neues: Ren’Py und Scenario</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020401_renpy_scenario/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53508931429/"><img src="https://kantel.github.io/posts/2024020401_renpy_scenario/images/attackscenario-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Beschäftigung mit den Bildgeneratoren der gekünstelten Intelligenzia hat natürlich einen triftigen Grund: Ich möchte herausbekommen, ob oder wie weit diese Tools mittlerweile in der Lage sind, Bilder für interaktive Geschichten und Spiele zu erzeugen, die es auch Menschen wie mir – denen bei der Geburt der Zeichenstift nicht in die Wiege gelegt worden war – ermöglicht, solche Geschichten mit Bildern zu erzählen.</p>
<p>Mein erster Versuch mit der <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Hexe und den zertrümmerten Kürbissen</a> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> verlief ja recht erfolgversprechend, wie Ihr auf meinem Itch.io-Account <a href="https://kantel.itch.io/smashing-pumpkins">nachspielen</a> könnt. Die <a href="https://www.flickr.com/photos/schockwellenreiter/albums/72177720312336247/with/53296778977">Bilder dafür</a> hatte ich – eher aus einer Laune heraus, denn aus einem wichtigen Grund – mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a> erzeugt, aber ich glaube, jeder andere einiggermaßen leistungsfähige KI-Bildgenerator hätte dies auch gekonnt.</p>
<p>Allerdings stellt solch eine Geschichte mit statischen Bildern noch keine allzu großen Anforderungen an die Konsistenz der Figuren: Bei den einzelnen Bildern, meist auch noch je auf einer eigenen Seite, verzeiht der Betrachter doch schnell leichte Abweichungen. Anders sieht es dagegen bei <em><a href="https://de.wikipedia.org/wiki/Point-and-Click-Adventure">Point-and-Click Adventures</a></em> aus, da hier die Charaktere auf <strong>einer</strong> Bühne (einem Bildschirm) auftreten und da Abweichungen eher auffallen.</p>
<p>Da meine (geplante) »Räuberpistole« <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">Berlin Attack</a> (für die ich auch schon einen Prototypen in Twine mit <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> gebastelt hatte) im Prinzp so etwas wie ein <em>Point-and-Click-Adventure</em> ist, hatte ich das Teil wieder hervorgekramt und dafür mit <a href="https://app.scenario.com/">Scenario</a> ein paar Bilder erzeugt und sie in die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>-Version dieses Prototyps testweise eingesetzt.</p>
<p>Scenario habe ich deswegen ausgewählt, weil auf dem YouTube-Kanal mehrere Videos (unter anderem »<a href="https://www.youtube.com/watch?v=gWOAO1ltZ_Y">The Arcade Hacker</a>«,»<a href="https://www.youtube.com/watch?v=-co2CLGsCpc">Murder Mystery</a>« und »<a href="https://www.youtube.com/watch?v=0_KAF4TziUY">The Stolen Necklace</a>«) damit prahlten, wie gut das Teil für die Generierung von Assets für <em>Point-and-Click-Games</em> geeignet sei. Zwar wird in diesen Tutorials <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> als Zielplattform genutzt, aber – wie ich <a href="https://kantel.github.io/posts/2023091502_renpy_statt_unity/">hier schon schrieb</a> – ist für dieses Genre Ren’Py durchaus eine gute und leistungsfähige freie Alternative.</p>
<p>Mit dem Ergebnis bin ich aber noch nicht wirklich zufrieden. Das liegt in der Hauptsache daran, daß die oben erwähnten Video-Tutorials einfach zu schnell durch die Generierung huschen und zu viel Vorwissen voraussetzen. So habe ich es zum Beispiel ums Verrecken nicht geschafft, meinen Protagonisten einen geöffneten, sprechenden Mund zu spendieren, obwohl zum Beispiel <em>The Stolen Necklace</em> zeigt, daß das geht. Aber mit der lakonischen Anweisung »Use the canvas to change your character’s facial expressions« bin ich einfach überfordert. Was muß ich wo im Canvas benutzen, um den Gesichtsausdruck meiner Figuren zu ändern?</p>
<p>Prinzipiell scheint das aber möglich zu sein, hier muß ich mich aber erst noch durch das Dickicht der (offensichtkich zu) hastig erstellten (die Tools sind alle noch recht neu) Tutorials quälen. Und vermutlich besitzt nicht nur Scenario alleine diese Fähigkeiten, ich glaube (mindestens) jede <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable-Diffusion</a>-Anwendung scheint dazu in der Lage zu sein.</p>
<p>Ich bleibe jedenfalls am Ball. Und neben Ren’Py steht ja auch noch die <em>Visual Novel Engine</em> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> in den Startlöchern und harrt einer Nutzung. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Stable Diffusion</category>
  <guid>https://kantel.github.io/posts/2024020401_renpy_scenario/index.html</guid>
  <pubDate>Sun, 04 Feb 2024 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020401_renpy_scenario/images/attackscenario.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Blick ins Wunderland: Harlowe-Tutorials von Dan Cox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020201_harlowe_tuts/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53483103233/"><img src="https://kantel.github.io/posts/2024020201_harlowe_tuts/images/aliceballoons2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich kann nicht anders, ich muß – um meine eigene Reise ins Wunderland mit Twine und Harlowe zu planen – die <a href="https://kantel.github.io/posts/2024012402_back_to_wonderland/">neuen Tutorials</a> von <em><a href="https://videlais.com/">Dan Cox</a></em> zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine 2.8</a> und <a href="https://twine2.neocities.org/">Harlowe 3.3</a> hier einzeln aufführen, da mir seine <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr662CjQjQHOVJhmdsl2TgYk">Playlist</a> zu voluminös und in der Reihenfolge zu unorganisiert wirkt, so daß ich das Gefühl habe, die Übersicht zu verlieren.</p>
<p>Soweit ich das bisher überblicken kann, sind die Tutorials grob in zwei Bereiche eingeteilt. Einen Einführugsbereich und eine Gruppe zu den Macros. Ich fange mal mit den (neuen, in den letzten Tagen hochgeladenen) <strong>Einführungen</strong> an:</p>
<ul>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=vdjPjS78_vI">Introduction: Alignment</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=UscJF8CdmoA">Introduction: Columns</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=qxCQA_ogviU">Introduction: Bulleted and Numbered Lists</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=LXAMNFOyiwM">Introduction: Headings and Horizontal Rule</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=PdlyobN0KBs">Introduction: Using HTML</a></li>
</ul>
<p>Die Tutorialgruppe zu den <strong>Macros</strong> teilt sich wieder so auf, daß in der Regel auf ein Einführungs- ein Beispielvideo folgt. Neu sind hier:</p>
<ul>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=l-8__joO8pk">Macros: Text Input</a> und <a href="https://www.youtube.com/watch?v=Cs0on6WJDn0">Example: Entering Passwords</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=bzUHFYEezK4">Macros: Forced Input</a> und <a href="https://www.youtube.com/watch?v=nibPmcZtYOY">Example: Ghost Input</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=A4cj6U4iwBs">Macros: Dropdown and Checkbox</a> und <a href="https://www.youtube.com/watch?v=nHIx9ZImvrk">Example: Ordering Food</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=QispbRH0Dio">Macros: Cycling and Sequence Links</a> und <a href="https://www.youtube.com/watch?v=VJUxqmmJlos">Example: Choosing Equipment</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=twWglY8mim4">Macros: Box</a>, <a href="https://www.youtube.com/watch?v=bns8x9kmLCo">Macros: Float Box</a> und <a href="https://www.youtube.com/watch?v=wF4hhk8B3Cc">Example: Health and Mana</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=tQdX6M9bsBU">Macros: 2bind</a> und <a href="https://www.youtube.com/watch?v=Yi6G1DHDWaM">Macros: Bound Interactions</a></li>
<li>Twine 2.8: Harlowe 3.3: <a href="https://www.youtube.com/watch?v=rAQD3IJ2M4I">Macros: Meter</a></li>
</ul>
<p>Die letzten beiden Videos sind erst vor wenigen Stunden hochgeladen worden, so daß hier noch mit Beispielen zu rechnen ist. Aber irgendwann muß ich ach mal einen Schnitt machen und festhalten, was ich bisher weiß. Ich werde mir jedenfalls erst einmal diese Videos reinziehen und schauen, wozu sie mich inspirieren werden. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53483103233/">Blick ins Wunderland</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>Alice, blue eyes, long blonde hair with pigtails, blue coat, white apron, full body, looks over a medieval mountainous landscape with a castle above a small village. Some hot air balloons float over it. A road with red and white tiles winds through the hills. colored french comic style</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Twine</category>
  <category>Harlowe</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024020201_harlowe_tuts/index.html</guid>
  <pubDate>Fri, 02 Feb 2024 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020201_harlowe_tuts/images/aliceballoons2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Bitsy-Tutorials von Dan Cox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020102_bitsy_tuts/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53502647771/"><img src="https://kantel.github.io/posts/2024020102_bitsy_tuts/images/bitsybesen-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><em><a href="https://videlais.com/">Dan Cox</a></em> hat – wie ich hier vor wenigen Tagen <a href="https://kantel.github.io/posts/2024012402_back_to_wonderland/">berichtete</a> – nicht nur die Arbeit an seinen <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>-Tutorials wieder aufgenommen, sondern auch eine komplett neue <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6bprFqUBCOEWT47xqYmVQ4">Playlist zu Bitsy 8</a> gestartet. Bisher besteht sie aus sechs Videos, doch glaubt man seinen Ankündigungen, hat er noch viel damit vor. Ihr und ich dürft daher noch viel von ihm zu dieser (gewollt) <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">extrem minimalistischen Engine</a> für interaktive Geschichten und Spiele erwarten.</p>
<p>Bisher sieht das Programm so aus: In je einem, kurzen Video-Tutorial stellt <em>Dan Cox</em> eine Auswahl von Features aus Bitsy vor, um sie dann in einem zweiten Video in Beispielen anzuwenden. Bisher sind diese Themen erschienen: <a href="https://www.youtube.com/watch?v=R18Qg4KMI2I">Avatar, Tiles, Sprites, and Items</a> (Beispiel: <a href="https://www.youtube.com/watch?v=NuQEj4n3w44">Visiting the Zoo</a>), <a href="https://www.youtube.com/watch?v=bKDQXA-sXXY">Rooms and Exits</a> (Beispiel: <a href="https://www.youtube.com/watch?v=GTLth70K5PA">Maze</a>) und <a href="https://www.youtube.com/watch?v=L-v3eNluLoA">Colors</a> (Beispiel: <a href="https://www.youtube.com/watch?v=fXjK2Mkd_7g">Seasonal Rooms</a>).</p>
<p><em>Dan</em> schafft es spielend (im wahrsten Sinne des Wortes) in seinen Tutorials die Faszination herüberzubringen, die von dieser Engine ausgeht und die auch mich gepackt hat (der <a href="https://www.flickr.com/photos/schockwellenreiter/53502647771/">Screenshot</a> im Banner oben ist von meinem (noch nicht fertiggestellten, aber schon spielbaren) Bitsy »<a href="https://kantel.itch.io/nachts-im-park">Nachts im Park</a>«).</p>
<p>Dabei ist <em>Dan Cox</em> nicht nur der ultimative Spezialist zu Twine (von ihm stammt ein großer Teil des <a href="https://twinery.org/cookbook/">Twine Cookbooks</a>) und zu Bitsy, sondern er kennt sich auch ziemlich gut mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink (und Inky)</a> aus. Wenn ich mir was wünschen dürfte, wäre es, daß er auch hier seine <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6gV8jjx98eUfRkYbb3u1v6">Tutorials</a> wieder <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr5UCOV9PkoS_pJ4hq98vaK_">aufnimmt</a>. Und sei es nur, damit ich besser verstehe, wie ich Twine (mit dem Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a>) mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> verheiraten kann.</p>



 ]]></description>
  <category>Bitsy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024020102_bitsy_tuts/index.html</guid>
  <pubDate>Thu, 01 Feb 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020102_bitsy_tuts/images/bitsybesen.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Zahlen für den Monat Januar 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020101_mediadaten_202401/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53502614983/"><img src="https://kantel.github.io/posts/2024020101_mediadaten_202401/images/pythonoffice1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der erste Monat des neuen Jahres ist recht schnell an mir vorbeigerauscht. Dennoch ist es Zeit für ein paar Zahlen, die hochtrabend manches Mal auch <em>Mediadaten</em> genannt werden: Im Monat Januar 2024 hatte der <em>Schockwellenreiter</em> laut seinem (hoffentlich!) DSGVO-konformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Goatcounter</a> immerhin <strong>5.434 Seitenansichten</strong>. Auch wenn die Exkaktheit der Ziffern eine Genauigkeit der Zahlen nur vortäuscht, freue ich mich dennoch über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>😎 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Die <em>Top Five</em> im Januar waren:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/">Bildgeneratoren und Künstliche Intelligenz</a> – ohne Zensoren</li>
<li><a href="https://kantel.github.io/posts/2024010401_rip_niklaus_wirth/">R.I.P Niklaus Wirth</a>: Niklaus Wirth ist am 1. Januar 2024 gestorben</li>
<li>Des deutschen Landwirts feuchter Traum: <a href="https://kantel.github.io/posts/2024010802_traktor_terror_2/">Traktor Terror</a></li>
<li>Neu in meinem Wiki: <a href="https://kantel.github.io/posts/2024011401_seaart_tensorart/">SeaArt AI und Tensor Art</a></li>
<li>Auch neu in meinem Wiki: <a href="https://kantel.github.io/posts/2024011101_scenario/">Scenario</a></li>
</ol>
<p>Schaut man sich dieses Ranking an, scheinen die Bildgeneratoren der gekünstelten Intelligenzia auch auf Euer großes Interesse gestoßen zu sein. Ich kann Euch versichern: Ich bin damit noch nicht durch, Ihr könnt daher noch weitere Beiträge zu diesen Tools erwarten. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53502614983/">Python in the office</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024020101_mediadaten_202401/index.html</guid>
  <pubDate>Thu, 01 Feb 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020101_mediadaten_202401/images/pythonoffice1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 121 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013102_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53499384857/"><img src="https://kantel.github.io/posts/2024013102_chrome_update/images/octopussy03-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auf zum fröhlichen Fehler jagen mit unser aller Datenkrake: Google veröffentlicht das Update der Version 121 (121.6167.139/140) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_30.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53499384857/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>A sexy female robot flees from a gigantic data octopus</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024013102_chrome_update/index.html</guid>
  <pubDate>Wed, 31 Jan 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013102_chrome_update/images/octopussy03.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Patientenfalle E-Rezept, die Zweite</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013101_erezept_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53498050521/"><img src="https://kantel.github.io/posts/2024013101_erezept_2/images/apothekerin2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mein Versuch, mit dem neu eingeführten <a href="https://de.wikipedia.org/wiki/Elektronisches_Rezept">E-Rezept</a> ein Medikament zu bekommen, über den ich <a href="https://kantel.github.io/posts/2024013001_patientenfalle_erezept/">gestern schon berichtet hatte</a>, geht in die zweite – genaugenommen ist es sogar schon die vierte – Runde. Zwar war, im Gegensatz zu meinen erfolglosen Apothekenbesuchen vorgestern und gestern, nun mein Medikament endlich auf meiner Gesundheitskarte gespeichert, aber … dafür war es dann in der Apotheke nicht vorrätig.</p>
<p>So darf ich morgen zum vierten Mal den Laden aufsuchen, um endlich (m)ein Rezept einlösen zu können. Das deutsche Gesundheitssystem ist genau so kaputt, wie der Rest der Republik. Zwar lag die Schuld dieses Mal nicht bei der Arztpraxis, sondern bei der Apotheke, aber jedes Glied der Kette scheint verfault.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53498050521/">Apothekerin, verstrickt in die Tücken des E-Rezeptes</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>A female pharmacist, like Laocoon, entangled in the cables of her computer, is looking for a receipt at the pharmacy. In the background shelves with medicines. It’s a sunny day. french comic style</em>«, Negative Prompt: <em>ugly, »deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Politik</category>
  <category>Digitales Leben</category>
  <guid>https://kantel.github.io/posts/2024013101_erezept_2/index.html</guid>
  <pubDate>Wed, 31 Jan 2024 14:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013101_erezept_2/images/apothekerin2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>microStudio Update</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013002_microstudio_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53498746655/"><img src="https://kantel.github.io/posts/2024013002_microstudio_update/images/microstudio2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die kleine, an diverse Fantasiekonsolen erinnernde Game Engine <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a></strong> hatte ich ja schon mehrfach <em>Schockwellenreiter</em> <a href="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/">vor-</a> (<a href="http://blog.schockwellenreiter.de/2022/05/2022053001.html">2</a>), aber leider trotz aller Absichtsbekundungen nie etwas damit angestellt.</p>
<p>Dabei hat die kleine Engine durchaus ihre Vorzüge gegenüber anderen Fantasiekonsolen wie zum Beispiel <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a>. Sie kann Bilder und andere Assets ohne Umwege direkt in ihren internen Editor laden und sie kommt ohne die (gewollt) konzeptionellen, nostalgischen Berschränkungen von TIC-80 oder Pico-8 aus.</p>
<p>Gestern schneite die Nachricht vom <a href="https://microstudio.itch.io/microstudio/devlog/673273/microstudio-240129">Update</a> des Programms bei mir rein und machte mich erneut neugierig auf dieses kleine Teil. Vielleicht sollte ich mich bis zum Juli darin einarbeiten und es für meine geplante <a href="https://kantel.github.io/posts/2024012901_kenney_jam_2024/">Teilnahme</a> an der <a href="https://itch.io/jam/kenney-jam-2024">Kenney Jam 2024</a> nutzen. Denn die Assets von Kenney passen – wie man auch an einigen <a href="https://www.youtube.com/watch?v=1cd-IWCEMoI">Tutorials</a> sieht – wunderbar zu der kleinen Engine. Und vor <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microscript.html">microScript</a>/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> habe ich weniger Angst als vor JavaScript/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>.&nbsp;🤓</p>
<hr>
<p><strong>Credits</strong>: Für das Beispielprogramm im <a href="https://www.flickr.com/photos/schockwellenreiter/53498746655/">Sreenshot</a> oben habe ich folgende Assets vewendet: Für den Hintergrund das Bild »<a href="https://opengameart.org/content/space-cartoon-background">Space Cartoon Background</a>« (<a href="http://creativecommons.org/licenses/by/3.0/">CC-BY 3.0</a>) des Users <em>Aetherna</em> und für den Sprite ein Alien des »<a href="https://www.kenney.nl/assets/alien-ufo-pack">Alien UFO Pack</a>« (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) von <em>Kenney</em>.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>microStudio</category>
  <guid>https://kantel.github.io/posts/2024013002_microstudio_update/index.html</guid>
  <pubDate>Tue, 30 Jan 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013002_microstudio_update/images/microstudio2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Patientenfalle E-Rezept</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024013001_patientenfalle_erezept/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53497171197/"><img src="https://kantel.github.io/posts/2024013001_patientenfalle_erezept/images/apothekerin01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Als ältere Mensch – so wie ich –, aber nicht nur als älterer Mensch, benötigt man unter Umständen regelmäßig rezeptpflichtige Medikamente. Da die Beschaffung eines Rezeptes immer mit einem gewissen Aufwand verbunden ist, hatte ich mich wirklich über die Einführung des <a href="https://www.bundesgesundheitsministerium.de/e-rezept">E-Rezeptes</a> gefreut, denn trotz aller Datenschutzbedenken versprach es eine Erleichterung speziell für Patienten, die Dauermedikamente benötigen.</p>
<p>Aber zu früh gefreut: Wenn Deutschland etwas kann, dann ist es die Digitalisierung verkacken. Seit mehreren Tagen versuche ich, eines meiner Dauermedikamente auf E-Rezept zu bekommen. Laut mehrmaliger Aussage der Praxis meines Hausarztes ist es auf meiner »Gesundheitskarte« freigeschaltet, aber laut der bei mehreren Fehlversuchen erfolgten Aussagen der Apothekerinnen ist dort aber nichts zu sehen und sie können mir daher mein Medikament nicht herausgeben.</p>
<p>Ich weiß nicht an wem es liegt, aber offensichtlich ist irgendjemand der Beteiligten mit der Einführung es E-Rezeptes absolut überfordert. Die Einführung scheint mir auch etwas überhastet übers Knie gebrochen zu sein. Aber das kommt dabei heraus, wenn man einen <a href="https://de.wikipedia.org/wiki/Karl_Lauterbach">Pharmalobbyisten zum Gesundheitsminister</a> macht. Da bleiben die Interessen der Patienten schon mal auf der Strecke.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53497171197/">Apothekerin, verstrickt in die Tücken des E-Rezeptes</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>A female pharmacist, like Laocoon, entangled in the cables of her computer, is looking for a receipt. colored steampunk style</em>«, Negative Prompt: ugly, »<em>deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Politik</category>
  <category>Digitales Leben</category>
  <guid>https://kantel.github.io/posts/2024013001_patientenfalle_erezept/index.html</guid>
  <pubDate>Tue, 30 Jan 2024 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024013001_patientenfalle_erezept/images/apothekerin01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizzaplane Stage 3: Jetzt ohne gierige Browser</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012902_pizzaplane_3/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>
<script src="./background.js"></script>
<script src="./plane.js"></script>
<script src="./enemy.js"></script>
<script src="./missile.js"></script>
<script src="./sprites.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53496037661/"><img src="https://kantel.github.io/posts/2024012902_pizzaplane_3/images/pizzaplane3-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>So wie es aussieht, funktioniert der Workaround mit dem <code>return false</code> am Ende der Tastaturabfragen, um den Browsern das »gierige« Verhalten abzugewöhnen, nur in der Funktion <code>keyPressed()</code>. Daher habe ich der Version meines kleinen Pizzafliegers von <a href="https://kantel.github.io/posts/2024012601_pizzaplane_p5js_stage2/">letzter Woche</a> diese Funktion (und analog dazu auch ein <code>keyReleased()</code>) im Hauptsketch spendiert</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyPressed</span>() {</span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> UP_ARROW) {</span>
<span id="cb1-3">    plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">  }</span>
<span id="cb1-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> DOWN_ARROW) {</span>
<span id="cb1-6">    plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">  }</span>
<span id="cb1-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> RIGHT_ARROW) {</span>
<span id="cb1-9">    plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fire</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">  }</span>
<span id="cb1-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">}</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyReleased</span>() {</span>
<span id="cb1-15">  plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NONE"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16">}</span></code></pre></div>
<p>und die <code>update()</code>-Methode der Klasse <code>Plane</code> wie folgt geändert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb2-2">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NONE"</span>) {</span>
<span id="cb2-3">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4">      }</span>
<span id="cb2-5">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span>) {</span>
<span id="cb2-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>) {</span>
<span id="cb2-7">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">        }</span>
<span id="cb2-9">      }</span>
<span id="cb2-10">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span>) {</span>
<span id="cb2-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) {</span>
<span id="cb2-12">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-13">        }</span>
<span id="cb2-14">      }</span>
<span id="cb2-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> maxAnim) {</span>
<span id="cb2-17">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-21">      }</span>
<span id="cb2-22">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">firecount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-23">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> planImages[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-24">    }</span>
<span id="cb2-25">  }</span></code></pre></div>
<p>So wie es aussieht, funktionieren nun auch im Browser die Pfeiltasten wie gewünscht, ohne das der Canvas nach oben oder unten ruckelt:</p>
<div id="sketch">

</div>
<p><strong>Anleitung</strong>: <em>Mit den Pfeiltasten nach oben und unten wird der Flieger gesteuert, mit der Pfeiltaste nach rechts wird auf die Pizzen geschossen. Für einen Neustart muß momentan leider noch die Seite im Browser komplett neu geladen werden.</em></p>
<p>Zwar müßt Ihr immer noch zu Beginn möglichst schnell und ohne Rücksicht auf Verluste ein paar Pizzen abschießen, um Euch ein Punktepolster zuzulegen (aber das sollte in der nächsten Version, die dann einen Startscreen besitzt, gefixt sein), aber wenigstens reicht <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> nun die Tasten, die es konsumiert hat, nicht mehr an den Browser durch.</p>
<p>Die <a href="https://github.com/kantel/p5js/tree/master/pizzaplane">vollständige, aktualisierte Version findet Ihr mit allen Assets</a> auf GitHub. Und ich bin froh, daß ich eine Lösung gegen gierige Browser gefunden habe. Jetzt kann ich guten Gewissens das Projekt weiterführen. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024012902_pizzaplane_3/index.html</guid>
  <pubDate>Mon, 29 Jan 2024 19:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012902_pizzaplane_3/images/pizzaplane3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Save the Date! Kenney Game Jam 2024</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012901_kenney_jam_2024/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://kenney.nl/media/pages/assets/pixel-platformer/69c89d9e5d-1696667860/samplea.png"><img src="https://kantel.github.io/posts/2024012901_kenney_jam_2024/images/pixelplatformer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch in diesem Jahr gibt es wieder eine <a href="https://itch.io/jam/kenney-jam-2024">Kenney Jam</a>, ein Wettbewerb, in dem das teilnehmende Team oder der teilnehmende Mensch innerhalb von 48 Stunden ein Spiel zu einem vorgegebenen Thema programmieren und einreichen muß. Einzige Einschränkung ist, daß die verwendeten Assets aus dem unerschöpflichen (und freien (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>)) <a href="https://kenney.nl/assets">Fundus von Kenney</a> stammen müssen. Die diesjährige ist die achte Kenney Jam und sie startet am 19. Juli 2024, 6:00 Uhr früh und endet am 21. Juli 2024, ebenfalls um 6:00 Uhr früh. Das Thema wird zu Beginn der Jam bekanntgegeben.</p>
<p>Ich hatte ja im letzten Jahr schon einen Versuch unternommen, <a href="https://kantel.github.io/posts/2023072102_kenney_jam_2023/">an dieser Jam teilzunehmen</a> und war <a href="https://kantel.github.io/posts/2023072301_night_in_the_park/">grandios gescheitert</a>, weil ich mir einfach zu viel vorgenommen hatte. Damals wollte ich ein Spiel mit dem genialen <a href="https://www.kenney.nl/assets/1-bit-pack">1-Bit Pack</a> entwickeln. Dieses Asset Pack ist immer noch meine erste Wahl, aber auch die <a href="https://kenney.nl/assets/series:Pixel%20Platformer?sort=update">Pixel Platformer Reihe</a> mit der etwas ungewohnten Tilegröße von 18x18 Pixel, die 16x16 Pixel große <a href="https://kenney.nl/assets/series:Tiny?sort=update">Tiny-Reihe</a> und – falls es noch kleiner werden soll oder ich mich entschließe, doch mal etwas mit der Fantasiekonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> zu entwickeln – das 8x8 Pixel große <a href="https://kenney.nl/assets/micro-roguelike">Micro Roguelike</a> sind meiner Meinung nach für ein 2D-Spiel, das auch noch unter Zeitdruck entwickelt werden muß, gut geeignet.</p>
<p>Ich habe mich jedenfalls für diese Jam schon angemeldet und freue mich auf die Teilnahme. Auch wenn ich wieder scheitern sollte, kann ich daraus nur lernen. Und auf die Tile- und Spritesets von Kenney habe ich auch verlinkt, weil man auf sie gar nicht oft genug hinweisen kann. Und außerdem möchte ich dem Eindruck entgegentreten, daß ich meine Assets nun ausschließlich mit einer gekünstelten Intelligenzia generiere. Dies kann hin und wieder durchaus eine Hilfe, aber sie kann nicht wirklich kreativ sein. Dafür braucht es die Fähigkeiten eines kreativen Kopfes wie Kenney.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2024012901_kenney_jam_2024/index.html</guid>
  <pubDate>Mon, 29 Jan 2024 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012901_kenney_jam_2024/images/pixelplatformer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>64bit Sensation: Ren’Py 8.2.0 (und Ren’Py 7.7.0) freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012801_renpy_820/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53493569703/"><img src="https://kantel.github.io/posts/2024012801_renpy_820/images/renpy820-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie <em>Ren’Py Tom</em>, der Schöpfer von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren`Py</a> auf X (vormals Twitter) <a href="https://twitter.com/renpytom/status/1751439130431455351?t=_yvnYeEbdk9fvZ80VY2OKw">stolz verkündete</a>, wurde von dieser freien (MIT-Lizenz) Engine (nicht nur) für interaktive Geschichten die Version 8.2.0 (oder die Version 7.7.0 für die, die wegen vorhandener Projekte ein Update auf Ren’Py 8 noch nicht wagen können) mit dem schönen Codenamen »64bit Sensation« freigegeben.</p>
<p>Es ist ein Hauptrelease mit etlichen neuen Features, darunter unter anderem (endlich!) der Support für farbige Emjojis und variable Fonts. Außerdem gibt es einen verbesserten <em>Android Build Process</em>, der Java 21 nutzt und einen neuen, verbesserten Ren’Py-Updater. Zudem erinnert sich neue Version nun auch an die letzte Position des Spielefensters. Eine Auflistung aller Änderungen findet Ihr im <a href="https://www.renpy.org/doc/html/changelog.html">Changelog</a>.</p>
<p>Ren’Py 7.7.0 (Codename »32Bit Sensation« 🤓) versucht bei den neuen Features möglichst mitzuziehen, so weit es das darunter liegende Python 2.x zuläßt. <a href="https://www.renpy.org/release/8.2.0">Ren’Py 8.2.0 kann hier</a> und <a href="https://www.renpy.org/release/7.7.0">Ren’Py 7.7.0 kann hier</a> heruntergeladen werden.</p>
<p>Das Update hat mich natürlich daran erinnert, daß auch meine Räuberpistole »Berlin Attack« weiterentwickelt werden möchte. Die vor einigen Monaten erfolgte Entdeckung der Bildgeneratoren der gekünstelten Intelligenzia haben dafür ja ein ganzes Bündel neuer Möglichkeiten aufgetan. Beim <a href="https://www.flickr.com/photos/schockwellenreiter/53493569703/">Bannerbild oben</a> habe ich zum Beispiel den Hintergrund mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> und den Avatar mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a> erstellt. Daneben experimentiere ich auch noch gewaltig mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> und habe da auch schon erste Erfolge bei der Generierung konsistenter Charaktere erzielt. Doch darüber kann ich erst in einem späteren Beitrag mehr erzählen, denn momentan dilettiere und übe ich noch gewaltig. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2024012801_renpy_820/index.html</guid>
  <pubDate>Sun, 28 Jan 2024 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012801_renpy_820/images/renpy820.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizzaplane mit JavaScript (P5.js), Stage 2: Erste spielbare Version</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012601_pizzaplane_p5js_stage2/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>
<script src="./background.js"></script>
<script src="./plane.js"></script>
<script src="./enemy.js"></script>
<script src="./missile.js"></script>
<script src="./sprites.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53487070046/"><img src="https://kantel.github.io/posts/2024012601_pizzaplane_p5js_stage2/images/pizzaplane2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Portierung meines Spiels mit dem kleinen, grünen Flieger, der die von den bösen Meloni geschickten Pizzen abschießen muß, bevor sie ihn treffen, schreitet voran. Nun habe ich den Status erreicht, den meine Python-Versionen (<a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">Pygame-Implementierung</a>, <a href="https://kantel.github.io/posts/2023032602_pizza_plane_with_pizzas/">Trinket/Processing.py-Implementierung</a>) ebenfalls zum Schluß hatten. Alles weitere, was nun noch kommen wird, ist neu.</p>
<p>Zu erst einmal habe ich den Hintergrund wieder ausgetauscht. Der in <a href="https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/">Stage 1</a> genutzte Hintergrund war zwar farbenfroh, aber im Endeffekt für meinen Geschmack zu lebhaft. Die Pizzen und der Flieger hoben sich kaum davon ab. Daher bin ich – in Annäherung an die Python-Versionen – wieder zu einem Wüstenbild zurückgekehrt, dieses Mal (ein wenig Abwechslung mußte dennoch sein) ein <a href="https://opengameart.org/content/scrolling-desert-backgrounds">freies Bild</a> (<a href="http://opengameart.org/content/oga-by-30-faq">OGA-BY 3.0</a>), das CraftPix.net erstellt und auf OpenGameArt hochgeladen hat.</p>
<p>Die zweite Änderung: Ich habe den Code auf mehrere Dateien aufgeteilt, um einen besseren Überblick zu bekommen. Das ist in JavaScript einfacher als in Python, da im Endeffekt hier doch alles vom Browser als eine große Datei behandelt wird. Also entfallen <code>import</code>-Statements und eventuelle Mehrfach-Deklarationen. Hier also erst einmal die Datei <code>background.js</code> mit der Klasse <code>Background</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Background {</span>
<span id="cb1-2"></span>
<span id="cb1-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _im) {</span>
<span id="cb1-4">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startx</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _im<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    }</span>
<span id="cb1-9">  </span>
<span id="cb1-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb1-11">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>bgWidth) {</span>
<span id="cb1-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14">      }  </span>
<span id="cb1-15">    }</span>
<span id="cb1-16">  </span>
<span id="cb1-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-18">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">    }</span>
<span id="cb1-20">  }</span></code></pre></div>
<p>Natürlich hat auch der Spieler eine eigene Klasse bekommen, die in der Datei <code>plane.js</code> beschrieben wird:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Class Plane</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Plane {</span>
<span id="cb2-3"></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb2-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">firecount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lives</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb2-16">  }</span>
<span id="cb2-17"></span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb2-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyIsPressed) {</span>
<span id="cb2-20">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> UP_ARROW) {</span>
<span id="cb2-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>) {</span>
<span id="cb2-22">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-23">        }</span>
<span id="cb2-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-25">      }</span>
<span id="cb2-26">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> DOWN_ARROW) {</span>
<span id="cb2-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) {</span>
<span id="cb2-28">          <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-29">        }</span>
<span id="cb2-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-31">    }</span>
<span id="cb2-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> RIGHT_ARROW) {</span>
<span id="cb2-33">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fire</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-34">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-35">    }</span>
<span id="cb2-36">  }</span>
<span id="cb2-37">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-38">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> maxAnim) {</span>
<span id="cb2-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb2-42">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-43">    }</span>
<span id="cb2-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">firecount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> planImages[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-46">  }</span>
<span id="cb2-47">}</span>
<span id="cb2-48"></span>
<span id="cb2-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fire</span>() {</span>
<span id="cb2-50">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">firecount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb2-51">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> missile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Missile</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-52">      missiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(missile)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-53">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">firecount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-54">  }</span>
<span id="cb2-55">}</span>
<span id="cb2-56"></span>
<span id="cb2-57"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb2-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-59">}</span>
<span id="cb2-60">}</span></code></pre></div>
<p>Die Pizzen sind momentan als Klasse <code>Enemy</code> in der Datei <code>enemy.js</code> zu finden. Dies ist aber vermutlich vorläufig, da es eventuell später noch weitere Gegnerklassen (zum Beispiel <code>Pumpkin</code> und/oder <code>Meloni</code>) geben wird. Dann werde ich <code>Enemy</code> zu einer Oberklasse umschreiben, von der <code>Pizza</code> und die anderen Gegner erben werden:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Class Enemy</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enemy {</span>
<span id="cb3-3"></span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _im) {</span>
<span id="cb3-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _im<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    }</span>
<span id="cb3-12"></span>
<span id="cb3-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>() {</span>
<span id="cb3-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17">    }</span>
<span id="cb3-18"></span>
<span id="cb3-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb3-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizza <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> pizzas) {</span>
<span id="cb3-22">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isRectCollision</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> plane)) {</span>
<span id="cb3-23">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24">                plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lives</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-25">            }</span>
<span id="cb3-26">        }</span>
<span id="cb3-27"></span>
<span id="cb3-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>) {</span>
<span id="cb3-29">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-30">            plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-31">        }</span>
<span id="cb3-32">    }</span>
<span id="cb3-33"></span>
<span id="cb3-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb3-35">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-36">    }</span>
<span id="cb3-37">}</span></code></pre></div>
<p>Überhaupt schreit die ganze Implementierung nach einem <em>Refactoring</em>. Aber dafür will ich das alles erst einmal zum Laufen bekommen und mich auch noch tiefer in JavaScript einarbeiten.</p>
<p>Die Datei <code>missile.js</code> enthält die Klassen für die Geschosse (<code>Missile</code>) und die durch sie ausgelösten Explosionen (<code>Explosion</code>):</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Class Missile</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Missile {</span>
<span id="cb4-3"></span>
<span id="cb4-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y) {</span>
<span id="cb4-5">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> missileImg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11">    }</span>
<span id="cb4-12">  </span>
<span id="cb4-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb4-14">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>) {</span>
<span id="cb4-16">        missiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">splice</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17">      }</span>
<span id="cb4-18">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizza <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> pizzas) {</span>
<span id="cb4-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isRectCollision</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pizza)) {</span>
<span id="cb4-20">            pizza<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21">            missiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shift</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Explosion</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-23">            hits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(hit)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-24">            plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-25">        }</span>
<span id="cb4-26">      }</span>
<span id="cb4-27">    }</span>
<span id="cb4-28"></span>
<span id="cb4-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb4-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-31">    }</span>
<span id="cb4-32">  }</span>
<span id="cb4-33">  </span>
<span id="cb4-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Class Explosion</span></span>
<span id="cb4-35">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Explosion {</span>
<span id="cb4-36"></span>
<span id="cb4-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y) {</span>
<span id="cb4-38">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-39">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-40">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> explosionImg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-41">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">timer</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-42">    }</span>
<span id="cb4-43"></span>
<span id="cb4-44">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb4-45">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">timer</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">timer</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb4-47">            hits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">splice</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-48">        }</span>
<span id="cb4-49">    }</span>
<span id="cb4-50"></span>
<span id="cb4-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb4-52">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-53">    }</span>
<span id="cb4-54">  }</span></code></pre></div>
<p>Die Datei <code>sprites.js</code> zeugt von meiner Unsicherheit bezüglich eines <em>Refactorings</em>. Zum einen könnte sie – analog zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> – eine (abstrakte) Oberklasse <code>Sprites</code> aufnehmen, von der alle Akteure als Minimum die Methoden <code>update()</code> und <code>display()</code> erben (müssen). Aber da muß ich mich erst noch schlau machen, ob und wie abstrakte Klassen in JavaScript realisiert werden (können).</p>
<p>Zum anderen enthält diese Datei Funktionen, die auch in einer eigenen Klasse (zum Beispiel <code>HUD</code>) implementiert werden könnten oder in eine Klasse <code>GameWorld</code> gehören. Aber auch darüber muß ich noch einmal schlafen. <em>Still digging!</em></p>
<p>Aktuell enthält diese Datei nur zwei ausgelagerte Funktionen (<code>isRectCollision()</code> und <code>displayHUD()</code>), die sonst den Hauptsketch aufblähen würden:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hilfsfunktionen zu Sprites</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// eventuell noch in eine Operklasse zu integrieren</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isRectCollision</span>(self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> other) {</span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> distanceX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> distanceY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> halfW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> halfH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> self<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(distanceX) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> halfW) {</span>
<span id="cb5-10">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(distanceY) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> halfH) {</span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-12">  }</span>
<span id="cb5-13">}</span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-15">}</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayHUD</span>() {</span>
<span id="cb5-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hud1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Score: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hud2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lives: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lives</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textSize</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(hud1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(hud2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-28">}</span></code></pre></div>
<p>Durch diese Aufteilung auf mehrere Dateien ist zumindest der Hauptsketch (ganz traditionell <code>sketch.js</code> genannt) doch recht übersichtlich geraten. Lediglich die Variablendeklarationen und die Funktion <code>preload()</code>, die die Bilder und den Font vorab lädt, nehmen naturgemäß etwas mehr Raum ein:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">460</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> bgWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1920</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> maxAnim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Animation cycle</span></span>
<span id="cb6-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> noPizzas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> planImages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> missileImg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> missiles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> explosionImg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizzas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizzaImg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bgImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> back1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> back2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-17"></span>
<span id="cb6-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb6-19">  planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/planegreen_1.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-20">  planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/planegreen_2.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-21">  missileImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/missile.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-22">  explosionImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/explosion.png"</span>)</span>
<span id="cb6-23">  pizzaImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/pizza.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-24">  bgImage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/desertbackground_s.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-25">  displayFont <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadFont</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/RubikGemstones-Regular.ttf"</span>)</span>
<span id="cb6-26">  }</span>
<span id="cb6-27"></span>
<span id="cb6-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb6-29">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(windowWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> windowHeight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-30">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frameRate</span>(fps)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textFont</span>(displayFont)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-33">  back1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bgImage)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-34">  back2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bgImage)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-35">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> noPizzas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb6-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-37">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-38">    pizzas[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Enemy</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pizzaImg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-39">  }</span>
<span id="cb6-40">  plane <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Plane</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-41">}</span>
<span id="cb6-42"></span>
<span id="cb6-43"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb6-44">  back1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-45">  back2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-46">  back1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-47">  back2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-48">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizza <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> pizzas) {</span>
<span id="cb6-49">    pizza<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-50">    pizza<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-51">  }</span>
<span id="cb6-52">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> missile <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> missiles) {</span>
<span id="cb6-53">    missile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-54">    missile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-55">  }</span>
<span id="cb6-56">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hit <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> hits) {</span>
<span id="cb6-57">      hit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-58">      hit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-59">  }</span>
<span id="cb6-60">  plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-61">  plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-62">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayHUD</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-63"></span>
<span id="cb6-64">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lives</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb6-65">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Game Over!"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-66">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noLoop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-67">  }</span>
<span id="cb6-68">}</span></code></pre></div>
<p>Wie dem auch sei: Das Spiel läuft und ist (irgendwie) spielbar, wie Ihr Euch hier überzeugen könnt:</p>
<div id="sketch">

</div>
<p><strong>Anleitung</strong>: <em>Mit den Pfeiltasten nach oben und unten wird der Flieger gesteuert, mit der Pfeiltaste nach rechts wird auf die Pizzen geschossen. Für einen Neustart muß momentan leider noch die Seite im Browser komplett neu geladen werden.</em></p>
<p>Zu Beginn müßt Ihr ganz schnell ein paar Pizzen abschießen, damit Ihr ein Punktepolster habt. Danach könnt Ihr Euch darauf konzentrieren, den Pizzen auszuweichen, um möglichst lange zu überleben. Denn das Spiel endet in der derzeitigen Fassung recht brutal mit <code>noLoop()</code>, wenn der Punktestand oder die Anzahl der »Leben« unter Null sinken. Danach müßt Ihr, wenn Ihr das Spiel neu starten wollt, einen Reload der Seite durchführen. Daher möchte ich in der nächsten und vorläufig letzten Fassung noch einen Start- und einen Ende-Bildschirm implementieren, der unter anderem auch einen Neustart innerhalb des Spiels ermöglicht.</p>
<p>Unschön ist auch noch, daß trotz des <code>return false</code> am Ende der Tastaturabfragen der Browser (zumindest Googles Chrome) immer noch die Tasten kapert und das Fenster ein wenig nach oben oder unten verrückt. Wenn mir dagegen keine Lösung einfällt, werde ich das Spiel wohl – wie schon bei meiner Trinket-Implementierung – auf Maussteuerung umstellen müssen.</p>
<p>Im nächsten Beitrag dazu werde ich dann noch auf Einzelheiten im Code der Implementierung eingehen. Denn momentan ist das alles auch bei mir noch <em>learning by doing</em>. Ich hoffe, ich weiß bis dahin dann mehr …</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024012601_pizzaplane_p5js_stage2/index.html</guid>
  <pubDate>Fri, 26 Jan 2024 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012601_pizzaplane_p5js_stage2/images/pizzaplane2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues vom Spielplatz: Sitting on the Dock of the Bay</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012501_dock_of_the_bay/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53485770087/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute hatte ich mit einem <a href="https://www.peacesoftware.de/">Freund und ehemaligen Arbeitskollegen</a> über die Bildgeneratoren der gekünstelten Intelligenzia ein wenig gefachsimpelt (oder eher schwadroniert). Davon angefixt wollte ich danach unbedingt ein paar Bilder generieren. Und da das auf <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> basierende <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a> sowieso noch für weitere Tests anstand, habe ich das Teil kurzerhand angeworfen und völlig sinnbefreit ein paar Bilder generieren lassen.</p>
<p>Als Prompt mußte der <a href="https://de.wikipedia.org/wiki/(Sittin%E2%80%99_On)_The_Dock_of_the_Bay">berühmte <em>Otis-Redding</em>-Song</a> herhalten, der sich schon während des Gesprächs als Ohrwurm in meinen Gehörgängen eingenistet hatte. Und da es bei unserer Diskussion auch um den Einfluß der <em>Styles</em> auf die generierten Bilder ging, habe ich erst einmal ein paar Bilder mit dem Style »Ultra Lighting« generieren lassen, wovon aber nur zwei wirklich brauchbar waren:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53485762982/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53487082080/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay02.jpg" class="img-fluid"></a></p>
<p>Die restlichen Bilder (auch das Bannerbild oben) habe ich dann ohne Style (Style: None) generieren lassen, die Stilvorgabe im Prompt (<em>french comic style</em> – siehe Bildbeschreibung unten) mußte ausreichen:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53486975789/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53486857916/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53486815853/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay05.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53485770757/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay06.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53486979869/"><img src="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay07.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Ihr stimmt mir sicher zu: Wenn man berücksichtig, daß die Bilder spontan und ohne große Vorüberlegung generiert wurden, sind sie doch recht nett geraten. Und bei meinen <a href="https://kantel.github.io/posts/2023120701_playground_ai/">bisherigen</a> <a href="https://kantel.github.io/posts/2023120801_playgroundai_avatare/">Tests</a> mit Playground AI hatte ich ja bereits festgestellt, daß das Teil auch durchaus das Zeug dazu hat, (mehr oder weniger) konsistente Charaktere für <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> zu erstellen. Das gilt insbesondere, da ich nun den Button gefunden habe, mit dem man auch in der kostenlosen Version ein (bis zu vierfaches) »Upscaling« der Bilder vornehmen kann (es ist in dem Aufklappmenü <code>…</code> rechts unter der Einzelansicht der Bilder versteckt). Man muß zwar als Nutzer der kostenlosen Version ein wenig sparsam damit umgehen – maximal 30 Upscales pro Tag sind möglich –, aber das sollte in vielen Fällen ausreichen.</p>
<p>Ich selber bin jetzt wieder ein wenig unschlüssig: Soll ich für die Avatare in meiner (geplanten, siehe <a href="https://kantel.github.io/posts/2024012402_back_to_wonderland/">gestern</a>) Räuberpistole <em>Alien Attack</em> <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> oder Playground AI nutzen? Da sind wohl noch einige Tests fällig. <em>Still digging!</em></p>
<hr>
<p><strong>Bilder</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53485770087/">Sitting on the Dock of the Bay</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a>- Prompt: »<em>An old man with a guitar is sitting on the dock of a bay in the morning sun. french comic style</em>«, Model: Playground v2. Style: None oder Ultra Lighting (siehe Text).</p>



 ]]></description>
  <category>Interactive Fiction</category>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Playground AI</category>
  <category>RenPy</category>
  <category>Tuesday JS</category>
  <guid>https://kantel.github.io/posts/2024012501_dock_of_the_bay/index.html</guid>
  <pubDate>Thu, 25 Jan 2024 17:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012501_dock_of_the_bay/images/dockofabay00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Zurück ins Wunderland: Künstliche Intelligenz und interaktive Geschichten</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012402_back_to_wonderland/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53485093685/"><img src="https://kantel.github.io/posts/2024012402_back_to_wonderland/images/twine281-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nach einer längeren, krankheitsbedingten Pause hat <em><a href="https://videlais.com/">Dan Cox</a></em> die Arbeit an seinen <a href="https://videlais.com/twine-tutorials/">Twine-Tutorials</a> wieder aufgenommen. Da er ein überaus korrekter Mensch ist, hat er sie in seiner Playlist <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr662CjQjQHOVJhmdsl2TgYk">Twine Handbook: Vol 1: Harlowe</a> penibel mit »Twine 2.8, Harlowe 3.3« gelabelt<sup>1</sup>. Dadurch wurde ich darauf gestoßen, »meiner« <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine-Desktop-App</a> ebenfalls ein Update zu spendieren (ich fuhr noch Twine 2.7.1 mit Harlowe 3.3.7). Jetzt habe auch ich ein aktuelles <a href="https://twinery.org/reference/en/release-notes/2-8.html#twine-281">Twine 2.8.1</a> mit einem <a href="https://twine2.neocities.org/">Harlowe 3.3.8</a> (die beiden anderen Storyformate, die ich nutze – <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> und <a href="https://www.motoslave.net/sugarcube/2/#documentation">SugarCube</a> – waren von dem Update nicht betroffen) auf meinem Rechner.</p>
<p>Die erste Erkenntnis, die ich aus dem Update gewonnen habe – Twine ab Version 2.8 besitzt endlich ein lang gewünschtes Feature: Der »Geschichtsbibliotheksordner« ist nicht mehr fest verdrahtet, sondern kann jetzt über das Menü <code>Twine -&gt; Setze den Geschichtsbibliotheksordner</code> angepaßt werden (nur bei der Desktop-App). Dadurch entfällt das bisherige, umständliche Herumgehampel mit Aliassen, wenn man auch diesen Ordner in seinem GitHub-Repositorium persistent unterbringen will.</p>
<p>Die zweite Erkenntnis: <a href="https://twine2.neocities.org/#introduction_unstable-4.0-builds-now-available!">Harlowe 4.0 steht in den Startlöchern</a> und wird nicht (mehr) mit Harlowe 3 kompatibel sein. Die bisherige <a href="https://twine2.neocities.org/#changes_4.0.0-changes-(unreleased)">ChangeLog</a> dazu ist aber noch sehr wenig aussagekräftig, also warte ich erst einmal ab, was die Zukunft bringt.</p>
<p>Auf jeden Fall wurde ich durch dieses Update an meine noch an- und ausstehenden Vorhaben erinnert:</p>
<p><strong>Vorhaben 1</strong>: <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Smashing Pumpkins</a> fertigstellen. Diese Geschichte<sup>2</sup> – die ich mit dem Storyformat SugarCube realisiert hatte – war mein erster Versuch, Bilder, die ich mit einer gekünstelten Intellligenzia (in diesem Falle <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a>) generiert hatte, in einer interaktiven Geschichte einzusetzen. Ich betrachte dieses Experiment als gelungen, allerdings gibt es in der eigentlichen Geschichte noch ein paar logische Ungereimtheiten, die es auszuräumen gilt. Und ich möchte pickbare <em>Assets</em>, die der Spieler für die kleine Hexe aufnehmen kann, nicht nur in einem Inventory-Menü, sondern auch in den Bildern sichtbar machen.</p>
<p><strong>Vorhaben 2</strong>: <a href="https://kantel.github.io/posts/2023102801_tweego_reloaded/">Zurück ins Wunderland, zurück zu Harlowe</a>. Ich möchte meine Tutorialreihe zu Twine und Harlowe, die sich an <a href="https://kantel.github.io/#category=Alice">Alices Ausflügen ins Wunderland</a> entlanghangeln, wieder aufnehmen. Auch hier hatte ich ja schon einmal eine gekünstelte Intelligenzia <a href="https://kantel.github.io/posts/2023102801_tweego_reloaded/">bemüht</a><sup>3</sup> (damals die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/comicfactory.html">AI Comic Factory</a>), Bilder für diese Geschichte zu erstellen, doch in der Zwischenzeit hatte ich viel mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> experimentiert und mit dieser <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a>-Anwendung bisher schon <a href="https://kantel.github.io/posts/2023101602_alice_raupe/">Unmengen</a> <a href="https://kantel.github.io/posts/2023112602_dreamstudio_party/">an</a> <a href="https://kantel.github.io/posts/2023120302_white_rabbit/">Bildern</a> <a href="https://kantel.github.io/posts/2023121802_humpel_pumpel/">generiert</a> (jüngst auch noch <a href="https://kantel.github.io/posts/2023122402_stoned_santa/">diese</a> und <a href="https://kantel.github.io/posts/2024010202_midnight_special/">diese</a>)<sup>4</sup>, die meiner Meinung nach besser in die Geschichte passen. Also wird hier wohl DreamStudio die Künstliche Intelligenz meines Vertrauens werden.</p>
<p><strong>Vorhaben 3</strong>: <em>Last but not least</em> ist da ja auch noch meine »wüste Räuberpistole« <a href="https://kantel.github.io/posts/2023061001_renpy_81_web/">Alien Attack</a><sup>5</sup>, für die ich ebenfalls noch eine Künstliche Intelligenz nach Bildern befragen möchte. Nach meinem derzeitigen Kenntnisstand bietet sich hierfür <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> an, da diese Engine explizit für die Erzeugung von <em>Game Assets</em> geschaffen wurde. Aber hier stehe ich erst am Anfang meiner Erkundungen, <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a>, <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/seaart.html">SeaArt AI</a> und <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor Art</a> stehen ebenfalls noch auf meiner Testliste. Die ganze Geschichte mit den KI-Bildgeneratoren ist ja noch recht jung (selbst solche (gefühlt) »alteingesessenen« Dienste wie <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/leonardoai.html">Leonardo AI</a> existieren gerade mal erst seit einem Jahr) und daher spülen auch täglich neue Anwendungen in meinen Feedreader.</p>
<p>Aber an Charaktere in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> werden noch ganz andere Anforderungen gestellt, als an Illustrationen in interaktiven Geschichten. Und Scenario hat hier – wenn auch an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> orientiert – schon <a href="https://www.youtube.com/watch?v=-co2CLGsCpc">ein</a> <a href="https://www.youtube.com/watch?v=escLL8dRtq4">paar</a> <a href="https://www.youtube.com/watch?v=0_KAF4TziUY">Lösungen</a> <a href="https://www.youtube.com/watch?v=gWOAO1ltZ_Y">vorgestellt</a>, daher steht das Teil zur Zeit bei mir ganz oben auf der Liste.</p>
<p>Auf jeden Fall möchte ich mit diesem letzten Projekt auch testen, wie und ob <a href="https://kantel.github.io/posts/2023082601_twine_und_hypermedia/">Twine mit Chapbook</a> als Werkzeug für eine Prototyperstellung für ein Spiel taugt, das als Endprodukt in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> laufen soll. Vom eingangs erwähnten <em>Dan Cox</em> gibt es einen schönen Beitrag »<a href="https://videlais.com/2021/02/28/how-can-i-use-twine-with-unity/">How can I use Twine with Unity?</a>«, der tief in die inneren Geheimnisse von Twine einführt. Und <em>Dan Cox</em> weiß, worüber er schreibt, immerhin ist er auch der Autor eines <a href="https://github.com/videlais/extwee/">Twee-Compilers</a>. Es gibt also noch viel zu spielen, viel zu testen und viel zu entdecken. <em>Still digging!</em></p>
<p>Eine ganz andere Geschichte ist da noch mein Projekt »<a href="http://blog.schockwellenreiter.de/2022/04/2022041401.html">Retrogaming und Künstliche Intelligenz</a>« (<a href="http://blog.schockwellenreiter.de/2022/04/2022041502.html">Nachschlag</a>), das ich ja ursprünglich in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html">Pygame Zero</a> (und später dann erst mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> und dann in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>) realisieren wollte. Das hat mit meiner jüngst frisch erwachten Liebe zu JavaScript/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> eine ganz neue Stoßrichtung bekommen. Doch das ist Stoff für einen eigenen Beitrag.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Wo ein »Volume 1« (bisher 34 Video-Tutorials) ist, gibt es (meistens) auch (mindestens) ein »Volume&nbsp;2«. Wohl denn: <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr5JmCL3GbEAd0jPsDVcuge7">Twine Handbook: Vols 2: SugarCube</a> (bisher 32 Video-Tutorials).↩︎</p></li>
<li id="fn2"><p>Eine spielbare Version dieser frühen Fassung habe ich <a href="https://kantel.itch.io/smashing-pumpkins">auf Itch.io hochgeladen</a>.↩︎</p></li>
<li id="fn3"><p>Auch dieses kurze <em>Proof of Concept</em> hatte ich <a href="https://kantel.itch.io/zurck-ins-wunderland">auf Itch.io eingestellt</a>. Dazu gibt es noch die Version <a href="https://kantel.github.io/posts/2023091101_alice_humpel_pumpel/">Alice im Reich der Ringe</a>, die ich zwar mit Chapbook als Storyformat realisiert hatte (und die mit »konventionell« erstellt (freien) Bildern illustriert war), aber deren Storyline die Grundlage für die geplante Tutoralreihe bilden soll. Auch von dieser Geschichte <a href="https://kantel.itch.io/alice-und-chapbook-stage-1">gibt es eine Fassung auf Itch.io</a>.↩︎</p></li>
<li id="fn4"><p>Und ein paar weitere habe ich auch schon auf Flickr hochgeladen und werde sie in den nächsten Tagen in diesem <del>Blog</del> Kritzelheft vorstellen.↩︎</p></li>
<li id="fn5"><p>Auch davon gibt es je einen Prototypen auf Itch.io: Einmal in einer <a href="https://kantel.itch.io/berlin-attack">Fassung mit Twine und Chapbook</a> und einmal die <a href="https://kantel.itch.io/alien-attack-renpy-test">Version mit Ren’Py</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Twine</category>
  <category>Harlowe</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>DreamStudio</category>
  <category>Scenario</category>
  <guid>https://kantel.github.io/posts/2024012402_back_to_wonderland/index.html</guid>
  <pubDate>Wed, 24 Jan 2024 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012402_back_to_wonderland/images/twine281.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 115.7 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012401_thunderbird_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53484572861/"><img src="https://kantel.github.io/posts/2024012401_thunderbird_update/images/donnervogelwinter01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wenn man sich bei Mozilla auf etwas verlassen kann, ist es, daß – bei regulären Updates – einen Tag nach dem Feuerfuchs der Donnervogel folgt. So auch diesen Monat: Nach dem <a href="https://kantel.github.io/posts/2024012301_firefox_update/">gestrigen Firefox-Update</a> hat Mozilla heute die Version 115.7 des <a href="http://www.mozillamessaging.com/">Thunderbirds</a> freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/115.7.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53484572861/">Der Donnervogel jagt den Feuerfuchs</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>A colorful, giant thunderbird pursues a red fire fox in a fairytale winter forest</em>«, Modell: SDXL Blend, Style: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024012401_thunderbird_update/index.html</guid>
  <pubDate>Wed, 24 Jan 2024 15:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012401_thunderbird_update/images/donnervogelwinter01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012303_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53377657714/"><img src="https://kantel.github.io/posts/2024012303_chrome_update/images/keinandroid-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute ist Flicken-Tag im <em>Schockwellenreiter</em>, denn auch Google hat ein wichtiges Update unters Volk gebracht und mit der Version 121 (121.6167.85/86) seines Browsers Chrome <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_23.html">kritische Sicherheitslücken</a> geschlossen.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53377657714/">(K)ein weiblicher Android</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>A female humanoid android with blue skin, red lips, bright eyes, slim, stands at a table in a retro laboratory with strange tube devices and monitors and stacks building blocks. A young man with blue eyes, brown, curly hair and glasses in a colorful checked shirt and vest stands behind her and makes notes in a notebook. colored steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024012303_chrome_update/index.html</guid>
  <pubDate>Tue, 23 Jan 2024 19:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012303_chrome_update/images/keinandroid.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apfel-Flickentag im Januar</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012302_apple_patchday/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53482992684/"><img src="https://kantel.github.io/posts/2024012302_apple_patchday/images/creepysnowwhite-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der erste Patchday dieses Jahres der Firma mit dem angebissenen Apfel im Logo fiel erwartungsgemäß so umfangreich aus, das ich ihn wieder nur <em>en bloc</em> abhandeln kann. Also wie immer, der Reihe nach:</p>
<section id="apple-veröffentlicht-macos-sonoma-14.3" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sonoma-14.3">Apple veröffentlicht macOS Sonoma 14.3</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sonoma 14.3 freigegeben, bietet Leistungsverbesserungen und korrigiert damit auch wieder <a href="https://support.apple.com/de-de/HT214061">Sicherheitsprobleme</a>.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-monterey" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-monterey">Apple veröffentlicht Sicherheitsupdate für macOS Ventura und Monterey</h3>
<p>Apple hat auch das Sicherheitsupdate auf <a href="https://support.apple.com/de-de/HT214058">macOS Ventura 13.6.4</a> und <a href="https://support.apple.com/de-de/HT214057">macOS Monterey 12.7.3</a> freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-ios-17.3-und-ipados-17.3" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.3-und-ipados-17.3">Apple veröffentlicht iOS 17.3 und iPadOS 17.3</h3>
<p>Wie angekündigt hat Apple das Update auf iOS 17.3 und iPadOS 17.3 bereitgestellt. Die Updates bieten neue Funktionen und Fehlerbehebungen und korrigieren <a href="https://support.apple.com/de-de/HT214059">kritische Sicherheitslücken</a>.</p>
<p>Das Update auf auf iOS 17.3 iPadOS 17.3 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-iosipados-16.7.5-für-ältere-systeme" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-iosipados-16.7.5-für-ältere-systeme">Apple veröffentlicht iOS/iPadOS 16.7.5 für ältere Systeme</h3>
<p>Apple hat nun das Update auf iOS 16.7.5 für ältere iPhones und iPadOS 16.7.5 für ältere iPads bereitgestellt. Das Update behebt <a href="https://support.apple.com/de-de/HT214063">kritische Sicherheitslücken</a>, die vermutlich bereits ausgenutzt wurden.</p>
<p>Auch dieses Update auf iOS/iPadOS 16.7.5 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Und auch hier gilt: Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-10.3" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-10.3">Apple veröffentlicht watchOS 10.3</h3>
<p><em>Last but not least</em>: Die Uhr. Apple hat für die Apple Watch watchOS 10.3 bereitgestellt und behebt auch damit wieder <a href="https://support.apple.com/de-de/HT214060">Sicherheitsprobleme</a>.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone unter <code>Allgemein &gt; Softwareupdate</code> gestartet . Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53482992684/">Creepy Snow White, the Witch, and the Apples</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>The evil witch gives Snow White a half-eaten apple in the fairytale forest</em>«, Model: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024012302_apple_patchday/index.html</guid>
  <pubDate>Tue, 23 Jan 2024 17:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012302_apple_patchday/images/creepysnowwhite.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
