<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.340</generator>
<lastBuildDate>Fri, 26 May 2023 13:45:00 GMT</lastBuildDate>
<item>
  <title>Wie man einen Zombie-Angriff überlebt: Agentenbasierte Modellierung mit Python</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052601_zombie_attack_via_abm/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52926972916/"><img src="https://kantel.github.io/posts/2023052601_zombie_attack_via_abm/images/netlogozombie-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ihr ahnt es sicher bereits: Heute ist wieder Freitag und ein urchristliches Wochenende steht vor der Tür. Daher habe ich es mir zur Aufgabe gemacht, auch wenn die Wetterfrösche sonnige Tage prophezeien, Euch mit einer hinreichend umfangreichen Menge an Video-Tutorials zu versorgen, damit Ihr – sollte Euch doch mal die Langeweile überwältigen – nicht in die Kirchen rennt. Ihr habt dann nämlich wichtigeres zu tun, zum Beispiel eine Zombie-Attacke zu überleben. Doch dazu später mehr.</p>
<p>Denn es hatte sich ja <a href="https://kantel.github.io/posts/2023052301_mesa_simpy_jupyterlab/">schon</a> <a href="https://kantel.github.io/posts/2023052001_simualtion_simpy_mesa/">abgezeichnet</a>: Die heutige Sammlung von Video-Tutorials behandelt »<a href="https://de.wikipedia.org/wiki/Agentenbasierte_Modellierung">Agentenbasierte Modellierungen</a>« (ABM), und zwar in der Hauptsache in Python mit den Paketen <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/simpy.html">SimPy</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/mesa.html">Mesa</a>. Ich fange mal mit Mesa an:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/bjjoHji8KUQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Von <em>Jackie Kazil</em> gibt es den auf der <em>PyData DC 2016</em> gehaltenen, vierzigminütigen Vortrag »<a href="https://www.youtube.com/watch?v=bjjoHji8KUQ">Agent based modeling in Python</a>«, der sowohl einen guten Überblick über das Thema »Agentenbasierte Modellierung« wie auch über Mesa (und die Zukunft von Mesa) gibt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/h_V8I04p-0U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wenn es um agentenbasierte Modellierung geht, ist die <a href="https://sites.google.com/nihr.ac.uk/hsma">Health Service Modelling Associates</a> (HSMA) der NIHR Applied Research Collaboration South West Peninsula (PenARC) nicht weit. Acu wenn es schwierig ist, aus der Masse ihrer Videos eine Auswahl zu treffen, die <strong>HSMA 4 Sessions 6B and 6C</strong> zum Thema »<a href="https://www.youtube.com/watch?v=h_V8I04p-0U">Agent Based Simulation using MESA Parts 1 and 2</a>« ist definitiv einen Blick wert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/PDrAsw3UIlA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Zu dem <strong>Python Mesa Tutorial</strong>: »Build Your ABM Simulation« <a href="https://www.youtube.com/watch?v=PDrAsw3UIlA">Part 1</a> (15 Minuten), <a href="https://www.youtube.com/watch?v=s7i-TZvIyWQ">Part 2</a> (15 Minuten) und <a href="https://www.youtube.com/watch?v=39AZiRC6RQ8">Part 3</a> (30 Minuten), gibt es auch noch einen ausführlichen Blogpost: »<a href="https://smartinsightblog.blogspot.com/2021/01/how-does-covid-19-continue-to-spread.html">How does COVID-19 continue to spread? – A simulation 2.0 (How it was built)</a>«.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/u-XeFNeImyk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Sehr geholfen hat mir dieser zweistündige Livestream »<a href="https://www.youtube.com/watch?v=u-XeFNeImyk">Build an Agent-Based Simulation with Mesa</a>«, weil er ausführlich (für Ungeduldige vielleicht zu ausführlich) darauf eingeht, <strong>wie</strong> Mesa eigentlich funktioniert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/b0bZ9FAgyrg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und <em>last but not least</em>: <a href="https://www.youtube.com/watch?v=b0bZ9FAgyrg">Getting started with MESA - 2020 Edition</a> ist Teil der Playlist »<a href="https://www.youtube.com/playlist?list=PLD3HCxw7iK2BfbIAs6-fiBzdE_aA-DeaK">MESA</a>«, von <em>Frank Timmes</em>, acht Videos zwischen je etwa zwanzig Minuten und anderthalb Stunden Spieldauer.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/3yQVpIcs0zg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Weiter mit SimPy: Auch hier komme ich nicht an dem <a href="https://www.youtube.com/@hsma">YouTube-Kanal</a> der <a href="https://sites.google.com/nihr.ac.uk/hsma">Health Service Modelling Associates</a> (HSMA) der NIHR Applied Research Collaboration South West Peninsula (PenARC) vorbei. Leider gibt es dort keine vernünftig verlinkbaren und zitierfähigen Playlists. Daher mußte ich deren Videos einzeln zusammenklauben und verlinken:</p>
<ul>
<li><strong>Session 5A Lecture 1</strong>: <a href="https://www.youtube.com/watch?v=3yQVpIcs0zg">An Introduction to Discrete Event Simulation</a> (eineinviertel Stunde)</li>
<li><strong>Session 5A Lecture 2</strong>: <a href="https://www.youtube.com/watch?v=d_c8d8j-asA">Python Generator Functions and a Glimpse at SimPy</a> (halbe Stunde)</li>
<li><strong>Session 5B</strong>: <a href="https://www.youtube.com/watch?v=jXDjrWKcu6w">Building a Discrete Event Simulation model using SimPy</a> (eindreiviertel Stunde)</li>
<li><strong>Session 5C</strong>: <a href="https://www.youtube.com/watch?v=QV-pJnKrGuc">Object Oriented SimPy</a> (anderthalb Stunden)</li>
</ul>
<p>Ich hoffe, ich habe alle Videos dieser Reihe gefunden.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/oU2wKpStnls" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>SimPy aber auch Mesa nutzen intensiv Generatoren in Python. Das Video »<a href="https://www.youtube.com/watch?v=oU2wKpStnls">Generators in Python | Das YIELD Keyword verstehen</a>« erklärt, was <em>Generators</em> in Python sind und wozu man sie nutzen kann. Dazu ist auch noch der Beitrag von <em>Kyle Stratis</em> »<a href="https://realpython.com/introduction-to-python-generators/">How to Use Generators and yield in Python</a>« von der Webseite Real Python extrem nützlich.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/DQihVrHiulY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, die Großmutter aller Entwicklungsumgebungen für agentenbasierte Modellierungen ist <a href="http://cognitiones.kantel-chaos-team.de/programmierung/netlogo.html">NetLogo</a>, ein trotz seines Alters immer noch populäres Tool, das auch noch weiter entwickelt wird (die jüngste Version 6.3.0 ist vom September 2022). Und in dem Video »<a href="https://www.youtube.com/watch?v=DQihVrHiulY">Agent Based Models in Urban Systems</a>« von <em>Kenneth Steif</em> kommt die im Titel erwähnte Simualtion einer Zombie-Attacke zum Einsatz. Außerdem werden dort viele theoretische Hintergründe der agentenbasierten Modellierung erläutert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/Jp_W1ELu1-4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und das halbstündige »<a href="https://www.youtube.com/watch?v=Jp_W1ELu1-4">Jupyter Notebook Complete Tutorial</a>« der <em>Python Show</em> wollte ich Euch ebenfalls nicht vorenthalten.</p>
<p>Das dürfte Euch erst einmal beschäftigen. Möge wahlweise die heilige Schlange oder die große Schildkröte (wegen NetLogo) über Euch kommen. Pfrohe Pfingsten!</p>



 ]]></description>
  <category>Simulation</category>
  <category>SimPy</category>
  <category>Mesa</category>
  <category>NetLogo</category>
  <category>Dynamische Systeme</category>
  <guid>https://kantel.github.io/posts/2023052601_zombie_attack_via_abm/index.html</guid>
  <pubDate>Fri, 26 May 2023 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052601_zombie_attack_via_abm/images/netlogozombie.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retro-Platformer mit P5.js (ES6) und P5.play – Stage 2</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052501_retrogame_p5js_p5play_stage2/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52925543820/"><img src="https://kantel.github.io/posts/2023052501_retrogame_p5js_p5play_stage2/images/retroplaytformerstage2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es gibt erste Fortschritte (und erste Probleme) mit meinem <a href="https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/">Projekt eines Retrogame-Platformers</a> in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a>. Zum einen habe ich in <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> ein komplettes Framework erstellt, das nicht nur P5.js, sondern auch P5.play einbindet, aber zum anderen nutzt <em>Mr.&nbsp;Erdreich</em>, dessen Video-Tutorial-Reihe »<a href="https://www.youtube.com/playlist?list=PLBDInqUM5B26FjwMMZqGDxqQr1kX5V9Ul">Creating a Retro-Style Platform Game in P5.js</a>« ja die Anregung für dieses Projekt gab, nur Teile von P5.play und er scheint auch die neuen Methoden von P5.play Version 3.x zu ignorieren.</p>
<p>Daher stellen sich mir erstmal folgende Fragen: Erstens, ist es sinnvoll, Unterklassen von <code>Sprite</code> zum Beispiel für <code>Player</code>, <code>Enemies</code> etc. zu bilden oder ist es einfacher, diesen ihre Eigenschaften und Methoden als Instanz der Klasse <code>Sprite</code> zuzuweisen? Also zum Beispiel:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1">player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sprite</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-2">player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Zweitens: Wie setze ich zum Beispiel Sprites in Gruppen sinnvoll ein?</p>
<p>Um überhaupt eine Grundlage für meine Experimente zu besitzen, habe ich in das <a href="https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/">Beispiel aus meinem ersten Versuch</a> einfach p5.play zusätzlich implementiert. Dafür mußte ich die Bibliotheken <code>planck.min.js</code> (darauf baut P5.play auf) und <code>p5play.js</code> importieren und meinem VS-Code in der <code>index.html</code> bekanntmachen (wie meine anderen JavaScript-Bibliotheken auch liegen sie im Verzeichnis <code>libraries</code>)<sup>1</sup>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libraries/planck.min.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb2-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libraries/p5play.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span></code></pre></div>
<p>Um die Konfiguration testen zu können, habe ich die <code>game()</code>-Methode um folgende Zeilen ergänzt:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)) {</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span>) {</span>
<span id="cb3-3">      player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    }</span>
<span id="cb3-5">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)) {</span>
<span id="cb3-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span>) {</span>
<span id="cb3-7">      player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">    }</span>
<span id="cb3-9">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb3-10">    player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">  }</span>
<span id="cb3-12">  player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Und schon könnt Ihr entweder mit den Pfeiltasten oder mit dem Tasten <code>a</code> und <code>d</code> das kleine, violette Rechteck nach rechts oder links bewegen<sup>2</sup>.</p>
<div id="retro2">

</div>
<p>Damit das auch in <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> funktioniert, mußte ich im YAML-Header der <code>index.qmd</code> diese Zeilen einfügen<sup>3</sup>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-in-header</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;script src="./js/p5.min.js"&gt;&lt;/script&gt;</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;script src="./js/planck.min.js"&gt;&lt;/script&gt;</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;script src="./js/p5play.js"&gt;&lt;/script&gt;</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-before-body</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;script src="./sketch.js"&gt;&lt;/script&gt;</span></span></code></pre></div>
<p><strong>Was habe ich erreicht?</strong> Ich habe P5.js mit P5.play zur Zusammenarbeit bewegen können, und das sowohl in Visual Studio Code wie auch in Quarto. Und ich habe mir ein erstes Framework geschaffen, das als Basis für weitere Experimente dienen kann. Das ist schon eine ganze Menge und war sicher die Mühe wert, denn P5.play scheint eine phantastische (Physik-) Bibliothek zur Spieleprogrammierung zu sein. Es lohnt sich also für mich, dranzubleiben.</p>
<p><strong>Was sind meine nächsten Schritte?</strong> Ich werde erst einmal <em>Matthew Bardin</em> und seine <a href="https://kantel.github.io/posts/2023050502_gamedev_p5js/">hier vorgestellt</a> beiden Playlists »<a href="https://www.youtube.com/playlist?list=PLvqAGa7mJm0XgzljScjXUsbOLshmIQ7-S">P5.play v3.0</a>« und »<a href="https://www.youtube.com/playlist?list=PLvqAGa7mJm0WH-WCeAw3bkfre-CE5XF0y">p5.play classroom lessons</a>« konsultieren. Denn <em>Matthew Bardin</em> ist (auch mangels echter Konkurrenz) für mich <strong>die</strong> Koryphäe für P5.play und ich habe noch viel zu lernen. Aber ich habe auch viel Spaß dabei. <em>Still digging!</em></p>
<p>Zum Abschluß wie immer für alle unter Euch, die gerne Quellcode lesen und/oder nachvollziehen wollen, hier der komplette Quellcode des Skriptes.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retro Platformer Stage 2</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mit P5.play und planck.js</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Nach Mr. Erdreich: Creating a Retro-Style Platform Game in P5.js &lt;https://www.youtube.com/playlist?list=PLBDInqUM5B26FjwMMZqGDxqQr1kX5V9Ul&gt;, ca. 2020</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Klassen und nach ES 6 angepaßt: Jörg Kantel, 2023</span></span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Konstanten</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winwidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winheight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Globale Variablen</span></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> stage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> platforms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Klassen</span></span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Spieler</span></span>
<span id="cb5-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Player {</span>
<span id="cb5-19"></span>
<span id="cb5-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb5-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">146</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-26">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player constructor()</span></span>
<span id="cb5-27"></span>
<span id="cb5-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb5-29"></span>
<span id="cb5-30">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player update()</span></span>
<span id="cb5-31"></span>
<span id="cb5-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb5-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// purple</span></span>
<span id="cb5-37">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-39">  }  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player display()</span></span>
<span id="cb5-40"></span>
<span id="cb5-41">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player</span></span>
<span id="cb5-42"></span>
<span id="cb5-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Platform</span></span>
<span id="cb5-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Platform {</span>
<span id="cb5-45"></span>
<span id="cb5-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _h) {</span>
<span id="cb5-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-48">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-49">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-51">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Platform constructor()</span></span>
<span id="cb5-52"></span>
<span id="cb5-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb5-54">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-55">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-56">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-57">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Orange</span></span>
<span id="cb5-58">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-59">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-60">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Platform display()</span></span>
<span id="cb5-61"></span>
<span id="cb5-62">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Platform</span></span>
<span id="cb5-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Klassen</span></span>
<span id="cb5-64"></span>
<span id="cb5-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Funktionen</span></span>
<span id="cb5-66"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">game</span>() {</span>
<span id="cb5-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">230</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Himmelblau</span></span>
<span id="cb5-68">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Grund</span></span>
<span id="cb5-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noStroke</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Grasgrün</span></span>
<span id="cb5-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-74">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fensterrahmen</span></span>
<span id="cb5-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-76">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noFill</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Schwarz</span></span>
<span id="cb5-78">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-79">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-80">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Platforms</span></span>
<span id="cb5-82">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> platform <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> platforms) {</span>
<span id="cb5-83">    platform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-84">  }</span>
<span id="cb5-85">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Player</span></span>
<span id="cb5-86">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)) {</span>
<span id="cb5-87">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span>) {</span>
<span id="cb5-88">      player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-89">    }</span>
<span id="cb5-90">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (kb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pressing</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>)) {</span>
<span id="cb5-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span>) {</span>
<span id="cb5-92">      player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-93">    }</span>
<span id="cb5-94">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb5-95">    player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-96">  }</span>
<span id="cb5-97">  player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-98">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end game()</span></span>
<span id="cb5-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Funktionen</span></span>
<span id="cb5-100"></span>
<span id="cb5-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hauptprogramm</span></span>
<span id="cb5-102"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb5-103">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(winwidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> winheight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-104">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"retro2"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-105">  stage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-106">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectMode</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-107">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textAlign</span>(CENTER)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-108">  platforms[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Platform</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-109">  player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-110">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end setup()</span></span>
<span id="cb5-111"></span>
<span id="cb5-112"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb5-113">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (stage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb5-114">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">game</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-115">  }</span>
<span id="cb5-116">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end draw()</span></span>
<span id="cb5-117"></span>
<span id="cb5-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Hauptprogramm</span></span></code></pre></div>
<p>Den Quelltext des Skriptes wie auch der <code>index.html</code> findet Ihr auch in <a href="https://github.com/kantel/p5js/tree/master/retroplatformer/stage02">meinem Github-Repositorium</a> zu diesem Projekt.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Im Verzeichnisbaum dieser Seite liegen sie wiederum im Verzeichnis <code>js</code>. Von dort werden die Skripte im Header eingebunden.↩︎</p></li>
<li id="fn2"><p>P5.play arbeitet klaglos mit <a href="https://github.com/antiboredom/p5.vscode#readme">p5.vscode</a> zusammen. Um jedoch auch Auto-Vervollständigung und Syntax-Coloring dafür in Visual Studio Code nutzen zu können, empfiehlt sich noch die Erweiterung <a href="https://marketplace.visualstudio.com/items?itemName=quinton-ashley.p5play-vscode">p5play VSCode</a> zu installieren.↩︎</p></li>
<li id="fn3"><p>Vergleiche dazu »<a href="https://kantel.github.io/posts/2023050401_roboter_im_netz/">Roboter im Netz – mit P5.js</a>« in diesem <del>Blog</del> Kritzelheft am 4. Mai dieses Jahres.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>P5.js</category>
  <category>P5.play</category>
  <guid>https://kantel.github.io/posts/2023052501_retrogame_p5js_p5play_stage2/index.html</guid>
  <pubDate>Thu, 25 May 2023 18:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052501_retrogame_p5js_p5play_stage2/images/retroplaytformerstage2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Was wird aus dem Brauhaus Rixdorf?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52916893689/"><img src="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Seit Jahren verödet das einst bei der Neuköllner Bevölkerung sehr beliebte Brauhaus Rixdorf mitsamt seinem wunderbaren Biergarten. Selbst die Optimisten auf Google verkünden, daß das Lokal »Dauerhaft geschlossen« sei. Ich hatte diese Befürchtung schon 2016 in einem <a href="https://proneubritz.jimdofree.com/2016/11/03/neue-ausgabe-der-neubritzer-nachrichten/">Beitrag für die »Neubritzer Nachrichten«</a> geäußert (Seite 3f) und den Umbau der alten, denkmalgeschützten Fabrikgebäude des ehemaligen <a href="https://de.wikipedia.org/wiki/Eisenwerk_Franz_Weeren">Eisenwerks Franz Weeren</a> zu und den Neubau von weiteren Eigentumswohnungen als »<a href="https://investorenarchitektur.de/2016/08/27/stuck-und-altbau-statt-sichtbeton-und-investoren%c2%adarchitektur/#more-424">Investorenarchitektur</a>« gebrandmarkt.</p>
<p>Mir wurde allerdings in der gleichen Ausgabe (Seite 4f) von einer Architektin entgegnet, daß das doch alles nicht so schlimm sei, Biergarten und Eigentumswohnungen würden sehr wohl zusammenpassen.</p>
<p>Es kam dann noch viel schlimmer, als selbst ich befürchtet hatte. Der Bauherr ließ den Durchgang zwischen der Glasower Straße und der Delbrückstraße, die an das Brauhaus und zu dem Brauhaus führte einfach auch für Fußgänger schließen (in Deutschland darf man als Immobilieneigentümer so kaltschnäuzig sein). Nicht nur, daß damit die letzte Hoffnung auf eine Wiedereröffnung des Brauhauses zu Grabe getragen wurde, auch der beliebte, kurze Fußweg der Bewohner eines Altenheims in der Delbrückstraße zu einem Supermarkt (eigentlich direkt gegenüber) in der Glasower Straße wurde so gesperrt.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52916158097/"><img src="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52916893689/"><img src="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52917200243/"><img src="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52916747231/"><img src="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52916895484/"><img src="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf05.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Bei den steigenden Grundstücks- und Immobilienpreisen kann der Investor warten: Spätestens in ein paar Jahren (das haben schon die Vorgänge um das ehemalige Neuköllner Kinderkrankenhaus am Mariendorfer Weg gezeigt) ist das Bezirksamt weichgekocht und es werden (Um-) Baugenehmigungen für Projekte erteilt, die heute noch als undenkbar abgetan werden. Im günstigsten Falle wird aus der alten, denkmalgeschützten Farikantenvilla eine weitere Kindertagesstätte, realistischer halte ich aber die Möglichkeit, daß in dieser Villa ebenfalls Eigentumswohnungen entstehen. Sagt nicht, ich hätte Euch nicht gewarnt.</p>
<p>Vor einigen Tagen war der Durchgang wegen Bauarbeiten für ein paar Stunden geöffnet. Ich hatte diese Gelegenheit genutzt, um ein paar Abschiedsphotos vom Brauhaus Rixdorf zu schießen. So schön werdet Ihr und werde ich es wohl nicht mehr erleben. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Wohnungsbau</category>
  <category>Denkmalschutz</category>
  <category>Städte für Menschen</category>
  <category>Atlas Curiosa</category>
  <guid>https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/index.html</guid>
  <pubDate>Wed, 24 May 2023 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052401_brauhaus_rixdorf/images/brauhausrixdorf.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>JupyterLab Desktop als Arbeitsumgebung für SimPy und Mesa</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052301_mesa_simpy_jupyterlab/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52912347429/"><img src="https://kantel.github.io/posts/2023052301_mesa_simpy_jupyterlab/images/jupyterlabdesktop4-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Tutorials zu den von mir am <a href="https://kantel.github.io/posts/2023052001_simualtion_simpy_mesa/">Wochenende vorgestellten</a> (Python-) Simulationsbibliotheken <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/simpy.html">SimPy</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/mesa.html">Mesa</a> scheinen alle davon auszugehen, daß man als Python-Umgebung irgendetwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a> nutzt, sei es <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> oder gar <a href="https://geekflare.com/de/google-colab/">Google Colab</a>. Zwar wird in einigen Tutorials betont, daß die Jupyter-Nutzung »optional« sei, jedoch habe ich den Eindruck, daß ich es mir einfacher mache, wenn ich für diese Zwecke Jupyter nicht ignoriere.</p>
<p>Also habe ich mein vor wenigen Wochen frisch installiertes <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JuypterLab Desktop</a> (in der Version 4.0.0-1) angeworfen und es für meine Bedürfnisse aufgehübscht: Links über die gesamte Länge des Fensters ein File-Browser, den Haupteil nimmt ein Fenster ein, das jenach Bedarf ein Jupyter-Notebook oder den Python-Quelltext aufnimmt und darunter noch zwei kleine Fenster je für ein Terminal und für die IPython-Console. Mehr brauche ich – glaube ich – nicht und im Darkmode sieht es auch recht hübsch aus (das Auge programmiert schließlich mit).</p>
<p>Dann habe ich mir noch drei etwas längere Video-Tutorials herausgesucht, die mir helfen sollen, meine Scheu vor den Notebooks zu verlieren:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/5pf0_bpNbkw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Rob Mulla: <em><a href="https://www.youtube.com/watch?v=5pf0_bpNbkw">Jupyter Notebook Complete Beginner Guide 2023 - From Jupyter to Jupyterlab, Google Colab and Kaggle</a>!</em>, 25 Minuten, und</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/sfBg4EfJFpw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Center of Expertise in Big Geodata Science (CRIB): <em><a href="https://www.youtube.com/watch?v=sfBg4EfJFp">Introduction to JupyterLab</a></em>, etwas über zwei Stunden.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/yjjE-MJD5TI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><em>Last but not least</em>: Christopher Cameron: <em><a href="https://www.youtube.com/watch?v=yjjE-MJD5TI">Introduction to Jupyter Lab for Python</a></em>, knapp eine Stunde.</p>
<p>Das letzte Video ist Teil einer breit angelegten, 16-teiligen Playlist des <em>Cornell University Center for Advanced Computing</em>: »<a href="https://www.youtube.com/playlist?list=PL8ErN3EFA8Gx1cJN2CY1C8y532hbPCiBt">Computational Topics for Cornell Researchers</a>«, die von Python über R und Linux bis hin zu Excel-Dateien alles behandelt, was das Herz eines (zukünftigen) Data Scientists begehrt. Und der Name »Cornell« bürgt für Qualität.</p>
<p>Wie immer in solchen Fällen: Ich habe erst einmal zu tun. <em>Still digging!</em></p>



 ]]></description>
  <category>Simulation</category>
  <category>SimPy</category>
  <category>Mesa</category>
  <category>Dynamische Systeme</category>
  <category>JupyterLab Desktop</category>
  <guid>https://kantel.github.io/posts/2023052301_mesa_simpy_jupyterlab/index.html</guid>
  <pubDate>Tue, 23 May 2023 12:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052301_mesa_simpy_jupyterlab/images/jupyterlabdesktop4.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>So vertrottelt kann doch niemand sein: Geige im Wert von über 100.000 Euro im Zug vergessen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052204_geige_vergessen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/9/9e/Still_life_with_jewels_violin_globe_and_book.jpg"><img src="https://kantel.github.io/posts/2023052204_geige_vergessen/images/geigeglobusglitzer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Das muß man sich mal auf der Zunge zergehen lassen: Eine laut Presseberichten »professionelle« Musikerin fuhr mit einem Geigenkoffer mit einer Geige im Wert von über 100.000 Euro und zwei Geigenbögen im Wert von mehr als 23.000 Euro mit einem ICE von Berlin nach Stuttgart. Als sie in Stuttgart ausstieg, <a href="https://www.rbb24.de/panorama/beitrag/2023/05/berlin-geige-zug-ice-gestohlen-polizei-zeugen.html">hatte sie ihr wertvolles Gepäckstück im Zug – wie es hieß »versehentlich« – zurückgelassen</a> und dies auch erst bemerkt, als der ICE bereits wieder auf dem Weg zurück nach Berlin war.</p>
<p>Da hatte wohl jemand zuviel Geld, denn unter normalen Umständen kann so vertrottelt doch niemand sein. Ich wünsche dem »Finder« dieser Geige viel Spaß mit dem Instrument.</p>
<p><em>(Bild: Stilleben mit Juwelen, Musikinstrumenten und Globus, unbekannter Künstler, 19.&nbsp;Jahrhundert (?), Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Still_life_with_jewels_violin_globe_and_book.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>News</category>
  <guid>https://kantel.github.io/posts/2023052204_geige_vergessen/index.html</guid>
  <pubDate>Mon, 22 May 2023 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052204_geige_vergessen/images/geigeglobusglitzer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Photostrecke: Unser kleiner Garten im Mai</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052203_garten_im_mai/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52913823971/"><img src="https://kantel.github.io/posts/2023052203_garten_im_mai/images/garten2023mai01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Kaum ist die Gefahr einer Corona-Infektion vorüber, kehrt die absolut tödliche Männergrippe™ zurück. Doch auch wenn sie mich dieses Frühjahr – wie in fast allen <a href="http://blog.schockwellenreiter.de/2013/02/20130208.html">Jahren</a> <a href="http://blog.schockwellenreiter.de/2015/10/2015102302.html">vor</a> <a href="http://blog.schockwellenreiter.de/2018/03/2018031302.html">Corona</a> – fest in ihren Klauen hält, ist das noch lange kein Grund, nicht das WLAN auf der Terrasse einzuweihen. Denn auch wenn es dieses Jahr erst sehr spät erst eingetreten ist: Endlich ist das Wetter warm genug, daß ich mich – tödliche Männergrippe™ hin, tödliche Männergrippe™ her – mit <a href="http://blog.schockwellenreiter.de/2021/12/2021120701.html">meinem Chromebook</a> auf der Terrasse verlustieren kann, ohne mir gleich den Arsch abzufrieren.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52899947963/"><img src="https://kantel.github.io/posts/2023052203_garten_im_mai/images/garten2023mai02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52909132446/"><img src="https://kantel.github.io/posts/2023052203_garten_im_mai/images/garten2023mai03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52909519670/"><img src="https://kantel.github.io/posts/2023052203_garten_im_mai/images/garten2023mai04.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52909520185/"><img src="https://kantel.github.io/posts/2023052203_garten_im_mai/images/garten2023mai05.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Und ich möchte die Gelegenheit auch gleich nutzen, ein paar Photos, die ich in den letzten Tagen aufgenommen hatte, und die unseren kleinen Schattengarten in grün-weißer Pracht zeigen, hier zu veröffentlichen. Da müßt Ihr einfach wieder durch! <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Garten</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023052203_garten_im_mai/index.html</guid>
  <pubDate>Mon, 22 May 2023 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052203_garten_im_mai/images/garten2023mai01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Born to be Root</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052202_born_to_be_root/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://m.media-amazon.com/images/I/A13usaonutL._CLa%7C2140%2C2000%7C91y8HdwZ14L.png%7C0%2C0%2C2140%2C2000%2B0.0%2C0.0%2C2140.0%2C2000.0_AC_UX522_.png"><img src="https://kantel.github.io/posts/2023052202_born_to_be_root/images/borntoberoot-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Neustart ist was für Weicheier! Schon <a href="https://www.amazon.de/Linux-geboren-Lustiges-Retro-T-Shirt/dp/B09YXRNPRM/ref=sr_1_6">bestellt</a><sup>1</sup>! (Manchmal will das Kind im Manne gefüttert werden.)</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Man beachte die seltsame Übersetzung auf der Verkaufsseite. Da muß Amazons Künstliche Intelligenz aber noch gewaltig üben.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Digitales Leben</category>
  <guid>https://kantel.github.io/posts/2023052202_born_to_be_root/index.html</guid>
  <pubDate>Mon, 22 May 2023 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052202_born_to_be_root/images/borntoberoot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Quadplay</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052201_quadplay/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52914847739/"><img src="https://kantel.github.io/posts/2023052201_quadplay/images/quadplay-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/quadplay.html">Quadplay✜</a></strong> ist eine Fantasiekonsole, um plattformübergreifende Spiele im Retro-Stil zu entwickeln. Quadplay-Spiele können sowohl online im Browser wie auch lokal auf den Desktop unter Windows, macOS und Linux entwickelt werden.</p>
<p>Die Software ist frei und Open Source (LGPL). Die Sprache PyxlScript ist eine Python-ähnliche Programmiersprache. Editiert werden kann sie sowohl im mitgelieferten Quadplay-eigenen Editor, aber auch in nahezu jedem anderen Texteditor (es gibt unter anderem eine Erweiterung für <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>).</p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li><em><a href="https://gamefromscratch.com/quadplay-console-released-free-and-open-sourced/">Quadplay Console Released Free And Open Sourced</a></em>, GameFromScratch.com vom 7.&nbsp;Juli&nbsp;2019</li>
</ul>
</section>
<section id="links" class="level3">
<h3 class="anchored" data-anchor-id="links">Links</h3>
<ul>
<li><a href="https://morgan3d.github.io/quadplay/console/quadplay.html?IDE=1">Quadplay Home</a></li>
<li><a href="https://morgan3d.github.io/quadplay/doc/manual.md.html">Quadplay Dokumentation</a></li>
<li><a href="https://github.com/morgan3d/quadplay">Quadplay @ GitHub</a></li>
</ul>
<p>Ich weiß nicht, ob ich mit Quadplay etwas anstellen werde, aber ich halte Fantasiekonsolen für ein interessantes Konzept für alle, die an einer plattformübergreifenden Programmierung von Retrospielen interessiert sind. Und da mir in erster Annäherung Quadplay mit seiner an Python orientierten Skriptsprache näher liegt, als das <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a>-basierte, ebenfalls freie <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> (nichts gegen Lua, ich kann es nur einfach (noch?) nicht), habe ich dem Teil <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/quadplay.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert.</p>
<p>Solltet Ihr in der nächsten Zeit mehr zu Quadplay in diesem <del>Blog</del> Kritzelheft lesen (besonders die Idee, Visual Studio Code als externen Editor zu nutzen, fasziniert mich), dann wißt Ihr, das es nicht nur beim Erstellen dieser einen Wiki-Seite geblieben ist. <em>Still digging!</em></p>
<p><img src="https://kantel.github.io/posts/2023052201_quadplay/images/ninja_quadplay.png" class="img-fluid"></p>


</section>

 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Retrogaming</category>
  <category>Fantasiekonsole</category>
  <category>Quadplay</category>
  <guid>https://kantel.github.io/posts/2023052201_quadplay/index.html</guid>
  <pubDate>Mon, 22 May 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052201_quadplay/images/quadplay.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Simulationen mit SimPy und Mesa</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023052001_simualtion_simpy_mesa/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://raw.githubusercontent.com/projectmesa/mesa/main/docs/images/Mesa_Screenshot.png"><img src="https://kantel.github.io/posts/2023052001_simualtion_simpy_mesa/images/mesascreenshot-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Während einer eher zufälligen Diskussion kam meine Erinnerung an die 1972 veröffentlichte Studie »<a href="https://de.wikipedia.org/wiki/Die_Grenzen_des_Wachstums">Die Grenzen des Wachstums. Bericht des Club of Rome zur Lage der Menschheit</a>« wieder hoch. Ich hatte – wie viele andere – das Buch seinerzeit verschlungen und das dort verwendete Weltmodell hatte damals schon meine Begeisterung für Modellbildung und Simulation geweckt. Dies brachte mich darauf, daß ich zu diesem Thema schon lange nicht mehr gearbeitet hatte und ich beschloß, dies zu ändern.</p>
<p>Wie immer in solchen Fällen kam bei mir natürlich zuerst die Frage nach der zu verwendenden Software hoch. Geneigte Leserinnen und Leser des <em>Schockwellenreiters</em> wissen, daß die Antwort bei mir natürlich nur Python heißen kann, doch welche Bibliotheken kann oder soll ich verwenden? Eine kurze Recherche ließ mich auf SimPy und Mesa stoßen.</p>
<p><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/simpy.html">Simpy</a> (nicht zu verwechseln mit <a href="http://cognitiones.kantel-chaos-team.de/mathematik/sympy.html">SymPy</a>, einem Python-Paket für symbolische Mathematik) ist ein prozessbasiertes Simulationsframework für diskrete Ereignisse, das auf Standard-Python basiert. Es ermöglicht Benutzern, aktive Komponenten wie Kunden, Fahrzeuge oder Agenten als einfache Python-Generatorfunktionen zu modellieren. SimPy wird als Open-Source-Software unter der MIT-Lizenz veröffentlicht.</p>
<p>Zu SimPy sind mir folgende Tutorials untergekommen:</p>
<ul>
<li>Jaya Zhané: <em><a href="https://realpython.com/simpy-simulating-with-python/">SimPy: Simulating Real-World Processes With Python</a></em>, Real Python, ohne Jahr</li>
<li>Yasser Mushtaq: <em><a href="https://towardsdatascience.com/object-oriented-discrete-event-simulation-with-simpy-53ad82f5f6e2">Object-Oriented Discrete Event Simulation — with SimPy</a></em>, Toward Data Science vom 24. November 2022</li>
<li>Dr.&nbsp;Kostas Alexis: <em><a href="http://www.kostasalexis.com/simulations-with-simpy.html">Vehicle Dynamics Simulation using SimPy</a> – A Quick Introduction to SimPy for ODE Simulations</em>, ohne Jahr</li>
</ul>
<p>Und diese Links runden das Ergebnis ab:</p>
<ul>
<li><a href="https://simpy.readthedocs.io/en/latest/index.html">SimPy Home @ ReadTheDocs</a></li>
<li><a href="https://github.com/simpx/simpy">SimPy @ GitHub</a></li>
<li><a href="https://pypi.org/project/simpy/">SimPy @ PyPI</a></li>
<li><a href="https://en.wikipedia.org/wiki/SimPy">SimPy in der Wikipedia</a></li>
</ul>
<p>Dann ist da noch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/mesa.html">Mesa</a>, ein ist ein freies (Apache-2-Lizenz), agentenbasiertes Modellierungs- (oder ABM-) Framework in Python. Damit können Nutzer mithilfe integrierter Kernkomponenten (zum Beispiel räumlicher Raster und Agentenplaner) oder benutzerdefinierter Implementierungen schnell agentenbasierte Modelle erstellen. Mesas Ziel ist es, ein Python 3-basierte Gegenstück zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/netlogo.html">NetLogo</a>, Repast oder MASON zu sein.</p>
<p>Zu Mesa gibt es eine Reihe von YouTube-Videos (die hebe ich mir jedoch für den nächsten Freitag auf). Daneben gab das Netz auch noch folgende Tutorials frei:</p>
<ul>
<li>Ng Wai Foong: <em><a href="https://towardsdatascience.com/introduction-to-mesa-agent-based-modeling-in-python-bcb0596e1c9a">Introduction to Mesa: Agent-based Modeling in Python</a></em>, Towards Data Science vom 1. Novmber 2019</li>
<li><a href="https://mesa.readthedocs.io/en/main/tutorials/intro_tutorial.html">Mesa: Introductory Tutorial</a></li>
<li>Thomas Pike, Jackie Kazil: <em><a href="https://www.complexityexplorer.org/courses/172-agent-based-models-with-python-an-introduction-to-mesa">Agent-Based Models with Python: An Introduction to Mesa</a></em>, Santa Fe Institute 2023</li>
</ul>
<p>Die <a href="https://mesa.readthedocs.io/en/stable/overview.html">Mesa-Homepage</a> ist auf <em>ReadTheDocs</em> zu finden und natürlich besitzt die Bibliothek ebenfalls ein <a href="https://github.com/projectmesa/mesa">GitHub-Repositorium</a>.</p>
<p><strong><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/simpy.html">SimPy</a></strong> und <strong><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/mesa.html">Mesa</a></strong> haben erst einmal je eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert bekommen. Ich möchte damit in der nächsten Zeit etwas Sinnvolles anstellen, dazu habe ich erst einmal meine Bibliothek geplündert. Neben dem Originalbericht an den Club of Rome haben meine Regale auf die Schnelle diese Bücher freigegeben:</p>
<ul>
<li>E.F. Schumacher: <em><a href="https://www.oekom.de/buch/small-is-beautiful-9783962381363">Small is Beautiful. Die Rückkehr zum menschlichen Maß</a></em>. Meine Ausgabe ist 1985 im Rowohl Taschenbuch-Verlag erschienen.</li>
<li>Joël de Rosnay: <em><a href="https://books.google.de/books/about/Das_Makroskop.html?id=ieAkNAAACAAJ&amp;redir_esc=y">Das Makroskop – Systemdenken als Werkzeug der Ökogesellschaft</a></em>, der Klassiker (meine Ausgabe ist 1979 bei Rowohlt erschienen), der schon damals über Computer und Simulationen (und ihr Folgen) nachdachte.</li>
<li>Christine Ax, Friedrich Hinterberger: <em><a href="https://www.spiegel.de/kultur/literatur/streitschrift-wachstumswahn-von-christine-ax-friedrich-hinterberger-a-938306.html">Wachstumswahn: Was uns in die Krise führt - und wie wir wieder herauskommen</a></em>, München (Ludwig-Verlag) 2013.</li>
<li>Robert und Edward Skidelsky: <em><a href="https://www.kunstmann.de/buch/robert_skidelsky_-wie_viel_ist_genug-9783888978227/t-0/">Wie viel ist genug? Vom Wachstumswahn zu einer Ökonomie des guten Lebens</a></em>, München (Verlag Antje Kunstmann) 2013.</li>
<li>Donella H. Meadows: <em><a href="https://www.oekom.de/buch/die-grenzen-des-denkens-9783962381356">Die Grenzen des Denkens – Wie wir sie mit System erkennen und überwinden können</a></em>, München (Oekom) 2019. Donella H. Meadows war schon Mitautorin beim ersten Bericht an den Club of Rome.</li>
<li>Hartmut Bossel: <em><a href="https://link.springer.com/book/10.1007/978-3-322-83658-8">Modellbildung und Simulation – Konzepte, Verfahren und Modelle zum Verhalten dynamischer Systeme</a></em>, Braunschweig (Vieweg) 2. veränderte Auflage 1994. Mein Klassiker, der mich damals monatelang Simulationssoftware in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/pascal.html">Pascal</a> programmieren ließ.</li>
<li>Dazu gab es dann auch noch den Zusatzband vom gleichen Autor: <em><a href="https://www.bod.de/buchshop/systeme-dynamik-simulation-hartmut-bossel-9783833409844">Systeme, Dynamik, Simulation – Modellbildung, Analyse und Simulation komplexer Systeme</a></em>, der 2005 bei <em>BoD</em> herausgekommen ist.</li>
</ul>
<p>Und dann natürlich alles von <a href="https://de.wikipedia.org/wiki/Frederic_Vester">Frederic Vester</a>, was meine Bibliothek hergab – und das ist nicht wenig. Vester war ebenfalls (seit 1993) Mitglied im <a href="https://de.wikipedia.org/wiki/Club_of_Rome">Club of Rome</a> und sein Buch <em><a href="https://www.frederic-vester.de/deu/werke/die-kunst-vernetzt-zu-denken/">Die Kunst vernetzt zu denken – Ideen und Werkzeuge für einen neuen Umgang mit Komplexität</a></em> wurde 1999 als der »neue Bericht an den Club of Rome« veröffentlicht (ich besitze die Taschenbuchausgabe, die 2002 aktualisiert und erweitert bei dtv in München herauskam).</p>
<p>Das ist doch mal wieder ein Programm, nicht nur für mich, sondern ich hoffe auch für Euch. Und habt Nachsicht mit den Kids, die sich derzeit an den Asphalt festkleben. Denn seit dem ersten Bericht an den <em>Club of Rome</em> vor über 50 Jahren hat sich in der Politik nichts verändert (wie auch? Jede Veränderung stellt die Systemfrage). Die Kids sind daher zu recht sauer.</p>



 ]]></description>
  <category>Simulation</category>
  <category>SimPy</category>
  <category>Mesa</category>
  <category>Dynamische Systeme</category>
  <guid>https://kantel.github.io/posts/2023052001_simualtion_simpy_mesa/index.html</guid>
  <pubDate>Sat, 20 May 2023 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023052001_simualtion_simpy_mesa/images/mesascreenshot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apfel-Flickentag im Mai 2023</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051902_apple_mai_updates/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.zvab.com/apokalyptischen-Reiter-Holzschnitt-1939-Stock-links/30135245005/bd#&amp;gid=1&amp;pid=1"><img src="https://kantel.github.io/posts/2023051902_apple_mai_updates/images/apokalyptischenreiter-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gestern war wieder der monatliche <em>Patch Day</em> bei der Firma mit dem angebissenen Apfel im Logo. Die Updates sind wieder so zahlreich, daß ich sie mal wieder nur <em>en bloc</em> abhandeln kann. Nun denn, hier sind sie (in unsortierter Reihenfolge):</p>
<section id="apple-veröffentlicht-macos-ventura-13.4" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-ventura-13.4">Apple veröffentlicht macOS Ventura 13.4</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Ventura 13.4 freigegeben und bietet unter anderem <a href="https://support.apple.com/de-de/HT213758">Sicherheitsupdates</a>.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdate-für-macos-big-sur-und-monterey" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdate-für-macos-big-sur-und-monterey">Apple veröffentlicht Sicherheitsupdate für macOS Big Sur und Monterey</h3>
<p>In diesem Zusammenhang hat Apple auch das Sicherheitsupdate auf <a href="https://support.apple.com/de-de/HT213760">macOS Big Sur 11.7.7</a> und <a href="https://support.apple.com/de-de/HT213759">macOS Monterey 12.6.6</a> freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-ios-16.5-und-ipados-16.5" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-16.5-und-ipados-16.5">Apple veröffentlicht iOS 16.5 und iPadOS 16.5</h3>
<p>Wie angekündigt hat Apple das Update auf <a href="https://support.apple.com/en-us/HT213407">iOS 16.5</a> und <a href="https://support.apple.com/en-us/HT213408">iPadOS 16.5</a> bereitgestellt. Die Updates korrigieren <a href="https://support.apple.com/de-de/HT213757">kritische Sicherheitslücken</a> und sollten daher zügig eingefahren werden.</p>
<p>Das Update auf auf iOS 16.5 iPadOS 16.5 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-ein-sicherheitsupdate-auf-iosipados-15.7.6-für-ältere-systeme" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-ein-sicherheitsupdate-auf-iosipados-15.7.6-für-ältere-systeme">Apple veröffentlicht ein Sicherheitsupdate auf iOS/iPadOS 15.7.6 für ältere Systeme</h2>
<p>Apple hat das Update auf iOS/iPadOS 15.7.6 für ältere Systeme bereitgestellt und behebt damit ebenfalls <a href="https://support.apple.com/de-de/HT213765">kritische Sicherheitsprobleme</a>.</p>
<p>Auch hier kann das Update auf auf iOS/iPadOS 15.7.6 über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://de.wikipedia.org/wiki/J%C3%B3zsef_Div%C3%A9ky">József Divéky</a>, »Die apokalyptischen Reiter«, Holzschnitt. 1939)</em></p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023051902_apple_mai_updates/index.html</guid>
  <pubDate>Fri, 19 May 2023 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051902_apple_mai_updates/images/apokalyptischenreiter.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retro-Platformer mit P5.js (ES6) – Stage 1</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52907878808/"><img src="https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/images/retroplatformer01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die <a href="https://kantel.github.io/posts/2023051801_retrogaming_mit_p5js/">gestern vorgestellten</a> Video-Tutorials »<a href="https://www.youtube.com/playlist?list=PLBDInqUM5B26FjwMMZqGDxqQr1kX5V9Ul">Creating a Retro-Style Platform Game in P5.js</a>« von <em>Mr.&nbsp;Erdreich</em> haben mich inspiriert. Ich möchte diese als Vorlage nehmen, um ein Spiele-Framework in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> zu entwickeln, das – im Gegensatz zu dem Framework, das <em>Mr.&nbsp;Erdreich</em> in seiner Playlist vorstellt – sich an den Möglichkeiten von ES6 orientiert.</p>
<p>Das entspringt zum einen meiner Erkenntnis, daß ich meine JavaScript (ES6) Kenntnisse vertiefen muß und zum anderen greift <em>Mr.&nbsp;Erdreich</em> ab dem zweiten Video auf die Bibliothek <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/p5play.html">P5.play</a> zurück (in der aktuellen Version 3.x), mit der ich auch schon <a href="https://kantel.github.io/posts/2023050502_gamedev_p5js/">seit ein paar Wochen</a> etwas anstellen möchte. Doch dazu mehr in einem späteren Beitrag.</p>
<p>In der heutigen Version habe ich erst einmal einen Rahmen gebastelt, der sich noch weitgehend an <em>Mr.&nbsp;Erdreichs</em> Vorlage hält. Hauptunterschied ist, daß ich auf ES6-Klassen setze, statt den Code mit Unmengen von Variablen zu verunreinigen. Beim derzeitigen Stand ist zwar dadurch das Programm etwas länger geraten, aber es ist besser für zukünftige Erweiterungen gerüstet.</p>
<p>Zum anderen habe ich auf die klassische Koordinatenberechnung zurückgegriffen. Denn warum <em>Mr.&nbsp;Erdreich</em> auf <code>rectMode(CENTER)</code> zurückgreift, erschließt sich mir nicht. Im Gegenteil, wer gewohnt ist, traditionell die linke obere Ecke der Sprites und Tiles als Koordinatenursprung zu nehmen, den verwirren die überflüssigen Berechnungen nur. Falls in einigen seltenen Fällen (zum Beispiel bei Rotationen) ein <code>rectMode(CENTER)</code> doch sinnvoll ist, werde ich ihn lokal in der <code>update()</code>-Methode der einzelnen Klassen unterbringen und zwischen <code>push()</code> und <code>pop()</code> klammern, um den globalen Status nicht zu gefährden.</p>
<p>Genau dies, nämlich die inflationäre Verwendung von <code>push()</code> und <code>pop()</code> könnt Ihr in meinem Framework an vielen Stellen finden. Sie ist zwar meistens – bei sorgfältiger Programmierung – überflüssig, aber sie macht den Code doch ein wenig sicherer, sollte man dennoch mal die Übersicht verlieren.</p>
<p>Hier jetzt erst einmal der komplette Quellcode für alle unter Euch, die gerne Quellcode lesen und nachvollziehen möchten, was ich da eigentlich angestellt habe:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retro Platformer Stage 1</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Nach Mr. Erdreich: Creating a Retro-Style Platform Game in P5.js &lt;https://www.youtube.com/playlist?list=PLBDInqUM5B26FjwMMZqGDxqQr1kX5V9Ul&gt;, ca. 2020</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Klassen nach ES 6 angepaßt: Jörg Kantel, 2023</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Konstanten</span></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winwidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> winheight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Globale Variablen</span></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> stage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> platforms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Klassen</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Spieler</span></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Player {</span>
<span id="cb1-17"></span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb1-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">146</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb1-23">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player constructor()</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb1-26"></span>
<span id="cb1-27">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player update()</span></span>
<span id="cb1-28"></span>
<span id="cb1-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// purple</span></span>
<span id="cb1-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-36">  }  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player display()</span></span>
<span id="cb1-37"></span>
<span id="cb1-38">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Player</span></span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Platform</span></span>
<span id="cb1-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Platform {</span>
<span id="cb1-42"></span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _h) {</span>
<span id="cb1-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-48">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Platform constructor()</span></span>
<span id="cb1-49"></span>
<span id="cb1-50">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-52">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-53">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-54">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Orange</span></span>
<span id="cb1-55">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-56">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-57">  } <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Platform display()</span></span>
<span id="cb1-58"></span>
<span id="cb1-59">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Platform</span></span>
<span id="cb1-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Klassen</span></span>
<span id="cb1-61"></span>
<span id="cb1-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Funktionen</span></span>
<span id="cb1-63"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">game</span>() {</span>
<span id="cb1-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">230</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Himmelblau</span></span>
<span id="cb1-65">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Grund</span></span>
<span id="cb1-66">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-67">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noStroke</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-68">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Grasgrün</span></span>
<span id="cb1-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-71">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fensterrahmen</span></span>
<span id="cb1-72">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">noFill</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Schwarz</span></span>
<span id="cb1-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-76">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-78">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Platforms</span></span>
<span id="cb1-79">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> platform <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> platforms) {</span>
<span id="cb1-80">    platform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-81">  }</span>
<span id="cb1-82">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Player</span></span>
<span id="cb1-83">  player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-84">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end game()</span></span>
<span id="cb1-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Funktionen</span></span>
<span id="cb1-86"></span>
<span id="cb1-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hauptprogramm</span></span>
<span id="cb1-88"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb1-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(winwidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> winheight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-90">  stage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-91">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// rectMode(CENTER);</span></span>
<span id="cb1-92">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// textAlign(CENTER);</span></span>
<span id="cb1-93">  platforms[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Platform</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">112</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-94">  player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Player<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-95">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end setup()</span></span>
<span id="cb1-96"></span>
<span id="cb1-97"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb1-98">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (stage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-99">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">game</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-100">  }</span>
<span id="cb1-101">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// end draw()</span></span>
<span id="cb1-102"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// End Hauptprogramm</span></span></code></pre></div>
<p>Wie immer könnt Ihr das gesamte Projekt <a href="https://github.com/kantel/p5js/tree/master/retroplatformer/stage01">auch in meinem GitHub-Repositorium</a> finden.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/1h6vZl-OuB0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wie Ihr dem <a href="https://www.flickr.com/photos/schockwellenreiter/52907878808/">Screenshot</a> entnehmen könnt, habe ich für das Projekt wieder auf <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zurückgegriffen. Das Teil wird für meine Vorhaben immer unentbehrlicher. Daher freut es mich, daß <em>Daniel Shiffman</em> in einem Livestream »<a href="https://www.youtube.com/watch?v=1h6vZl-OuB0">Creative Coding with p5.js in Visual Studio Code</a>« zeigt, wie man Visual Studio Code mit P5.js sinnvoll einsetzt. Okay, der Veranstalter ist Microsoft (als Eigner von Visual Studio Code), aber ich gehe mal davon aus, daß <em>Shiffman</em> weiß, auf was er sich da eingelassen hat und sich nicht zu sehr verkaufte.</p>
<p><strong>War sonst noch was?</strong> Ach ja, Die Erkundung von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/visualisierung/d3.html">D3.js</a> steht ja auch noch auf meiner Todo-Liste. Und dazu habe ich – Überraschung! – ebenfalls noch ein Video von unserer allwissenden Datenkrake vorgeschlagen bekommen: »<a href="https://www.youtube.com/watch?v=IdDuWwquSwA">What is D3JS – A quick practical guide</a>« von <em>Hitesh Choudhary</em>. Das werde ich mir auch noch reinziehen, denn kurze, praktische Einführungen kann man eigentlich nie genug haben. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>P5.js</category>
  <category>Retrogaming</category>
  <guid>https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/index.html</guid>
  <pubDate>Fri, 19 May 2023 12:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051901_retrostyle_mit_p5js/images/retroplatformer01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Video-Tutorials: Retrogaming mit P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051801_retrogaming_mit_p5js/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=sGBz9_A77ms"><img src="https://kantel.github.io/posts/2023051801_retrogaming_mit_p5js/images/retroplatformer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich muß meinen geplanten und <a href="https://kantel.github.io/posts/2023051702_javascript_p5js_d3/">gestern angekündigten</a> Feiertags-Hiatus mal kurz unterbrechen, weil mir bei meiner Beschäftigung mit JavaScript und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> noch ein paar interessante Video-Tutorials untergekommen sind, die ich Euch nicht vorenthalten möchte.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/FZlpuQeCvlk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das erste ist die Playlist »<a href="https://www.youtube.com/playlist?list=PLBDInqUM5B26FjwMMZqGDxqQr1kX5V9Ul">Creating a Retro-Style Platform Game in P5.js</a>« von <em>Mr.&nbsp;Erdreich</em>, die aus 22 Videos mit im Schnitt etwa zehn Minuten Lauflänge besteht.</p>
<p>Der gleiche Entwickler hat auch noch die Playlist »<a href="https://www.youtube.com/playlist?list=PLBDInqUM5B25FzygoJ9Ifg1TZXmIHz4zh">Creating a Space Invaders Inspired Video Game in P5.js</a>« hochgeladen. Sie umfaßt 15 Videos mit im Schnitt etwa einer Spieldauer von einer Viertelstunde.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/_5tHAPkN0mw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><em>Rob Duarte</em> wiederum ist den regelmäßigen Lesern des <em>Schockwellenreiters</em> als Schöpfer <a href="https://www.youtube.com/playlist?list=PLNE1nfKgKSv7cR7QG7IIu-nEMHiVQsGNM">hervorragender Bitsy-Tutorials</a> bekannt. Obiges Video »<a href="https://www.youtube.com/watch?v=_5tHAPkN0mw">Using Objects in P5.js</a> hatte er für seine Studenten erstellt und es hochgeladen, weil er hofft, daß es auch für andere – also für Euch und mich – nützlich sein könnte.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/Dbp9P6870I0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, zu Beginn eines jedes Semesters aktualisiert <em>John McCaffrey</em> seine Playlist »<a href="https://www.youtube.com/playlist?list=PLoMpb3ppb873XgfCsG3tyuMC8kK5pc--n">Introduction to Programming</a>« mit einem neuen Projekt (meist einem Spiel) für seine Studenten. Das jüngste hat er vor etwa acht Monaten gestartet, und das obige Video »<a href="https://www.youtube.com/watch?v=Dbp9P6870I0">Programming States into Keyboard Sprites</a>« ist das aktuellste in dieser Reihe, was er vor etwa zwei Wochen hochgeladen hat. Leider ist seine Playlist nach Art eines Weblogs in reverser chronologischer Reihenfolge sortiert, daher geht die derzeitige Numerierung von Video 24 (vor acht Monaten) rückwärts bis Video 1 (vor zwei Wochen).</p>
<p>Das Projekt ist in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a> geschrieben, aber ich denke, es ist eine gute Inspiration für meine Bemühungen, JavaScript und P5.js zu lernen. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>P5.js</category>
  <category>Retrogaming</category>
  <guid>https://kantel.github.io/posts/2023051801_retrogaming_mit_p5js/index.html</guid>
  <pubDate>Thu, 18 May 2023 12:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051801_retrogaming_mit_p5js/images/retroplatformer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft veröffentlicht Update 16.73 für Office for Mac</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051703_update_office_for_mac/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://poster-auctioneer.com/images/products/195/poster_195200_z.jpg"><img src="https://kantel.github.io/posts/2023051703_update_office_for_mac/images/obersteirer-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Microsoft liefert mit dem Update auf 16.73 für Office 365, 2021 und 2019 for Mac natürlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhält man die Korrekturen am einfachsten über Microsofts AutoUpdate – in einem beliebigen Office-Programm über das Menü <code>Hilfe &gt; Auf Updates überprüfen</code>. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023051703_update_office_for_mac/index.html</guid>
  <pubDate>Wed, 17 May 2023 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051703_update_office_for_mac/images/obersteirer.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Noch mehr Tutorials zu JavaScript, P5.js und D3.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051702_javascript_p5js_d3/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=R3C2giDfmO8"><img src="https://kantel.github.io/posts/2023051702_javascript_p5js_d3/images/kaleidoscopesnowflake-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Um vorwärts zu kommen, muß man manchmal auch wieder einen Schritt zurückgehen. So ging es mir, nachdem ich mir das am <a href="https://kantel.github.io/posts/2023051402_p5js_mit_d3js/">Sonntag vorgestellte</a> Video »<a href="https://www.youtube.com/watch?v=rQroxWLZiCo">Introduction to D3.js with Shirley Wu</a>« reingezogen hatte. Zwar war die Arbeit von <em>Shirley Wu</em> unheimlich interessant, aber das, was sie über JavaScript im Allgemeinen und über <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/visualisierung/d3.html">D3.js</a> im Besonderen wußte, überstieg bei weitem meinen Horiont. Mir wurde klar, daß es nicht ausreichte, erst einmal <a href="https://kantel.github.io/posts/2023051501_d3js_first_steps/">ein wenig mit D3.js zu spielen</a>, sondern ich benötige einen grundlegenden Einführungskurs in JavaScript und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>. Speziell die funktionalen Aspekte der Sprache, wie <em>higher order functions</em>, Syntax-Besonderheiten wie die <em>arrow function</em> oder die Verkettung von Methoden sind doch noch sehr fremd für mich.</p>
<p>Zwar gibt es von <em>Daniel Shiffman</em> die in dieser Hinsicht sehr nützliche, 20-teilige Playlist »<a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6YgpA3Oht-7B4NBQwFVe3pr">Topics of JavaScript/ES6-ES8</a>«, die ich mir mittlerweile fast vollständig angeschaut habe, oder die <a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6bPhi8sS1hHJ77n3zRO9FR_">achteilige Reihe zu WebGL</a>, die noch darauf wartet, von mir entdeckt zu werden, aber <em>Shiffman</em> fremdet selber ein wenig mit den funktionalen Aspekten von JavaScript, so daß ich mir zusätzliche Tutorien gesucht habe.</p>
<p>Da trifft es sich ganz gut, daß (wenn man den Freitag als Brückentag nimmt) ein extrem langes Wochenende bevorsteht und so gibt es die Video-Tutorials zum Freitag ausnahmsweise schon am Mittwoch:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/2B1MERytuXo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Ganz interessant scheinen die P5.js-Videos der <em>Computational Mama</em> zu sein. Das obige ist Teil der fünfteiligen Playlist »<a href="https://www.youtube.com/playlist?list=PL8fSylRVlW64FhDzrVR65q7-22NPOW_sz">Recursion and Symmetry</a>«, in die ich schon ein wenig reingeschaut habe und die ich daher durchaus empfehlen kann. Für Kompletteinsteiger hat sie auch noch die Monsterplaylist »<a href="https://www.youtube.com/playlist?list=PL8fSylRVlW65WtbT5Y1xuS3m8XaJ077vb">p5js intro sessions</a>« hochgeladen, die aus 17 Videos meist zwischen einer halben Stunde und zwei Stunden Spieldauer besteht. So veil kann es über die Feiertage gar nicht regnen, wenn Ihr Euch die alle anschauen wollt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/R3C2giDfmO8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Zu der oben erwähten Playlist <em>Recursion and Symmetry</em> paßt noch <em>Daniel Shiffmans</em> 155.&nbsp;Coding Challenge »<a href="https://www.youtube.com/watch?v=R3C2giDfmO8">Kaleidoscope Snowflake Design</a>« wie Faust aufs Auge.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/up6ZHxVEX7I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Eine weitere, schier unerschöpfliche Fundgrube (nicht nur zu P5.js, sondern auch zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a>) ist der <a href="https://www.youtube.com/@jeffkthompson">Kanal von <em>Jeff Thompson</em></a>. Das obige Video ist das einführende Tutorial der fünfteiligen (im Schnitt zehnminütigen) Playlist »<a href="https://www.youtube.com/playlist?list=PLsGCUnpinsDkUwwuhvUdvZFZ7YR97fWab">CP1: Week 12 (Object-Oriented Programming)</a>. <em>CP</em> steht bei <em>Jeff Thompson</em> für <em>Creative Programming</em> und sein Kanal ist voll mit Tutorials dazu. Also besucht ihn und stöbert selber darin herum.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/SGtT10OdGjA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Doch nun wieder den Schritt vorwärts zu D3.js. Vom oben erwähnten Video mit <em>Shriley Wu</em>, das mich ob seines abrupten Endes ein wenig ratlos und verwirrt zurückgelassen hatte, gibt es eine <a href="https://www.youtube.com/watch?v=SGtT10OdGjA">einstündige Fortsetzung</a>. Ich hoffe, daß diese meine offenen Fragen beantwortet.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/UhH3-uufZF8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Ebenfalls interessant scheint der Vortrag »<a href="https://www.youtube.com/watch?v=UhH3-uufZF8">D3.js – From Zero to Data Viz Hero</a>« von <em>Kent English</em> zu sein. Er verspricht, mit einem einfachen Beispiel zu beginnen und so den Einsteig zu erleichtern. Also genau das, was mir fehlt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/TOJ9yjvlapY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Ähnliches verspricht das Video »<a href="https://www.youtube.com/watch?v=TOJ9yjvlapY">D3.js - A Practical Introduction</a>«. Es ist das erste einer dreiteiligen Playlist »<a href="https://www.youtube.com/playlist?list=PL55RiY5tL51r1NlkJLzVhui1S480gnuNG">D3.js Introduction</a>« mit einer Gesamtspieldauer von etwas mehr als anderthalb Stunden. Ich denke, daß diese mich, nachdem sie mir über die ersten Hürden geholfen hat, etwas tiefer in die Geheimnisse dieser Bibliothek einführt.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/zulGMYg0v6U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, von <em>Dave Ebbelaar</em> habe ich das Video »<a href="https://www.youtube.com/watch?v=zulGMYg0v6U">How to Set up VS Code for Data Science</a>« gefunden, das im Rahmen meiner wachsenden Nutzung von <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> sicher noch sehr nützlich sein kann (der junge Mann sollte bei weiteren Videos nur ein wenig den Hall herunterdrehen). Eine ähnliches Thema behandelt das Video »<a href="https://www.youtube.com/watch?v=ZaL0vADywNY">p5.js webgl setup in vscode</a>« des YouTubers mit dem Screennamen <em>keys</em>. Auf <a href="https://www.youtube.com/@keys_1">seinem Kanal</a> findet Ihr noch einige weitere Videos zu P5.js.</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="http://www.currybuch.de/"><img src="https://kantel.github.io/posts/2023051702_javascript_p5js_d3/images/currybuch.jpg" class="img-fluid" alt="currybuch"></a>
</div>
<p>Ansonsten habe ich zu tun. Im Rahmen meiner Bemühungen, ein besserer JavaScripter zu werden, habe ich nämlich auch das wunderbare »<a href="http://www.currybuch.de/">Curry-Buch – Funktional programmieren lernen mit JavaScript</a>« von <em>Stefanie Schirmer</em>, <em>Hannes Mehnert</em> und <em>Jens Ohlig</em> wieder aus meinen Regalen hervorgekramt. Denn gutes Programmieren ist wie gutes Kochen. Wer das Buch schändlicherweise noch nicht besitzen sollte, kann es sich hier <a href="http://www.currybuch.de/#">kostenlos herunterladen</a>, denn es steht unter der <a href="https://creativecommons.org/licenses/by-nc-sa/2.0/de/">CC BY-NC-SA</a>.</p>
<p>Sollte es daher über das lange Wochenende etwas ruhiger auf diesen Seiten zugehen, liegt es daran, daß ich – statt das Internet vollzuschreiben – gerade intensiv javascripte.</p>



 ]]></description>
  <category>JavaScript</category>
  <category>P5.js</category>
  <category>D3.js</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2023051702_javascript_p5js_d3/index.html</guid>
  <pubDate>Wed, 17 May 2023 17:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051702_javascript_p5js_d3/images/kaleidoscopesnowflake.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert in der neuen Version 113 seines Browsers Chrome auch wieder Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051701_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://artifiche.com/artifiche-images/posters_extralarge/5148.jpg"><img src="https://kantel.github.io/posts/2023051701_chrome_update/images/strickwaren-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht ein neues Update der Version 113 (113.0.5672.126/127) seines Browsers Chrome und schließt erneut <a href="https://chromereleases.googleblog.com/2023/05/stable-channel-update-for-desktop_16.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023051701_chrome_update/index.html</guid>
  <pubDate>Wed, 17 May 2023 12:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051701_chrome_update/images/strickwaren.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Erste Schritte mit D3.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051501_d3js_first_steps/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52900060699/"><img src="https://kantel.github.io/posts/2023051501_d3js_first_steps/images/d3pagetemplate-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mein neues, gestern angekündigtes Projekt »<a href="https://kantel.github.io/posts/2023051402_p5js_mit_d3js/">Datenvisualisierung mit P5.js und D3.js</a>« habe ich heute gestartet. Vernünftigerweise habe ich erst einmal damit begonnen, mich in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/visualisierung/d3.html">D3.js</a> einzuarbeiten, bevor ich versuche, diese Bibliothek mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> zu verheiraten.</p>
<p>Da ich nach Möglichkeit meine Anwendungen komplett lokal installieren möchte, statt mich auf <em><a href="https://de.wikipedia.org/wiki/Content_Delivery_Network">Content Delivery Networks</a></em> (CDN) zu verlassen<sup>1</sup>, habe ich mir von der <a href="https://d3js.org/">D3-Website</a> die aktuelle Version (zur Zeit ist das die Version 7.8.4) heruntergeladen und entpackt. Dann habe ich – analog zu meinen <a href="https://kantel.github.io/posts/2023050401_roboter_im_netz/">P5.js mit VS Code Versuchen</a> – ein Verzeichnis mit folgender Struktur angelegt:</p>
<hr>
<pre><code>- my_d3_project (Folder)
  - index.html
  - sketch.js
  - js (Folder)
    - d3.min.js</code></pre>
<hr>
<p>Das scheint momentan alles zu sein, was benötigt wird, um ein D3-Projekt ohne weitere Abhängigkeiten zu starten<sup>2</sup>. Testweise (und als Template) habe ich diese <code>index.html</code></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE </span>html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;html</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">lang</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"de"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;head&gt;</span></span>
<span id="cb2-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;meta</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">charset</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;title&gt;</span>D3 Page Template<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/title&gt;</span></span>
<span id="cb2-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text/javascript"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"js/d3.min.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/head&gt;</span></span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;body&gt;</span></span>
<span id="cb2-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;h2&gt;</span>D3 Page Template<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/h2&gt;</span></span>
<span id="cb2-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text/javascript"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb2-11">     </span>
<span id="cb2-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/body&gt;</span></span>
<span id="cb2-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/html&gt;</span></span></code></pre></div>
<p>und diese (einzeilige) <code>sketch.js</code> angelegt:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1">d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">append</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hier kommt mein wunderschöner D3-Code hin."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Als Entwicklungsumgebung habe ich wieder <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> ausgewählt, denn der von mir zusammen mit <a href="https://github.com/antiboredom/p5.vscode#readme">p5.vscode</a> installierte <a href="https://ritwickdey.github.io/vscode-live-server/">Live Server</a> erleichtert die Entwicklung ungemein.</p>
<p>Das Ergebnis könnt Ihr in <a href="https://www.flickr.com/photos/schockwellenreiter/52900060699/">diesem Screenshot</a> begutachten. Es sagt noch nichts über meine D3.js-Qualitäten aus, sondern nur, daß meine Installation funktioniert.&nbsp;🤓</p>
<p><strong>War sonst noch was?</strong> Ach ja, während der Vorbereitung zu diesem Projekt sind mir noch ein paar weitere, voraussichtlich nützliche Videos und Links untergekommen:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/zXBdNDnqV2Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Erst einmal die gestern schon erwähnte <em>Shirley Wu</em>. Ihr Talk »<a href="https://www.youtube.com/watch?v=zXBdNDnqV2Q">D3 and React, Together</a>« erinnerte mich daran, daß auch das JavaScript-Framework <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/react.html">React</a>, das auch clientseitig verwendet werden kann, schon lange auf meiner Testliste steht. Vielleicht kann man dies ja auch mit P5.js verheiraten. D3.js geht ja offensichtlich.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/8jvoTV54nXw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das Video »<a href="https://www.youtube.com/watch?v=8jvoTV54nXw">Introduction to D3</a>« von <em>Curran Kelleher</em> ist Teil der Playlist »<a href="https://www.youtube.com/playlist?list=PL9yYRbwpkykvjkfuRslECO9c1qTq3GgUb">D3 101</a>«, die aus sieben aus anderen Playlisten zusammengewürfelten Videos unterschiedlicher Länge (von fünf Minuten bis anderthalb Stunden) besteht.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/lzxAKqoBhDY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und das für diesen Beitrag letzte Video für heute, »<a href="https://www.youtube.com/watch?v=lzxAKqoBhDY">D3: Setup</a>«, ist das erste Video der 19-teiligen Playlist »<a href="https://www.youtube.com/playlist?list=PLlbbWgBRF8EfU-MZNicdIGVKMIX-6krG8">D3: Data Driven Documents – Data Science for Everyone</a>«. Die Tutorials haben jeweils eine Länge zwischen fünf Minuten und maximal einer halben Stunde.</p>
<p>Dann war da noch diese beiden Links:</p>
<ul>
<li>Das Tutorial »<a href="https://www.tutorialsteacher.com/d3js/setup-d3js-development-environment">Setup D3.js Development Environment</a>« ist Teil der 19-teiligen Reihe »<a href="https://www.tutorialsteacher.com/d3js">Learn D3.js</a>« der <em>Tutorials Teacher</em>.</li>
<li>Jorick Defraine: <em><a href="https://www.datackling.com/how-to-setup-your-environment-for-d3/">How to Setup Your Environment for D3.js</a>?</em>, Datatackling.com vom 27.&nbsp;Oktober 2020</li>
</ul>
<p>Doch jetzt muß ich mich verabschieden, D3.js wartet auf mich. <em>Ich habe zu tun!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Das nicht nur, weil ich dann auch ohne Internetverbindung entwickeln kann, sondern es ist in meinen Augen auch ein wichtiger Schritt in Richtung Datenautonomie.↩︎</p></li>
<li id="fn2"><p>Natürlich ist die Struktur der Verzeichnisse und Unterverzeichnisse nicht festgeklopft, es sind auch andere Lösungen denkbar. Aber diese ist sehr stark an die Konventionen des <a href="https://editor.p5js.org/">P5.js Webeditors</a> angelehnt und hat sich in meinen Augen bewährt.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>D3.js</category>
  <category>JavaScript</category>
  <category>Visualisierung</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2023051501_d3js_first_steps/index.html</guid>
  <pubDate>Mon, 15 May 2023 15:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051501_d3js_first_steps/images/d3pagetemplate.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein neues Projekt? Datenvisualisierung mit P5.js und D3.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051402_p5js_mit_d3js/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://cdn-images-1.medium.com/v2/resize:fit:2000/1*IEwZ5DJLCPmoHPieqTCsdg.png"><img src="https://kantel.github.io/posts/2023051402_p5js_mit_d3js/images/d3js-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine durch meine <a href="https://kantel.github.io/posts/2023051401_dancing_crab_p5js_v2/">jüngsten Erfolge</a> noch gestiegene Begeisterung für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> ließ mich ins Träumen geraten: Ich wollte unbedingt noch mehr mit P5.js anstellen. Und so bin ich bei der Suche nach neuen Herausforderungen über <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/visualisierung/d3.html">D3.js</a> gestolpert.</p>
<p>D3.js aka <em>Data-Driven Documents</em> ist eine auf SVG aufbauende JavaScript-Visualisierungs-Bibliothek, die – neben reinen JavaScript-Anwendungen – vielfach auch als Web-Frontend für Python-Programme Verwendung findet. Daher dachte ich mir, es müßte doch mit dem Teufel zugehen, wenn die Bibliothek nicht auch zusammen mit P5.js genutzt werden könne.</p>
<p>Herausgekommen sind nach einer ersten Suche auf die Schnelle diese drei Quellen:</p>
<ul>
<li>Irene Ros: <em><a href="https://bocoup.com/blog/d3js-and-canvas">Working with D3.js and Canvas: When and How</a></em>, Bocoup Blog vom 17. Juli 2014</li>
<li>Alex Sciuto: <em><a href="https://sciutoalex.github.io/p5-D3-cookbook/">p5/D3 Cookbook</a></em>, Combining the power of D3.js with the simplicity of p5.js, last Update 29. Juni 2015</li>
<li>Sepand Ansari: <em><a href="http://sepans.github.io/p5d3/">Using d3.js utilities for data visualization in p5.js</a></em>, A series of examples for using d3.js utility functions minimally in p5.js without inter-mingling their different paradigms. Last Update 27. Juli 2015</li>
</ul>
<p>Das ist nicht viel, aber es wäre schon mal ein Anfang. Denn dann gibt es ja auch noch als Einstiegshilfe dieses Video:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/rQroxWLZiCo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und ein wenig Literatur zu Datenvisualisierung mit D3.js wartet auch schon seit etlichen Jahren in meiner Bibliothek darauf, von mir gelesen zu werden:</p>
<ul>
<li>Scott Murray: <em><a href="https://www.oreilly.com/library/view/interactive-data-visualization/9781449340223/">Interactive Data Visualization for the Web</a></em>, Sebastopol (O’Reilly) 2013</li>
<li>Stephen A. Thomas: <em><a href="https://nostarch.com/datavisualization">Data Visualization with JavaScript</a></em>, San Francisco, CA (no starch press) 2015</li>
</ul>
<p>Ich muß mich erst noch ein wenig durch die Quellen wühlen, aber ich glaube, ich habe ein neues Projekt gefunden. <em>Still digging!</em></p>



 ]]></description>
  <category>P5.js</category>
  <category>D3.js</category>
  <category>Visualisierung</category>
  <guid>https://kantel.github.io/posts/2023051402_p5js_mit_d3js/index.html</guid>
  <pubDate>Sun, 14 May 2023 18:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051402_p5js_mit_d3js/images/d3js.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Dancing Crab mit P5.js Version 2: Jetzt mit HUD</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051401_dancing_crab_p5js_v2/index.html</link>
  <description><![CDATA[ 
<script src="./sketch.js"></script>



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52896425642/"><img src="https://kantel.github.io/posts/2023051401_dancing_crab_p5js_v2/images/dancingcrabv2-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe meinem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-<a href="https://kantel.github.io/posts/2023051001_dancing_crab_p5js/">Port</a> der kleinen, roten, mit Luftblasen tanzenden Krabbe ein finales (aber dennoch vielleicht nur vorläufiges) Update verpaßt. Da ich in der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>-<a href="https://kantel.github.io/posts/2023041403_dancing_crab_3/">Version</a> daran gescheitert war, eigene Fonts einzubinden, wollte ich nun wissen, wie einfach oder kompliziert sich dieses in P5.js gestaltet, und habe dem Spiel ein HUD <em>(Head Up Display)</em> mit einem lokal eingebundenen<sup>1</sup> (Google-) Font verpaßt. Spoiler: Es war Pipi-einfach!</p>
<p>Dazu habe ich mir erst einmal auf den Seiten von Google einen furchtbar schrägen Font ausgesucht und heruntergeladen. Er heißt »<a href="https://fonts.google.com/specimen/Fredericka+the+Great">Fredericka the Great</a>« und sieht auch so aus, wie man sich eine weibliche, durch und durch preußische Friederike als Gegenstück zum »alten Fritz« vorstellt. Dieser Font von <em><a href="https://fonts.google.com/?query=Tart+Workshop">Tart Workshop</a></em> steht – wie die meisten Fonts auf den Seiten von Google Fonts – unter der <a href="https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;id=OFL">SIL Open Font License</a> (OFL) und kann daher auch für kommerzielle Projekte frei genutzt werden.</p>
<p>Damit P5.js den Font auch findet, habe ich ihn für diese Webseite in ein Verzeichnis abgelegt. Da dieses Verzeichnis nun nicht mehr nur Bilder enthält, habe ich es – gemäß den Processing-Konventionen – von <code>images</code> nach <code>data</code> umbenannt<sup>2</sup>.</p>
<p>Dann habe ich in der <code>preload()</code>-Methode die Zeile</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1">displayFont <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadFont</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/FrederickatheGreat-Regular.ttf"</span>)</span></code></pre></div>
<p>eingefügt (die Variable <code>displayFont</code> hatte ich vorher als <em>global</em> definiert.)</p>
<p>Die <code>setup()</code>-Methode erhielt ebenfalls ein zusätzlich Zeile:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textFont</span>(displayFont)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Da ich die <code>draw()</code>-Methode nicht überladen wollte, habe ich eine zusätzliche Funktion <code>displayHUD()</code> geschrieben,</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayHUD</span>() {</span>
<span id="cb3-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hud1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Score: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hud2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Death: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textSize</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(hud1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(hud2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">}</span></code></pre></div>
<p>die ich in <code>draw()</code> dann einfach aufgerufen habe. Diese Methode zeigt sehr schön, daß man den Fonts in P5.js nicht nur mit <code>fill()</code> eine Farbe, sondern mit <code>stroke()</code> und <code>strokeWeight()</code> auch eine Umrandung zuweisen kann. Und da man mit den Stati leicht durcheinanderkommt, habe ich diese mit <code>push()</code> und <code>pop()</code> geklammert. Das ist zwar nicht unbedingt notwendig, aber man ist so – speziell bei größeren Projekten – auf der sicheren Seite.</p>
<p>Und nun also den Sketch in seiner vollen Pracht, eingebunden in diese Seite:</p>
<div id="crab01">

</div>
<p>Wie bisher wird die Krabbe mit den Pfeiltasten von rechts nach links oder von links nach rechts bewegt. Für jede eingefangene, weiße Luftblase bekommt der Spieler einen Punkt angezeigt. Die Kollision mit einer roten Luftblase beendet das Spiel (noch) nicht, stattdessen wird auch die Anzahl der Tode im <em>Head up Dislplay</em> angezeigt. (Um das Spiel neu zu starten, muß die komplette Seite neu geladen werden.)</p>
<p>Jetzt für diejenigen unter Euch, die gerne im Quellcode stöbern und/oder ihn nachvollziehen wollen, der komplette Sketch in all seiner Pracht:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Dancing Crab v2</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Jörg Kantel 2023</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Inspiriert von Heiko Fehr: »Let's Code Python«, Bonn (Rheinwerk-Verlag) 2019, Seiten 247ff.</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Krabbe: Nitin Chowdary (CC0), https://opengameart.org/content/crab</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Luftblasen: HorrorPen (CC-BY 3.0), https://opengameart.org/content/bubbles8-colors</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Bildhintergrund: Kenney.nl Fish Pack (CC0), https://www.kenney.nl/assets/fish-pack</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Font: Fredericka the Great (OFL), https://fonts.google.com/specimen/Fredericka+the+Great</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">416</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> numBubbles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> numEnemies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> displayFont<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> crabImages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bubbles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bubbleImages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> enemyBubbles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> enemyImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Crab {</span>
<span id="cb4-25"></span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb4-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-32">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> crabImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">animationCount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-37">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-38">  }</span>
<span id="cb4-39"></span>
<span id="cb4-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb4-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Bewegung</span></span>
<span id="cb4-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) {</span>
<span id="cb4-43">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-44">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>) {</span>
<span id="cb4-45">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) {</span>
<span id="cb4-46">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-47">      }</span>
<span id="cb4-48">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>) {</span>
<span id="cb4-49">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb4-50">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-51">      }</span>
<span id="cb4-52">    }</span>
<span id="cb4-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Animation</span></span>
<span id="cb4-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">animationCount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) {</span>
<span id="cb4-56">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> crabImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-57">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">animationCount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) {</span>
<span id="cb4-59">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">animationCount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-60">    }</span>
<span id="cb4-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">animationCount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) {</span>
<span id="cb4-62">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> crabImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-63">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-64">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> crabImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-65">    }</span>
<span id="cb4-66">  }</span>
<span id="cb4-67">  }</span>
<span id="cb4-68"></span>
<span id="cb4-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb4-70">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-71">  }</span>
<span id="cb4-72">}</span>
<span id="cb4-73"></span>
<span id="cb4-74"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Bubble {</span>
<span id="cb4-75"></span>
<span id="cb4-76">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb4-77">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-78">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-79">  }</span>
<span id="cb4-80"></span>
<span id="cb4-81">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>() {</span>
<span id="cb4-82">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> dia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb4-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bubbleImages[dia]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-84">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-85">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(width))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-86">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-87">  }</span>
<span id="cb4-88"></span>
<span id="cb4-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isCircleCollision</span>(other) {</span>
<span id="cb4-90">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dist</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r</span>) {</span>
<span id="cb4-92">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-93">    }</span>
<span id="cb4-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-95">  }</span>
<span id="cb4-96"></span>
<span id="cb4-97">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb4-98">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-99">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) {</span>
<span id="cb4-100">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-101">    }</span>
<span id="cb4-102">  }</span>
<span id="cb4-103"></span>
<span id="cb4-104">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb4-105">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-106">  }</span>
<span id="cb4-107">}</span>
<span id="cb4-108"></span>
<span id="cb4-109"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> EnemyBubble <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extends</span> Bubble {</span>
<span id="cb4-110"></span>
<span id="cb4-111">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb4-112">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">super</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-113">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-114">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-115">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-116">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enemyImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-117">  }</span>
<span id="cb4-118"></span>
<span id="cb4-119">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>() {</span>
<span id="cb4-120">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(width))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-121">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-122">    }</span>
<span id="cb4-123">  }</span>
<span id="cb4-124"></span>
<span id="cb4-125"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb4-126">  bg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/background.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-127">  crabImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/crab1.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-128">  crabImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/crab2.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-129">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb4-130">    bubbleImages[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/bubbleblue"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb4-131">  }</span>
<span id="cb4-132">  enemyImage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/bubblere1.png"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-133">  displayFont <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadFont</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/FrederickatheGreat-Regular.ttf"</span>)</span>
<span id="cb4-134">}</span>
<span id="cb4-135"></span>
<span id="cb4-136"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb4-137">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(windowWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> windowHeight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-138">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crab01"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-139">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frameRate</span>(fps)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-140">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textFont</span>(displayFont)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-141">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> numBubbles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb4-142">    bubbles[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Bubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-143">  }</span>
<span id="cb4-144">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> numEnemies<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb4-145">    enemyBubbles[j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> EnemyBubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-146">  }</span>
<span id="cb4-147">  crab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Crab</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-148">}</span>
<span id="cb4-149"></span>
<span id="cb4-150"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb4-151">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">197</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">244</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Hellblau</span></span>
<span id="cb4-152">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(bg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-153">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bubble <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> bubbles) {</span>
<span id="cb4-154">    bubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-155">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (bubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isCircleCollision</span>(crab)) {</span>
<span id="cb4-156">      bubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-157">      crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-158">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// console.log(crab.score);</span></span>
<span id="cb4-159">    }</span>
<span id="cb4-160">    bubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-161">  }</span>
<span id="cb4-162">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (enemyBubble <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> enemyBubbles) {</span>
<span id="cb4-163">    enemyBubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-164">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (enemyBubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isCircleCollision</span>(crab)) {</span>
<span id="cb4-165">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GAME OVER"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-166">      enemyBubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-167">      crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-168">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// crab.x = 2000;</span></span>
<span id="cb4-169">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// crab.y = 2000;</span></span>
<span id="cb4-170">    }</span>
<span id="cb4-171">    enemyBubble<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-172">  }</span>
<span id="cb4-173">  crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-174">  crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-175">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayHUD</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-176">}</span>
<span id="cb4-177"></span>
<span id="cb4-178"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">displayHUD</span>() {</span>
<span id="cb4-179">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hud1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Score: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-180">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> hud2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Death: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">death</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-181">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-182">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stroke</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-183">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strokeWeight</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-184">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-185">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textSize</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-186">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(hud1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-187">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(hud2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-188">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pop</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-189">}</span>
<span id="cb4-190"></span>
<span id="cb4-191"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyPressed</span>() {</span>
<span id="cb4-192">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> LEFT_ARROW) {</span>
<span id="cb4-193">    crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-194">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> RIGHT_ARROW) {</span>
<span id="cb4-195">    crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-196">  }</span>
<span id="cb4-197">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-198">}</span>
<span id="cb4-199"></span>
<span id="cb4-200"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">keyReleased</span>() {</span>
<span id="cb4-201">  crab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-202">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-203">}</span></code></pre></div>
<p>Entwickelt habe ich wieder in <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> mit dem Plugin <a href="https://github.com/antiboredom/p5.vscode#readme">p5.vscode</a>. Speziell durch den darin enthaltenen <em>Live Editor</em> macht er eine lokale Entwicklung sogar noch einfacher, als im <a href="https://editor.p5js.org/">P5.js-Webeditor</a>, und man ist nicht auf die Erreichbarkeit des Webeditors angewiesen (das heißt, man kann auch ohne Internetverbindung entwickeln und testen).</p>
<p>Neben dem oben schon erwähnten Font sind die übrigen Credits gleich geblieben: Die Impementierung wurde inspiriert von <em>Heiko Fehrs</em> »<a href="http://www.letscode-python.de/buch.php">Let’s Code Python</a>«, Bonn (Rheinwerk-Verlag) 2019, Seiten 247ff. Die Bilder der Krabbe sind von <em>Nitin Chowdary</em>, der sie unter der CC0 auf <a href="https://opengameart.org/content/crab">OpenGameArt.org veröffentlicht</a> hatte. Ebenfalls von OpenGameArt.org sind die <a href="https://opengameart.org/content/bubbles8-colors">Luftblasen</a> (CC-BY 3.0) des Users mit dem schönen Screen-Namen <em>HorrorPen</em>. Und der Bildhintergrund stammt wie so oft aus dem schier unerschöpflichen, freien (CC0) <a href="https://www.kenney.nl/assets/fish-pack">Fundus von Kenny.nl</a>.</p>
<p>Den <a href="https://github.com/kantel/p5js/tree/master/dancingcrab_v2">Quellcode und alle Assets</a> habe ich wie gewohnt auf mein GitHub-Repositorium hochgeladen. Habt Spaß damit.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ich möchte mir namlich keine bösen (und teuren!) Briefe einfangen. Denn Abmahnanwälte lauern überall.↩︎</p></li>
<li id="fn2"><p>Weil ich es bei meiner <a href="https://kantel.github.io/posts/2023051001_dancing_crab_p5js/">Premiere</a> vergessen hatte zu erwähnen: Im Gegensatz zu den vollmundigen Versprechungen der Dokumentation erkennt <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> die Assets nicht, die in einer eingebundenen JavaScript-Datei angesprochen werden. Das Verzeichnis <code>data</code> muß daher »per Fuß« von <code>/posts/&lt;verzeichnis_des_blogposts&gt;/data</code> nach <code>/docs/posts/&lt;verzeichnis_des_blogposts&gt;/data</code>herübergeschaufelt werden.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>P5.js</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2023051401_dancing_crab_p5js_v2/index.html</guid>
  <pubDate>Sun, 14 May 2023 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051401_dancing_crab_p5js_v2/images/dancingcrabv2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>16 Jahre »Platz unter der Linde«: Straßenfest vor dem Sandmann</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051302_sandmann_strassenfest/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52895139633/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann202305-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der »<a href="https://www.sandmann-berlin.de/">Sandmann</a>«, eine Musikkneipe im Norden Neuköllns, war lange Jahre – bis zu unserem Umzug nach Britz – unser verlängertes Wohnzimmer. Und an der Entstehung und Ausschmückung des Platzes vor dem Sandmann waren damals <a href="http://www.gabi-kantel.de/">Gabi</a> und ich auch ein wenig beteiligt. Heute wurde der sechzehnte Jahrestag der Eröffnung dieses »Platzes unter der Linde« mit einem Straßenfest gefeiert. Ich war mit vielen nostalgischen Gedanken auch dabei und habe ein paar Photos geschossen. Durch diese kleine Photostrecke müßt Ihr jetzt wieder durch.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52895075415/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann20230501.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52894120467/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann20230502.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52894688856/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann20230503.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/52894692626/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann20230504.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52894698881/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann20230505.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/52895075330/"><img src="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann20230506.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr jeweils auf eine Seite mit einer Vergrößerung.</em></p>
<p>Schön war’s. Und ein paar alte Freundinnen und Freunde von früher habe ich auch wiedergetroffen. Wenn das nicht der Sinn solcher Feste ist, wofür wären sie schließlich sonst gedacht?</p>
<p><strong>War sonst noch was?</strong> Ach ja, Flensburger Alkoholfrei schmeckt ziemlich gut. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="Jörg Kantel">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Kiezfest</category>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2023051302_sandmann_strassenfest/index.html</guid>
  <pubDate>Sat, 13 May 2023 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051302_sandmann_strassenfest/images/sandmann202305.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Reihe »Wohnsitz Neukölln«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023051301_bank_in_britz/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52891993064/"><img src="https://kantel.github.io/posts/2023051301_bank_in_britz/images/bankgepflegt-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Diese Bank wie auch der kleine, namenlose Platz an der Juliusstraße, Ecke Bruno-Bauer-Straße werden vom Grünflächenamt Neukölln gepflegt. Man sieht es beiden auch an. <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>): <a href="Jörg Kantel">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Wohnsitz Neukölln</category>
  <category>Failed State Berlin</category>
  <guid>https://kantel.github.io/posts/2023051301_bank_in_britz/index.html</guid>
  <pubDate>Sat, 13 May 2023 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023051301_bank_in_britz/images/bankgepflegt.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
