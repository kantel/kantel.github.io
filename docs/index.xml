<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Sat, 05 Aug 2023 14:25:00 GMT</lastBuildDate>
<item>
  <title>Bereit für die Tonne</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080501_bereit_tonne/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53095241649/"><img src="https://kantel.github.io/posts/2023080501_bereit_tonne/images/bereittonne-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Denn da gehören die Teile hin! <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">CC BY-NC-ND 2.0</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Verkehr</category>
  <guid>https://kantel.github.io/posts/2023080501_bereit_tonne/index.html</guid>
  <pubDate>Sat, 05 Aug 2023 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080501_bereit_tonne/images/bereittonne.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Python, Piskel und Processing: Video-Tutorials zum Wochenende</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080402_python_piskel_processing/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/52645318348/"><img src="https://kantel.github.io/posts/2023080402_python_piskel_processing/images/malewitchhommage-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da ich momentan mir (neuen und alten) Experimenten beschäftigt bin, kommen die freitäglichen Video-Tutorials etwas spät, aber sie kommen: Heute zu Python und der Matplotlib, zu Piskel und zu <em>Creative Coding</em> mit Processing. Es sind jeweils je eine Playlist, deren jeweils recht großer Umfang Euch auch über ein verregnetes Wochenende hinweghelfen sollte.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/EPMJLbyol4I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Den Anfang macht die Reihe »<a href="https://www.youtube.com/playlist?list=PLHwXkLexR9MAoKqIgUV9C6whwgCxlzP_M">Matplotlib Tutorial Series</a>« des Kanals <em>CodersLegacy</em>. Sie besteht aus sechsundzwanzig Videos, die im Schnitt zwischen zehn und zwanzig Minuten Laufzeit besitzen und Euch alles erzählen, was Ihr über diese <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Python-Plotting-Bibliothek</a> schon immer wissen wolltet, aber nie zu fragen wagtet.</p>
<p>Als nächstes gibt es neun Videos der Playlist »<a href="https://www.youtube.com/playlist?list=PLO3K3VFvlU6Akj3W29_nMLZFnwNOVbAzI">How to Create Pixel Art and Animations with Piskel</a>«. <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/pixelart/piskel.html">Piskel</a> ist ein freies (Apache-Lizenz) Programm zur Erstellung von Sprites und anderen Bildern als Pixelart. Diese Reihe, die Euch mit dem Programm vertraut machen will, besteht aus neun eher kürzeren, etwa fünfminütigen Video-Tutorials. Leider wurde das Einbetten in andere Webseiten vom Kanalinhaber deaktiviert, Ihr müßt Euch daher schon selber direkt nach YouTube begeben.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/aGwGHqFgyrI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Die Tutorialreihe »<a href="https://www.youtube.com/playlist?list=PLdIPAhekdquIUTfSuFQY8HVTcuMtQe897">Creative Coding</a>« von <em>J. Stephen Lee</em> ist der Höhepunkt der heutigen Vorstellungsrunde. Sie besteht aus dreiundzwanzig je etwa halbstündigen Videos, die Euch in die Kunst des kreativen Programmierens mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a> einführen. Natürlich steht es Euch und mir frei, diese Ideen auch nach <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a>, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> oder – falls Ihr noch nicht genug von geschweiften Klammern habt – nach <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> zu portieren.</p>
<p>All dies steht auch auf meiner Agenda. Daher wird es die nächsten Tage auf diesen Seiten weiter eher ruhig zugehen. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Piskel</category>
  <category>Processing</category>
  <category>Creative Coding</category>
  <category>Matplotlib</category>
  <category>Visualisierung</category>
  <guid>https://kantel.github.io/posts/2023080402_python_piskel_processing/index.html</guid>
  <pubDate>Fri, 04 Aug 2023 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080402_python_piskel_processing/images/malewitchhommage.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Public Private Partnership</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080401_public_private_partnership/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/9/91/GustaveDore_She_was_astonished_to_see_how_her_grandmother_looked.jpg"><img src="https://kantel.github.io/posts/2023080401_public_private_partnership/images/rotkaeppchenwolf-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Im Bett mit der Wirtschaft: Rechts als Rotkäppchen der Verbraucher, links die als wohltätige Großmutter getarnte Privatwirtschaft.</p>
<p><em>(Bild: <a href="https://de.wikipedia.org/wiki/Gustave_Dor%C3%A9">Gustave Doré</a> (1832-1883), »Elle était bien étonnée de voir comment sa Mère-grand était faite en son déshabillé« (She was astonished to see how her grandmother looked), 1862. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:GustaveDore_She_was_astonished_to_see_how_her_grandmother_looked.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Politik</category>
  <category>Satire</category>
  <category>Wirtschaft</category>
  <guid>https://kantel.github.io/posts/2023080401_public_private_partnership/index.html</guid>
  <pubDate>Fri, 04 Aug 2023 17:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080401_public_private_partnership/images/rotkaeppchenwolf.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Für umme lesen: Philosophie, Wahrscheinlichkeitstheorie und Statistik, Datenvisualisierung</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080302_umme_lesen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/8/8f/Sadie_Wendell_Mitchell%2C_%22Dig%22%2C_1909_%28cropped%29.jpg"><img src="https://kantel.github.io/posts/2023080302_umme_lesen/images/dig1909-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Diesen verregneten Hochsommer kann man ja nur mit guten Büchern ertragen. Daher habe ich <a href="https://kantel.github.io/posts/2023072501_logseq_remainder/">mein zweites Gehirn</a> geplündert und für Euch drei Bücher herausgesucht, mit denen Ihr schmökernd auf dem Sofa den Regen draußen vergessen könnt. Die Titel sind aus den Bereichen Philosophie, Mathematik und <em>Data Science</em> und Ihr könnt sie alle kostenlos als PDF herunterladen.</p>
<p>Den Anfang macht der Sammelband »<a href="https://mkcsplit.hr/en/look-cpt/psychoanalysis-between-philosophy-and-politics/">Psychoanalysis Between Philosophy and Politics</a>« der von <em>Nicol A. Barria-Asenjo</em> und <em>Slavoj Žižek</em> herausgegeben wurde. Er ist so neu (die Print-Version ist noch gar nicht erschienen), daß ich nur den Klappentext zitieren kann: Das Buch sei</p>
<blockquote class="blockquote">
<p>ein bemerkenswerter, interdisziplinärer Band, der sich, wie der Titel schon sagt, in fünfzehn Kapiteln mit den zahlreichen und vielfältigen Verbindungen zwischen philosophischen und politischen Diskursen beschäftigt. Es ist in drei Abschnitte unterteilt: Die philosophische Vision der Politik, Die politische Krise und Der Knoten zwischen Psychoanalyse, Philosophie und Politik. Die enthaltenen Aufsätze stammen aus verschiedenen akademischen Bereichen (Philosophie, Politik, Soziologie, Psychoanalyse, klinische Psychologie, Sozialtheorie, postkoloniale Studien) und verschiedenen europäischen und asiatischen Ländern (wie dem Vereinigten Königreich, Serbien, Polen, Belgien, den Philippinen, Osttimor, Taiwan, Korea).</p>
</blockquote>
<p>Die genannten fünfzehn Kapitel machen sich auf 400 Seiten breit und <a href="https://mkcsplit.hr/wp-content/uploads/2023/08/LOOK-1.pdf">können hier als PDF</a> heruntergeladen werden.</p>
<p>Das zweite Buch ist eine Einführung in Statistik und Wahrscheinlichkeitstheorie (»<a href="https://drive.google.com/file/d/1_dWunaER8BTWKiA0LjXo5LkVVDBpqVgW/view">Introduction to Probability and Statistics</a>«) von <em>William Mendemhall, III</em> und <em>Rebert J. und Barbara M. Beaver</em>. Das Buch verspricht einen praxisorientierten Zugang und sollte mit seinen mehr als 750 Seiten keine Fragen zu dem Gebiet mehr offenlassen.</p>
<p>Das letzte Buch ist das »<a href="https://pyoflife.com/python-data-visualization-cookbook/">Python Data Visualisation Cookbook</a>«, das ein umfassender Leitfaden sein will, der verschiedene Techniken zur Visualisierung von Daten in Python behandelt. Das Kochbuch wurde von <em>Igor Milovanović</em>, <em>Aleksandar Erkalović</em> und <em>Dimitry Foures-Angelov</em> verfasst. Die zweite Auflage könnt Ihr <a href="https://github.com/beingCurious/books/blob/master/docs/src/Python/Python-Data-Visualization-Cookbook-Second-Edition.pdf">hier online lesen</a>. Um das PDF herunterzuladen, müßt Ihr auf das kleine Downloadsymbol links oben klicken. Es ist mit einem Umfang von 275 Seiten gegenüber der Schwarte oben geradezu schlank geraten, aber dennoch sehr lesenswert. Denn auch wenn die Pubikationen aus dem <em>Packt</em>-Verlag von – sagen wir mal – manchmal stark wechselnder Qualität sind, ich hatte jedenfalls schon beim ersten Durchstöbern dieses Buches viel Spaß.</p>
<p><em>(Bild: <a href="https://20x200.com/collections/sadie-wendell-mitchell">Sadie Wendell Mitchell</a> (1883-1929), »Dig«, aus der Plakat-Serie »Girls Will Be Girls«, 1909, Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Sadie_Wendell_Mitchell,_%22Dig%22,_1909_(cropped).jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Philosophie</category>
  <category>Mathematik</category>
  <category>Visualisierung</category>
  <guid>https://kantel.github.io/posts/2023080302_umme_lesen/index.html</guid>
  <pubDate>Thu, 03 Aug 2023 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080302_umme_lesen/images/dig1909.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert erneut kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080301_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://dyn1.heritagestatic.com/lf?set=path%5B1%2F9%2F0%2F9%2F6%2F19096214%5D&amp;call=url%5Bfile%3Aproduct.chain%5D"><img src="https://kantel.github.io/posts/2023080301_chrome_update/images/movingpicturesorig1910-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht ein weiteres Update der Version 115 (115.0.5790.170/171) seines Browsers Chrome und schließt erneut <a href="https://chromereleases.googleblog.com/2023/08/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Thomas E. Powers (1870-1939), <a href="https://comics.ha.com/itm/original-comic-art/comic-strip-art/te-powers-our-moving-pictures-sunday-comic-strip-original-art-dated-7-10-10-hearst-newspapers-/a/121835-11178.s">Our Moving Pictures Sunday Comic Strip Original Art dated 7-10-10</a> (Hearst Newspapers, 1910))</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023080301_chrome_update/index.html</guid>
  <pubDate>Thu, 03 Aug 2023 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080301_chrome_update/images/movingpicturesorig1910.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kenney Jam 2023 – Auswertung</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080203_kenney_jam_auswertung/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://itch.io/jam/kenney-jam-2023/entries"><img src="https://kantel.github.io/posts/2023080203_kenney_jam_auswertung/images/kenneyjamsubmissions-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die <a href="https://itch.io/jam/kenney-jam-2023">Kenney Jam 2023</a>, bei der innerhalb von 48 Stunden ein Spiel zu einem vorgegebenen Thema (das erst zu Beginn des Wettbewerbs bekanntgegeben wurde) programmiert werden sollte, und deren einzige Einschränkung war, daß nur Assets aus dem unerschöpflichen und freien (<a href="https://creativecommons.org/share-your-work/public-domain/cc0/">CC0</a>) Fundes von <a href="https://kenney.nl/assets">Kenney.nl</a> verwendet werden durften, ist erfolgreich zu Ende gegangen. Alle 460 Einsendungen findet Ihr <a href="https://itch.io/jam/kenney-jam-2023/entries">hier</a>. Den größten Teil davon – nämlich 313 Spiele – könnt Ihr im Browser spielen.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/vLcQUpMqLwI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Außerdem gibt es eine <a href="https://itch.io/jam/kenney-jam-2023/results">Liste in der Reihenfolge der am besten bewerteten Spiele</a>. Und Kenney hat ein <a href="https://www.youtube.com/watch?v=vLcQUpMqLwI">Video der Top Five</a> (über alle Kategorien) hochgeladen. Das sind</p>
<ol type="1">
<li><a href="https://ludows.itch.io/enchanted-realms">Enchanted Realms</a></li>
<li><a href="https://ironhidemakes.itch.io/stellarexplorer">Stellar Explorer</a></li>
<li><a href="https://duckgoosegames.itch.io/beware-the-mine">Beware the Mines</a></li>
<li><a href="https://melonboyo.itch.io/callie">Callie</a></li>
<li><a href="https://liftyforever.itch.io/treacherous-sea">Treacherous Sea</a></li>
</ol>
<p>Die Links führen alle zu einer spielbaren Version.</p>
<p>Ich habe mich mal ein wenig durchgesteppt, bestimmte Asset-Serien (<a href="https://kenney.nl/assets/series:Pixel%20Platformer">Pixel</a>, <a href="https://kenney.nl/assets/series:Tiny">Tiny</a>, <a href="https://kenney.nl/assets/tag:1-bit">1-Bit</a>) wurden überdurchschnittlich häufig gewählt. Das kann aber auch daran liegen, daß diese in ein sehr kleines Raster (meistens 16x16 Pixel) passen und diese Größe ist für ein Browserspiel einfach am besten geeignet. Aber trotzdem ist es überraschend, was für unterschiedliche Spiele auf Basis dieser Asset-Packs geschaffen wurden. Vor der Kreativität der Einsenderinnen und Einsender kann ich nur den Hut ziehen.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2023080203_kenney_jam_auswertung/index.html</guid>
  <pubDate>Wed, 02 Aug 2023 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080203_kenney_jam_auswertung/images/kenneyjamsubmissions.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Alice und Twine Reloaded: Neue Twine-Tutorials</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080202_alice_twine_reloaded/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53087467098/"><img src="https://kantel.github.io/posts/2023080202_alice_twine_reloaded/images/alicetwine-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Inspiriert durch die wunderbaren, neuen <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6DmZy52pG7zYWbr6t93JC7">Tutorials zu Twine 2.6</a> (und Harlowe&nbsp;3.3) (bisher 26&nbsp;Videos, Reihe wird noch ständig aktualisiert – <a href="https://kantel.github.io/posts/2023071502_if_mit_twine_2_6/">ich berichtete</a>) von <em>Dan Cox</em> habe ich beschlossen, nicht nur meinen bisherigen <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">drei Twine-Tutorials aus dem Wunderland-Kosmos</a> ebenfalls ein Update auf Twine 2.6 zu gönnen und sie ein wenig zu überarbeiten, sondern auch meine Arbeit an den lange brachliegenden <a href="http://blog.schockwellenreiter.de/2022/09/2022090601.html">Twine</a>-Tutorials wieder aufzunehmen und mit neuen Folgen zu ergänzen.</p>
<p>Dabei möchte ich auch dem neuen User-Interface von Twine 2.6 ein wenig mehr Aufmerksamkeit widmen (ich hatte schließlich auch ein wenig experimentieren müssen, bis ich da durchgestiegen war). Und ich möchte erst einmal mit dem Default-Story-Format <a href="https://twine2.neocities.org/">Harlowe&nbsp;3.3</a> beginnen, aber in späteren Folgen auch auf das <a href="https://klembot.github.io/chapbook/">Chapbook</a>-Format von Twine-Schöpfer <em>Chris Klimas</em> eingehen, da dieses Features aufweist, die zum einen eine sauberere Trennung zwischen Story-Text und Programm-Code erlauben, zum anderen aber auch für ein schnelles Prototyping von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>-Spielen geeignet sind (für <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> sicher auch, aber da ist <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink mit Inky</a> eher die bessere (und ebenfalls freie (MIT-Lizenz)) Alternative).</p>
<p>Auch dem Story-Format <a href="https://www.motoslave.net/sugarcube/2/">SugarCube</a> möchte ich ein paar Abschnitte widmen, da es – zu Recht – immer noch viele Freunde in der Twine-Community besitzt.</p>
<p>Als ersten Schritt habe ich das erste meiner Twine-Tutorials »Alice und Twine« überarbeitet. Ein Bericht wird hier im <em>Schockwellenreiter</em> in den nächsten Tagen folgen. Den <a href="https://github.com/kantel/twine-entdecken/tree/master/Twine/alicetwine">Quellcode</a> könnt Ihr in meinem GitHub-Repositorium finden (einfach die <code>index.html</code> in Eure Twine-App importieren und die <a href="https://github.com/kantel/twine-entdecken/tree/master/Twine/alicetwine/images">Bilder</a> irgendwo ablegen, wo Twine sie findet) und eine (im Browser) <a href="https://kantel.itch.io/alice-und-twine">spielbare Version</a> habe ich vorab auch schon einmal auf Itch.io hochgeladen. Es ist kein Spiel, sondern nur ein kurze Demo. Habt dennoch Spaß damit!</p>



 ]]></description>
  <category>Twine</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023080202_alice_twine_reloaded/index.html</guid>
  <pubDate>Wed, 02 Aug 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080202_alice_twine_reloaded/images/alicetwine.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Version</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080201_firefox_update_116/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjQneTGl9grq2Iv6pSYqPqLBe2-v_neAxwJfhxoD7mRCOwBmN6wIA5T9mXMPNAM1VvsLUCDVJPgaINNHMNiMx3VqAGFtHo3Jm42N1haldla0zBK0KkdrB6-b4HkmUycmlAXTUU2jvjhopHaAFeW2H732AbMntrwXTSvCNvx_x1VG1OVAa_Nbj8AtAVD7-oK/s1684/june%2015%201910.jpg"><img src="https://kantel.github.io/posts/2023080201_firefox_update_116/images/powers1910-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Entwickler des Mozilla Firefox haben die neue Version 116.0 veröffentlicht und darin auch wieder <a href="https://www.mozilla.org/en-US/firefox/116.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="http://john-adcock.blogspot.com/2023/07/t-e-powers-two-obituaries.html">Thomas E. Powers</a> (1870-1939), Chicago Examiner, 15. Juni 1910)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023080201_firefox_update_116/index.html</guid>
  <pubDate>Wed, 02 Aug 2023 13:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080201_firefox_update_116/images/powers1910.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf ein Neues: Die Zahlen für den Monat Juli 2023</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023080101_mediadaten_2023_07/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53086767218/"><img src="https://kantel.github.io/posts/2023080101_mediadaten_2023_07/images/mediadaten202307-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Der in der zweiten Monatshälfte total verregnete Monat Juli hat sich verabschiedet, nicht ohne seinem Nachfolger August aufzutragen, mit dem regnerischen Wetter fortzufahren. Also ist es – Regen hin, Wetter her – mal wieder an der Zeit für ein paar Zahlen, die manches Mal hochtrabend auch <em>Mediadaten</em> genannt werden: Im Juli 2023 hatte der <em>Schockwellenreiter</em> laut seinem (hoffentlich!) <a href="https://de.wikipedia.org/wiki/Datenschutz-Grundverordnung">DSGVO</a>-konformen <del>Geißenpeter</del> <a href="https://kantel.github.io/posts/2022120702_goatcounter/">GoatCounter</a> <strong>4.821 Seitenaufrufe</strong>. Das ist seit <a href="https://kantel.github.io/posts/2022120602_schockwellenreiteronline/">meinem Neustart</a> im <a href="https://kantel.github.io/posts/2022120802_hello_quarto/">Dezember letzten Jahres</a> ein neuer Monatsrekord und sicher nicht nur damit zu erklären, daß sich auch der Geißenpeter langsam einen Backkatalog zugelegt hat. Es scheint mir, daß dieses <del>Blog</del> Kritzelheft eine beträchtliche Anzahl neuer Besucherinnen und Besucher hinzugewonnen hat. Und das finde ich schön.</p>
<p>Natürlich freue ich mich über jede und jeden (nicht nur neuen) Menschen, die oder der den Weg auf diese Seiten gefunden hat und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p>🤓 &nbsp; <em>Bleibt mir gewogen!</em></p>
<p>Wie jeden Monat gibt es auch für den Juli 2023 eine <em>Top Five</em> der besuchten Seiten. Die sieht dieses Mal so aus:</p>
<ol type="1">
<li><a href="https://kantel.github.io/posts/2023072501_logseq_remainder/">Logseq: Mein funktionierendes, zweites Gehirn</a></li>
<li><a href="https://kantel.github.io/posts/2023071003_klein_bloggersdorf/">Eine kurze Geschichte von Klein-Bloggersdorf</a></li>
<li>Worknote: <a href="https://kantel.github.io/posts/2023071801_markdown_pandoc_vscode/">Markdown, Pandoc und Visual Studio Code</a></li>
<li><a href="https://kantel.github.io/posts/2023071202_haare_schoen/">Jetzt habe ich wieder die Haare schön, dank Coiffeure Marina &amp; Team</a> – das sich so viele für meinen neuen Haarschnitt interessierten, überraschte mich schon.&nbsp;💇‍♂️</li>
<li>Nachrichten aus Neukölln: <a href="https://kantel.github.io/posts/2023071101_neuer_alter_krug/">Neuer »Alter Krug«</a></li>
</ol>
<p>Die Mischung ist doch wieder ziemlich bunt, oder? Laßt Euch durch den Regen nicht verdrießen und kommt gut durch den neuen Monat!</p>



 ]]></description>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2023080101_mediadaten_2023_07/index.html</guid>
  <pubDate>Tue, 01 Aug 2023 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023080101_mediadaten_2023_07/images/mediadaten202307.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Trinket kann Matplotlib – aber nur in der kostenlosen Version</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023073101_trinket_matplotlib/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53084263249/"><img src="https://kantel.github.io/posts/2023073101_trinket_matplotlib/images/matplotlibtrinket-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> treibt mich noch in den Wahnsinn. Ich hatte bisher immer einen großen Bogen um die <em>Modes</em> von Trinket gemacht, die mit einem kleinen, grünen Schlüssel angezeigt wurden, weil sie – glaubte ich – nach einem der kostenpflichtigen »<a href="https://trinket.io/plans">Plans</a>« verlangten. Seit heute weiß ich, daß dies komplizierter und sehr ärgerlich ist:</p>
<p>Denn in <a href="https://medium.com/@6unpnp/draw-chart-in-python-using-trinket-c3c4ce1d4403">diesem Artikel</a> (Medium-Link, daher vermutlich leider hinter einer Bezahlschranke verborgen) zeigte <em>Sparisoma Viridi</em>, wie man in Trinket mit Hilfe des Modes »Python3« eine Applikation mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a> und der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> erstellen kann. Und wie die Screenshots zeigten, nutzte er dafür ganz offensichtlich den freien, kostenlosen »Trinket Code«-Plan, den ich bisher auch immer genutzt hatte. Das wollte ich natürlich auch sofort ausprobieren. Also Trinket aufgerufen und (trotz grünem Schlüssel) ein neues Python3-Trinket mit diesem Code erstellt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">NUM_POINTS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb1-5">GRADIENT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb1-6"></span>
<span id="cb1-7">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_POINTS))</span>
<span id="cb1-8">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randn(NUM_POINTS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>GRADIENT</span>
<span id="cb1-9"></span>
<span id="cb1-10">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-11"></span>
<span id="cb1-12">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.rand(NUM_POINTS)</span>
<span id="cb1-13">size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> np.random.rand(NUM_POINTS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-14">ax.scatter(x, y, s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colors, alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb1-15">fig.suptitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Zufalls-Scatterplot"</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17">plt.show()</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Leerzeile, damit der Plot nicht so am oberen Fensterrand klebt.</span></span>
<span id="cb1-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>Erstaunlicherweise funktionierte dies (wie auch der <a href="https://www.flickr.com/photos/schockwellenreiter/53084263249/">Screenshot</a> im Banner oben beweist) ohne Probleme. Lediglich an der <code>figsize</code> mußte ich ein wenig schrauben, damit der Plot vollständig in das Ausgabefenster paßte und nicht an der rechten Seite abgeschnitten wurde. Doch – und das war der Haken, mit dem die Nutzer auf eine kostenpflichtigen »Plan« gelockt werden sollten – der Code ließ sich nicht als Trinket abspeichern und online stellen. Verließ man die Seite, war alles wieder weg.</p>
<p>Zwar gibt es einen Notausgang: Der Code läßt sich herunterladen (und so ich habe ihn auch <a href="https://github.com/kantel/trinket/blob/main/matplotlibtest/main.py">in meinem GitHub-Repo abgespeichert</a>), so daß man ihn jederzeit neu hochladen und einpflegen kann. Doch schön ist anders. Also bin ich über meinen Schatten gesprungen und habe mir ein Update auf den »Plan Code+« geleistet. Die 3&nbsp;US-$/Monat (bei jährlicher Zahlung) schien mir der Spaß, nun mit Pythons <em>Scientific Stack</em> (und auch mit <a href="https://github.com/kantel/trinket/blob/main/matplotlibtest/main.py">Pygame</a>!) online auf Trinket spielen zu können, wert zu sein.</p>
<p>Das hätte ich lieber nicht tun sollen. Denn kaum war das Ugrade beim Trinket-Server akzeptiert, stieg das obige Skriptchen mit dieser Fehlermeldung aus:</p>
<blockquote class="blockquote">
<p>Matplotlib created a temporary config/cache directory at /tmp/matplotlib-zhreju7y because the default path (/home/trinket/.config/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.</p>
</blockquote>
<p>So wie es aussieht, ist der Trinket-Server nicht korrekt für die Nutzung (genauer: Speicherung) von Matplotlib-Anwendungen konfiguriert. Solange nichts gespeichert wird (wie in dem kostenlosen »Plan«) ist alles gut, aber sobald Trinket versucht, das Skript zu speichern steigt die Matplotlib aus. Eine Fehlermeldung an Trinket habe ich abgesetzt, aber ob und wann dieser Fehler behoben wird, steht in den Sternen. Mein mit zuviel Optimismus gestartetes Upgrade habe ich auch wieder storniert, aber das habe ich jetzt erst einmal für ein Jahr an der Backe.</p>
<p>So bleibt mir nichts anderes übrig, als daß ich mir einen zweiten, kostenlosen Trinket-Account zulege, der dann – wenn auch eigeschränkt – mit der Matplotlib spielt. Das ist – wie ich oben schon schrieb – sehr ärgerlich und schön ist auch anders.</p>



 ]]></description>
  <category>Trinket</category>
  <category>Python</category>
  <category>Data Science</category>
  <category>Visualisierung</category>
  <guid>https://kantel.github.io/posts/2023073101_trinket_matplotlib/index.html</guid>
  <pubDate>Mon, 31 Jul 2023 17:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023073101_trinket_matplotlib/images/matplotlibtrinket.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hallo Quarto! Hallo Visual Studio Code!</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023073001_hello_vscode/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53081746678/"><img src="https://kantel.github.io/posts/2023073001_hello_vscode/images/helloquarto-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Experimente, <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zum zentralen Publikationswerkzeug zu etablieren und alles, was ich (in Markdown) geschrieben habe, via diesem Texteditor in die diversen Publikationsformate herauszuschreiben, machen weitere Fortschritte. Habe ich mich im <a href="https://kantel.github.io/posts/2023071801_markdown_pandoc_vscode/">ersten Teil</a> an die Installation von <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/pandoc.html">Pandoc</a> gewagt und im <a href="https://kantel.github.io/posts/2023072601_atlas_curiosa_init/">zweiten Teil</a> die <em>Live Prewiev</em> ein wenig aufgehübscht, geht es nun ans Eingemachte: Die Installation von <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>:</p>
<p>Da ich dieses <del>Blog</del> Kritzelheft zwar mit Quarto erstelle, als Editor aber dafür momentan (noch?) <a href="http://cognitiones.kantel-chaos-team.de/mathematik/rstudio.html">RStudio</a> genutzt wird (das hat Quarto fest eingebaut), mußte ich erst einmal die aktuelle Version von Quarto <a href="https://quarto.org/docs/get-started/">herunterladen</a> und installieren. Danach benötigte Visual Studio Code (nur) noch die <a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">Quarto VS Code Extension</a> und dann war alles schick.</p>
<p>Ich konnte das Beispiel aus dem <a href="https://quarto.org/docs/get-started/hello/vscode.html">»Get Started«-Tutorial</a> eingeben und herausrendern (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53081746678/">Screenshot</a>). Die Quarto Extension bringt eine eigene Preview mit und startet auch gleich einen lokalen Server, der auf <em>Port 6460</em> lauscht.</p>
<p>Das motiviert und ermuntert natürlich zu weiteren Versuchen. Erst einmal möchte ich ein oder zwei meiner Seiten-Projekte damit testen, um mich sattelfester in der Arbeit mit Quarto und VSCode zu machen. Doch wer weiß, vielleicht wird danach auch der <em>Schockwellenreiter</em> nicht mehr mit RStudio, sondern mit Visual Studio Code erstellt? Für Euch da draußen sollte sich nichts ändern, aber da ich mit RStudio zum einen nie so richtig warm geworden bin und zum anderen die aktuelle Version auch nicht mehr mit meinem betagten MacBook Pro spielen will&nbsp;… Die Arbeit mit Visual Studio Code hingegen bringt mir von Tag zu Tag mehr Spaß. Schaun wir mal, wohin die Reise noch gehen wird. <em>Still digging!</em></p>



 ]]></description>
  <category>Visual Studio Code</category>
  <category>Quarto</category>
  <category>Statische Seiten</category>
  <category>Markdown</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2023073001_hello_vscode/index.html</guid>
  <pubDate>Sun, 30 Jul 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023073001_hello_vscode/images/helloquarto.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Generative Art: Pythons Turtle-Graphik als EPS-Datei abspeichern</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072901_save_turtle_as_eps/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53079603965/"><img src="https://kantel.github.io/posts/2023072901_save_turtle_as_eps/images/epsturtle-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Erinnert Ihr Euch noch an mein Projekt »<a href="http://blog.schockwellenreiter.de/2022/03/2022031101.html">Generative Art zwischen zwei Pappedeckel</a>«? Seit meinem <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">Abschied von TigerJython</a> ist dies leider ein wenig eingeschlafen, denn <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJythons</a> Turtle-Bibliothek war eine Säule dieses Projekts (die andere war (und ist immer noch) <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>)<sup>1</sup>.</p>
<p>Seitdem ich aber über das <a href="https://kantel.github.io/posts/2023072402_py5_update/">Py5-Update berichtet</a> hatte, fraß sich dieses Projekt wieder in meinen Gehirnwindungen fest. Das Problem war ja, daß <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">(C)Pythons Turtle</a> aus der Standard-Bibliothek keine Möglichkeit bot, die Ergebnisse hochaufgelöst abzuspeichern<sup>2</sup>. Doch ist das wirklich so? Meine leicht verschütteten Tkinter-Kenntnisse (Pythons Turtle-Modul setzt auf Tkinter auf) brachten mich dann auf diese Lösung:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">Turtle.getscreen().getcanvas().postscript(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".eps"</span>, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT)</span></code></pre></div>
<p>Überraschenderweise funktionierte dies. Und wenn man – wie bei mir eigentlich Standard – der Turtle einen expliziten <code>Screen</code> spendiert, kann man den Monster-Aufruf sogar noch ein wenig herunterbrechen:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">cv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen.getcanvas()</span>
<span id="cb2-2">cv.postscript(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".eps"</span>, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT)</span></code></pre></div>
<p>Bei einer Fenstergröße von <code>WIDTH = 640</code> und <code>HEIGHT = 480</code> ist die so erzeugte Postscript-Datei (und auch ein daraus erstelltes PDF) 1.335 Pixel weit und 1.005 Pixel hoch. Das entspricht einer Größe von etwa 22 x 17 Zentimetern und dürfte für nahezu jedes zwischen zwei Pappedeckel gepreßtes Druckerzeugnis ausreichend sein (lediglich für Poster und Plakate müßte man sich etwas anderes überlegen, doch dazu weiter unten mehr).</p>
<p>Will man nun aus seinem Kunstwerk eine PNG-Datei erzeugen, kann man den Umweg über den <em>Python Image Library</em> (PIL) Nachfolger <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> nehmen. Dafür sind nur wenige weitere Zeilen im Quellcode notwendig:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb3-2"></span>
<span id="cb3-3">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".eps"</span>)</span>
<span id="cb3-4">img.save(file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>)</span></code></pre></div>
<p>Diese Datei besitzt allerdings wieder nur die ursprüngliche Größe des Fensters, dafür aber einen weißen Hintergrund, den Ihr mit dem <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/gc.html">Graphikprogramm Eures Vertrauens</a> auch transparent setzen könnt.</p>
<p>Das verwendete Programm, das einen asymmetrieschen Pythagoras-Baum zeichnet, hatte ich <a href="http://blog.schockwellenreiter.de/2021/01/2021011401.html">hier als Turtle-Programm schon einmal vorgestellt</a>. Ich habe lediglich die Hintergrundfarbe verändert und eine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/malewitsch.html">andere Palette</a> verwendet. Denn kompletten Quellcode gibt es hier und in meinem <a href="https://github.com/kantel/turtlepy/blob/master/sources/pythagoras3.py">GitHub Repositorium</a>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Asymmetrischer Pythagoras-Baum</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wird als Postcript-File gespeichert und dann</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mittels PIL nach .jpg/.png konvertiert</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> turtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> t</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb4-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb4-8"></span>
<span id="cb4-9">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 640</span></span>
<span id="cb4-10">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 480</span></span>
<span id="cb4-11">REC_LEVEL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rekursions-Tiefe</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">palette <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">46</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">54</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>),</span>
<span id="cb4-14">           (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">144</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>),</span>
<span id="cb4-15">           (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">215</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">158</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>)]</span>
<span id="cb4-16"></span>
<span id="cb4-17">wn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Screen()</span>
<span id="cb4-18">wn.colormode(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb4-19">wn.bgcolor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">230</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">226</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">204</span>)</span>
<span id="cb4-20">wn.setup(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT)</span>
<span id="cb4-21">wn.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asymmetrischer Pythagoras-Baum"</span>)</span>
<span id="cb4-22"></span>
<span id="cb4-23">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Turtle()</span>
<span id="cb4-24">p.speed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-25">p.color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-26">p.setheading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> tree(s, level):</span>
<span id="cb4-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span></span>
<span id="cb4-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-32">        quadrat(s)</span>
<span id="cb4-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Linke Seite</span></span>
<span id="cb4-34">        ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-35">        p.forward(s)</span>
<span id="cb4-36">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-37">        p.forward(s)</span>
<span id="cb4-38">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb4-39">        p.forward(ls)</span>
<span id="cb4-40">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-41">        tree(ls, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rechte Seite</span></span>
<span id="cb4-43">        rs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-44">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)</span>
<span id="cb4-45">        p.forward(rs)</span>
<span id="cb4-46">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-47">        tree(rs, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-48">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb4-49">        p.back(s)</span>
<span id="cb4-50"></span>
<span id="cb4-51"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> quadrat(s):</span>
<span id="cb4-52">    p.color(palette[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(palette)], palette[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(palette)])</span>
<span id="cb4-53">    p.begin_fill()</span>
<span id="cb4-54">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb4-55">        p.forward(s)</span>
<span id="cb4-56">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-57">    p.end_fill()</span>
<span id="cb4-58"></span>
<span id="cb4-59">p.penup()</span>
<span id="cb4-60">p.setpos(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb4-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bildschirm-Refresh ausschalten</span></span>
<span id="cb4-62">wn.tracer(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-63">p.pendown()</span>
<span id="cb4-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Für eine Rekursionstiefe &gt; 14 braucht man schon sehr viel Geduld</span></span>
<span id="cb4-65">tree(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, REC_LEVEL) </span>
<span id="cb4-66">p.hideturtle()</span>
<span id="cb4-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bildschirm-Refresh wieder einschalten</span></span>
<span id="cb4-68">wn.update()</span>
<span id="cb4-69"></span>
<span id="cb4-70">file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pythagoras"</span></span>
<span id="cb4-71">cv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wn.getcanvas()</span>
<span id="cb4-72">cv.postscript(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".eps"</span>, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT)</span>
<span id="cb4-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p.getscreen().getcanvas().postscript(file = file_name + ".eps", width = WIDTH, height = HEIGHT)</span></span>
<span id="cb4-74"></span>
<span id="cb4-75">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".eps"</span>)</span>
<span id="cb4-76">img.save(file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>)</span>
<span id="cb4-77"></span>
<span id="cb4-78"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span>
<span id="cb4-79"></span>
<span id="cb4-80">wn.mainloop()</span></code></pre></div>
<p>Auch wenn diese Lösung erst einmal ausreichend scheint, ein wirklich zufriedenstellendes Ergebnis (siehe die obige Anmerkung zu Postern und Plakaten) wäre nur mit einer auflösungsunabhängigen Speicherung als SVG zu erreichen. Es gibt da die Bibliothek <a href="https://donkirkby.github.io/svg-turtle/">SaVaGe Turtle</a> (aka svg-turte), die verspricht, dies zu können (<a href="https://github.com/donkirkby/svg-turtle">GitHub Repo</a>, <a href="https://pypi.org/project/svg-turtle/">PyPI-Seite</a>). Bei meinen ersten Tests zeigte sie sich jedoch ein wenig störrisch (sie scheint mit Hex-Color-Werten nicht zurechtzukommen). Hier muß ich wohl noch ein wenig experimentieren. <em>Still digging!</em></p>
<p><strong>War sonst noch was?</strong> Ach ja, beim <a href="http://blog.schockwellenreiter.de/2022/03/2022033101.html">Stöbern durch meine alten Seiten</a> wurde ich an <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/pelican.html">Pelican</a> erinnert, den in Python geschriebenen <em>Static Site Generator</em>. Mit seinem Template <a href="https://github.com/getpelican/pelican-themes/tree/master/photowall">Photowall</a> wäre das Teil doch auch ein möglicher Kandidat für mein <a href="https://kantel.github.io/posts/2023072001_wunderkammer/">Kunst- und Wunderkammer-Projekt</a>. Ich glaube, da muß ich auch noch einmal drüber nachdenken.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p><a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/drawbot.html">DrawBot</a>, obwohl durchaus nicht ohne Charme, habe ich außen vorgelassen, da ich nicht schon wieder in die »Mac only« Falle tappen wollte.↩︎</p></li>
<li id="fn2"><p>Wie man dies in Py5 bewerkstelligt, <a href="http://blog.schockwellenreiter.de/2022/07/2022072201.html">hatte ich hier getestet und beschrieben</a>, eine Lösung für TigerJython ein paar Tage später <a href="http://blog.schockwellenreiter.de/2022/07/2022072301.html">hier vorgestellt</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Turtle</category>
  <category>Generative Art</category>
  <guid>https://kantel.github.io/posts/2023072901_save_turtle_as_eps/index.html</guid>
  <pubDate>Sat, 29 Jul 2023 17:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072901_save_turtle_as_eps/images/epsturtle.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Curiouser and Curiouser: Alice’s Adventures in Wonderland (1972)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072803_alice_wunderland_1972/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.youtube.com/watch?v=GsUNpHkDW0o"><img src="https://kantel.github.io/posts/2023072803_alice_wunderland_1972/images/alicewunderland1972-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><strong>All about Alice</strong>: Statt der gewohnten, freitäglichen Video-Tutorials gibt es heute einen Musicalfilm im <em>Schockwellenreiter</em>: Der britische Film »<a href="https://de.wikipedia.org/wiki/Alice_im_Wunderland_(1972)">Alice’s Adventures in Wonderland</a>« (<a href="https://www.youtube.com/watch?v=GsUNpHkDW0o">YouTube-Link</a>) des Regisseurs <em>Willim Sterling</em> aus dem Jahre 1972 hält sich – obwohl er als Musical verwirklicht wurde – sehr eng an die Buchvorlage von <em>Lewis Caroll</em>, einige Textpassagen wurden sogar wörtlich übernommen. Dennoch wurde er von der zeitgenössischen Kritik zurückhaltend bewertet, wohl auch, weil die von der damals 16-jährigen <em>Fiona Fullerton</em> gespielten Alice wie auch die gesamte Anmutung des Films von der Disney-Ästhetik der berühmten und alles überstrahlenden Hollywood-Alice ziemlich weit abwich.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/GsUNpHkDW0o" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Dabei war der Film mit <em>Michael Crawford</em> (White Rabbit), <em>Dudley Moore</em> (Siebenschläfer), <em>Ralph Richardson</em> (Raupe), <em>Flora Robson</em> (Herzköniging) und <em>Peter Sellers</em> (Märzhase) prominent besetzt und mit <em>John Barry</em> und <em>Don Black</em> sorgten zwei erfolgreiche, britische Komponisten für die Songs und den Soundtrack. Immerhin erhielt er 1973 zwei Auszeichnungen beim <em>BAFTA Award</em> für die beste Kamera und das beste Kostümdesign. Und schon 1972 erschien in Belgien (wo denn sonst?) eine Comic-Version des Films in der Tageszeitung <em>Le Soir</em>.</p>
<p>Der Film ist nie mit einer deutschen Tonspur auf DVD erschienen und auch YouTube kennt nur diese leicht verrauschte, englische Fassung, der man das Alter anmerkt. Aber ich finde den Film charmant und <em>very british</em> und die Veröffentlichung hier im <del>Blog</del> Kritzelheft soll mich daran erinnern und dazu insprieren, meine <a href="http://blog.schockwellenreiter.de/2020/11/2020111502.html">eigenen Wunderland-Exkursionen</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> wieder aufzunehmen (und diese eventuell mit Ausflügen nach <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> zu ergänzen).</p>
<p>Das ist alles sehr kurios und noch viel kurioser. Doch bis dahin: Habt erst einmal viel Spaß mit dem Filmchen!</p>



 ]]></description>
  <category>Alice</category>
  <category>Kino</category>
  <category>Twine</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2023072803_alice_wunderland_1972/index.html</guid>
  <pubDate>Fri, 28 Jul 2023 18:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072803_alice_wunderland_1972/images/alicewunderland1972.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Processing Version 4.3 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072802_processing_4_3/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53076796102/"><img src="https://kantel.github.io/posts/2023072802_processing_4_3/images/processing43test-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Vor zwei Tagen wurde die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing (Java)</a>-Version 4.3 freigegeben. Das Update betrifft sowohl Processing selber (das darunterliegende Java wurde auf die Version 17.0.8+7 angehoben) wie auch die Processing-eigene IDE (<em>Processing Development Environement</em> (PDE) genannt). Neben einigen kleineren Bugfixes sind die <a href="https://github.com/processing/processing4/releases">Neuerungen</a> eher kosmetischer Natur: Das Dock-Icon wurde geändert, so daß es sich besser vom <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a>-Icon unterscheidet. Die Probleme möchte ich einmal haben …</p>
<p>Natürlich mußte ich mir die neue Version gleich herunterladen und mit einem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a>-Experiment testen. Die gute Nachricht: Processing.py läuft immer noch ohne Probleme. Die schlechte Nachricht: Processing.py gibt in der Processing-4.3-PDE immer noch keine aussagekräftigen Fehlermeldungen heraus – ein Feature, das in Processing 3 noch vorhanden war.</p>
<p>Ich finde das schade, denn bei allen Vorzügen, die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>, der Python3-Port von Processing, bietet, besitzt Processing.py den Vorzug der leichteren Installation und der besseren Integration in die Processing-Welt. Ich hoffe ja immer noch, daß sich irgendjemand erbarmt und Processing.py auf den Processing-4-Stand anhebt (mir fehlt leider das Know-How dafür).</p>
<p>Processing 4.3 kann <a href="https://processing.org/download">hier herungergeladen</a> werden.</p>



 ]]></description>
  <category>Processing</category>
  <category>Creative Coding</category>
  <category>Processing.py</category>
  <guid>https://kantel.github.io/posts/2023072802_processing_4_3/index.html</guid>
  <pubDate>Fri, 28 Jul 2023 17:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072802_processing_4_3/images/processing43test.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Klimakiller Kühlschrank</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072801_klimakiller_kuehlschrank/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53077639685/"><img src="https://kantel.github.io/posts/2023072801_klimakiller_kuehlschrank/images/klimakillerkuehschrank-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Hier in Neukölln scheint es Menschen zu geben, die glauben, wenn sie draußen die Kühlschranktür offen stehen lassen, können sie das Klima beeinflussen.</p>
<p>Ihnen sei gesagt: Wetter ist nicht Klima. <em>(Photo (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023072801_klimakiller_kuehlschrank/index.html</guid>
  <pubDate>Fri, 28 Jul 2023 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072801_klimakiller_kuehlschrank/images/klimakillerkuehschrank.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Warum Kiezblocks? Verkehrsberuhigung führt zu Entlastung statt Kollaps</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072702_warum_kiezblocks/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53008187761/"><img src="https://kantel.github.io/posts/2023072702_warum_kiezblocks/images/kranoldkoernerkiezblock-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie ich schon <a href="https://kantel.github.io/posts/2023062802_kranold_kiezblock/">einige</a> <a href="https://kantel.github.io/posts/2023070603_kiezspaziergang_kranold_kiezblock/">Male</a> auch in diesem <del>Blog</del> Kritzelheft erwähnt hatte, bin ich in der Initiative <a href="https://www.kiezblocks.de/kranold/">Kranold Kiezblock</a> aktiv, die für einen verkehrsberuhigten und dadurch lebenswerteren Kiez (in dem auch ich lebe) eintritt. Dabei achte ich besonders darauf, daß die Interessen von Fußgängerinnen und Fußgängern sowie Nutzerinnen und Nutzern des ÖPNV nicht zu kurz kommen. Spätestens seit meiner eigenen Mobilitätseinschränkung durch meinen Schlaganfall ist mir dies ein besonderes Anliegen.</p>
<p>Nun hat die Initiative – zusammen mit dem benachbarten <a href="https://www.kiezblocks.de/koerner/">Körner-Kiezblock</a> – einen Bericht mit dem Titel »<a href="https://www.kiezblocks.de/kranold-und-koerner-kiezblocks-gemeinsamer-einsatz-fuer-lebenswertere-wohnkieze-in-neukoelln/">Gemeinsamer Einsatz für lebenswerte Wohnkieze in Neukölln</a>« veröffentlicht. Darin weist sie unter anderem darauf hin, daß der Kranoldkiez laut dem <a href="https://www.berlin.de/sen/uvk/umwelt/nachhaltigkeit/umweltgerechtigkeit/">Berliner Umweltgerechtigkeitsatlas</a> eines der am stärksten belasteten Gebiete Berlins ist. Die Bewohnerinnen und Bewohner leiden unter Lärmbelästigung, Luftverschmutzung und einem Mangel an Grünflächen. Darüber hinaus beeinträchtigt der starke Durchgangsverkehr die Sicherheit von Fußgängerinnen, Fußgängern, Radfahrerinnen und Radfahrern, da es an hinreichend breiten, nicht zugeparkten Fuß- und Radwegen und gut einsehbaren (das heißt ebenfalls: nicht zugeparkten) Kreuzungen mangelt. Eine <a href="https://interaktiv.tagesspiegel.de/lab/analyse-zu-autobesitz-in-berlin/">Analyse des Tagesspiegels</a> zum Verhältnis von Autobesitz und -verkehr in Berliner Kiezen zwischen 2015 und 2022 hat zudem deutlich aufgezeigt, daß nur jeder sechste Haushalt im Kranoldkiez ein eigenes KfZ besitzt, jedoch wesentlich mehr Autos täglich durch den Kiez fahren.</p>
<p>Rückendeckung gibt uns auch eine Studio des <em><a href="https://difu.de/">Deutschen Instituts für Urbanistik</a></em> (Difu), die zeigt, daß <a href="https://entwicklungsstadt.de/studie-zeigt-verkehrsberuhigung-fuehrt-zu-entlastung-statt-kollaps/">Verkehrsberuhigung durch Kiezblock zu Entlastung statt zu dem befürchteten Kollaps</a> führt. Die Datenauswertung zeigt, daß Verkehr noch mehr Verkehr anzieht (ein wichtiges Argument auch gegen den Autobahnausbau zum Beispiel der A100), wer dagegen verkehrsberuhigte Zonen schafft, ernte Lebensqualität und zugleich meht Mobilität. Im Umfeld von Kiezblocks werde mehr Fahrrad gefahren und zu Fuß gegangen.</p>
<p>Die Difu-Projektleterin <em>Uta Bauer</em> resümiert daher: »Die Untersuchung zeigt, daß Maßnahmen, die den Autoverkehr in den Kommunen zähmen, im erwünschtem Sinne wirken: Mehr Lebensqualität und zugleich Mobilität. Daher gilt es, diese Ergebnisse auch in Kommunalpolitik und -verwaltung stärker zu berücksichtigen. Insbesondere in der Modellierung von Verkehrsberuhigungsmaßnahmen sollten die beschriebenen Effekte berücksichtigt werden.«</p>
<p>Kämpfen wir daher gemeinsam weiter für mehr Lebensqualität im Kiez. <em>(Photo: (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: Kranold-Kiezblock)</em></p>



 ]]></description>
  <category>Verkehrswende</category>
  <category>Kiezblock</category>
  <category>Neukölln</category>
  <guid>https://kantel.github.io/posts/2023072702_warum_kiezblocks/index.html</guid>
  <pubDate>Thu, 27 Jul 2023 16:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072702_warum_kiezblocks/images/kranoldkoernerkiezblock.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Keine Verkehrswende in Berlin: Das 29-Euro-Ticket ist eine Totgeburt</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072701_keine_verkehrswende/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/40244288413/"><img src="https://kantel.github.io/posts/2023072701_keine_verkehrswende/images/mexikoplatz-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Das »29-Euro-Ticket für alle« war im Wahlkampf <a href="https://taz.de/29-Euro-Ticket-vor-dem-Aus/!5946339/">ein zentrales Versprechen der Berliner SPD</a> und es wurde auch im Koalitionsvertrag aufgenommen und damit warb auch die Klicke um <em>Franziska Giffey</em> beim Mitgliederentscheid um die Zustimmung zur Koalition mit der CDU. Nun ist zwar das Ticket noch nicht offiziell begraben (ein wenig Schamfrist für den Wahlbetrug möchte die SPD noch herausschinden), aber <a href="https://taz.de/Das-29-Euro-Ticket-wird-begraben/!5946345/">deutlicher können die Signale eigentlich nicht sein</a>:</p>
<p>Das Land Brandenburg ist dagegen, der VBB <em>(Verkehrsverbund Berlin Brandenburg)</em> ist dagegen <em>(»Das 29-Euro-Ticket ist eine rein politische Idee«)</em> und die federführende Berliner CDU-Senatorin ist (anders als beim zwischenzeitlichen Radwegestop) nicht gerade proaktiv. Gegen diese massive Ablehnung durch zweieinhalb der drei beteiligten Institutionen könnte der Berliner Senat höchstens noch durch einen Alleingang das 29-Euro-Ticket retten: Würde Schwarz-Rot das Deutschlandticket für in Berlin lebende Nutzerinnen und Nutzer von 49 auf 29&nbsp;Euro heruntersubventionieren, bräuchte es dafür nicht unbedingt grünes Licht vom VBB. Es wäre dann eine Subventionierung, wie sie auch andere Bundesländer anbieten. Das aber würde bedeuten, das Tischtuch mit Brandenburg durchzuschneiden.</p>
<p>Daher deutet alles darauf hin, daß die Verkehrssenatorin <em>Manja Schreiner</em> die Angelegenheit aussitzen wird. Damit steht ein zentrales Versprechen Giffeys vor der Totgeburt. Das hat nicht mal die Ampelkoalition im Bund geschafft. Die hat das Deutschlandticket zwar spät geliefert, aber sie hat geliefert. Doch Frau Giffey hat ja nicht einmal ihr Doktorarbeit ohne zu schummeln abliefern können. Wer daher also glaubt, daß sie und ihre SPD ein Wahlversprechen einhält, der macht auch seine Hose mit der Kneifzange zu.</p>
<p><em>(Photo: <a href="https://www.flickr.com/photos/schockwellenreiter/40244288413/">Bahnhof Mexikoplatz</a>, aufgenommen am 25. Februar 2019, (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2019 by <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Verkehrswende</category>
  <category>Failed State Berlin</category>
  <guid>https://kantel.github.io/posts/2023072701_keine_verkehrswende/index.html</guid>
  <pubDate>Thu, 27 Jul 2023 14:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072701_keine_verkehrswende/images/mexikoplatz.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Weitere 16x16 Pixel große Tiles und Spritesets von Kenney.nl</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072602_weitere_16x16_tiles_kenney/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.kenney.nl/media/pages/assets/roguelike-characters/caaf08a798-1677694932/sample.png"><img src="https://kantel.github.io/posts/2023072602_weitere_16x16_tiles_kenney/images/kenneyrpg-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Man kann sich gar nicht oft genug durch die Seiten von <a href="https://www.kenney.nl/assets">Kenney.nl</a> steppen. Denn sie sind so mit Assets vollgestopft, daß man auch nach vielen wiederholten Besuchen über Tiles und Spritesets stolpert, die man bisher übersehen hat. Bei mir war es heute das <a href="https://www.kenney.nl/assets/roguelike-rpg-pack">Roguelike/RPG Pack</a> mit über 1.700 je 16x16 Pixel großen Bildchen, das sich meiner Entdeckung entzogen hatte.</p>
<p>Doch das ist noch nicht alles. Zu diesem schon riesigen Pack kann man sich auch noch ein paar Zusatzpakete herunterladen (wobei es sicher auch einige Überschneidungen zum Hauptpaket gibt):</p>
<ul>
<li>Aus den über 450 Sprites der <a href="https://www.kenney.nl/assets/roguelike-characters">Roguelike Characters</a> kann man sich seine eigenen Helden und Monster zusammenbasteln.</li>
<li>Die knapp 500 Tiles aus <a href="https://www.kenney.nl/assets/roguelike-indoors">Roguelike Indoors</a> wecken den Innenarchitekten in Dir.</li>
<li>Und mit <a href="https://www.kenney.nl/assets/roguelike-caves-dungeons">Roguelike Caves &amp; Dungeons</a> (über 500 Tiles) steigst Du hinab in die Unterwelt.</li>
</ul>
<p>Etwas ganz Besonderes sind dann noch die mehr als eintausend Tiles und Sprites von <a href="https://www.kenney.nl/assets/roguelike-modern-city">Roguelike Modern City</a>. Denn wo steht geschrieben, daß ein Roguelike oder ein RPG immer in einer (pseudo-) mittelalterlichen Phantasiewelt spielen muß? Denn schließlich wissen wir spätestens seit <a href="https://de.wikipedia.org/wiki/Stephen_King">Stephen King</a>, daß das Grauen auch in den modernen (amerikanischen) Städten lauert.</p>
<p><strong>Nur zur Erinnerung und als Notiz an mich selber</strong>: Ich hatte da doch auch schon vor einiger Zeit – inspiriert durch <em>Nevin Katz</em> und seiner <a href="https://kantel.github.io/posts/2022121402_anatomie_roguelike/index.html">Anatomie eines Roguelikes</a> sowie durch <em>Justin Armstrongs</em> <a href="https://kantel.github.io/posts/20221222803_stolen_crown/">geklauter Krone</a> – den Vorsatz gefaßt, ein Mini-RPG oder -<a href="http://cognitiones.kantel-chaos-team.de/medien/retrogames/rogue.html">Roguelike</a> zu programmieren. Damals war zwar eigentlich das freie »<a href="https://o-lobster.itch.io/simple-dungeon-crawler-16x16-pixel-pack">Simple Dungeon Crawler 16x16 Pixel Art Asset Pack</a>« von <em>o_lobster</em> die Bildersammlung meiner Wahl, aber wenn ich das Projekt einfacher halten möchte und auf Animationen verzichte, drängen sich die obigen Kenney-Bildchen – auch wegen ihrer Vielfalt – geradezu auf. <em>So viel zu spielen, so wenig Zeit!</em></p>



 ]]></description>
  <category>Tiles und Sprites</category>
  <category>Spieleprogrammierung</category>
  <category>Retrogaming</category>
  <guid>https://kantel.github.io/posts/2023072602_weitere_16x16_tiles_kenney/index.html</guid>
  <pubDate>Wed, 26 Jul 2023 18:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072602_weitere_16x16_tiles_kenney/images/kenneyrpg.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Markdown, Pandoc und Visual Studio Code, die zweite</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072601_atlas_curiosa_init/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53072821866/"><img src="https://kantel.github.io/posts/2023072601_atlas_curiosa_init/images/acuriosainit-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Worknote »<a href="https://kantel.github.io/posts/2023071801_markdown_pandoc_vscode/">Markdown, Pandoc und Visual Studio Code</a>«, die ich vor etwas über einer Woche hier im <em>Schockwellenreiter</em> veröffentlicht hatte, diente der Vorbereitung eines Projekts, das mir schon seit Monaten durch meinen Kopf geht: Es heißt »Atlas Curiosa« (Arbeitstitel) und soll so etwas wie ein »Bilderbuch für Neugierige« werden.</p>
<p>Denn bei meinen Spaziergängen stieß und stoße ich immer wieder auf seltsame Artefakte, die irgendwie auffallen und für die man gerne eine Erklärung hätte. Viele davon habe ich photographiert und für einige auch eine Erklärung gefunden. Diese hatte ich dann hin und wieder im <em>Schockwellenreiter</em> veröffentlicht und seit einigen Monaten auch verstärkt in <a href="https://kantel.github.io/posts/2023072501_logseq_remainder/">meinem »zweiten Gehirn«</a> gesammelt.</p>
<p>Nun möchte ich zum einen diese Sammlung erweitern, aber sie auch gerne in eine Publikation gießen. Es soll eine Website daraus entstehen, aber ich spiele auch mit dem Gedanken, das Ergebnis als Ebook und/oder zwischen zwei Pappedeckel gepreßt zu veröffentlichen.</p>
<p>Zur Vorbereitung habe ich die Texte und Textschnipsel aus <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a> nach Markdown exportiert und die Dateien in ein Repositorium gepackt und kann sie nun via <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> und <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/pandoc.html">Pandoc</a> in publikationsfähige Formate gießen. Ob ich dafür Pandoc pur nutze oder <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> zwischenschalte, weiß ich noch nicht – Quarto hätte den Vorteil, daß es das von mir geliebte <a href="https://edwardtufte.github.io/tufte-css/">Tufte-CSS</a> (<a href="https://github.com/edwardtufte/tufte-css">GitHub Repo</a>) und <a href="https://tufte-latex.github.io/tufte-latex/">Tufte-LaTeX</a> (<a href="https://github.com/Tufte-LaTeX/tufte-latex">GitHub Repo</a>) von Hause aus <a href="https://bookdown.org/yihui/rmarkdown/tufte-handouts.html">mitbringt</a>.</p>
<p>Aber das ist alles Zukunftsmusik. Erst einmal habe ich das für die Live-Vorschau im Editor benötigte Stylesheet ein wenig aufgehübscht. Denn das Auge arbeitet schließlich mit. <em>Still digging!</em></p>



 ]]></description>
  <category>Markdown</category>
  <category>Pandoc</category>
  <category>Visual Studio Code</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2023072601_atlas_curiosa_init/index.html</guid>
  <pubDate>Wed, 26 Jul 2023 16:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072601_atlas_curiosa_init/images/acuriosainit.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Logseq: Mein funktionierendes, zweites Gehirn</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023072501_logseq_remainder/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53069721577/"><img src="https://kantel.github.io/posts/2023072501_logseq_remainder/images/logseqaktuell-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auf <a href="https://mastodon.social/@_DigitalWriter_@bildung.social/110774118038513822">Mastodon</a> empfahl ein freundlicher Mensch den <em>Schockwellenreiter</em>, wenn es um Fragen zu <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a> ginge, das Teil, das als eine wüste Kombination aus Markdown-Editor, <a href="http://cognitiones.kantel-chaos-team.de/medien/zettelkasten.html">Zettelkasten</a> und <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/outliner.html">Outliner</a> nun seit knapp zwei Jahren als mein digitales »zweites Gehirn« fungiert.</p>
<p>Ich gebe zu, ich habe schon lange nichts mehr darüber geschrieben, aber der Grund dafür ist ebenso profan wie schön: Es funktioniert einfach! Wie der aktuelle <a href="https://www.flickr.com/photos/schockwellenreiter/53069721577/">Screenshot</a> im Banner oben dokumentiert, nutze ich das Teil täglich, um meine Ideen und Inspirationen festzuhalten und zu verlinken, wie auch um die Beiträge in diesem <del>Blog</del> Kritzelheft vorzubereiten.</p>
<p>Mittlerweile besteht das Teil aus 1.600 Seiten und unzähligen Verknüpfungen und ist aus meinem täglichen Workflow nicht mehr wegzudenken. Und damit ich (und ihr) nicht mehr die Datenkraken bemühen müßt, habe ich hier zur Erinnerung noch einmal all die Beiträge gesammelt, die zu Logseq im »alten« Schockwellenreiter erschienen sind:</p>
<ul>
<li><a href="http://blog.schockwellenreiter.de/2021/12/2021120502.html">Video-Tutorial: Einführung in Logseq</a> – das war meine »Entdeckung« von Logseq.</li>
<li><a href="http://blog.schockwellenreiter.de/2022/01/2022012201.html">Das Microblog vom Tage</a> – erste vorsichtige Schritte mit Logseq.</li>
<li><a href="http://blog.schockwellenreiter.de/2022/03/2022031001.html">Auf dem Weg zur (World-) Markdown: Logseq zur Vorbereitung meiner Blogposts</a> – hier hatte ich mich endgültig für Logseq entschieden.</li>
<li><a href="http://blog.schockwellenreiter.de/2022/03/2022031701.html">Logseq und Blogposts – ein paar Fragen sind noch offen</a>.</li>
<li><a href="http://blog.schockwellenreiter.de/2022/04/2022040103.html">Gelöst: Fenced Code Blocks in Logseq</a>.</li>
<li><a href="http://blog.schockwellenreiter.de/2022/11/2022112101.html">Logseq, mein digitales, zweites Gehirn auf deutsch erklärt</a> – eine Sammlung von Video-Tutorials.</li>
<li><a href="http://blog.schockwellenreiter.de/2022/11/2022112502.html">Logseq: Pimp mein zweites Gehirn</a>.</li>
</ul>
<p>So wie in dem <a href="http://blog.schockwellenreiter.de/g2022/b202211/202211bild44.html">Screenshot</a> zum letzten Beitrag sieht mein Logseq heute noch aus. Ich benutze dafür die folgenden Plugins, die ich bis auf ein paar geänderte Farben in der Default-Einstellung belassen habe:</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://github.com/yoyurec/logseq-awesome-styler"><img src="https://kantel.github.io/posts/2023072501_logseq_remainder/images/awsomestylericon.png" class="img-fluid"></a>
</div>
<ul>
<li><a href="https://github.com/yoyurec/logseq-awesome-links">Awsome Links</a></li>
<li><a href="https://github.com/yoyurec/logseq-awesome-styler">Awsome Styler</a></li>
<li><a href="https://github.com/yoyurec/logseq-awesome-ui">Awesome UI</a></li>
<li><a href="https://github.com/xyhp915/logseq-fenced-code-plus">Fenced Code Plus</a></li>
<li><a href="https://github.com/pengx17/logseq-plugin-tabs">Tabs</a></li>
</ul>
<p>Ich habe mich bemüht, die Anzahl der Plugins auf ein Minimum zu beschränken, aber das Spielkalb in mir wollte letztendlich auch befriedigt werden. 🤓</p>
<p>Die Synchronisation der Graphen zwischen meinen beiden verschiedenen Rechnern (Chromebook und MacBook Pro) läuft noch ein wenig holprig, aber da ich mein zweites Gehirn in der Regel mit dem MacBook von meinem Schreibtisch aus füttere, hat dieses Problem für mich momentan nur eine geringe Priorität. Aber ich bin sicher, daß es auch noch lösbar ist. <em>Still digging!</em></p>



 ]]></description>
  <category>Logseq</category>
  <category>Outliner</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2023072501_logseq_remainder/index.html</guid>
  <pubDate>Tue, 25 Jul 2023 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023072501_logseq_remainder/images/logseqaktuell.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
