<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Mon, 26 Aug 2024 15:55:00 GMT</lastBuildDate>
<item>
  <title>Noch mehr Interactive Fiction: Tuesday JS v49 veröffentlicht</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082601_tuesday_js_v49/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53949593968/"><img src="https://kantel.github.io/posts/2024082601_tuesday_js_v49/images/tuesdayjs49-b.jpg" class="img-fluid"></a></p>
<p>Kaum hatte ich am Freitag verkündet, daß ich mich (unter anderem und bis auf weiteres) mal wieder verstärkt <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, der von der graphischen Oberfläche an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erinnernden JavaScript-Engine für interaktive Geschichten, Visual Novels und Artverwandtes, widmen möchte, da stellte ich fest, daß ich das jüngste Update auf die Version&nbsp;49 vor etwa drei Wochen übersehen hatte.</p>
<p>Auch wenn das Update nur wenige neue Features (unter anderem eine Verbesserung der Performance im Firefox) und ein paar Bugfixes enthält, sei dennoch darauf hingewiesen. Am einfachsten könnt Ihr die plattformübergreifende (unter anderem Windows, Linux, macOS, Android und Web) freie Engine (Apache-2.0-Lizenz) von ihren <a href="https://github.com/Kirilllive/tuesday-js/releases">Release-Seiten auf GitHub</a> herunterladen.</p>
<p>Auch wenn man sich seine Spiele oder Anwendungen im Prinzip in der Oberfläche – ohne eine Zeile programmieren zu müssen – zusammenklicken kann, erlaubt das darunterliegende <a href="https://kirilllive.github.io/tuesday-js/doc_runetime.html">JSON-Framework</a> eigentlich alles, was man mit JavaScript programmieren kann. Daher bin ich auf den im <a href="https://www.flickr.com/photos/schockwellenreiter/53949593968/">obigen Screenshot</a> angekündigten <em>JavaScript Survival Guide</em>, den ich bisher noch nirgendwo gefunden habe, sehr gespannt, zumal frau oder man neben dem <a href="https://kirilllive.github.io/tuesday-js/doc_editor.html">offiziellen Tutorial</a> bisher kaum weitere Unterstützung für die kleine Engine im Web findet.</p>
<p>Aber ich habe ja Blut geleckt. Vielleicht findet Ihr bald hier auf diesen Seiten weitere, von mir verfasste Tutorials zu Tuesday&nbsp;JS. Denn so langsam begreife ich, wie diese kleine Engine funktioniert. <em>Still digging!</em></p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024082601_tuesday_js_v49/</guid>
  <pubDate>Mon, 26 Aug 2024 15:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082601_tuesday_js_v49/images/tuesdayjs49.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Böse Schlange: Lizenzgebühren für Anaconda-Software?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082501_boeses_anaconda/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53432093827/"><img src="https://kantel.github.io/posts/2024082501_boeses_anaconda/images/anaconda-b.jpg" class="img-fluid"></a></p>
<p>Die <a href="https://www.theregister.com/2024/08/08/anaconda_puts_the_squeeze_on/">Geier von Register berichten</a>, das <a href="https://www.theregister.com/2024/08/08/anaconda_puts_the_squeeze_on/">Anaconda</a>, die auch von mir geliebte und genutzte Python-Distribution, die Daumenschrauben anzieht und kommerzielle und institutionelle Nutzer zur Kasse bittet. Und das gilt auch für Nutzer aus dem Forschungs- und Bildungsbereich. <a href="https://legal.anaconda.com/policies/en?name=terms-of-service#terms-of-service">Jede Institution mit 200 oder mehr Nutzern muß von Anaconda eine Lizenz erwerben</a>.</p>
<p>Dem können Nutzerinnen und Nutzer von <code>conda</code> oder <code>miniconda</code> nur entgehen, indem sie auf die <a href="https://docs.anaconda.com/working-with-conda/reference/default-repositories/">Default-Kanäle</a> verzichten und auf Alternativen (zum Beispiel <code>conda-forge</code>) ausweichen. Auf den <a href="https://confluence.desy.de/display/MXW/Python_258343673.html">Seiten des DESY</a> gibt es eine Anleitung, wie man die Default-Kanäle entfernt und stattdessen <code>conda-forge</code> als Kanal implementiert:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check what is currently set</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--show</span> channels</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove all channels other than conda-forge </span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--remove</span> channels defaults</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add conda-forge if not already present</span></span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--add</span> channels conda-forge</span></code></pre></div>
<p>Außerdem sollte man eine Datei <code>condarc</code> im Wurzelverzeichnis seiner Conda-Installation ablegen, die dieses minimale Setup enthält:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">channels:</span></span>
<span id="cb2-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> conda-forge</span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> nodefaults</span></code></pre></div>
<p>Auch wenn ich als Einzelnutzer (momentan noch?) nicht betroffen bin, bin ich doch über die Vorgehensweise von Anaconda verärgert und überlege, mein Conda durch einen anderen, freien Paketmanager (zum Beispiel <a href="https://mamba.readthedocs.io/en/latest/index.html">Mamba</a>, BSD-3-Lizenz) zu ersetzen. <em>(Danke an Donald&nbsp;B. für den Hinweis.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53432093827/">Steampunk Anaconda</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A python stands in front of an easel in a laboratory with strange technical devices and paints colorful pictures. colored steampunk style</em>«. Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Python</category>
  <guid>https://kantel.github.io/posts/2024082501_boeses_anaconda/</guid>
  <pubDate>Sun, 25 Aug 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082501_boeses_anaconda/images/anaconda.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Am zweiten Stern rechts abbiegen: Ren’Py 8.3.0 und Ren’Py 7.8.0 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082203_renpy_8.3.0_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53942808930/"><img src="https://kantel.github.io/posts/2024082203_renpy_8.3.0_update/images/steampunkcity-b.jpg" class="img-fluid"></a></p>
<p>Heute wurde das <a href="https://www.renpy.org/release/8.3.0">Update auf Ren’Py 8.3.0</a> (Codename: <em>Second Star to the Right</em>) und das vermutlich letzte Update der Siebener-Reihe, das <a href="https://www.renpy.org/release/7.8.0">Update auf Ren’Py 7.8.0</a> (Codename: <em>Straight on Till Morning</em>) – für alle die, die wegen einem darunterliegenden Python 2.x nicht auf Ren’Py 8 wechseln können – freigegeben. <a href="https://kantel.github.io/posts/2024030503_renpy_8_2_1/">Wie immer</a> habe ich mich darüber sehr gefreut, denn bei all meiner Affinität zu <a href="https://kantel.github.io/posts/2024072201_tuesdayjs_renjs/">Alternativen</a> wie <a href="https://kantel.github.io/posts/2024072301_monogatari/">Monogatari</a>, <a href="https://renjs.net/index.html">RenJS</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, ist Ren’Py immer noch die ausgefeilteste Engine, um interaktive Geschichten, aber auch lineare Abenteuer zu erzählen oder Präsentationen und animierte Illustrationen zu erstellen.</p>
<p>Ich habe daher nicht nur das aktuelle Ren’Py 8.3.0 auf meinem Rechner installiert, sondern auch gleich die <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">gekünstelte Intelligenzia meines Vertrauens</a> gebeten, eine Handvoll Bilder zu generieren, mit der ich eine Beispielapplikation erstellt habe (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53942808930/">Screenshot</a> im obigen Bannerbild), mit der ich die neue Ren’Py-Version testen konnte. Dafür ist dann zwar viel Zeit daufgegangen (aber hey, ich bin Rentner), aber ich hatte so viel Spaß, daß Ihr in den nächsten Tagen mit ein paar weiteren Tutorials zur Erstellung interaktiver Geschichten rechnen könnt.</p>
<p>Der derzeitige Stand meiner Tests mit den Engines für interaktive Geschichte und andere, seltsame Dinge: Wenn man den Fokus mehr auf den Text denn auf visualle Elemente legt, ist <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> der unangefochtene Spitzenreiter. Die Bandbreite hier reicht von extrem einfach bis hoch komplex und man kann die Software auch als Entwurfswerkzeug für narrative Spiele in anderen Engines (zum Beispiel <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a>, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/godot.html">Godot</a> oder Ren’Py) verwenden. Ren’Py wiederum ist wegen des Python- und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>-Unterbaus die eierlegende Wollmilchsau für alle narrativen Geschichten und Spiele mit vielen visuellen Elementen.</p>
<p>Kommt es hingegen zum Browser als Zielplattform und/oder darum, kleine, interaktive Illustrationen und Satiren zu veröffentlichen, dann hat Tuesday&nbsp;JS die Nase vorn: Hier ist das Spiel sofort und ohne Ladezeit da (lediglich die Bilder kommen manchmal leicht verspätet, das hat Tuesday&nbsp;JS mit Twine gemein). Ren’Py dagegen muß für seine Webversion eine sehr große Initialisierungspause einlegen, während sie bei Monogatari und RenJS zwar ebenfalls vorhanden, aber bedeutend kürzer ist.</p>
<p>Das bedeutet, ich werde (bis auf Widerruf, ich bin ja bekanntlich sehr sprunghaft) mich erst einmal auf Twine, Ren’Py und Tuesday&nbsp;JS konzentrieren, ohne jedoch das Umfeld aus den Augen zu verlieren. Dazu ist das Thema einfach viel zu spannend. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024082203_renpy_8.3.0_update/</guid>
  <pubDate>Fri, 23 Aug 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082203_renpy_8.3.0_update/images/steampunkcity.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Version 24.8. von LibreOffice</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082203_libre_office_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53618765211/"><img src="https://kantel.github.io/posts/2024082203_libre_office_update/images/fullmoonsmiling-b.jpg" class="img-fluid"></a></p>
<p>Es muß nicht immer Microsoft sein: In der <a href="https://www.libreoffice.org/download/download-libreoffice/">neuen Version 24.8.</a> des quelloffenen (MPL-2.0) Officepaket <a href="https://de.wikipedia.org/wiki/LibreOffice">LibreOffice</a> wurden zahlreiche neue Funktionen bereitgestellt. Hinzu kommt nunmehr die Unterstützung für PCs mit einer ARM CPU. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53618765211/">Full Moon Smiling</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>a smiling full moon with a human face at a nightly sky with stars and a few clouds. background pic suitable for a computer game. colored french comic style</em>«. Negative Prompt: »<em>people, kids, human heads, second moon</em>«. Modell: Stable Diffusion XL, Style: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>



 ]]></description>
  <category>LibreOffice</category>
  <category>Produktivität</category>
  <guid>https://kantel.github.io/posts/2024082203_libre_office_update/</guid>
  <pubDate>Thu, 22 Aug 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082203_libre_office_update/images/fullmoonsmiling.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082202_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53892250337/"><img src="https://kantel.github.io/posts/2024082202_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Mit einem Tag Verspätung veröffentlichte Google heute das Update der Version 128 (128.0.6613.84) seines Browsers Chrome und schloß damit <a href="https://chromereleases.googleblog.com/2024/08/stable-channel-update-for-desktop_21.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53892250337/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus, colored french comic style</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>«. Modell: Stable Diffusion XL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024082202_chrome_update/</guid>
  <pubDate>Thu, 22 Aug 2024 17:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082202_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Jetzt habe ich wieder die Haare schön …</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082201_haareschoen/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53939903366/"><img src="https://kantel.github.io/posts/2024082201_haareschoen/images/haareschoen-b.jpg" class="img-fluid"></a></p>
<p>Endlich habe ich wieder die Haare schön, dank <a href="https://www.facebook.com/coiffeuremarinaundteam/?locale=de_DE">Coiffeure Marina &amp; Team</a>. Und auch mein Lieblingskaffeedealer (bei dem das Photo entstand) meinte, daß mein Kopf wieder sehr gut aussähe.</p>
<p><strong>Watt mutt, datt mutt</strong> – da das Gesichtsbuch und ich in diesem Leben keine Freunde mehr werden, werde ich auch solche, eigentlich belanglosen Postings (und auch Selfies) hier in diesem <del>Blog</del> digitalen Kritzelheft veröffentlichen. Seid stark, da müßt Ihr durch!</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Modernes Leben</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2024082201_haareschoen/</guid>
  <pubDate>Thu, 22 Aug 2024 13:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082201_haareschoen/images/haareschoen.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Entwerfen mit Anytype: Meine digitale Rumpelkammer revisited</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082002_anytype2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53590034640/"><img src="https://kantel.github.io/posts/2024082002_anytype2/images/anytype2-b.jpg" class="img-fluid"></a></p>
<p>Schon meine Vorstellung von <a href="https://www.notion.so/de-de">Notion</a> im <a href="https://kantel.github.io/posts/2024021301_notion/">Februar dieses Jahres</a> erfolgte aus dem Grund, daß in meinem Workflow zwischen Zettelkasten und Publikationswerkzeug eine Lücke für ein Entwurfswerkzeug klafft. Da Notion zwar (für Privatanwender) kostenlos zu nutzen, aber dennoch proprietär ist, kam das Teil für mich als <em>Open Source Evangelist</em> dennoch nicht in Frage. Daher war ich recht froh, als mir <a href="https://kantel.github.io/posts/2024081201_anytype/">vor wenigen Tagen</a> mit <a href="https://anytype.io/">Anytype</a> eine freie Notion-Alternative unterkam.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/vfeUb7w8Hr8?si=-KHb-oiIOeqppTNe" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Und diese rückte wieder in meinen Fokus, als ich mir <em>Daniel Shiffmans</em> obigen Stream »<a href="https://www.youtube.com/watch?v=vfeUb7w8Hr8">Let’s Build a Nature of Code 404 Page!</a>« anschaute. Es ist – wie schon vom Titel her ersichtlich – in der Hauptsache ein Werbevideo für die Anfang September endlich erscheinende Neuauflage seines Buches »<a href="https://natureofcode.com/">The Nature of Code</a>«. Auch wenn man sie online für umme lesen kann, hatte ich die »Totes-Holz-Ausgabe« schon vor Monaten vorbestellt und warte sehnsüchtig und ungeduldig auf die Lieferung, denn Blättern in einem »richtigen« Buch macht (mir) mehr Spaß als sich am Bildschirm die Augen zu verderben.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kantel.github.io/posts/2024082002_anytype2/images/data-flow.jpg" class="img-fluid figure-img"></p>
<figcaption>Daniel Shiffmans Workflow</figcaption>
</figure>
</div>
<p>Wie dem auch sei, in diesem Video zeigte <em>Shiffman</em> auch eine Skizze, wie sein Workflow vom Schreiben und Programmieren bis zur Publikation (Web und Print) aussah. Zwar war oben links in der Ecke wieder das böse (weil proprietäre) Notion zu sehen, aber im großen und ganzen deckte sich das weitestgehend mit meiner Vorstellung von einem Publikationsworflow:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kantel.github.io/posts/2024082002_anytype2/images/data-flow2.png" class="img-fluid figure-img"></p>
<figcaption>Mein Workflow</figcaption>
</figure>
</div>
<p>In meinem Workflow habe ich Notion erst einmal durch Anytype ersetzt. Das ist aber momentan noch ein Test, eventuell wird da oben links stattdessen <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/zettlr.html">Zettlr</a> stehen, denn mittlerweile schreibe ich ja wieder an einem moderneren Rechner, <a href="https://kantel.github.io/posts/2024050501_zettlr_catalina/">mit dem auch das aktuelle Zettlr zusammenarbeitet</a>.</p>
<p>Und da ich ja nicht nur mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> entwickle, ist auch die Entscheidung für die Online-Editoren keine einfache. Ich hoffe hier für Python zum Beispiel sehr stark auf die Weiterentwicklung von <a href="https://kantel.github.io/posts/2024072701_py5_pyscript/">PyScript</a>.</p>
<p>Auf der Ausgabeseite sieht es dagegen auch bei mir einfacher aus: Hier ist der Dreh- und Angelpunkt <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/pandoc.html">Pandoc</a>, denn auch <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> setzt auf Pandoc auf. Der einzige Stolperstein könnte <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/mkdocs.html">MkDocs</a> sein, das ich vor wenigen Wochen ja erst <a href="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/">frisch wiederentdeckt</a> hatte. Ich liebe es wegen seiner Einfachheit, mit der man damit Tutorial- und Dokumentationswebseiten hochziehen kann, jedoch besitzt das verwendete Python-Markdown leichte Differenzen mit dem von Pandoc per Default verwendeten Markdown. Hier hoffe ich jedoch, daß Pandoc diese Unterschiede selber intern konvertieren kann.</p>
<p>Wie Ihr lesen könnt, habe ich mir wieder ein wenig (Test-) Arbeit aufgehalst. Ich habe also zu tun. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53590034640/">An Old Man in an Office</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>An old man, white hair, clean-shaven, without beard+, blue eyes, glasses, sits at a desk in front of huge monitors with lots of colorful diagrams, there are other open books on the desk, and there is a large mug of steaming coffee next to them, and a computer keyboard in front of the monitor, on the wall there are shelves with files and books, the spring sun shines through a large window, colored french comic style</em>«. Negative Prompt: »<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, tie</em>«. Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Anytype</category>
  <category>Notion</category>
  <category>Zettelkasten</category>
  <category>Zettlr</category>
  <category>Pandoc</category>
  <category>MkDocs</category>
  <category>Quarto</category>
  <guid>https://kantel.github.io/posts/2024082002_anytype2/</guid>
  <pubDate>Tue, 20 Aug 2024 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082002_anytype2/images/anytype2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Security Alert: AMD Sicherheitslücke Sinkclose</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024082001_sinkclose/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53851434577/"><img src="https://kantel.github.io/posts/2024082001_sinkclose/images/horrorclownson-b.jpg" class="img-fluid"></a></p>
<p><strong>Aus einer Security-Mailing-Liste</strong>: Es wurde eine sehr schwerwiegende, wenn auch nur schwierig auszunutzende <a href="https://www.heise.de/news/CPU-Sicherheitsluecke-in-AMD-Prozessoren-ermoeglicht-Malware-Infektionen-9831278.html">Sicherheitslücke</a> (setzt Kernel-Zugriff voraus) in AMD-CPUs gefunden. Die Lücke betrifft praktisch alle CPUs der <a href="https://www.zdnet.com/article/sinkclose-amd-cpu-vulnerability-explained-how-dangerous-is-it-really/">letzten 18 Jahre</a>.</p>
<p>AMD hat bereits Updates für seinen Mikrocode veröffentlicht, die auch bereits in einigen Linux-Distros (zum Beispiel <a href="https://security-tracker.debian.org/tracker/CVE-2023-31315">Debian</a>, <a href="https://ubuntu.com/security/CVE-2023-31315">Ubuntu</a>, <a href="https://access.redhat.com/security/cve/cve-2023-31315">RedHat</a>) verfügbar sind.</p>
<p>Wer also insbesondere Server mit AMD CPUs betreibt, der sollte alsbald sein Betriebssystem updaten oder, wenn noch nicht geschehen, die AMD Mikrocode Pakete installieren, zum Beispiel mit <code>apt install amd64-microcode</code>.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53851434577/">Der Clown und sein Sohn</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Horror clown in a nighttime suburban street</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024082001_sinkclose/</guid>
  <pubDate>Tue, 20 Aug 2024 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024082001_sinkclose/images/horrorclownson.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retrogaming und KI: Pygame-CE statt Pygame?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081502_pygame_ce/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53922387767/"><img src="https://kantel.github.io/posts/2024081502_pygame_ce/images/pygamece-b.jpg" class="img-fluid"></a></p>
<p>Von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> gibt es seit etwa einem Jahr eine Fork, die sich <a href="https://pyga.me/">Pygame-CE</a> <em>(Pygame Community Edition)</em> nennt. Grund für diese Abspaltung war wohl, daß sich ein nennenswerter Teil der Kernentwickler von der »Pygame-Führung« <a href="https://www.deusinmachina.net/p/what-is-happening-in-the-pygame-community">nicht mehr ausreichend ernst genommen fühlte</a>. Normalerweise sitze ich solche Abspaltungen ja aus und hoffe auf Versöhnung oder einen eindeutigen Sieger.</p>
<p>In diesem Fall jedoch gibt es ein Problem, nämlich meine Entscheidung, mein leider lange eingeschlafenes Projekt »<strong><a href="https://kantel.github.io/posts/2023120301_retrogaming_ki/">Retrogaming und Künstliche Intelligenz</a></strong>« nicht – wie ursprünglich vorgesehen – in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygamezero.html">Pygame Zero</a>, sondern direkt in Pygame zu realisieren. Dafür gab es verschiedene Gründe – so hat Pygame Zero seit Februar 2018 <a href="https://pygame-zero.readthedocs.io/en/stable/changelog.html">kein Update mehr erfahren</a> und es ist leider nicht wirklich klar, ob es überhaupt noch lebt. Der Hauptgrund war aber, daß ich mein Projekt mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> auch für das Web fit machen wollte. Und da las ich doch im <a href="https://github.com/pygame-web/pygbag/blob/main/README.md">GitHub-Readme von Pygbag</a>:</p>
<blockquote class="blockquote">
<p>pygbag only provides support for pygame-ce ( pygame community edition )</p>
</blockquote>
<p>Boing, das saß! Also war Aussitzen keine Alternative mehr, sondern ich mußte mich mit Pygame-CE anfreunden, auch wenn es »nur« 80 aktive Entwickler (statt der 313 von Pygame) besitzt. Also habe ich damit einen Test gefahren und erst einmal ein objektorientiertes <em>Boilerplate</em> geschrieben, das auch mit Pygbag laufen sollte (also die Hauptschleife des Programms <strong>nicht</strong> in eine Klasse gekapselt ist):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pygame</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os, sys</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier wird der Pfad zum Verzeichnis der Assets gesetzt</span></span>
<span id="cb1-5">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Konstanten deklarieren</span></span>
<span id="cb1-8">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb1-9">TITLE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🐍 Pygame-CE Boilerplate (OOP) 🐍"</span></span>
<span id="cb1-10">FPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb1-13">BG_COLOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span>)    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mittelblau</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Klassen</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class GameWorld</span></span>
<span id="cb1-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GameWorld:</span>
<span id="cb1-19">    </span>
<span id="cb1-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pygame und das Fenster initialisieren</span></span>
<span id="cb1-22">        pygame.init()</span>
<span id="cb1-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ein übler Hack, um die Position des Fensters</span></span>
<span id="cb1-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># auf meinen zweiten Bildschirm zu setzen</span></span>
<span id="cb1-25">        os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SDL_VIDEO_WINDOW_POS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1940</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>)</span>
<span id="cb1-26">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.display.set_mode((WIDTH, HEIGHT))</span>
<span id="cb1-27">        pygame.display.set_caption(TITLE)</span>
<span id="cb1-28">        </span>
<span id="cb1-29">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.clock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.time.Clock()</span>
<span id="cb1-30">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-31">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-32">        </span>
<span id="cb1-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load Assets</span></span>
<span id="cb1-34">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.image.load(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pygame_ce_tiny.png"</span>)).convert_alpha()</span>
<span id="cb1-35">        </span>
<span id="cb1-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neustart oder Status zurücksetzen</span></span>
<span id="cb1-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hier werden alle Elemente der GameWorld initialisiert</span></span>
<span id="cb1-39">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pygame.sprite.Group()</span>
<span id="cb1-40">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="cb1-41">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player)</span>
<span id="cb1-42">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-43">    </span>
<span id="cb1-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> events(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Poll for events</span></span>
<span id="cb1-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> event <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pygame.event.get():</span>
<span id="cb1-47">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ((event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.QUIT) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span></span>
<span id="cb1-48">                (event.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.KEYDOWN <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> event.key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> pygame.K_ESCAPE)):</span>
<span id="cb1-49">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing:</span>
<span id="cb1-50">                    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.playing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-51">                <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.keep_going <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-52">    </span>
<span id="cb1-53">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-54">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.update()</span>
<span id="cb1-55">    </span>
<span id="cb1-56">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-57">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen.fill(BG_COLOR)</span>
<span id="cb1-58">        </span>
<span id="cb1-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Game drawings go here</span></span>
<span id="cb1-60">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_sprites.draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.screen)</span>
<span id="cb1-61">        </span>
<span id="cb1-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Alle Änderungen auf den Bildschirm</span></span>
<span id="cb1-63">        pygame.display.flip()</span>
<span id="cb1-64">        </span>
<span id="cb1-65">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> start_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-66">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-67">    </span>
<span id="cb1-68">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> end_screen(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb1-70"> </span>
<span id="cb1-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Class Player</span></span>
<span id="cb1-73"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player(pygame.sprite.Sprite):</span>
<span id="cb1-74">     </span>
<span id="cb1-75">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _world):</span>
<span id="cb1-76">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb1-77">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _world</span>
<span id="cb1-78">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.game_world.player_im</span>
<span id="cb1-79">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.image.get_rect()</span>
<span id="cb1-80">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span></span>
<span id="cb1-81">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-82">         </span>
<span id="cb1-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-84">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-85">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("update")</span></span>
<span id="cb1-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> WIDTH:</span>
<span id="cb1-87">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.rect.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">214</span>           </span>
<span id="cb1-88"></span>
<span id="cb1-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ---------------------------------------------------------------------- #</span></span>
<span id="cb1-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ## Hauptprogramm</span></span>
<span id="cb1-91">world <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameWorld()</span>
<span id="cb1-92">world.start_screen()</span>
<span id="cb1-93">world.reset()</span>
<span id="cb1-94"></span>
<span id="cb1-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hauptschleife</span></span>
<span id="cb1-96"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> world.keep_going:</span>
<span id="cb1-97">    world.events()</span>
<span id="cb1-98">    world.update()</span>
<span id="cb1-99">    world.draw()</span>
<span id="cb1-100">    </span>
<span id="cb1-101">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Framerate festsetzen</span></span>
<span id="cb1-102">    world.clock.tick(FPS)</span>
<span id="cb1-103">    </span>
<span id="cb1-104">pygame.quit()</span>
<span id="cb1-105">sys.exit(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>Dann habe ich Pygame-CE (<a href="https://kantel.github.io/posts/2024063001_spyder_pygame/">wie zuvor bereits Pygame</a>) eine eigene virtuelle Umgebung spendiert. Dabei zeigte sich, daß zwar Pygame wie auch Pygame-CE gut in ihrer virtuellen Umgebung mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zusammenspielen, es aber mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> ein Problem gibt. Werden die Skripte aus der Spynne heraus aufgerufen, lassen sie sich nur beenden, wenn man den Python-Interpreter killt.</p>
<p>Daher habe ich – sozusagen als zweite Alternative – meiner <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>-Umgebung ebenfalls ein Pygame-CE spendiert, das problemlos lief (vergleiche <a href="https://www.flickr.com/photos/schockwellenreiter/53922387767/">Screenshot</a> im Bannerbild oben).</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/pYq9edSUaOw?si=sqaCgkRr5cFXHr8_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Jetzt werde ich meiner im März 2022 begonnenen, in Pygame Zero realisierten »Blaupause« für ein Mazegame (<a href="http://blog.schockwellenreiter.de/2022/04/2022041701.html">Stage 1</a>, <a href="http://blog.schockwellenreiter.de/2022/04/2022041701.html">Stage 2</a>, <a href="http://blog.schockwellenreiter.de/2022/04/2022042101.html">Stage 2a</a> und <a href="http://blog.schockwellenreiter.de/2022/04/2022042501.html">Stage 3</a>, <a href="http://blog.schockwellenreiter.de/2022/08/2022081601.html">Nachschlag</a> vom August 2022) eine neue, modifizierte Version spendieren müssen, die mit Pygame-CE läuft. Dafür habe ich erst einmal alle Pygame-CE-Ressourcen zusammengesucht:</p>
<ul>
<li><a href="https://pyga.me/">Pygame-CE Home</a></li>
<li><a href="https://pyga.me/docs/">Pygame-CE Dokumentation</a></li>
<li><a href="https://pyga.me/docs/#tutorials">Pygame-CE Tutorials</a></li>
<li><a href="https://github.com/pygame-community/pygame-ce">Pygame-CE @ GitHub</a></li>
</ul>
<p>Noch sind – für den normalen Entwickler – die <a href="https://gist.github.com/davidpendergast/77e49f8028ce611ac478c38f77f9f72f">Unterschiede zwischen Pygame und Pygame-CE</a> kaum von Belang. Auch wenn ich hoffe, daß dies so bleibt, habe ich dennoch wieder zu tun und ich freue mich darauf. <em>Still digging!</em></p>



 ]]></description>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Python</category>
  <category>Pygame</category>
  <category>Thonny</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024081502_pygame_ce/</guid>
  <pubDate>Thu, 15 Aug 2024 19:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081502_pygame_ce/images/pygamece.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Microsoft veröffentlicht für Office for Mac</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081501_office_mac_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53892080134/"><img src="https://kantel.github.io/posts/2024081501_office_mac_update/images/madhattresswithbooks-b.jpg" class="img-fluid"></a></p>
<p>Microsoft liefert mit dem Update auf 16.88 für Office 365, 2021 und 2019 for Mac natürlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhält man die Korrekturen am einfachsten über Microsofts AutoUpdate – in einem beliebigen Office-Programm über Menü: <code>Hilfe &gt; Auf Updates überprüfen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-für-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">Microsoft Office unterstützt stets nur die drei Hauptversion von macOS</a>. Momentan sind dies Sonoma, Monterey und Ventura. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53892080134/">Mad Hattress with Apples and Books</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>the mad hatter gives a sexy naked++ woman with big boops and a nice butt a apple in the summer magic forest. colored french comic style</em>«, Negative Prompt: »<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>«. Modell: SDXL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024081501_office_mac_update/</guid>
  <pubDate>Thu, 15 Aug 2024 18:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081501_office_mac_update/images/madhattresswithbooks.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate für Adobe Reader und Acrobat</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081402_adobe_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/"><img src="https://kantel.github.io/posts/2024081402_adobe_update/images/sylvia-b.jpg" class="img-fluid"></a></p>
<p>Adobe liefert mit dem Update APSB24-57 wieder <a href="https://helpx.adobe.com/security/products/acrobat/apsb24-57.html">Korrekturen für Sicherheitslücken</a> im Reader und in Acrobat (unter Windows und Mac).</p>
<p>Das Update gelingt am einfachsten über den internen Update-Mechanismus. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p>Bild: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/">Bibliothekarin</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A young woman with red lips, blue eyes, slim, brown, curly hair and glasses in a colorful checked shirt and vest, short blue skirt and high heels. full body, sitting in an office in front of a computer. In the background are shelves with files and books. The sun shines through a large window. colored french comic style</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, gloves, backpack, shoulder bag, bag, (((shoulder bag)))</em>«. Modell: SDXL, Style: Illustrated Anime + Creepy Nordic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024081402_adobe_update/</guid>
  <pubDate>Wed, 14 Aug 2024 15:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081402_adobe_update/images/sylvia.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Online-Petition fordert den Erhalt der Konzertreihe »Sommer im Park«</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081401_sommer_im_park/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53840708997/"><img src="https://kantel.github.io/posts/2024081401_sommer_im_park/images/sommerimpark-b.jpg" class="img-fluid"></a></p>
<p>Seit über 35 Jahren gibt es im Neuköllner <a href="https://de.wikipedia.org/wiki/K%C3%B6rnerpark#">Körnerpark</a> die Konzertreihe »Sommer im Park«, immer umsonst und draußen. Das Programm war stets außergewöhnlich, aber nie zu elitär und abgehoben. Es war eben für jede und jedem im Kiez gedacht: Eltern mit Kindern, Althippies wie auch Hipster, Rentner und Rentnerinnen mit und ohne Rollator. Auch Gabi und ich waren regelmäßige Gäste.</p>
<p>Nun ist – wie so vieles in Berlin (und speziell in Neukölln) – auch diese Konzertreihe im Kiez durch die aktionistische und unverantwortliche Rotstiftpolitik des Berliner Senats bedroht. Fanden diesen Sommer schon nur noch sechs statt der gewohnten zwölf Konzerte statt, ist zu befürchten, <a href="https://www.berliner-woche.de/neukoelln/c-kultur/online-petition-fordert-den-erhalt-der-konzertreihe-sommer-im-park_a422683">daß die harten Sparauflagen des Senats das Aus für diese beliebte Veranstaltungsreihe bedeuten</a>.</p>
<p>Daher haben einige langjährige Besucher eine <a href="https://www.change.org/p/sommer-im-park-der-konzertreihe-im-k%C3%B6rnerpark-droht-das-aus">Petition auf Change.org gestartet</a>. Sie richtet sich an <em>Dorothee Bienert</em>, Leitung Fachbereich Kultur Bezirksamt Neukölln und an <em><a href="https://de.wikipedia.org/wiki/Joe_Chialo">Joe Chialo</a></em> (CDU), Berliner Senator für Kultur und Gesellschaftlichen Zusammenhalt. Sie fordert, daß die Konzertreihe wie in den vergangenen Jahren mit (mindestens) zwölf jährlichen Konzerten auch in Zukunft erhalten bleibt.</p>
<p>Auch wenn ich – wie regelmäßige Leserinnen und Leser wissen – gewisse Vorbehalte gegenüber Change.org besitze (die Organisation schrappt immer sehr hart am Spam vorbei), habe ich diese Petition unterzeichnet und bitte Euch, dies ebenfalls zu tun. Denn der Sommer im Park muß auch in den nächsten Jahren stattfinden.</p>
<hr>
<p><strong>Photo</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53840708997/">Salsa im Körnerpark</a></em>, aufgenommen am 7. Juli 2024, (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024 von <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>Kiezfest</category>
  <category>Kultur</category>
  <category>Musik</category>
  <category>Neukölln</category>
  <category>Parks und Gärten</category>
  <category>Politik</category>
  <guid>https://kantel.github.io/posts/2024081401_sommer_im_park/</guid>
  <pubDate>Wed, 14 Aug 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081401_sommer_im_park/images/sommerimpark.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Da, Da, Da: So geht Wahlkampf in Thüringen 🥸</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53920920104/"><img src="https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/images/dadadada01-b.jpg" class="img-fluid"></a></p>
<p>Der Thüringer Ministerpräsident <em><a href="https://de.wikipedia.org/wiki/Bodo_Ramelow">Bodo Ramelow</a></em> (Die Linke) ist doch immer wieder für Überraschungen gut. Nicht nur, daß er vor etwa fünfzehn Jahren auch einmal <a href="http://blog.schockwellenreiter.de/2014/12/20141205.html#p04">Kommentator in diesem <del>Blog</del> Kritzelheft</a> war (<a href="https://www.ats20.de/blog/index.php?/archives/1005-Urheberrecht-und-Autorenverdienst..html">Originalbeitrag</a> – da WordPress – leider im Nirwana des Netzes entschwunden), nein, heute überraschte er mich mit einem Video, das dieses Wochenende auf YouTube hochgeladen wurde:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/EAzZ7ObcaNA?si=LxgNb-P37am-KFAK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Dort grummelt er im phlegmatischen Sprechgesang zusammen mit der Erfurter Glitzerpoppunkband <strong>Donata</strong> den Trio-Kulthit »Da Da Da« aus dem Jahre 1982, unterlegt von Schlagzeilen wie »Die Brandmauer ist eingestürzt« (Ramelow grummelt dazu: »Geht es immer nur bergab?«) oder »Ramelow ist gefährlicher als die AfD!« (Ramelows Kommentar: »Geht nur das, was du verstehst? Aha«). Und die Presse (vom <a href="https://www.tagesspiegel.de/politik/ich-lieb-dich-nicht-du-liebst-mich-nicht-bodo-ramelow-covert-trio-klassiker-da-da-da-fur-thuringen-wahlkampf-12180746.html">Tages</a>-<a href="https://www.spiegel.de/politik/deutschland/thueringen-bodo-ramelow-veroeffentlicht-wahlkampfsong-mit-donata-a-231d174c-d4d7-43b9-b491-d40a5dc2284a">Spiegel</a> über das <a href="https://www.zdf.de/nachrichten/politik/deutschland/werbespots-politiker-landtagswahl-thueringen-100.html">ZDF</a> bis hin zum <a href="https://www.nd-aktuell.de/artikel/1184449.linke-in-thueringen-bodo-ramelow-mit-da-da-da-gegen-den-ernst-der-lage.html">Neuen Deutschland</a>) überschlägt sich. Sie ist sich einig, daß es <strong>kein Deep Fake</strong> ist. Nur ob Ramelows »Gesangs«-Partnerin die Linke-Landtagsabgeordneten <em>Donata Vogtschmidt</em> (Neues Deutschland) oder eine <em>Donata Kramarz</em> aus Erfurt (Tagesspiegel) sei, darüber ist sie sich noch uneinig.</p>
<p><b style="color:red">[Update]</b>: Ein wenig googeln (aber das können Qualitätsjournalistinnen und -journalisten wohl heute immer noch nicht) brachte mir die Erkenntnis, daß die Sängerin auf keinen Fall <em><a href="https://adohraufdieohren.blog/2024/04/18/interview-mit-donata-zu-ihrem-zweiten-soloalbum/">Donata Kramarz</a></em> sein kann. Denn die ist nicht aus Erfurt, sondern aus Amsterdam und lebt in Berlin, und paßt auch optisch nicht zu der Person in dem Video. Dagegen ist <em><a href="https://www.donatavogtschmidt.de/">Donata Vogtschmidt</a></em> als Gesangspartnerin schon wahrscheinlicher. Blond ist sie und im <a href="https://www.facebook.com/donata.band">Gesichtsbuch gibt es auch ein paar Photos</a>, die meine Vermutung erhärten.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53920920359/"><img src="https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/images/dadadada02.jpg" class="img-fluid"></a></p>
<p>Wie dem auch sei, <em>Ramelow</em> ist in dem bisher doch eher von gepflegter Langeweile geprägten Wahlkampt ein Coup gelungen, der ihm die dringend benötigte Aufmerksamkeit beschert. Noch cooler wäre es natürlich, wenn er sich selber mit einer Ukulele begleitet hätte (ich habe eine <a href="https://beta.dreamstudio.ai/generate">KI meines Vertrauens</a> mal gebeten, dies mit einem Bild zu illustrieren).</p>
<p>Und lese nur ich etwas in den Clip hinein? Ich interpretiere jedenfalls einige Zeilen als kaum verstecktes Koalitionsangebot an das <a href="https://de.wikipedia.org/wiki/B%C3%BCndnis_Sahra_Wagenknecht">Bündnis Sahra Wagenknecht</a>.</p>
<p>Aber egal, Großenkneten liegt ab sofort in Thüringen – denn Antifaschismus ist Landarbeit. Und macht mehr Spaß mit <strong>Donata</strong> und Sekt.</p>
<p>Und ich habe noch ein besonderes Verhältnis zu dem Clip: Gabi hatte Anfang der 1980er Jahre in Bremerhaven ihre Ausbildung zur Krankenschwester absolviert. Während dieser Zeit wurde sie auch zum absoluten <a href="https://de.wikipedia.org/wiki/Trio_(Band)">Trio</a>-Fan. Diese Liebe zu der Band hatte sie auch nach Berlin mitgenommen. Und so ist für mich Ramelows Cover auch eine <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Reminiszens an die bessere Hälfte des Kantel-Chaos-Teams</a>.</p>
<hr>
<p><strong>Bilder</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53920920104/">Da, Da, Da</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>old politican Bodo Ramelow with sunglasses sings and plays Rock and Roll with a blond female singer. colored french comic style</em>«. Negative Prompt: »<em>beard</em>«. Modell: Stable Diffusion XL, Style:Comic Book.</p>



 ]]></description>
  <category>Musik</category>
  <category>Modernes Leben</category>
  <category>Politik</category>
  <guid>https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/</guid>
  <pubDate>Tue, 13 Aug 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081301_donata_bodo_ramelow/images/dadadada01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>All about Anytype – meine neue, digitale Rumpelkammer?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081201_anytype/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53919241040/"><img src="https://kantel.github.io/posts/2024081201_anytype/images/anytype-b.jpg" class="img-fluid"></a></p>
<p>Im <a href="https://kantel.github.io/posts/2024021301_notion/">Februar dieses Jahres</a> hatte ich testweise die Notiz- und Produktivitätssoftware <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/notion.html">Notion</a> auf meinem Rechner installiert. Sie war nicht nur deswegen interessant, weil sie die Lücke zwischen Zettelkasten und Publikationswerkzeug ausfüllte, sondern auch, weil sie optisch und ästhetisch einen guten Eindruck machte – das Auge will bei der Arbeit ja auch seinen Spaß haben.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/P8accXNcwjs?si=GFWlCCySQEJQaSXB" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Leider ist Notion zwar für den Privatanwender kostenlos zu nutzen, ab proprietär. Daher kam sie für mich für eine produktive Nutzung nicht in Frage, was ich sehr bedauerte. Nun spülte aber kürzlich das Video »<a href="https://www.youtube.com/watch?v=P8accXNcwjs">Open Source alternatives to the Most popular productivity apps</a>!« in meine Timeline und darin wurde <a href="https://anytype.io/">Anytype</a> nicht nur als Alternative für Notion, sondern auch noch als Alternative zu <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/obsidian.html">Obsidian</a> empfohlen. Da mich die <a href="https://kantel.github.io/posts/2024050402_logseq_oder_zettlr/">jüngsten Nachrichten</a> über die Hinwendung von <a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a> von flachen Markdown-Dateien zu einer Datenbank-basierten Version beunruhigen, wurde ich gleich doppelt aufmerksam.</p>
<p><a href="https://www.visualmakers.de/tool/anytype">Anytype.io will eine innovative und vielseitige Anwendung sein</a>, die als persönliches Daten- und Wissensmanagement-Tool dient. Sie kombiniert Elemente eines Notizbuches, eines Organizers und einer Datenbank, um Nutzern eine Plattform für die Organisation von Informationen, Ideen und Projekten zu bieten. Das Besondere an Anytype ist, daß es auf einem dezentralen Netzwerk basiert, wodurch die Privatsphäre und Sicherheit der Benutzerdaten gestärkt wird. Die Software ist Open Source <em>(Any Source Available License 1.0)</em> und die Firma sitzt in der Schweiz.</p>
<p>Ich habe folgende Links zur Software zusammengeklaubt</p>
<ul>
<li><a href="https://anytype.io/">Anytype Home</a></li>
<li><a href="https://doc.anytype.io/anytype-docs">Anytype Docs</a></li>
<li><a href="https://github.com/anyproto/anytype-ts">Anytype (Desktop) @ GitHub</a></li>
<li><a href="https://blog.anytype.io/">Anytype Blog</a></li>
</ul>
<p>und die Desktop-Version auf meinem Mac installiert und heute den ganzen Tag damit herumgespielt. Mein erster Eindruck ist, daß Anytype auch von der Ästhetik her eine vollwertige Notion-Alternative ist, die zusätzlich eine Ende-zu-Ende-Verschlüsselung bietet, so daß auch bei der Synchronisation niemand mitlesen kann. Und da – wie oben schon einmal erwähnt – die Hersteller in der Schweiz sitzen, glaube ich ihnen auch, <a href="https://gnulinux.ch/anytype-die-anwendung-fuer-alles">daß ihre Server keine Hintertürchen für die NSA oder andere (nicht nur) amerikanische Geheimdienste eingebaut haben</a>.</p>
<p>Eine (freie!) Notion-Alternative ist also Anytype auf jeden Fall, ob sie aber als Logseq- oder Obsidian-Alternative für mein zweites Gehirn taugt, müssen erst noch weitere Tests zeigen. Zur Vorbereitung darauf habe ich zwei Playlists gefunden:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/Cuyh2IJDnmI?si=eev6h2r81YHn6v9_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<ol type="1">
<li>»<a href="https://www.youtube.com/playlist?list=PLfibVUP3crbVx5sssO0nzaG-rIIWBXeJH">Anytype Videos</a>« mit neunzehn Filmchen zwischen etwa fünf und fünfundzwanzig Minuten.</li>
<li>»<a href="https://www.youtube.com/playlist?list=PLP4EJ6PbE99hnThgYnf-8M15l9oY625EW">Anytype Tutorials</a>«, bestehend aus sechs Videos mit einer Spieldauer zwischen fünf Minuten und einer Viertelstunde.</li>
</ol>
<p>Anytype kann seine Inhalte nach Markdown exportieren, ist also weder ein Datensilo noch eine Sackgasse. Und die Synchonisation mit meinem Android-Smartphone funzte ebenfalls – nachdem ich bei der Eingabe meiner Schlüsselphrase erst noch Autokorrektur überlisten mußte. Ich habe also mal wieder zu tun. <em>Still digging!</em></p>



 ]]></description>
  <category>Anytype</category>
  <category>Logseq</category>
  <category>Notion</category>
  <category>Zettelkasten</category>
  <guid>https://kantel.github.io/posts/2024081201_anytype/</guid>
  <pubDate>Mon, 12 Aug 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081201_anytype/images/anytype.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Retrogaming mit Python: Pyxel-Tutorial Stage 2</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081002_pyxel_tut_2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53912110447/"><img src="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2-b.jpg" class="img-fluid"></a></p>
<p>Mein <a href="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/">Ausflug vor drei Tagen</a> zu der Retrokonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> hatte meinen Ehrgeiz angestachelt. Ich wollte herausfinden, ob ich die Integration von Maps (Karten) mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> und Python nicht ähnlich einfach wie mit TIC-80 und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a> hinbekomme. Und ich glaube, das ist mir gelungen.</p>
<p>Doch zuerst einmal den Quellcode, der nur geringfügig umfangreicher und etwas weniger kompakt als die Lua-Vorlage geraten ist:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pyxel</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ein paar nützliche Konstanten</span></span>
<span id="cb1-4">TS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tilesize</span></span>
<span id="cb1-5">COLKEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color Key</span></span>
<span id="cb1-6">WALL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mauer Tile No.</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_tile(tile_x, tile_y):</span>
<span id="cb1-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pyxel.tilemaps() gibt ein Tupel mit den x- und y-Koordinaten</span></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aus der Tilemap des mit pget() identifizierten Tiles zurück</span></span>
<span id="cb1-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pyxel.tilemaps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pget(tile_x, tile_y)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Player:</span>
<span id="cb1-14">    </span>
<span id="cb1-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TS</span>
<span id="cb1-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>   </span>
<span id="cb1-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.imagebank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-22">        </span>
<span id="cb1-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> move(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (pyxel.btnp(pyxel.KEY_LEFT) </span>
<span id="cb1-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):            </span>
<span id="cb1-26">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_RIGHT)</span>
<span id="cb1-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile((<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):</span>
<span id="cb1-29">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_UP)</span>
<span id="cb1-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):</span>
<span id="cb1-32">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> TS</span>
<span id="cb1-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (pyxel.btnp(pyxel.KEY_DOWN)</span>
<span id="cb1-34">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> get_tile(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> TS)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>TS)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WALL):</span>
<span id="cb1-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> TS</span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> App:</span>
<span id="cb1-38">    </span>
<span id="cb1-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-40">        pyxel.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel Tutorial Stage 2"</span>, display_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-41">        pyxel.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assets/mazegame01.pyxres"</span>)</span>
<span id="cb1-42">        </span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialisiere den Spieler</span></span>
<span id="cb1-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position in Map-Koordinaten</span></span>
<span id="cb1-45">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Player(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-46">        </span>
<span id="cb1-47">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-48">        pyxel.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.update, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.draw)</span>
<span id="cb1-49">        </span>
<span id="cb1-50">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-51">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.move()</span>
<span id="cb1-52">        </span>
<span id="cb1-53">    </span>
<span id="cb1-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-55">        pyxel.cls(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-56">        </span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichen die Map</span></span>
<span id="cb1-58">        pyxel.bltm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-59">        </span>
<span id="cb1-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne den Player</span></span>
<span id="cb1-61">        pyxel.blt(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.imagebank,</span>
<span id="cb1-62">                  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.u, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.v, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.player.h,</span>
<span id="cb1-63">                  COLKEY)</span>
<span id="cb1-64">                </span>
<span id="cb1-65">App().run()</span></code></pre></div>
<p>Der Trick ist, daß ich die Klasse <code>Player</code> mit den Map-Koordinaten initialisiere und aufrufe und alle Umrechnungen zu den Sprite-Koordinaten nur in dieser Klasse vornehme. Die einzigen Ausnahmen sind die Fenster- und Kartengrößen, die – in diesem Fall – je mit (<code>16*TS, 16*TS</code>) aufgerufen werden. Doch das ist nur Kosmetik, die eine spätere Änderung der Kartengröße (siehe weiter unten) vereinfachen soll. Ich hätte genauso an dieser Stelle das Konstantenpaar (<code>128, 128</code>) einsetzen können.</p>
<p>Die Methoden <code>pyxel.blit()</code> für die Sprites und <code>pyxel.blitm()</code> für die Karten sind zwar nicht gerade parameterarm, aber gerade dadurch mächtig. Damit ich mich im Dickicht der Ziffern nicht verhaspele, habe ich den Aufruf von <code>pyxel.blit()</code> mit (hoffentlich) für sich sprechenden Parametermamen einsichtiger gemacht:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">player.x           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die x-Koordinate in Sprite-Koordinaten</span></span>
<span id="cb2-2">player.y           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die y-Koordinate in Sprite-Koordinaten</span></span>
<span id="cb2-3">player.imagebank   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Bank des Sprites in der Ressourcendatei</span></span>
<span id="cb2-4">player.u           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die x-Position des Sprites in der Imagebank</span></span>
<span id="cb2-5">player.v           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die y-Position des Sprites in der Imagebank</span></span>
<span id="cb2-6">player.w           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Breite des Sprites (in Pixeln)</span></span>
<span id="cb2-7">player.h           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Höhe des Sprites (in Pixeln)</span></span>
<span id="cb2-8">COLKEY             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Die Position der transparenten Farbe in der Farbpalette</span></span></code></pre></div>
<p>Ähnlich sieht es bei der Methode <code>pyxel.blitm()</code> aus. Da ich hier bisher nur eine Karte verwende und daher fast alle Parameter bis auf die Höhe und Weite der Karte <code>0</code> sind, habe ich sie einfach mit den entsprechenden Zahlenwerten aufgerufen. In umfangreicheren Programmen empfiehlt sich natürlich, die Karten auch in einer Klasse (zum Beispiel <code>Map</code>) zu kapseln und ebenfalls sprechende Variablennamen zu verwenden.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53913356059/"><img src="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2map.jpg" class="img-fluid figure-img" alt="Der Pyxel Map-Editor"></a></p>
<figcaption>Der Pyxel Map-Editor</figcaption>
</figure>
</div>
<p>Wie Ihr im obigen <a href="https://www.flickr.com/photos/schockwellenreiter/53913356059/">Screenshot des Map-Editors</a> sehen könnt, habe ich ihn testweise mit einer weiteren, lindgrünen Seite vergrößert. Wenn Ihr nun die Zeile für die Fenstergröße mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">pyxel.init(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyxel Tutorial Stage 2"</span>, display_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<p>und die Zeile, mit der Ihr die Karte zeichnet, mit</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">pyxel.bltm(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p>aufruft, bekommt Ihr ein doppelt so breites Fenster mit einer doppelt so breiten Karte angezeigt:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53914774339/"><img src="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2map2.jpg" class="img-fluid figure-img" alt="Die doppelt so breite Testkarte"></a></p>
<figcaption>Die doppelt so breite Testkarte</figcaption>
</figure>
</div>
<p>Damit läßt sich schon eine <a href="https://www.flickr.com/photos/schockwellenreiter/53906907263/">ähnliche Karte</a> wie bei meinen TIC-80-Experimenten erzeugen.</p>
<p>Der zweite Trick, der dafür verantwortlich ist, daß das Pyxel-Skript ähnlich kompakt wie mein TIC-80-Versuch geraten ist, hängt mit der Hilfsfunktion <code>get_tile(tyle_x, tile_y)</code> zusammen. Zwar kann Pyxel keine Flags setzen, wenn man jedoch die Methode <code>pyxel.tilemaps.pget(x, y)</code> mit <code>x</code> und <code>y</code> als Pixelkoordinaten aufruft, bekommt man ein Tupel mit der x- und y-Koordinate der Tilemap zurück. Und da in meinem Fall die Mauer in der dritten Spalte (<code>x = 2</code>) der ersten (und einzigen) Zeile (<code>y = 0</code>) liegt, gibt der Aufruf von</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">pyxel.tilemaps[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pget(tile_x, tile_y)</span></code></pre></div>
<p>dann und nur dann eine <code>2</code> zurück, wenn das Tile eine Mauer ist. Das ist doch fast so gut, wie ein Flag.&nbsp;🤓</p>
<p>Daher frage ich in in der Methode <code>player.move()</code> jedesmal ab, ob das gewünschte Zielfeld (in Map-Koordinaten) <strong>keine</strong> Mauer ist. Nur dann wird der Spieler auf das Zielfeld bewegt.</p>
<iframe src="pyxel/index.html" class="if16_9" name="Pyxel Maze Game Stage 2">
</iframe>
<p>Wie Ihr selber sehen und ausprobieren könnt, kann der Spieler mit den Pfeiltasten bewegt werden, aber die Mauern sind für ihn unüberwindbare Hindernisse.</p>
<p>Auch diese Version meiner hoffentlich wachsenden Pyxel-Tutorials habe ich – wie das <a href="https://www.flickr.com/photos/schockwellenreiter/53912110447/">Bannerbild oben</a> zeigt – wieder mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/spyder.html">Spyder</a> zusammengeschraubt. Je länger ich damit arbeite, um so mehr gefällt mir die Spynne und sie hat das Zeug dazu, <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> als meine Python-IDE zu ersetzen. Sie ist wegen ihrer Konzentration auf Python nicht so überfrachtet wie die eierlegende Wollmilchsau VS Code und dadurch bedeutend übersichtlicher und schlanker. Und da sie sich ja auch mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> wunderbar verträgt, sehe ich keine Hindernisse mehr für einen Wechsel (für Spezialfälle habe ich ja immer noch <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">Desktop</a>)).</p>
<p>Pyxel hat gegenüber TIC-80 und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> den Vorteil, daß ich auf das gesamte Python-Ökosystem zurückgreifen kann. Dadurch sollte diese Retrokonsole hervorragend dafür geeignet sein, mein lange eingeschlafenes Projekt »<strong><a href="http://blog.schockwellenreiter.de/2022/04/2022041401.html">Retrogaming und Künstliche Intelligenz</a></strong>« (<a href="http://blog.schockwellenreiter.de/2022/04/2022041502.html">Nachschlag</a>) wieder zum Leben zu erwecken. Ich werde dafür allerdings noch einige Tests und Tutorials durchführen müssen. Freut Euch also auf mehr. <em>Still digging!</em></p>



 ]]></description>
  <category>Pyxel</category>
  <category>Python</category>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>Spyder</category>
  <guid>https://kantel.github.io/posts/2024081002_pyxel_tut_2/</guid>
  <pubDate>Sat, 10 Aug 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081002_pyxel_tut_2/images/pyxeltut2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate des Foxit Reader (PDF Reader)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024081001_foxit_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53569651043/"><img src="https://kantel.github.io/posts/2024081001_foxit_update/images/aktenfuchs-b.jpg" class="img-fluid"></a></p>
<p>Mit der Version 2024.2.3 des nicht nur unter Windows beliebten PDF Betrachters Foxit Reader haben die Entwickler auch wieder <a href="https://www.foxit.com/support/security-bulletins.html">Schwachstellen behoben</a>.</p>
<p>Die neue Version kann <a href="https://www.foxitsoftware.com/downloads/#Foxit-Reader/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53569651043/">Aktenfuchs</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A fox wearing a vest and glasses sits at a desk in a tree hollow and writes in a thick file. In front of him there are still open files on the desk. There are shelves on the walls with lots of file folders. The spring sun shines into the cave through a tree window. colored french comic style</em>«. Negative Prompt: »<em>other animals</em>«. Modell: Stable Diffusion XL, Style: Creepy Nordic Fairytale.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024081001_foxit_update/</guid>
  <pubDate>Sat, 10 Aug 2024 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024081001_foxit_update/images/aktenfuchs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu von Kenney: Pico-8 Platformer Tileset</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080902_pico8_platformer/</link>
  <description><![CDATA[ 




<p><a href="https://kenney.nl/media/pages/assets/pico-8-platformer/7515b33357-1723028951/sample.png"><img src="https://kantel.github.io/posts/2024080902_pico8_platformer/images/pico8plat-b.jpg" class="img-fluid"></a></p>
<p>Von Kenney gibt es wieder etwas Neues: Ein <a href="https://kenney.nl/assets/pico-8-platformer">Pico-8 Platformer Asset Pack</a>. Auch wenn die 150 Tiles und Sprites in der Größe von 8x8 Pixeln eigentlich für die (proprietäre) Fantasiekonsole <a href="https://de.wikipedia.org/wiki/Pico-8">Pico-8</a> mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pyxelpal.html">deren Farbpalette</a> gezeichnet wurden, hindert einen niemand (schon gar nicht Kenney) daran, diese Bildchen auch für die freien Fantasiekonsolen <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> einzusetzen. Denn auch dieses Asset-Pack wurde – wie (fast) alles von Kenney – unter einer Public-Domain-Lizenz (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) veröffentlicht.</p>
<p>Da ich mein eigenes <a href="https://kantel.github.io/posts/2024080401_pyxel_tut_1/">Tutorial mit Pyxel</a> und meine eigenen <a href="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/">Versuche mit der Retrokonsole TIC-80</a> fortsetzen möchte, juckt es mich natürlich gewaltig in den Fingern, (m)eine Version dieses Asset-Packs (und auch Kenneys <a href="https://kenney.nl/assets/pico-8-city">Pico-8 City</a>) an die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/pyxelpal.html">Pyxel-Farbpalette</a> oder an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/sweetie16.html">SWEETIE 16</a> (das ist die von TIC-80 per Default genutzte Palette) anzupassen. Dafür dürfte mein bescheidenes Vermögen als Pixel-Artist vielleicht gerade noch ausreichen. <em>Still digging!</em></p>



 ]]></description>
  <category>Tiles und Sprites</category>
  <category>Game Design</category>
  <category>Spieleprogrammierung</category>
  <category>Retrogaming</category>
  <category>TIC-80</category>
  <category>Pyxel</category>
  <guid>https://kantel.github.io/posts/2024080902_pico8_platformer/</guid>
  <pubDate>Fri, 09 Aug 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080902_pico8_platformer/images/pico8plat.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apples regulärer Flickentag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080901_apple_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53892098970/"><img src="https://kantel.github.io/posts/2024080901_apple_update/images/madhatressteatime-b.jpg" class="img-fluid"></a></p>
<p>Obwohl die Firma mit dem angebissenen Apfel im Logo <a href="https://kantel.github.io/posts/2024073101_apple_updates/">vor etwa einer Woche</a> außer der Reihe ein paar Sicherheits-Releases unters Volk gebracht hat, gab es gestern zum regulären <em>Patchday</em> am Monatsbeginn dennoch so viele Updates, daß ich sie wieder nur <em>en bloc</em> abhandeln kann. Doch wie gewohnt der Reihe nach:</p>
<section id="apple-veröffentlicht-macos-sonoma-14.6.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sonoma-14.6.1">Apple veröffentlicht macOS Sonoma 14.6.1</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sonoma 14.6.1 freigegeben, bietet Leistungsverbesserungen und korrigiert damit auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura">Apple veröffentlicht Sicherheitsupdate für macOS Ventura</h3>
<p>Apple hat auch das Sicherheitsupdate auf macOS Ventura 13.6.9 freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-ios-17.6.1-und-ipados-17.6.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.6.1-und-ipados-17.6.1">Apple veröffentlicht iOS 17.6.1 und iPadOS 17.6.1</h3>
<p>Apple hat das Update auf iOS 17.6.1 und iPadOS 17.6.1 bereitgestellt. Die Updates bieten neue Funktionen und Fehlerbehebungen.</p>
<p>Das Update auf iOS 17.6.1 und iPadOS 17.6.1 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-iosipados-16.7.10-für-ältere-systeme" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-iosipados-16.7.10-für-ältere-systeme">Apple veröffentlicht iOS/iPadOS 16.7.10 für ältere Systeme</h3>
<p>Apple hat auch das Update auf iOS 16.7.10 für ältere iPhones und iPadOS 16.7.10 für ältere iPads bereitgestellt. <strong>Das Update behebt kritische Sicherheitslücken, die vermutlich bereits ausgenutzt wurden</strong>.</p>
<p>Auch dieses Update auf iOS/iPadOS 16.7.10 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53892098970/">Tea Time bei der Hutmacherin</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>the mad hatter gives a sexy naked++ woman with big boops and a nice butt a apple in the summer magic forest. colored french comic style</em>«. Negative Prompt: »<em>ugly, beard, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, extra legs</em>«. Modell: Stable Diffusion XL, Style: Creepy Nordic + Belgian + Semi-Realistic.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080901_apple_update/</guid>
  <pubDate>Fri, 09 Aug 2024 14:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080901_apple_update/images/madhatressteatime.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Minimaze: Retrogaming mit der Retrokonsole TIC-80</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080703_smallmaze1_tic80/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53908631964/"><img src="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/images/smallmazev02-b.jpg" class="img-fluid"></a></p>
<p>Die kleinen (Retro-) Game-Engines <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> wie auch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> machen es dem Programmierer oder der Programmiererin erstaunlich schwer, eine Kollisionserkennung mit Map-Elementen zu realisieren. Ständig muß man zwischen Map- und Sprite-Koordinaten umrechnen. Zwar verstehe ich die Motivation dahinter (man will eine Auflösungsunabhängigkeit erzwingen), aber ich <a href="http://blog.schockwellenreiter.de/2022/07/2022071002.html">erinnerte mich</a>, daß dies in der Retrokonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> einfacher und ziemlich genial gelöst war.</p>
<p>Also habe ich das Teil angeworfen und in kleines Mini-RPG oder Minimaze realisiert. Schon der (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a>-) Quellcode ist erstaunlich kompakt geraten:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Player x,y position</span></span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> TIC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-8">    cls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-9">    map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-10">    spr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">257</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Player</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span></span>
<span id="cb1-13">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- UP</span></span>
<span id="cb1-14">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elseif</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span></span>
<span id="cb1-16">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- DOWN </span></span>
<span id="cb1-17">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elseif</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> </span>
<span id="cb1-19">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- LEFT</span></span>
<span id="cb1-20">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elseif</span> btnp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> </span>
<span id="cb1-22">     fget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mget<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- RIGHT</span></span>
<span id="cb1-23">         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb1-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-25"></span>
<span id="cb1-26">   <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb1-27">     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-28">     <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-29">   <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb1-30"> </span>
<span id="cb1-31">   <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<p>Das ganze Geheimnis dieser kompakten Realisierung liegt in dem <a href="https://itch.io/t/3076553/how-mget-and-fget-work-in-lua-please-tips-for-idiots">Zusammenspiel</a> von <code>mget()</code> und <code>fget()</code>: <code>mget(x, y)</code> gibt die ID des Tiles an der Position (x, y) (in <em>Map-Koordinaten</em>) zurück, während <code>fget(id, flag)</code> einen Boolean-Wert (<code>true</code> oder <code>false</code>) in Abhängigkeit davon, ob der Flag gesetzt ist, zurückgibt.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/images/tic80flags.jpg" class="img-fluid figure-img"></p>
<figcaption>Sprite-Editor</figcaption>
</figure>
</div>
<p>Den Flag setzt man im Sprite Editor im erweiterten Mode (den Schieberegler links oben aktivieren). Je Sprite/Tile können acht verschiedene Flags gesetzt werden. In meinen kleinen Skriptchen habe ich den Flag 0 bei den Tiles und Sprites gesetzt, mit denen der Spieler kollidieren kann. Nur wenn die Abfrage <code>false</code> ergibt, kann der Spieler auf diese Position gesetzt werden.</p>
<p>Natürlich besteht auch hier das Problem, daß der Spieler Sprite-Koordinaten (also »echte« Pixdelkoordinaten) nutzt und die Tiles Map-Koordinaten. Da in TIC-80 die Map-Koordinaten aber entweder je 8x8, 16x16 oder 32x32 Pixel groß sind, kann das (in meinem Spiel sind es 8x8 Pixel) mit einer einzigen Zeile</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb2-1">spr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">257</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Player</span></span></code></pre></div>
<p>aufgelöst werden (wobei das Spieler-Sprite in diesem Fall die ID <img src="https://latex.codecogs.com/png.latex?257"> besitzt).</p>
<p>Ziemlich genial ist auch der Trick, die möglichen Bewegungsrichtungen für die Horizontale wie für die Vertikale je in einer Tabelle (dem Lua-Äquivalent für Pythons Listen) abzulegen. So kann die nächste Bewegung einfach mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb3-2">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">px</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir_y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span></code></pre></div>
<p>zugewiesen werden (diesen Trick habe ich <a href="https://www.youtube.com/watch?v=npqKlAzfIvw">beim <em>Potato Imaginator</em> geklaut</a>).</p>
<p>Mit <code>export html &lt;dateiname&gt;</code> wird ein Zip-Archiv <code>dateiname.zip</code> erzeugt, das alle Dateien enthält, die für eine Webversion des Spieles notwendig sind. Entpackt kann man diese zum Beispiel wie hier in seine Seiten einbinden:</p>
<iframe src="smallmaze/index.html" class="if16_9" name="Small Maze Game">
</iframe>
<p>Allerdings hat man unter Umständen mit dem Problem gieriger Browser zu kämpfen, die die Pfeiltasten an sich reißen wollen. Mein Chrome-Browser auf dem Mac verhielt sich aber anständig, er betrachtete die von TIC-80 benutzten Tastatureingaben als »konsumiert«.</p>
<p>Das Zip-Archiv als Ganzes läßt sich auch problemlos auf Itch.io hochladen, so daß Ihr dort Eure TIC-80-Spiele der staunenden Öffentlichkeit präsentieren könnt. Testweise habe ich auch <a href="https://kantel.itch.io/maze-game-tic-80-test">diesen Prototypen auf meinem Itch.io-Account</a> veröffentlicht.</p>
<p>Aber es kommt noch besser: Mit <code>export mac &lt;dateiname&gt;</code> wird das Spiel als Mac-Unis-Datei exportiert, die per Doppelklick via Terminal startet. Wenn man an den Dateinamen nach dem Export ein <code>.app</code> anhängt, kann es direkt – ohne Terminal – per Doppelklick gestartet werden. Linux- oder Windows-Exporte sollten analog funktionieren, das konnte ich aber mangels Geräten nicht testen.</p>
<p>Ich hatte – nachdem ich sie so lange vernachlässigt hatte – jedenfalls mal wieder viel Spaß mit der kleinen Retrokonsole und auch schon eine Idee, was ich mit ihr anstellen könnte: Mein <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>-Spiel »Nachts im Park«, das ich ja schon einmal <a href="https://kantel.github.io/posts/2023072301_night_in_the_park/">nach Pygame portieren wollte</a>, müßte sich doch prima mit TIC-80 realisieren lassen. Denn wie bei Bitsy liegt auch bei der kleinen Fantasy-Konsole in der Beschränkung die Kraft. Und vor Lua habe ich keine Angst. 🤖 <em>Still digging!</em></p>



 ]]></description>
  <category>Retrogaming</category>
  <category>Spieleprogrammierung</category>
  <category>TIC-80</category>
  <guid>https://kantel.github.io/posts/2024080703_smallmaze1_tic80/</guid>
  <pubDate>Wed, 07 Aug 2024 17:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080703_smallmaze1_tic80/images/smallmazev02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 115.14 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024080702_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53862012407/"><img src="https://kantel.github.io/posts/2024080702_thunderbird_update/images/donnervogelblau-b.jpg" class="img-fluid"></a></p>
<p>Auch bei Mozilla läuft es wieder wie gewohnt: Exakt einen Tag nach dem Update des Feuerfuchses kommt das Update des Donnervogels. Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 115.14 freigegeben und damit auch wieder <a href="https://www-stage.thunderbird.net/en-US/thunderbird/115.14.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53862012407/">Blaue Donnervögel</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Two colorful thunderbirds in an enchanged garden in the summertime</em>«. Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024080702_thunderbird_update/</guid>
  <pubDate>Wed, 07 Aug 2024 14:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024080702_thunderbird_update/images/donnervogelblau.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
