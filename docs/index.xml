<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Sun, 21 Jan 2024 14:55:00 GMT</lastBuildDate>
<item>
  <title>Neues und nicht mehr ganz so neues von Kenney</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024012101_neues_von_kenney/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://kenney.nl/media/pages/assets/physics-assets/03dc1c85a9-1677667199/sample.png"><img src="https://kantel.github.io/posts/2024012101_neues_von_kenney/images/physikassets-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Gelegentlich sollte man immer mal wieder bei <a href="https://kenney.nl/">Kenneys</a> vorbeischauen, dem Menschen, der tausende, komplett frei zu nutzende (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) Spiele-Assets unter das staunende Publikum bringt. Und vor allem die Bildchen sehen auch noch verdammt gut aus. Daher ist es kein Wunder, daß Kenney bei mir immer die erste Adresse ist, wenn es um Tiles und Sprites für meine Spiele geht.</p>
<p>Und – getriggert durch <a href="https://twitter.com/KenneyNL/status/1748669291644215366?t=C_UqiEq0Ri0iFQkld1dVAA">diese Ankündigung</a> auf X (vormals Twitter) – war ich heute mal wieder auf seinen Seiten. Denn da gibt es neu nicht nur das <a href="https://kenney.nl/assets/input-prompts">Set mit Input-Prompts</a> (über 800 Glyphen für alle möglichen Input-Geräte), sondern auch eine überarbeitete Version der <a href="https://kenney.nl/assets/onscreen-controls">Onscreen Controls</a>, die mir gerade bei meiner frisch erwachten Liebe zu <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> und der damit verbundenen Steuerung durch den Browser (auch auf mobilen Devices) sicher sehr nützlich sein können.</p>
<p>Nicht mehr ganz so neu sind die <a href="https://kenney.nl/assets/shape-characters">Shape Characters</a> und das <a href="https://kenney.nl/assets/physics-assets">Physic Assets Pack</a>, die aber – wie ich <a href="https://kantel.github.io/posts/2023102701_steves_makerspace/">hier schon einmal schrieb</a> – gerade jetzt, da fast jedefrau und jederman <a href="https://kantel.github.io/posts/2024011703_p5js_tuts/">seine eigene Physik-Engine programmiert</a>, sicher sehr hilfreich sein können. Wer weiß, vielleicht fange auch ich damit etwas an. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <guid>https://kantel.github.io/posts/2024012101_neues_von_kenney/index.html</guid>
  <pubDate>Sun, 21 Jan 2024 14:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024012101_neues_von_kenney/images/physikassets.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neues Modell und neues Werkzeug: New KIds on the Blog</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011901_badgerbib/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53474020153/"><img src="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Mit der Ankündigung »Entdecken sie Märchen und Geschichten nicht mehr aus alten Büchern oder dem raunenden Flüstern der Vorfahren, sondern mit dem <em>Creepy Nordic Fairytale</em>-Modell« stellte <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> stolz auf X (vormals Twitter) <a href="https://twitter.com/Scenario_gg/status/1747676861751083308?t=lq0uBTCuqPoB-woRRMazlA">ein neues Modell</a> vor. Und da die Bilder dazu recht einladend aussahen, mußte ich dieses natürlich auch gleich mal ausprobieren:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53474295820/"><img src="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53473877886/"><img src="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53474017678/"><img src="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53472969612/"><img src="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53474293135/"><img src="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib05.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Für einen Beispielprompt (siehe Bildbeschreibung unten) mußte der bewährte <a href="https://kantel.github.io/posts/2024010701_badger_artist/">Dachs im Morgenmantel</a> herhalten. Und ich habe die Ankündigung beinahe wörtlich genommen und den Dachs gebeten, kleinen Bibern Märchen aus einem dicken Buch vorzulesen. Auch wenn die Biber in einigen Bildern eher wie Meerschweinchen aussehen, sind die Ergebnisse doch nett anzuschauen. Und auch eine gewisse Charakterkonsistenz ist beim Dachs (zumindest innerhalb einer Session) nicht zu leugnen. Damit läßt sich doch schon etwas anfangen.</p>
<p>Ich bin jedenfalls angefixt und werde mit Scenario noch weiter experimentieren. Denn Bilder für interaktive Geschichten mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> kann man damit auf jeden Fall erzeugen, und die <a href="https://www.youtube.com/playlist?list=PLwO3lt08LXuTOLVPOuelWm4pA9FFDSvZ5">Video-Tutorials vom Kanal der Macher</a> versprechen, daß man mit dem Teil auch Akteure für <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren`Py</a> und/oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> generieren kann (auch wenn sie sich eher auf <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> beziehen). Dafür muß ich mir allerdings noch reinziehen, wie der <em>Canvas</em> bei Scenario funktioniert. Es gibt also noch einiges zu entdecken.</p>
<p><strong>War sonst noch was?</strong> Ach ja, über <a href="https://www.youtube.com/watch?v=-BgJzOObRxE">dieses Tutorial</a> bin ich auf <a href="https://www.krea.ai/home">Krea.AI</a> gestoßen, ein KI-Tool, das in Echtzeit Bilder generiert und sich vollmundig als <strong>die</strong> Alternative zu <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/midjourney.html">Midjourney</a> und <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> präsentiert. (Klappern gehört bekanntlich zum Handwerk). Das Teil macht einen recht netten Eindruck und man scheint es (zumindest in der Beta-Phase) kostenlos nutzen zu können (eine Preisliste habe ich nicht gefunden). Außerdem gibt es von <em>DesignTime</em> eine nette, bis heute siebenteilige <a href="https://www.youtube.com/playlist?list=PLPiUSjGA-F5dWtmhVV4kS-xIY0TI4iAH6">Tutorialreihe zu Krea.AI</a>. Auch wenn ich vermutlich mit der Erkundung von Scenario, <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor Art</a> und <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/seaart.html">SeaArt AI</a> erst einmal voll ausgelastet bin, habe ich mich bei Krea ebenfalls registriert. Man kann ja nie wissen, wofür das noch nützlich sein kann. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53474020153/">Der Dachs liest vor</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>A badger in a red dressing gown sits in a wing chair in his cave in front of a library and reads a fairy tale to a beaver from a thick book</em>«, Style: Creepy Nordic Fairytale.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Krea</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2024011901_badgerbib/index.html</guid>
  <pubDate>Fri, 19 Jan 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011901_badgerbib/images/badgerbib00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Genuary 2024: Neue Farbpaletten braucht das Land</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011801_genuary24_18/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53471968033/"><img src="https://kantel.github.io/posts/2024011801_genuary24_18/images/genuary24_18-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Seit einigen Jahren gibt es jeden Januar den <a href="https://genuary.art/">Genuary</a>, einen Monat, in dem jede und jeder aufgefordert ist, seine <em>Generative Art</em>-Werke zu präsentieren. Dafür gibt es für jeden Tage des Monats einen <a href="https://genuary.art/prompts">Prompt</a>, der als Ideengeber fungieren soll. Der heutige Prompt heißt »Bauhaus«.</p>
<p>Und um diesen Prompt zu feiern, hat <em>Ahmad Moussa</em> vom <a href="https://www.gorillasun.de/">Gorilla Sun Blog</a> die <a href="https://twitter.com/gorillasu/status/1747793292312416740?t=HrbKVgmphkZs-tU-odOLNw">Farbpalette Minimal Bauhaus</a> kreiert, mit der auch ich irgendetwas anstellen wollte. Herausgekommen ist dieses kleine <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a>-Skript:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span>
<span id="cb1-2">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span></span>
<span id="cb1-3">NO_RECT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># alpha</span></span>
<span id="cb1-6"></span>
<span id="cb1-7">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F6340C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#156CD2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0D0B1B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F1E4E8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ECCA2D"</span>]</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup():</span>
<span id="cb1-10">    size(WIDTH, HEIGHT)</span>
<span id="cb1-11">    window_move(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-12">    window_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Rectangles – Genuary 2024"</span>)</span>
<span id="cb1-13">    rect_mode(CENTER)</span>
<span id="cb1-14">    no_loop()</span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw():</span>
<span id="cb1-17">    background(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#4F615D"</span>)</span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NO_RECT):</span>
<span id="cb1-19">        fill(random_choice(colors), a)</span>
<span id="cb1-20">        rect_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random_int(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-21">        rect_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random_int(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-22">        rect(random_int(rect_w, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> rect_w), random_int(rect_h, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> rect_h),</span>
<span id="cb1-23">             rect_w, rect_h)</span>
<span id="cb1-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Und da man ja bekannntlich nie genug Farbpaletten im Vorrat haben kann, habe ich dieser Palette unter dem Namen <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/genuary24.html">Genuary 24</a></strong> auch gleich eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert. Sie paßt gut zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/genuary23.html">ihrer Schwester</a> vom letzten Jahr.</p>



 ]]></description>
  <category>Creative Coding</category>
  <category>Generative Art</category>
  <category>Farbpaletten</category>
  <category>Py5</category>
  <category>Python</category>
  <guid>https://kantel.github.io/posts/2024011801_genuary24_18/index.html</guid>
  <pubDate>Thu, 18 Jan 2024 16:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011801_genuary24_18/images/genuary24_18.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Video-Tutorials zu JavaScript mit D3.js und P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011703_p5js_tuts/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53447233860/"><img src="https://kantel.github.io/posts/2024011703_p5js_tuts/images/badger001-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine <a href="https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/">jüngst verkündete Absicht</a>, mich in Zukunft verstärkt der Programmierung mit JavaScript und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> zu widmen, um die Resultate besser im Browser und damit auch im <em>Schockwellenreiter</em> präsentieren zu können, hat als Zwischenergebnis dazu geführt, daß ich meinen Feedreader nach (einigermaßen aktuellen) Playlisten mit Tutorials zu P5.js durchforstet habe. Dabei sind mir einige untergekommen, die durchaus auch für Euch da draußen interessant sein könnten:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/4DEx2M0auMc?si=LU644crG5lgIg_pc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><a href="https://www.youtube.com/playlist?list=PL9yYRbwpkykthTFJl9vYr_C0FCjRIn_7G">Constructing Visualization 2024</a> von <strong>Curran Kelleher</strong> scheint eine interessante Tutorial-Serie zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/visualisierung/d3.html">D3.js</a> zu werden. Zur Zeit besteht sie aus vier Videos zwischen zehn und zwanzig Minuten Spieldauer. Aber das Jahr ist ja noch jung, eine <a href="https://www.youtube.com/playlist?list=PL9yYRbwpkyks0RzTyTOLPYbHVSRJ68zOO">ähnliche Playlist</a> in 2023 brachte es über das Jahr verteilt auf zwanzig Videos.</p>
<p>Die JavaScript-Visualisierungsbibliothek D3.js hatte ich ja vor <a href="https://kantel.github.io/posts/2023051402_p5js_mit_d3js/">ein</a> <a href="https://kantel.github.io/posts/2023051501_d3js_first_steps/">paar</a> <a href="https://kantel.github.io/posts/2023051702_javascript_p5js_d3/">Monaten</a> schon einmal auf dem Schirm, jedoch den Pfad nicht weiter verfolgt. Vielleicht ist dies ein neuer Anstoß? <em>Still digging!</em></p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/0ksauzrMeDY?si=Ljp3loexX7JTf5Q8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Josef Renner</strong> bastelt seit drei Tagen an einer eigenen <a href="https://www.youtube.com/@josefrenner/videos?view=0&amp;sort=dd&amp;shelf_id=0">Physik Engine</a> mit <a href="https://de.wikipedia.org/wiki/Verlet-Algorithmus">Verlet-Integration</a> in P5.js. In dieser kurzen Zeit hat er zwar schon elf im Schnitt etwa zehnminütige Videos hochladen, aber noch keine Playlist angelegt. Die wird aber sicher noch kommen. Bis dahin solltet Ihr den Kanal im Auge behalten.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/MRJdvhIr6m8?si=da2054P0zC0hmXjR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>Data Science for Everyone</strong> bastelt ebenfalls an einer neuen Playlist »<a href="https://www.youtube.com/playlist?list=PLlbbWgBRF8EeIg3Fua_p6pS3rM3XnpYHr">JavaScript for Business</a>«, die aktuell aus 22 im Schnitt etwa zwanzigminütigen Videos besteht, aber noch erweitert wird. Über diese bin ich aber auch noch über die Playlist »<a href="https://www.youtube.com/playlist?list=PLlbbWgBRF8Ee90gw3YMkhLola4rwoJX5N">DataScience for Kids</a>« gestolpert, die sie vor etwa einem Jahr abgeschlossen hatten. Sie besteht ebenfalls aus 22 (im Schnitt aber nur etwa zehnminütigen) Videos und behandelt P5.js!</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/ZiVWNAqLDwU?si=s2vmjbHvBXl_fYFf" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Auch der hier schon mehrfach erwähnte, äußerst umtriebige <em>Steve</em> von <strong>Steve’s Makerspace</strong> hat vor wenigen Tagen eine neue Playlist abgeschlossen. Sie heißt »<a href="https://www.youtube.com/playlist?list=PLnJOmsprq3bE0QLbe7wZ8yb1-Dt0FBcP5">How to Code Generative Art using p5.js</a>« und der Name ist Programm. Die 25 Videos der Reihe sind maximal etwa zwanzig Minuten lang und auf jeden Fall lohnt es sich, einen Blick darauf zu werfen.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/HXzEVcPTU-Y?si=-2vNr2JtZ1MURG6K" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Mindestens ebenso umtriebig wie <em>Steve</em> ist die ebenfalls hier schon mindestens einmal erwähnte <strong>Patt Vira</strong>, die auf ihrem Kanal am laufenden Band Video-Tutorials zu »Generative Art mit P5.js« hochlädt. Diese sind mittlerweile fast alle in ihrer Mega-Playlist »<a href="https://www.youtube.com/playlist?list=PL0beHPVMklwh3KNAibTZKkHjN4xILaWvE">P5.js Coding Tutorial</a>« zu finden, die (Stand heute) aus 51 Videos unterschiedlicher Länge besteht. Aber bei der Geschwindigkeit, mit der die junge Dame Video-Tutorials produziert, sind zum Zeitpunkt der Veröffentlichung dieses Beitrags sicher schon wieder einige hinzugekommen.</p>
<p><strong>War sonst noch was?</strong> Ach ja, <a href="https://observablehq.com/plot/">Observable Plot</a> ist eine JavaScript-Bibliothek zur Datenvisualisierung, die offensichtlich nicht nur gut mit R, sondern auch mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> zusammenspielt. Daher gibt es von den <a href="https://www.meetup.com/rladies-philly/">R-Ladies aus Philadelphia</a> eine einstündige <a href="https://www.youtube.com/watch?v=_4dTkIzGQs4">Einführung in Observable Plot</a> mit <em>Tanya Shapiro</em>. Und <em>Daniel Shiffman</em> hat das Remake seines Buches »<a href="https://natureofcode.com/">The Nature of Code</a>« (in P5.js statt in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing/Java</a>) beinahe abgeschlossen. Die <a href="https://nostarch.com/nature-code">Printausgabe</a> soll im Sommer dieses Jahres bei <em>no starch press</em> erscheinen. <em>Shiffman</em> hofft, nun wieder mehr Zeit für seine legendären Video-Tutorials zu haben und feiert dies mit einer neuen <a href="https://www.youtube.com/watch?v=Ggxt06qSAe4">Coding Challenge zu eindimensionaln, elementaren zellulären Automaten</a>.</p>
<p>Und <em>last but not least</em> habe ich festgestellt, daß ich noch ein Maskottchen für JavaScript im Allgemeinen und P5.js im Besonderen brauche. Daher habe ich mir – bis ich etwas passenderes gefunden habe – meinen <a href="https://kantel.github.io/posts/2024010701_badger_artist/">malenden Dachs</a> dafür ausgeguckt. Er wird als Bannerbild all meine JavaScript-/P5.js-Beiträge schmücken, für die ich keinen anderen <em>Eye Catcher</em> gefunden habe.</p>
<hr>
<p>Bild: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53447233860/">Ein Dachs als Künstler</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A badger in a dressing gown stands in front of his den at an easel, holds a palette in his right hand and a brush in his left hand and paints a picture. It’s a sunny spring morning, in the background you can see a quiet river surrounded by willows. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>JavaScript</category>
  <category>P5.js</category>
  <category>D3.js</category>
  <category>Generative Art</category>
  <category>Visualisierung</category>
  <guid>https://kantel.github.io/posts/2024011703_p5js_tuts/index.html</guid>
  <pubDate>Wed, 17 Jan 2024 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011703_p5js_tuts/images/badger001.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Jetzt habe ich wieder die Haare schön …</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011702_haare_schoen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53468953322/"><img src="https://kantel.github.io/posts/2024011702_haare_schoen/images/haare202401-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Jetzt habe ich wieder die Haare schön, dank <a href="https://coiffeure-marina-team.business.site/">Coiffeure Marina &amp; Team</a>. Auch ich bin ihnen von Neukölln nach <del>Schweineöde</del> Schöneweide hinterhergereist.</p>
<p>Und: Watt mutt, datt mutt – Fratzenbuch und ich werden in diesem Leben keine Freunde mehr, also müssen auch solche, eigentlich belanglosen Postings (und auch Selfies) hier in diesem <del>Blog</del> digitalen Kritzelheft veröffentlicht werden. Da müßt Ihr durch!</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Modernes Leben</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2024011702_haare_schoen/index.html</guid>
  <pubDate>Wed, 17 Jan 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011702_haare_schoen/images/haare202401.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert erneut in der Version 120 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011701_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53395464554/"><img src="https://kantel.github.io/posts/2024011701_chrome_update/images/datenkrake4-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht das Update der Version 120 (120.0.6099.224/225/234) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_16.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53395464554/">Datenkrake bei der Arbeit</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>Data octopus at work</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024011701_chrome_update/index.html</guid>
  <pubDate>Wed, 17 Jan 2024 11:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011701_chrome_update/images/datenkrake4.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizzaplane mit JavaScript (P5.js), Stage 1: All Actors on Board</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53468224814/"><img src="https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/images/pizzaplanejsstage1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auf ein Neues! Nachdem meine Versuche zum Ende des Jahres mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>, der JavaScript-Version von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a> recht erfolgreich waren, ein <a href="https://kantel.github.io/posts/2023122601_merry_xmas_p5js/">Weihnachtsszenario</a> und ein (ungefährliches) <a href="https://kantel.github.io/posts/2023123102_silvesterfeuerwerk/">Silvesterfeuerwerk</a> zu programmieren, habe ich Mut gefaßt und bin eine größere Aufgabe angegangen. Die Portierung meines (nie endgültig fertiggestellten) kleinen, grünen Pizzafliegers von Python (<a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">Pygame-Version</a>, <a href="https://kantel.github.io/posts/2023032602_pizza_plane_with_pizzas/">Trinket/Processing.py-Version</a>) nach JavaScript/P5.js.</p>
<p>Denn ich bin der Überzeugung, daß der Browser das in absehbarer Zukunft wichtigste Frontend (nicht nur) für Spiele sein und bleiben wird. Und bei aller Sympathie hinkt hier Python doch stark hinterher: Zwar gibt es mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> eine Bibliothek, die Pygame-Spiele nach WebAssembly übersetzt <a href="https://kantel.github.io/posts/2023060501_pygame_im_browser/">und sie so im Browser spielbar macht</a>, aber das hat (noch?) <a href="https://kantel.github.io/posts/2023060602_pygbag_nachschlag/">seine Tücken</a>, so treten zum Beispiel bei Tastatureingaben Konflikte mit dem Browser auf. Das gilt auch für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>, hier kommt noch verschärfend hinzu, daß ich bis heute nicht herausgefunden habe, wie man zusätzliche (Google-) Fonts DSGVO-konform in Trinket einbindet.</p>
<p>All diese Probleme hat JavaScript mit P5.js nicht, bei meiner <a href="https://kantel.github.io/posts/2023051401_dancing_crab_p5js_v2/">tanzenden Krabbe</a> zum Beispiel habe ich gezeigt, wie man sowohl das Problem mit den Tastatureingaben <a href="https://kantel.github.io/posts/2023051001_dancing_crab_p5js/">löst</a>, wie auch Google-Fonts lokal einbindet. So soll der Pizzaflieger in der P5.js-Version endlich komplettiert werden (mit <a href="https://kantel.github.io/posts/2023011001_pizzaplane_trailer/">Start</a>- und Ende-Screen und einem Head-Up-Display (HUD)).</p>
<p>Im ersten Stage habe ich erst einmal alle Akteure auf das Spielfeld geschickt. Das beginnt mit der Klasse <code>Background</code>, der ich dieses Mal zwei freie Hintergrundbilder (<a href="http://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) des Users <em>rubberduck</em> von <a href="https://opengameart.org/content/another-background-made-from-glitch-assets">OpenGameArt.org</a> spendiert habe. Der besseren Übersicht wegen habe ich diese Klasse in einer eigenen Datei (<code>background.js</code>) untergebracht:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Background {</span>
<span id="cb1-2"></span>
<span id="cb1-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _im) {</span>
<span id="cb1-4">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">startx</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _im<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    }</span>
<span id="cb1-9">  </span>
<span id="cb1-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb1-11">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>bgWidth) {</span>
<span id="cb1-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14">      }</span>
<span id="cb1-15">  </span>
<span id="cb1-16">    }</span>
<span id="cb1-17">  </span>
<span id="cb1-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb1-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20">    }</span>
<span id="cb1-21">  </span>
<span id="cb1-22">  }</span></code></pre></div>
<p>Diese und alle anderen Bilder werden in der Funktion <code>preload()</code> geladen.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb2-2">  planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/planegreen_1.png"</span>)</span>
<span id="cb2-3">  planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/planegreen_2.png"</span>)</span>
<span id="cb2-4">  pizzaImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/pizza.png"</span>)</span>
<span id="cb2-5">  bg1  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/background02a_2.png"</span>)</span>
<span id="cb2-6">  bg2  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/background02b_2.png"</span>)</span>
<span id="cb2-7">}</span></code></pre></div>
<p>Diese Funktion wird in P5.js vor <code>setup()</code> aufgerufen und verhindert, daß die Bilder asynchron geladen werden, also das Skript unter Umständen weiterläuft, bevor alle Assets vorhanden sind.</p>
<p>Dann kommen die Klassen für den Spieler und die Gegener, die ebenfalls eine eigene Datei (<code>sprites.js</code>) bekommen haben:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Class Plane</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Plane {</span>
<span id="cb3-3"></span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb3-5">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb3-10">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    }</span>
<span id="cb3-12">  </span>
<span id="cb3-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb3-14">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyIsPressed) {</span>
<span id="cb3-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> UP_ARROW) {</span>
<span id="cb3-16">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) {</span>
<span id="cb3-17">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-18">          }</span>
<span id="cb3-19">        }</span>
<span id="cb3-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (keyCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> DOWN_ARROW) {</span>
<span id="cb3-21">          <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) {</span>
<span id="cb3-22">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-23">          }</span>
<span id="cb3-24">      }</span>
<span id="cb3-25">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-26">    }</span>
<span id="cb3-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> maxAnim) {</span>
<span id="cb3-29">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">anim</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-30">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-31">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) {</span>
<span id="cb3-32">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-33">      }</span>
<span id="cb3-34">      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> planImages[<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">frame</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-35">    }</span>
<span id="cb3-36">  </span>
<span id="cb3-37">  }</span>
<span id="cb3-38"></span>
<span id="cb3-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb3-40">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-41">  }</span>
<span id="cb3-42">}</span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Class Enemy</span></span>
<span id="cb3-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Enemy {</span>
<span id="cb3-46"></span>
<span id="cb3-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>(_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _im) {</span>
<span id="cb3-48">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-49">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-50">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _im<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-51">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-52">    }</span>
<span id="cb3-53"></span>
<span id="cb3-54">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>() {</span>
<span id="cb3-55">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-56">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-57">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-58">    }</span>
<span id="cb3-59"></span>
<span id="cb3-60">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>() {</span>
<span id="cb3-61">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>) {</span>
<span id="cb3-63">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reset</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-64">        }</span>
<span id="cb3-65">    }</span>
<span id="cb3-66"></span>
<span id="cb3-67">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>() {</span>
<span id="cb3-68">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">img</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-69">    }</span>
<span id="cb3-70">}</span></code></pre></div>
<p>Auch wenn es mein Bestreben eigentlich ist, daß »Hauptprogramm« durch die Auslagerung der Elemente in Klassen kurz zu halten, ist es doch knall fünfzig Zeilen lang geworden:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource javascript number-lines code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> windowHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">520</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> bgWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2056</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> maxAnim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Animation cycle</span></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> noPizzas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> planImages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizzas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> pizzaImg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> bg1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bg2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> back1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> back2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preload</span>() {</span>
<span id="cb4-15">  planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/planegreen_1.png"</span>)</span>
<span id="cb4-16">  planImages[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/planegreen_2.png"</span>)</span>
<span id="cb4-17">  pizzaImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/pizza.png"</span>)</span>
<span id="cb4-18">  bg1  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/background02a_2.png"</span>)</span>
<span id="cb4-19">  bg2  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadImage</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/background02b_2.png"</span>)</span>
<span id="cb4-20">}</span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setup</span>() {</span>
<span id="cb4-23">  myCanvas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createCanvas</span>(windowWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> windowHeight)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-24">  myCanvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parent</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frameRate</span>(fps)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-26">  back1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bg1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-27">  back2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Background</span>(bgWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bg2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-28">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> noPizzas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>) {</span>
<span id="cb4-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">random</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-31">    pizzas[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Enemy</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pizzaImg)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-32">  }</span>
<span id="cb4-33">  plane <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Plane</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-34">}</span>
<span id="cb4-35"></span>
<span id="cb4-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw</span>() {</span>
<span id="cb4-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span>(bg1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-38">  back1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-39">  back2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-40">  back1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-41">  back2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-42">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (pizza <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">of</span> pizzas) {</span>
<span id="cb4-43">    pizza<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-44">    pizza<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-45">  }</span>
<span id="cb4-46">  plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-47">  plane<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">display</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-48">}</span></code></pre></div>
<p>Das ist aber in der Hauptsache den vielen Konstanten- und Variablen-Deklarationen zuzuschreiben (und der Funktion <code>preload()</code>, die vorab alle Assets lädt), die eigentliche Programmlogik findet tatsächlich in den Klassen-Deklarationen für die Objekte statt.</p>
<p>Die vorläufige <code>index.html</code>, die das Skript zum Testen braucht, muß natürlich alle Dateien einbinden:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb5-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE </span>html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;html</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">lang</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"en"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;head&gt;</span></span>
<span id="cb5-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;meta</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">charset</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;meta</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">name</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">content</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1.0"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-6"></span>
<span id="cb5-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;title&gt;</span>🍕 Pizza Plane Stage 1 🍕<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/title&gt;</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;link</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">rel</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text/css"</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">href</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"style.css"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-10"></span>
<span id="cb5-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libraries/p5.min.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb5-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libraries/p5.sound.min.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb5-13">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/head&gt;</span></span>
<span id="cb5-14"></span>
<span id="cb5-15">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;body&gt;</span></span>
<span id="cb5-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb5-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sprites.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb5-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;script</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">src</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch.js"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/script&gt;</span></span>
<span id="cb5-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;div</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">id</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/div&gt;</span></span>
<span id="cb5-20">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/body&gt;</span></span>
<span id="cb5-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/html&gt;</span></span></code></pre></div>
<p>Und im Vorgriff auf die spätere Verwendung in (m)einem <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>-Dokument habe ich der Datei schon einmal ein <code>&lt;div id="sketch"&gt;</code> spendiert, dem im <code>setup()</code> des eigentlichen Skripts mit <code>myCanvas.parent("sketch")</code> der Ort zugewiesen wird, in der das Skript platziert wird.</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://dpunkt.de/produkt/javascript-fuer-ungeduldige/"><img src="https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/images/js02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.rheinwerk-verlag.de/programmieren-lernen-mit-javascript/"><img src="https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/images/js01.jpg" class="img-fluid"></a>
</div>
<p>Ich hatte bisher viel Spaß mit der P5.js/JavaScript-Programmierung. Bei aufkommenden Fragen geholfen haben mir dabei vor allem die Bücher »<em><a href="https://www.rheinwerk-verlag.de/programmieren-lernen-mit-javascript/">Programmieren lernen mit JavaScript</a>. Spiele und Co.&nbsp;ganz easy – auch für Erwachsene</em>« von Stephan Elter, Bonn (Rheinwerk), 3. Auflage 2022, und »<em><a href="https://dpunkt.de/produkt/javascript-fuer-ungeduldige/">JavaScript für Ungeduldige</a>. Der schnelle Einstieg in modernes JavaScript</em>« von Cay Horstmann, Heidelberg (dpunkt) 2021. Das erste Buch hatte ich ausgewählt, weil es versprach, nicht nur für Kinder, sondern auch für Erwachsene zu sein (also direkt das Kind im Mann in mir ansprach), das zweite Buch natürlich, weil auf dem Titel das weiße Kaninchen aus »Alice im Wunderland« abgebildet war.</p>
<p>Ich bin und bleibe doch ein riesengroßes Spielkalb.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/index.html</guid>
  <pubDate>Tue, 16 Jan 2024 17:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011602_pizzaplanejs_stage_1/images/pizzaplanejsstage1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Schnee trendet …</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011601_schnee_trendet/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53468101755/"><img src="https://kantel.github.io/posts/2024011601_schnee_trendet/images/schneetrendet1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Schnee trendet nicht nur auf X (vormals Twitter), sondern auch in unserem Garten. Da konnte ich nicht hintenanstehen und mußte das natürlich photographisch dokumentieren:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53467816698/"><img src="https://kantel.github.io/posts/2024011601_schnee_trendet/images/schneetrendet2.jpg" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Unser Gärtchen im Winter</figcaption>
</figure>
</div>
<p>Außerdem wollte ich wissen, ob das Putzen der Linse meines Mobilphones einen sichtbaren Effekt hatte.&nbsp;🤓 Urteilt selber.</p>
<hr>
<p><strong>Photos</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Photographie</category>
  <category>Garten</category>
  <guid>https://kantel.github.io/posts/2024011601_schnee_trendet/index.html</guid>
  <pubDate>Tue, 16 Jan 2024 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011601_schnee_trendet/images/schneetrendet1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: SeaArt AI und Tensor Art</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011401_seaart_tensorart/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53420545211/"><img src="https://kantel.github.io/posts/2024011401_seaart_tensorart/images/femwarriorta-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da mich die Nachwirkungen meiner kombinierten Corona-Grippe-Impfung immer noch nahezu vollständig außer Gefecht setzen, habe ich – um wenigstens ein wenig voranzukommen – <a href="http://cognitiones.kantel-chaos-team.de/index.html">mein Wiki</a> mit je einer Seite zu den von mir neu entdeckten (und angeblich unzensierten) KI-Bildgeneratoren <strong><a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/seaart.html">SeaArt AI</a></strong> und <strong><a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor Art</a></strong> ergänzt:</p>
<section id="seaart-ai" class="level3">
<h3 class="anchored" data-anchor-id="seaart-ai">SeaArt AI</h3>
<p><strong>SeaArt AI</strong> ist ein hocheffizientes und benutzerfreundliches KI-Zeichentool, mit dem Ihr auch ohne professionelle Kenntnisse im Handumdrehen zum Künstler werden könnt (<a href="https://chatgptdemo.com/de_de/produkt/seaart-ai/">Eigenwerbung</a>). Mit einer leistungsstarken Rendering-Engine und einem personalisierten gemischten Empfehlungssystem sei die Erstellung hochwertiger Werke ein Kinderspiel.</p>
<section id="video--tutorials" class="level4">
<h4 class="anchored" data-anchor-id="video--tutorials">(Video-) Tutorials</h4>
<ul>
<li>SeaArt.ai: <a href="https://www.youtube.com/watch?v=ArUioHtvJ70">Easiest Way to Generate Stunning Images</a></li>
<li><a href="https://www.youtube.com/watch?v=1HT4S1r4VzQ">Introduction to SeaArt.ai</a></li>
</ul>
</section>
<section id="links" class="level4">
<h4 class="anchored" data-anchor-id="links">Links</h4>
<ul>
<li><a href="https://www.seaart.ai/de">SeaArt AI Home</a> – gleichzeitig Online App</li>
<li><a href="https://www.youtube.com/@Seaart.ai_Official">Offizieller YouTube-Kanal</a> mit einer Reihe von nützlichen <a href="https://www.youtube.com/@Seaart.ai_Official/playlists">Playlists</a></li>
</ul>
</section>
</section>
<section id="tensor-art" class="level3">
<h3 class="anchored" data-anchor-id="tensor-art">Tensor Art</h3>
<p><strong>Tensor Art</strong> ist eine eine Online-Plattform, die sich auf KI-generierte Kunst und Model-Hosting spezialisiert hat. Sie bietet eine Reihe von Diensten und Funktionen, darunter:</p>
<ul>
<li>Kostenloser Online-Bildgenerator: Benutzer können Bilder mithilfe von KI-Modellen erstellen.</li>
<li>Model-Hosting: Die Website hostet verschiedene KI-Modelle zur Bildgenerierung.</li>
<li>Große Auswahl an Vorlagen und Beiträgen: Benutzer können aus einer Vielzahl von Vorlagen für ihre Anforderungen an die Bildgenerierung wählen.</li>
<li>Leaderboard-Funktion: Präsentation beliebter Modelle und Kreationen.</li>
<li>Verschiedene KI-Modelle: Die Website bietet verschiedene KI-Modelle wie LORA und CHECKPOINT, jedes mit einzigartigen Stilen und Fähigkeiten.</li>
</ul>
<section id="tutorials" class="level4">
<h4 class="anchored" data-anchor-id="tutorials">Tutorials</h4>
<ul>
<li><a href="https://www.youtube.com/watch?v=F1Cm4xBu_ls">Introduction to Tensor.art</a></li>
<li><a href="https://www.youtube.com/watch?v=037GzF5uUNc">Best free Online (NSFW) AI Art Generator - Tensor Art</a> – Detailed Tutorial</li>
<li><a href="https://www.youtube.com/watch?v=4_FqJ_AVWU0">MidJourney Alternative For Free - Generate Stunning AI Images</a></li>
<li>Kerem Gülen: <em><a href="https://dataconomy.com/2023/12/13/how-to-use-tensor-art-create-sdxl-images/">Tensor Art lets you generate detailed images with Stable Diffusion</a></em>, DataConomy vom 13. Dezember 2023
<ul>
<li><a href="https://dataconomy.com/2023/12/13/how-to-use-tensor-art-create-sdxl-images/" class="uri">https://dataconomy.com/2023/12/13/how-to-use-tensor-art-create-sdxl-images/</a></li>
</ul></li>
<li>Hammad ashraf: <em><a href="https://hammadbaloch12.medium.com/discover-tensor-art-the-free-midjourney-alternative-for-ai-art-creation-2c38d70cb8fa">Discover Tensor Art: The Free Midjourney Alternative for AI Art Creation</a></em>, Medium.com vom 31. August 2023</li>
<li>Tensor Art: <em><a href="https://metaswipes.com/tensor-art-beginners-guide-to-ai-image-generation/">Beginner’s Guide to AI Image Generation</a></em>, MetaSwipes vom 14. August 2023</li>
</ul>
</section>
<section id="links-1" class="level4">
<h4 class="anchored" data-anchor-id="links-1">Links</h4>
<ul>
<li><a href="https://tensor.art/">Tensor Art Home</a> – gleichzeitig Online App</li>
<li><a href="https://tams.tensor.art/">TAMS: Tensor Art Model Service</a> – Tensor Art API</li>
<li><a href="https://tams-docs.tensor.art/">TAMS Docs</a></li>
<li><a href="https://github.com/Tensor-Art/tams-sdk.js">TAMS @ GitHub</a></li>
</ul>
<p>Die verlinkten (Video-) Tutorials werden mich so lange beschäftigen (müssen), bis ich die Nachwirkungen (hoffentlich bald!) überstanden habe. Und der Prompt mit der leichtbeschüzten Kriegerin in ihrem Kampf gegen böse Aliens hat seine Schuldigkeit auch getan. Ich glaube SeaArt AI, <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> und Tensor Art mittlerweile (respektive meine Tests haben mir gezeigt – ich habe nicht umsonst die Reizwörter <em>naked</em>, <em>boobs</em> und <em>butt</em> im Prompt verwendet), daß sie im Rahmen ihrer Möglichkeiten (ihrer LoRAs) auf Zensur verzichten. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53420545211/">Female Warrior vs Alien</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/tensorart.html">Tensor Art</a>, Prompt: »<em>A female naked warrior with long blonde hairs, blue eyes, red lips, big boobs and a nice butt fights against an alien, using karate kicks, in a jungle</em>«, Negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person</em>«. Modell: SDXL 1.0, Style: AniPop Style.</p>


</section>
</section>

 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>SeaArt</category>
  <category>Tensor Art</category>
  <guid>https://kantel.github.io/posts/2024011401_seaart_tensorart/index.html</guid>
  <pubDate>Sun, 14 Jan 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011401_seaart_tensorart/images/femwarriorta.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Weitere Scenario-Tests und -Tutorials</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011201_scenario_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53459455338/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot11-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Was macht man, wenn einem die Folgen einer Corona-Auffrischungsimpfung (kombiniert mit einer Grippe-Impfung) beinahe vollständig außer Gefecht gesetzt haben? Richtig! Man spielt ein wenig mit der gekünstelten Intelligenzia herum, also in meinem Fall mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, weil ich das sowieso gerade <a href="https://kantel.github.io/posts/2024011101_scenario/">in der Mache</a> habe.</p>
<p>Also habe ich das Teil gebeten, noch ein paar Bilder mit einem (fast) nackten, weiblichen Krieger, die mit Karatekicks gegen böse Aliens kämpft, zu generieren (Prompt: »<em>A female naked warrior with long blonde hairs, blue eyes, red lips, big boops and a nice butt fights against a an alien, using karate kicks, in a jungle</em>«, negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person</em>«, Style: Belgian School Comics):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53457934093/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53458214130/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior03.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53457932908/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior04.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53457932613/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53458213345/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior06.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53457802456/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior07.jpg" class="img-fluid"></a></p>
<p>Um ein wenig Abwechslung in das blonde Einerlei zu bekommen, habe ich den Prompt ein wenig verändert (»<em>A female naked warrior with long blonde hairs, blue eyes, red lips, big boops and a nice butt</em>«) und die Aliens einfach weggelassen:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53457928018/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53457927448/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior09.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53458207860/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior10.jpg" class="img-fluid"></a></p>
<p>Und da Scenario (wie auch alle anderen KIs) bei Charakteren besser mit quadratischen Bildern oder Bildern im Hochformat zurechtkommt, habe ich es einfach auch mal damit ausprobiert:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53459288806/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53459422068/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior12.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53459288701/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/femalewarrior13.jpg" class="img-fluid"></a></p>
<p>Doch <a href="https://kantel.github.io/posts/2024011101_scenario/">zurück</a> zu <em>Poirot und Alice</em>. Auch hierzu habe ich Scenario um ein paar weitere Bilder gebeten (Prompt: »<em>The detective Hercule Poirot meets the maid Alice on the steps of a castle in spring. 1920s style</em>«):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53459463258/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot15.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53458409567/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot16.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53458409347/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot17.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53459327146/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot18.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53458406672/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot19.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53459740210/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot20.jpg" class="img-fluid"></a></p>
<p>Grippeimpfung hin, Coronaimpfung her – ein wenig »Schweinkram« mußte ich dann doch auch in der eigentlich harmlosen Geschichte, in der Poirot das arme Zimmermädchen Alice verhört, unterbringen. Ich tat dies mit folgendem Prompt: »<em>The detective Hercule Poirot interrogates the chambermaid Alice in the bathroom of an English country house. Alice sits naked in the bathtub, Poirot sits on the edge of the tub. 1920s style</em>« und diesem negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person</em>«:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53458401422/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53459634549/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot12.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53459455273/"><img src="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot13.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Selbst bei dieser (meiner) naiven Herangehensweise ist eine gewisse Konsistenz der Figuren bei Scenario zu erkennen. Aber es soll noch besser gehen und darum möchte ich mein Außer-Gefecht-gesetzt-sein nutzen, um mir ein paar Video-Tutorials zu Scenario hereinzuziehen:</p>
<ul>
<li>Scenario Ready Player 3, <a href="https://www.youtube.com/watch?v=tGSSUEe_nK8">Part 1</a> und <a href="https://www.youtube.com/watch?v=1Jl14n1bkEc">Part 2</a> (aus der Playlist »<a href="https://www.youtube.com/playlist?list=PLwO3lt08LXuTOLVPOuelWm4pA9FFDSvZ5">Scenario-Tutorials</a> (18 Videos)).</li>
<li>Scenario-Tutorial: <a href="https://www.youtube.com/watch?v=v_FXC0iq1Sk">This New AI Tool Does Consistent Characters (For Real)</a> mit <a href="https://theoreticallymedia.gumroad.com/l/characters">PDF-Worksheet und Template-Characters</a> zu einem »fairen« Preis.</li>
<li>Murder Mystery: <a href="https://www.youtube.com/watch?v=-co2CLGsCpc">Creating a Point-and-Click Game Scene</a>.</li>
<li>The Stolen Necklace: <a href="https://www.youtube.com/watch?v=0_KAF4TziUY">Creating a Point-and-Click Game Scene</a>.</li>
<li>Und noch eine (Christmas Edition): <a href="https://www.youtube.com/watch?v=escLL8dRtq4">Creating a Point-and-Click Game Scene</a></li>
</ul>
<p>Der YouTube-Kanal von Scenario ist – gelinde gesagt – etwas unaufgeräumt. Doch ein Blick in die <a href="https://www.youtube.com/@scenario_gg/videos">Video-Sammlung</a> (da ist mir besonders das Video »<a href="https://www.youtube.com/watch?v=WIty4yxoMEs">AI Generated Face Expressions – Scenario Canvas</a>« aufgefallen) und in die Playlisten »<a href="https://www.youtube.com/playlist?list=PLwO3lt08LXuQ2FmxBjrIdlwh19eAaQZzm">Scenario-Canvas</a>« und das oben schon verlinkte »<a href="https://www.youtube.com/playlist?list=PLwO3lt08LXuQ2FmxBjrIdlwh19eAaQZzm">Scenario-Tutorials</a> lohnt auf jeden Fall.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53459455338/">Poirot verhört Alice im Bad</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>The detective Hercule Poirot interrogates the chambermaid Alice in the bathroom of an English country house. Alice sits naked in the bathtub, Poirot sits on the edge of the tub. 1920s style</em>«, Negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person</em>«. Modell: Belgian School Comics.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <guid>https://kantel.github.io/posts/2024011201_scenario_2/index.html</guid>
  <pubDate>Fri, 12 Jan 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011201_scenario_2/images/alicepoirot11.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Scenario</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011101_scenario/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53457976740/"><img src="https://kantel.github.io/posts/2024011101_scenario/images/poirot01-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da mir nach dem <a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/">gestrigen Testlauf</a> klar war, daß <a href="https://app.scenario.com/">Scenario</a> das nächste KI-Werkzeug zur Bildergenerierung werden wird, das ich ausführlich nutzen und testen werde, dachte ich mir, daß es an der Zeit sei, dem Teil auch <strong><a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> zu spendieren:</p>
<p>Scenario ist ein KI-Bildgenerator (als Online-App wie auch als API nutzbar), der sich auf die Erstellung von Game-Asset-Bildern und Comics spezialisiert hat. Und er will das Problem der Charakter-Konsistenz endgültig gelöst haben. Auch wenn ich das nicht so ganz glaube, die bisher veröffentlichten Bilder und Tutorials sind schon beeindruckend.</p>
<p>Scenario verspricht, nicht zu zensieren. Bei der Anmeldung muß man daher bestätigen, daß man mindestens 18 Jahre oder älter ist. Die Engine, die bei Scenario im Hintergrund werkelt, ist vermutlich <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> (noch nicht bestätigt).</p>
<p>Das Preismodell für den kostenlosen Account ist (derzeit noch?) ein wenig schwammig formuliert, aber das Haupthindernis scheinen weniger die Anzahl der Bilder als mögliche Wartezeiten zu sein. Wer sicher gehen will, muß in den sauren Apfel beißen und ein Abo (ab 29&nbsp;US-$/Monat) abschließen.</p>
<section id="links" class="level3">
<h3 class="anchored" data-anchor-id="links">Links</h3>
<ul>
<li><a href="https://www.scenario.com/">Scenario Home</a></li>
<li><a href="https://www.scenario.com/pricing">Scenario Preisliste</a></li>
<li><a href="https://app.scenario.com/">Scenario Webapp</a></li>
<li><a href="https://help.scenario.com/">Scenario Knowledge Center</a></li>
<li><a href="https://www.youtube.com/@scenario_gg">Scenario @ YouTube</a></li>
</ul>
<p>Besonders das <em>Knowledge Center</em> scheint eine hilfreiche Quelle für meine Experimente zu sein. Ich werde auf jeden Fall weiter testen und berichten. <em>Still digging!</em></p>
<p>Und da ich dem gestrigen Eindruck entgegentreten möchte, ich würde mit den zensurfreien Bildgeneratoren der gekünstelten Intelligenzia nur »Schweinekram« produzieren wollen, habe ich für das heutige Bannerbild <em>Scenario</em> gebeten, eine Zeichnung zu erstellen, die zeigt, wie <em><a href="https://de.wikipedia.org/wiki/Hercule_Poirot">Hercule Poirot</a></em> auf Alice trifft. Harmloser geht es wohl kaum! Und ein belgischer Meisterdetektiv ist sicher ein ideales Objekt für den Stil <em>Belgian School Comics</em>.&nbsp;🤓</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53457976740/">Hercule Poirot trifft Alice</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>, Prompt: »<em>The detective Hercule Poirot meets the maid Alice on the steps of a castle in spring. 1920s style</em>«. Modell: Belgian School Comics.</p>


</section>

 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <guid>https://kantel.github.io/posts/2024011101_scenario/index.html</guid>
  <pubDate>Thu, 11 Jan 2024 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011101_scenario/images/poirot01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53455205826/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie ich schon oft beklagt hatte, ist bei vielen (Online-) Diensten, bei denen man mithilfe gekünstelter Intelligenzia Bilder generieren kann, eine gestrenge Zensorin am Werk, deren Maßstäbe, ab wann ein Bild »unangemessen« sei, zudem ziemlich undurchschaubar sind. Daher habe ich mir für diesen Beitrag drei Online-Dienste angeschaut, die explizit Bildgenerierung ohne Zensur versprechen: <a href="https://app.scenario.com/">Scenario</a>, <a href="https://tensor.art/">Tensor Art</a> und <a href="https://www.seaart.ai/de">SeaArt</a>.</p>
<p>Allen drei gemeinsam ist, daß sie bei der Anmeldung explizit die Versicherung verlangen, daß man älter als 18 Jahre ist. Außerdem scheinen alle drei auf <a href="http://cognitiones.kantel-chaos-team.de/">Stable Diffusion</a> zu basieren (bei Tensor Art und SeaArt bin ich mir sicher, bei Scenario vermute ich es derzeit nur).</p>
<section id="scenario" class="level3">
<h3 class="anchored" data-anchor-id="scenario">Scenario</h3>
<p><strong>Scenario</strong> (mit dem ich das obige <a href="https://www.flickr.com/photos/schockwellenreiter/53455205826/">Bannerbild</a> erstellt habe, ist nicht nur wegen des Versprechens auf Zensurfreiheit interessant für mich, sondern auch, weil der Dienst auf Generierung von Bildern für interaktive Geschichten und <em>Visual Novels</em> spezialisiert ist. Daher soll die Generierung von konsistenten Charakteren hier auch sehr einfach möglich sein. Ich werde mit dem Teil auf jeden Fall noch weitere Testversuche unternehmen.</p>
</section>
<section id="tensor-art" class="level3">
<h3 class="anchored" data-anchor-id="tensor-art">Tensor Art</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53420968520/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor2.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine ersten Versuche mit <strong>Tensor Art</strong> brachten (bei gleichem Prompt) nahezu identische Ergebnisse, wie bei Scenario. Das Modell ist hier Stable Diffusion XL. Und auch wenn der Style hier <em>AniPop</em> und nicht <em>Belgian School Comic</em> heißt, ist diese Ähnlichkeit der Grund für meine Vermutung, daß auch Scenario ein Stable-Diffusion-Anwendung ist.</p>
</section>
<section id="seaart" class="level3">
<h3 class="anchored" data-anchor-id="seaart">SeaArt</h3>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53455955395/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor3.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53455545091/"><img src="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor4.jpg" class="img-fluid"></a></p>
<p>Letzter Kandidat meiner heutigen Versuchsreihe ist <strong>SeaArt</strong>, ein Dienst, den ich ganz frisch heute entdeckt habe. Eine Besonderheit ist, daß die App zumindest über eine deutschsprachige Nutzerschnittstelle verfügt. Ob sie auch mit deutschen Prompts umgehen kann, konnte ich noch nicht verifizieren, da ich – um vergleichen zu können – den gleichen Prompt verwendete, wie bei den beiden anderen Anwendungen. Das Modell ist auch hier Stable Diffusion XL und der (von mir) ausgewählte Style heißt <em>AnimeGood XL</em>.</p>
<p>Allen drei Programmen ist gemein, daß sie über eine unübersichtlich hohe Anzahl von <em>Styles</em> verfügen, die einen starken Einfluß auf das generierte Ergebnis haben. Daher werde ich sicher noch weitere Tests durchführen, bevor ich zu einem Urteil kommen kann.</p>
<p>Außerdem ist bei allen dreien die Anzahl der Bilder, die man mit einem kostenlosen Zugang generieren kann, beschränkt. Während Tensor Art (wenn ich die Preisliste korrekt verstanden habe) – ähnlich wie <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> – ein Bezahlmodell anbietet, bei dem nur der tatsächliche Verbrauch zu Buche schlägt – muß man bei den anderen Diensten ein Abo abschließen. Aber ich versuche erst einmal, mich mit den kostenlosen Accounts durchzumogeln. Schaun wie mal, wie weit ich damit komme. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53455205826/">Nackte Kriegerin</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>, Prompt: »<em>A female naked warrior with long blonde hairs, blue eyes, red lips, big boops, nice butt, fights against an alien, in a jungle, using karate kicks,</em>«, Negative Prompt: »<em>EasyNegative, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person</em>«. Modell: Belgian School Comics.</p>


</section>

 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <category>Tensor Art</category>
  <category>SeaArt</category>
  <guid>https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html</guid>
  <pubDate>Wed, 10 Jan 2024 18:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/images/kiohnezensor1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 120 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024011001_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53395464669/"><img src="https://kantel.github.io/posts/2024011001_chrome_update/images/datenkrake3-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Google veröffentlicht das Update der Version 120 (120.0.6099.216/217) seines Browsers Chrome und schließt damit eine <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop_9.html">kritische Sicherheitslücke</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53395464669/">Datenkrake bei der Arbeit</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>, Prompt: »<em>Data octopus at work</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024011001_chrome_update/index.html</guid>
  <pubDate>Wed, 10 Jan 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024011001_chrome_update/images/datenkrake3.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: generativepy</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010901_generativepy/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53451950704/"><img src="https://kantel.github.io/posts/2024010901_generativepy/images/generativepy-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Regelmäßige Leser des <em>Schockwellenreiters</em> wissen, daß ich ein <a href="https://kantel.github.io/posts/2023110601_drawbot_reboot/">Faible</a> für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/drawbot.html">Drawbot</a> besitze, einer Python-App für zweidimensionale Graphiken, deren Vorzug es ist, daß sie eher auf Vektor- denn auf Bitmap-Graphiken fokussiert ist und mit ihr daher leicht auflösungsunabhängige Graphiken zum Beispiel für Printerzeugnisse geschaffen werden können. Daher wäre sie ein ideales (und geiles) Werkzeug für mein Projekt »<a href="http://blog.schockwellenreiter.de/2022/03/2022031101.html">Generative Art zwischen zwei Pappedeckel</a>«, mit dem ich dem NFT-Hype den Stinkefinger zeigen möchte. Ihr Nachteil ist aber, daß sie nur unter macOS läuft und ich möchte einfach nicht schon wieder in die Mac-Only-Falle tapsen.</p>
<p>Jetzt ist mir aber vor wenigen Tagen <a href="https://generativepy.com/book/what-is/">generativepy</a> untergekommen, eine kostenlose, freie (MIT-Lizenz) Open-Source-Bibliothek von <em>Martin McBride</em> zum Erstellen von Diagrammen, Bildern und Animationen in Python. Bei ihr liegt ähnlich wie bei Drawbot der Schwerpunkt auf die Erzeugung von Vektorgraphiken (sie kann aber – wie Drawbot auch – Bitmaps; und auch Animationen erzeugt sie ähnlich wie Drawbot als eine Folge von Einzeldateien). Die <a href="https://generativepy.com/book/installation/">Installation</a> ist wegen einiger Abhängigkeiten, die von <code>pip</code> oder <code>conda</code> nicht aufgelöst werden (können), nicht unbedingt trivial, aber auch Anfänger sollten sie anhand der Anleitung schaffen. (Vorsicht: Ich habe <code>pycairo</code> nicht innerhalb von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a> installiert bekommen, irgendetwas stimmt mit dem <code>wheel</code>-Modul dort nicht, aber mein <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda-Python</a> installierte <em>Cairo</em> ohne zu murren.)</p>
<p>Die anderem »minimalen« Anforderungen (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/numpy.html">Numpy</a> und <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a>) hatte ich sowieso schon installiert und <code>dvipng</code> ist Bestandteil meiner <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/latex/latex.html">MacTeX</a>-Installation, so daß einem <a href="https://generativepy.com/book/simple-image/">ersten Test</a> (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53451950704/">Screenshot</a>) nichts im Wege stand.</p>
<p>Auch wenn ich damit bisher nur an der Oberfläche gekratzt habe, das Teil scheint Potential zu haben. Daher habe ich ihm <strong><a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/generativepy.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert:</p>
<section id="literatur-und-tutorials" class="level3">
<h3 class="anchored" data-anchor-id="literatur-und-tutorials">Literatur und Tutorials</h3>
<ul>
<li><a href="https://www.graphicmaths.com/">GraphicMaths</a>, <em>Martin McBrides</em> begleitende Website zum <a href="https://www.youtube.com/@graphicmaths7677">GraphicMaths YouTube-Kanal</a>. Die Illustrationen und Animationen dort werden in der Hauptsache mit <em>generativepy</em> erstellt.</li>
<li>Martin McBride: <em><a href="https://www.pythoninformer.com/generative-art/">Generative Art</a></em> @ <em><a href="https://www.pythoninformer.com/">PythonInformer</a></em></li>
<li>Martin McBride: <em><a href="https://generativepy.com/book/">The generativepy Book</a></em> (WiP)</li>
<li><a href="https://martinmcbride.org/blog/">Martin McBrides Blog</a></li>
</ul>
</section>
<section id="links" class="level3">
<h3 class="anchored" data-anchor-id="links">Links</h3>
<ul>
<li><a href="https://generativepy.com/">generativepy Home</a></li>
<li><a href="https://github.com/martinmcbride/generativepy">generativepy @ GitHub</a></li>
<li><a href="https://pypi.org/project/generativepy/">generativepy @ PyPI</a></li>
<li><a href="https://generativepy.com/generativepy/">generativepy Reference</a></li>
<li><a href="https://www.pythoninformer.com/generative-art/generativepy-tutorial/">generativepy Tutorial</a></li>
</ul>
<p>Und als ersten Versuch habe ich dieses kleine Skriptchen zum Laufen bekommen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> generativepy.drawing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> make_image, setup</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> generativepy.color <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Color</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> generativepy.geometry <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Rectangle</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-5"></span>
<span id="cb1-6">file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>))</span>
<span id="cb1-7">image_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images"</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw(ctx, pixel_width, pixel_height, frame_no, frame_count):</span>
<span id="cb1-10"></span>
<span id="cb1-11">    setup(ctx, pixel_width, pixel_height, background<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.92</span>))</span>
<span id="cb1-12"></span>
<span id="cb1-13">    color0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.18</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.20</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.22</span>)</span>
<span id="cb1-14">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>).fill(color0)</span>
<span id="cb1-15">    color1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.77</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.47</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.22</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-16">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).fill(color1)</span>
<span id="cb1-17">    color2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.69</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.91</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-18">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">170</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).fill(color2)</span>
<span id="cb1-19">    color3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.94</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.29</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.17</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb1-20">    Rectangle(ctx).of_corner_size((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>).fill(color3)</span>
<span id="cb1-21"></span>
<span id="cb1-22">make_image(os.path.join(image_folder, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rectangle.png"</span>), draw, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)</span>
<span id="cb1-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Das Skript ist noch ein wenig trivial, man kann aber dennoch schon erahnen, was mit dieser Bibliothek alles möglich sein könnte. <em>Still digging!</em></p>


</section>

 ]]></description>
  <category>generativepy</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Generative Art</category>
  <guid>https://kantel.github.io/posts/2024010901_generativepy/index.html</guid>
  <pubDate>Tue, 09 Jan 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010901_generativepy/images/generativepy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Traktor Terror (2)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010802_traktor_terror_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53451375514/"><img src="https://kantel.github.io/posts/2024010802_traktor_terror_2/images/tractorterror02-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Des deutschen Landwirts feuchter Traum: Die Demokratie kriecht zu Kreuze.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53451375514/">Traktor Terror</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>Tractor Terror with many tractors and horror farmers, in a big city, steampunk style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book</p>



 ]]></description>
  <category>Politik</category>
  <guid>https://kantel.github.io/posts/2024010802_traktor_terror_2/index.html</guid>
  <pubDate>Mon, 08 Jan 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010802_traktor_terror_2/images/tractorterror02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neuköllner Bilderbogen: Müllkippe Bürgerstraße</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010801_muell_buergerstrasse/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53451395755/"><img src="https://kantel.github.io/posts/2024010801_muell_buergerstrasse/images/muellkippebuergerstrasse-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Alle Jahre wieder: Der Weihnachtsmann hat neue Möbel gebracht. Die alten müssen raus!</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2024010801_muell_buergerstrasse/index.html</guid>
  <pubDate>Mon, 08 Jan 2024 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010801_muell_buergerstrasse/images/muellkippebuergerstrasse.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bitsybox: Bitsy-Spiele auf dem Desktop</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010702_bitsybox/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53448091287/"><img src="https://kantel.github.io/posts/2024010702_bitsybox/images/bitsybox-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie geil ist das denn? Da spülte in meinen Feedreader die Meldung herein, daß <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>, die kleine, bewußt extrem minimalistisch gehaltene Engine für narrative, interaktive Spiele in der Version 8.9 erschienen sei. Das nahm ich zum Anlaß, mal wieder auf den <a href="https://ledoux.itch.io/bitsy">Seiten</a> von <em>Adam Le Doux</em> herumzustöbern, und fand dort die <a href="https://ledoux.itch.io/bitsybox">Bitsybox</a>, einen Bitsy-Emulator für Windows, macOS, Raspberry Pi und Linux, mit dem man Bitsy-Spiele »native« auf den genannten Plattformen abspielen kann.</p>
<p>Das mußte ich natürlich sofort ausprobieren und habe die Binärdatei für macOS unter obiger URL heruntergeladen. Die für ein Spiel benötigte Datei mit der Endung <code>.bitsy</code> erhält man im Bitsy-Editor mit dem Werkzeug <code>Spieledaten</code>, über das man diese Datei dann herunterladen kann. Die Bitsybox sucht diese Datei dann im Verzeichnis <code>games</code>, das im gleichen Verzeichnis wie das Programm (auf dem Mac <code>bitsybox.app</code>) liegen muß. Im originalen macOS-Download ist das ein Alias, der auf <code>Contents/Frameworks/games</code> zeigt, wo zwei mitgelieferte Demo-Spiele liegen.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53449484989/"><img src="https://kantel.github.io/posts/2024010702_bitsybox/images/bitsydata.jpg" class="img-fluid figure-img"></a></p>
<figcaption class="figure-caption">Bitsy-Werkzeug »Spieledaten«</figcaption>
</figure>
</div>
<p>Aber nichts hindert einen daran, diesen Alias durch ein »echtes« <code>games</code>-Verzeichnis zu ersetzen. Denn liegt darin nur eine einzige <code>.bitsy</code>-Datei, startet die Bitsybox (auf dem Mac, wenn man beim ersten Start der App die übliche, nervende Sicherheitsabfrage überwunden hat) direkt mit diesem Programm. Ich habe dies mit meinen <a href="http://blog.schockwellenreiter.de/2022/06/2022060901.html">nächtlichen Streifzügen durch den Bürgerpark</a> getestet – man kann damit quasi ein Bitsy-Spiel so vertreiben, daß es sich wie eine native App anfühlt.</p>
<p>Wenn das nicht geil ist, was ist es dann?</p>



 ]]></description>
  <category>Bitsy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024010702_bitsybox/index.html</guid>
  <pubDate>Sun, 07 Jan 2024 19:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010702_bitsybox/images/bitsybox.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Bilder von einer KI: Der Dachs als Künstler</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010701_badger_artist/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53447239860/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>»Aus Gründen« hatte ich gestern mal wieder die gekünstelte Intelligenzia, <a href="https://beta.dreamstudio.ai/generate">die derzeit mein Vertrauen besitzt</a>, angeworfen und sie Bilder eines Dachses generieren lassen, ausgestattet mit Staffelei und Farbplaletten, der im Frühling an einem Fluß unter Weiden sitzt und Bilder malt. Ich gestehe, bei der Erstellung dieses Prompts habe ich mich von dem Kinderbuchklassiker »<a href="https://de.wikipedia.org/wiki/Der_Wind_in_den_Weiden">The Wind in the Willows</a>« von <em>Kenneth Grahame</em> inspirieren lassen.</p>
<p>Die Bilder sind wieder teilweise so nett geworden, daß ich sie Euch nicht vorenthalten kann:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53447695067/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53445896007/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53445896227/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447233860/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53445896302/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53447139219/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53445899552/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446956233/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446956288/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist09.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447142694/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446825856/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446828986/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist12.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447244060/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist13.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446963218/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist14.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446829831/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist15.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53447149329/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist16.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53446966098/"><img src="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist17.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Und die »Gründe« für diese Bildchen? Eigentlich gab es nur einen und dazu noch trivialen Grund: Ich hatte meiner Sammlung von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/bauhausb.html">Bauhaus-B-Farbpaletten</a> ein paar weitere hinzugefügt und suchte nach einer Illustration dafür. Diese Suche ist dann ein wenig ausgeartet.&nbsp;🤓</p>
<p>Aber Ihr könnt noch mehr erwarten. Denn neben dem Fakt, daß noch weitere DreamStudio-Experimente der Veröffentlichung harren, möchte ich ein paar Versuche einmal mit <a href="https://tensor.art/">Tensor Art</a> und zum zweiten mit <a href="https://app.scenario.com/">Scenario</a> durchführen. Beides scheinen ebenfalls <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a>-Anwendungen zu sein. Während die erste eine Nutzung ohne Zensur verspricht, ist die zweite darauf spezialisiert, Bilder für <em>Visual Novels</em> und andere Formen des interaktiven Erzählens von Geschichten zu generieren. Also genau mein Anwendungsszenarium. Ich bin selber auf die Ergebnisse gespannt. <em>Still digging!</em></p>
<hr>
<p><strong>Bilder</strong>: <em>Ein Dachs als Künstler</em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A badger in a dressing gown stands in front of his den at an easel, holds a palette in his right hand and a brush in his left hand and paints a picture. It’s a sunny spring morning, in the background you can see a quiet river surrounded by willows. colored french comic style</em>«, Modell: stable-diffusion-xl-1024-v1-0, Style: Comic Book.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Farbpaletten</category>
  <guid>https://kantel.github.io/posts/2024010701_badger_artist/index.html</guid>
  <pubDate>Sun, 07 Jan 2024 16:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010701_badger_artist/images/badgerartist00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hexagonaler Random Walker (mit der Turtle und in Trinket)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010501_hex_rand_walk/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53441590727/"><img src="https://kantel.github.io/posts/2024010501_hex_rand_walk/images/hexawalker-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Da ich mit <a href="https://kantel.github.io/posts/2023122201_turtle_spirale/">meinen</a> <a href="https://kantel.github.io/posts/2023122802_mehr_farben_mehr_ecken/">Spiralen</a> Blut geleckt hatte, wollte ich unbedingt zu Beginn des Jahres noch etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> anstellen. Also habe ich den <a href="http://blog.schockwellenreiter.de/2017/12/2017121304.html">hexagonalen Random Walk</a>, den ich im Dezember 2017 schon einmal hier in diesem <del>Blog</del> Kritzelheft vorgestellt hatte, wieder aus der Mottenkiste hervorgekramt und ein wenig aufgehübscht.</p>
<p>Die wichtigste Änderung war, daß ich nun, wenn der Random Walker das Spielfeld verlassen will, ihn zurück an Start schicke, und er seine Reise neu antreten muß (das ist ein wenig wie beim Monopoly-Spiel). Außerdem habe ich, um die Reise farbiger zu gestalten, nicht nur auf die bewährte <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/codingtrainfarben.html">Coding Train Farbpalette</a> zurückgegriffen, sondern auch die Schildkörte angewiesen, alle zwanzig Schritte ihre Farbe zu wechseln.</p>
<p>Da die Reise durch das hexagonale Turtle-Universum nur dann Spaß macht, wenn man der Schildkröte bei ihrem Herumirren zusehen kann, habe ich mich an meine <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a>-<a href="https://kantel.github.io/#category=Trinket">Experimente</a> erinnert, den Random-Walk auch dort implementiert und das Ergebnis dann in diese Seite eingebunden:</p>
<iframe src="https://trinket.io/embed/python/5a5da6439d?outputOnly=true" width="100%" height="550" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen="">
</iframe>
<p>Das lief erstaunlich schmerzfrei ab, der <a href="https://trinket.io/library/trinkets/5a5da6439d">Trinket-Code</a> verlangte nur eine Änderung von meiner Original-Python-Implementierung: Die Hintergrundfarbe des Canvas kann erst initialisiert werden, <strong>nachdem</strong> der Turtle-Screen erstellt wurde.</p>
<p>Die restlichen Änderungen sind rein kosmetischer Natur (Anpassung an die Breite der Webseite etc.).</p>
<p>Nun für alle neugierigen, kreativen Codiererinnen und Codierer unter Euch da draußen den vollständigen Quellcode, den es auch wie immer in meinem <a href="https://github.com/kantel/turtlepy/blob/master/sources/hexrandomwalk3.py">GitHub-Repositorium</a> gibt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> turtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> t</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> r</span>
<span id="cb1-3"></span>
<span id="cb1-4">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">540</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb1-5">MIN_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-6">MAX_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb1-7">MIN_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-8">MAX_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> </span>
<span id="cb1-9">BORDERSIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-10">STEPSIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">codingtrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f05025"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f89e50"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f8ef22"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f063a4"</span>,</span>
<span id="cb1-13">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#9252a1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#817ac6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#62c777"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#31c5f4"</span>]</span>
<span id="cb1-14"></span>
<span id="cb1-15">wn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Screen()</span>
<span id="cb1-16">wn.colormode(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb1-17">wn.bgcolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2a282d"</span>)</span>
<span id="cb1-18">wn.setup(width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT, startx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>, starty <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-19">wn.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🐢 Hexagonaler Random Walk 🐢"</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw Border</span></span>
<span id="cb1-22">border <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Turtle()</span>
<span id="cb1-23">border.speed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-24">border.pensize(BORDERSIZE)</span>
<span id="cb1-25">border.pencolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e6e2cc"</span>)</span>
<span id="cb1-26">border.penup()</span>
<span id="cb1-27">border.hideturtle()</span>
<span id="cb1-28">border.goto(MIN_X, MIN_Y)</span>
<span id="cb1-29">border.pendown()</span>
<span id="cb1-30">border.goto(MAX_X, MIN_Y)</span>
<span id="cb1-31">border.goto(MAX_X, MAX_Y)</span>
<span id="cb1-32">border.goto(MIN_X, MAX_Y)</span>
<span id="cb1-33">border.goto(MIN_X, MIN_Y)</span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Random Walk</span></span>
<span id="cb1-36">hexi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t.Turtle()</span>
<span id="cb1-37">hexi.speed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-38">hexi.pensize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> go_home():</span>
<span id="cb1-41">    hexi.penup()</span>
<span id="cb1-42">    hexi.home()</span>
<span id="cb1-43">    hexi.pendown()</span>
<span id="cb1-44"></span>
<span id="cb1-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>):</span>
<span id="cb1-46"></span>
<span id="cb1-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set Pencolor</span></span>
<span id="cb1-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-49">        hexi.pencolor(codingtrain[r.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(codingtrain) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)])</span>
<span id="cb1-50"></span>
<span id="cb1-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Roll Dice and set Angle</span></span>
<span id="cb1-52">    roll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-53">    angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb1-54">    hexi.seth(angle)</span>
<span id="cb1-55">    </span>
<span id="cb1-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb1-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> hexi.xcor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MAX_X:</span>
<span id="cb1-58">        go_home()</span>
<span id="cb1-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> hexi.xcor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> MIN_X:</span>
<span id="cb1-60">        go_home()</span>
<span id="cb1-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> hexi.ycor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> MAX_Y:</span>
<span id="cb1-62">        go_home()</span>
<span id="cb1-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> hexi.ycor() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MIN_Y:</span>
<span id="cb1-64">        go_home()</span>
<span id="cb1-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-66">        hexi.fd(STEPSIZE)</span>
<span id="cb1-67"></span>
<span id="cb1-68"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span>
<span id="cb1-69">wn.exitonclick()</span>
<span id="cb1-70">wn.mainloop()</span></code></pre></div>
<p>Und die <a href="https://trinket.io/python/5a5da6439d">Trinket-Implementierung</a> findet Ihr natürlich auf Trinket selber. Ihr könnt Euch davon eine Fork erstellen und weiter damit herumspielen. Habt Spaß dabei!</p>



 ]]></description>
  <category>Python</category>
  <category>Turtle</category>
  <category>Trinket</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2024010501_hex_rand_walk/index.html</guid>
  <pubDate>Fri, 05 Jan 2024 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010501_hex_rand_walk/images/hexawalker.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google: Die ersten Updates in diesem Jahr</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024010402_google_updates/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53378209665/"><img src="https://kantel.github.io/posts/2024010402_google_updates/images/androidutopia-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die ersten Updates in diesem noch sehr jungen Jahr kamen – ich hatte auch nichts anderes erwartet – aus dem Hause Google. Dabei trudelten beide so zeitnah hintereinander bei mir ein, daß ich sie <em>en bloc</em> abhandeln kann. Doch der Reihe nach:</p>
<section id="google-schließt-am-januar-patchday-wieder-sicherheitslücken-in-android" class="level3">
<h3 class="anchored" data-anchor-id="google-schließt-am-januar-patchday-wieder-sicherheitslücken-in-android">Google schließt am »Januar-Patchday« wieder Sicherheitslücken in Android</h3>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-01-01?hl=de">Sicherheitsupdate für Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-01-01?hl=de">Pixel-Geräten</a>) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro, Pixel 5 verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. Samsung befindet sich wieder an vorderster Front.</p>
</section>
<section id="google-korrigiert-mit-version-120-seines-browsers-chrome-kritische-sicherheitslücken" class="level3">
<h3 class="anchored" data-anchor-id="google-korrigiert-mit-version-120-seines-browsers-chrome-kritische-sicherheitslücken">Google korrigiert mit Version 120 seines Browsers Chrome kritische Sicherheitslücken</h3>
<p>Google veröffentlicht das Update der Version 120 (120.0.6099.199/200) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2024/01/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53378209665/">Grüner Android</a></em>, erstellt mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a>. Prompt: »<em>a little green robot helds a mobilphone in an futuristic city. colored french comic style</em>«, Model: Stable Diffusion XL 1.0, Style: Comic Book.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024010402_google_updates/index.html</guid>
  <pubDate>Thu, 04 Jan 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024010402_google_updates/images/androidutopia.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
