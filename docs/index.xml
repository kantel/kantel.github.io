<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Sun, 29 Jun 2025 17:35:00 GMT</lastBuildDate>
<item>
  <title>Prost! Erste Schritte mit Prosec(c)o</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062901_proseco_first_steps/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54621770541/"><img src="https://kantel.github.io/posts/2025062901_proseco_first_steps/images/proseco-b.jpg" class="img-fluid"></a></p>
<p>Durch meinen <a href="https://kantel.github.io/posts/2025062801_python_im_browser/">gestrigen Beitrag</a> angefixt, wollte ich heute unbedingt etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html">PyScript</a> und <a href="https://proceso.cc/">Proseco</a> anstellen. Nachdem mich die <a href="https://proceso.cc/welcome/getting_started#local-anaconda-vs-code">Dokumentation</a> erst einmal in die Irre führte (<code>pip install proceso</code> funktionierte bei mir einfach nicht), fand ich durch wildes Herumexperimentieren heraus, daß ich Proseco auch lokal auf meinem Rechner ohne eine vorhergegangene Installationsorgie betreiben kann:</p>
<p>Das Einzige, was vorhanden sein muß, ist ein installiertes, einigermaßen aktuelles Python und der Texteditor Eures Vertrauens (bei mir ist es <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> mit den üblichen <em>Python Extensions</em>). Danach habe ich mir von <a href="https://pyscript.com/@4b2d42a1-0e0c-430f-8b20-4b2c7ff0dc3e/58197361-1c5f-4d47-93a9-91570255fe85/latest?files=index.html">diesem Projekt-Template</a> einfach die Dateien <code>index.html</code>, <code>pyscript.json</code>, <code>style.css</code> und <code>sketch.py</code> heruntergeladen und zusammen in <strong>einem</strong> Projektverzeichnis abgelegt. Falls Ihr nichts seltsames vorhabt, könnt Ihr erst einmal die ersten drei Dateien unverändert lassen, lediglich in der Datei <code>sketch.py</code> müßt Ihr Euren eigenen Code hineinschreiben. In meinem Fall war das:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> proceso <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Sketch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-3"></span>
<span id="cb1-4">p5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sketch()</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> setup():</span>
<span id="cb1-7">    p5.create_canvas(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>)</span>
<span id="cb1-8">    p5.background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">197</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">244</span>)</span>
<span id="cb1-9">    p5.fill(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">146</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">161</span>)</span>
<span id="cb1-10">    p5.rect(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, p5.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, p5.height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb1-11">    p5.fill(randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>), randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>), randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb1-15">    p5.circle(p5.mouse_x, p5.mouse_y, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> mouse_clicked():</span>
<span id="cb1-18">    p5.fill(randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>), randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>), randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">220</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20">p5.run_sketch(setup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>setup, draw<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>draw, mouse_clicked<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mouse_clicked)</span></code></pre></div>
<p>Wenn ich dann die <code>index.html</code> <strong>hinter</strong> einem (lokalen) Webserver (ich nutze dafür immer noch den betagten, aber bewährten <a href="http://cognitiones.kantel-chaos-team.de/webworking/mamp.html">MAMP</a>) aufrufe, bekommt Ihr untenstehendes Ergebnis angezeigt:</p>
<iframe src="proseco/index.html" width="100%" height="400">
</iframe>
<p>Das ist eine abgewandelt Version des bekannten <a href="https://py5coding.org/index.html">Py5-Beispielscripts</a> (ein Mausklick ändert die Farben der Bällchen), das ich noch ein wenig aufgepeppt habe.</p>
<p>Wenn Ihr Euch die <code>index.html</code> anschaut,</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> html<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">html</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> lang</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"de"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-4">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Python mit Balls<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">title</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">meta</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width,initial-scale=1"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-7">    </span>
<span id="cb2-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Load PyScript --&gt;</span></span>
<span id="cb2-9">     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">link</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://pyscript.net/releases/2024.1.3/core.css"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb2-10">     <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"module"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://pyscript.net/releases/2024.1.3/core.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> </span>
<span id="cb2-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Load p5.js --&gt;</span></span>
<span id="cb2-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.0/p5.min.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Load custom styles --&gt;</span></span>
<span id="cb2-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">link</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"style.css"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">/&gt;</span></span>
<span id="cb2-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">head</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">main</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">main</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>   </span>
<span id="cb2-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- Load sketch --&gt;</span></span>
<span id="cb2-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"py"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sketch.py"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> config</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pyscript.json"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-20"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">body</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-21"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">html</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>dann seht Ihr, daß die PyScript-Dateien (JavaScript und CSS) sowie die minimierte P5.js-Datei von extern geladen werden. Ich habe es versucht: Zwar kann ich die <code>p5.js</code>-Datei auch lokal auf meinem Rechner installieren und zur Mitarbeit bewegen, die PyScript <code>core.js</code>-Datei dagegen war ums Verrecken nicht zur lokalen Mitarbeit bereit, sie bestand darauf, auf dem Server von <code>pyscript.net</code> aufgerufen zu werden.</p>
<p>Das steht natürlich ein wenig meinen Bemühungen um digitale Souveränität im Wege, ist aber leider bei vielen Diensten, die über CDNs geladen werden, gängige Praxis. Daher habe ich das erst einmal hingenommen. Doch wenn jemand von Euch da draußen eine Idee hat, wie man die <code>core.js</code> und die <code>core.css</code> auch lokal installiert bekommt, bitte ich um Mitteilung in meinen Kommentaren.</p>
<p>Die installierte <code>style.css</code> birgt keine Geheimnisse,</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb3-1">html<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-2">body {</span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">padding</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">}</span>
<span id="cb3-6"></span>
<span id="cb3-7">canvas {</span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">display</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">block</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">}</span></code></pre></div>
<p>aber CSS-Gurus wissen sicher, wie sie sich darin austoben können.</p>
<p>Noch ein Geheimnis ist für mich die Konfigurationsdatei <code>pyscript.json</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource json number-lines code-with-copy"><code class="sourceCode json"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"packages"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proceso"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"name"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proceso starter Copy"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Das ist der einzige Ort, an dem überhaupt <code>proseco</code> vorkommt und darüber weiß vermutlich PyScript, daß und wo es sich das Modul Proseco hereinziehen muß. Momentan nehme ich daß noch einfach so hin (ich freue mich, daß ich alles zum Laufen. bekommen habe), aber irgendwann will ich die Zusammenhänge kapieren. <em>Still digging!</em></p>
<p>Meine erste Einschätzung ist, daß Proseco sehr vielversprechend ist. Es vermählt nicht nur <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> mit dem Python-Ökosystem, sondern erlaubt auch die Erstellung von interaktiven Web-Anwendungen. Es ist daher für alle interessant, die – wie ich – Pickel von den geschweiften Klammern von JavaScript bekommen. Schaun wir mal, was ich damit noch alles anstellen kann. Ich habe also immer noch zu tun!</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54621770541/">Python with Balls</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored Franco-Belgian Comic Style. Illustration of a green python with glasses and a glass of Prosecco in hand is being pelted with colorful plastic balls by white rabbits. The rabbits wear colorful vests and top hats and carry a pocket watch with a large dial. The setting is a fairytale-like small town with colorful, crooked houses</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Python</category>
  <category>PyScript</category>
  <category>Proseco</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025062901_proseco_first_steps/</guid>
  <pubDate>Sun, 29 Jun 2025 17:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062901_proseco_first_steps/images/proseco.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf zu neuen Ufern? Python im Browser</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062801_python_im_browser/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54620166000/"><img src="https://kantel.github.io/posts/2025062801_python_im_browser/images/pythonwglasses-b.jpg" class="img-fluid"></a></p>
<p>Bei all meiner (<a href="https://kantel.github.io/posts/2025052801_tigerjython_reloaded/">wiedererwachten</a>) Begeisterung für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> habe ich nicht vergessen, daß der Software eine wichtige Eigenschaft fehlt: TigerJython läuft nicht im Browser. Das ist natürlich in der heutigen Zeit ein schwerwiegendes Handicap und so habe ich mich nach Alternativen umgeschaut.</p>
<section id="webtigerjython-und-webtigerpython" class="level2">
<h2 class="anchored" data-anchor-id="webtigerjython-und-webtigerpython">WebTigerJython und WebTigerPython</h2>
<p>Das Java-basierte <a href="https://webtigerjython.ethz.ch/">WebTigerJython</a> und das neuere, auf Python&nbsp;3 aufsetzende <a href="https://webtigerpython.ethz.ch/">WebTigerPython</a> (noch <a href="https://www.tigerjython.ch/de/news/WebTigerPython">Beta</a>, hier der <a href="https://docs.webtigerpython.ethz.ch/index.html">Link zur Doku</a>) sind die ersten Alternativen, die mir einfallen. Allerdings scheint WebTigerJython keine Möglichkeit zu haben, die Ergebnisse in eigene Seiten einzubetten. <a href="https://docs.webtigerpython.ethz.ch/iframe.html">WebTigerPython kann dies</a> (als iFrames) und es kann auch Python&nbsp;3-Bibliotheken wie die <a href="https://docs.webtigerpython.ethz.ch/tjlibraries/turtle.html">Turtle</a>, aber auch den <em>Scientific Stack</em> (wie <code>numpy</code>, <code>scipy</code>, <code>sympy</code> oder die <code>matplotlib</code> etc.) nutzen. Doch bei meinen bisherigen Versuchen liefen die Scripte noch arg gemächlich. Hier erwarte ich noch dringend Verbesserungen, aber die Software ist ja auch noch Beta. Wenn sie das Beta-Stadium verlässt, werde ich sie erneut testen.</p>
</section>
<section id="trinket" class="level2">
<h2 class="anchored" data-anchor-id="trinket">Trinket</h2>
<p><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> habe ich hier auf diesen Seiten schon häufig eingesetzt und die Ergebnisse lassen sich auch leicht als iFrames in eigene Seiten einbinden. Zwar hatte hatte ich mir vor einiger Zeit den kostenpflichtigen Plan <a href="https://trinket.io/plans">Code+</a> geleistet, der angeblich Python&nbsp;3 (ebenfalls mit dem <em>Scientific Stack</em>, aber zum Beispiel auch mit <a href="https://github.com/kantel/trinket/blob/main/matplotlibtest/main.py">Pygame</a>) können soll. Aber obwohl der <a href="https://kantel.github.io/posts/2023073101_trinket_matplotlib/">hier monierte Fehler</a> mittlerweile behoben ist, bin ich damit nicht wirklich glücklich (Pygame zum Beispiel läuft immer noch nicht fehlerfrei). Daher kann ich (eingeschränkt!) nur den Umfang des kostenlosen Plans empfehlen.</p>
<section id="turtle" class="level3">
<h3 class="anchored" data-anchor-id="turtle">Turtle</h3>
<p>Das große Plus von Trinket ist die Nutzung der Turtle im Browser, die (<a href="https://kantel.github.io/posts/2023031101_trinket_turtle_ontimer/">fast</a>!) alle Befehle von Pythons Standard-Turtle abdeckt und die für eine Browser-Implementierung sehr schnell ist. Leider bekommt man bei Trinket nie heraus, welche Engine da im Hintergrund werkelt.</p>
</section>
<section id="processing" class="level3">
<h3 class="anchored" data-anchor-id="processing">Processing</h3>
<p>Es gibt bei Trinket in der kostenlosen Version auch noch eine <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a>-Variante, die vermutlich auf <a href="https://github.com/processing-js/processing-js">ProcessingJS</a> aufsetzt. Auch wenn diese – wie auch Processing.py selber – nicht mehr aktualisiert wird, sind die Ergebnisse recht ansprechend. Aber als zukunftsfähig würde ich das nicht (mehr) bezeichnen.</p>
</section>
<section id="vpython" class="level3">
<h3 class="anchored" data-anchor-id="vpython">VPython</h3>
<p>Eine große Stärke (auch des kostenlosen Plans) von Trinket ist die Integration von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/vpython.html">VPython</a> als webbasiertes <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/glowwscript.html">GlowScript</a>. Der Physiker <em><a href="https://blog.trinket.io/rhett-allain-sloppy-code/">Rhett Allain</a></em> von der <em>Southeastern Louisiana University</em> stellt damit unglaubliche Dinge an, die er in seinem <a href="https://www.wired.com/author/rhett-allain/">Blog auf Wired</a> und auf <a href="https://www.youtube.com/@DotPhysics">seinem YouTube-Kanal</a> veröffentlicht. Aber VPython/GlowScript läut natürlich nicht nur auf Trinket, sondern es kann unter anderem auch auf <a href="https://glowscript.org/">Web VPython</a> oder auch lokal zum Beispiel mit JupyterLab <a href="https://vpython.org/presentation2018/install.html">genutzt werden</a>.</p>
<p>Der große Nachteil von Trinket ist, daß das Teil auf einem US-amerikanischen Server liegt. Und das ist in den heutigen Tagen der Trump-Administration und dem verstärkten Druck, seine digitale Souveränität zurückerobern zu müssen, natürlich leider für mich ein Grund, Trinket erst einmal nicht mehr zu nutzen. Aber ich hoffe trotzdem auf bessere Zeiten, denn »vor Trump« hatte ich gerne mit Trinket gespielt.</p>
</section>
</section>
<section id="pygame-via-pygbag" class="level2">
<h2 class="anchored" data-anchor-id="pygame-via-pygbag">Pygame (via Pygbag)</h2>
<p><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> (in Form der Fork <a href="https://pyga.me/">Pygame-CE</a> <em>(Pygame Community Edition)</em>) unterstützt mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> die Möglichkeit, Pygame-Programme <a href="https://kantel.github.io/posts/2024081502_pygame_ce/">webtauglich zu machen</a>. Auch wenn es damit zwischenzeitlich mal mit einem <a href="https://kantel.github.io/posts/2025022501_noc_python/">Bug in macOS Sequoia Probleme</a> gab, ist das eine hervorragende Option, Pygame-Programme ins Web zu bringen und in die eigenen Seiten einzubinden.</p>
</section>
<section id="pyxel" class="level2">
<h2 class="anchored" data-anchor-id="pyxel">Pyxel</h2>
<p>Die kleine (Python&nbsp;3-) Retrogame-Engine oder Fantasy-Konsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pyxel.html">Pyxel</a> kann von Hause aus (<a href="https://kantel.github.io/posts/2025041103_pyxel_tut_3/">mit ein paar Kommandozeilen</a>) die Spiele als HTML-Dateien herausschreiben, die ebenfalls in die eigenen Seiten eingebunden werden können. Im Gegensatz zur Pygame-App mit Pygbag gibt diese beim Verlassen der Seite keine Warnung heraus. Auch wenn ich verstehe, warum Pygbag das macht, finde ich das Webverhalten von Pyxel angenehmer.</p>
</section>
<section id="brython" class="level2">
<h2 class="anchored" data-anchor-id="brython">Brython</h2>
<p><a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> (<strong>Br</strong>owser P<strong>ython</strong>) ist eine freie (BSD-3 Lizenz) Python-3-Implementierung, die im Browser läuft und als Ersatz für JavaScript gedacht ist. Neben der Standardbibliothek können einmal auch andere (Pure Python) Module geladen werden, allerdings keine Module, die zum Beispiel C- oder FORTRAN-basierte Teile enthalten. Das schließt Module wie <code>numpy</code>, <code>scipy</code>, <code>matplotlib</code> oder <code>pandas</code> aus. Dafür gibt es aber noch das »eingebautes« Modul <code>browser</code>, das den Python-Skripten Zugriffe auf das DOM-API erlaubt.</p>
<p>Brython ist als kompletter JavaScript-Ersatz konzipiert, kann also auch JavaScript-Objekte nutzen. Die Geschwindigkeit soll an die von CPython heranreichen.</p>
<section id="microstudio-mit-brython" class="level3">
<h3 class="anchored" data-anchor-id="microstudio-mit-brython">microStudio (mit Brython)</h3>
<p>Brython ist auch die Engine, die hinter der Python-Version von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microscript.html">microScript</a>, der Programmiersprache von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> werkelt. Die in meinen Augen leider völlig unterbewertete kleine Fantasy-Konsole kann man sowohl <a href="https://microstudio.dev/">online auf den Seiten von microStudio</a> (Vorsicht! US-amerikanischer Server!) wie auch lokal auf dem eigenen Rechner nutzen. Die Nachteile von Brython (keinen Zugriff auf den <em>Scientific Stack</em>) werden teilweise dadurch ausgeglichen, daß man auch mit microStudio und Brython Zugriff auf JavaScript-Bibliotheken wie zum Beispiel <a href="https://pixijs.com/">PIXI.js</a> oder <a href="https://brm.io/matter-js/">Matter.js</a> hat. Damit kann man dann schon eine ganze Menge anstellen. Vor meiner jüngsten Entdeckung von PyScript mit Proseco (siehe unten) war microStudio mit Brython <a href="https://kantel.github.io/posts/2024032801_microstudio_noc_1/">mein Favorit</a>, wenn es um meine Versuche ging, Python-Versionen der Programme aus <em>Daniel Shiffmans</em> genialem Buch »<a href="https://natureofcode.com/">The Nature of Code</a>« zu schreiben. Und für die Entwicklung kleiner, webtauglicher Spiele ist microStudio mit Brython sowieso immer noch eine gute Wahl.</p>
</section>
</section>
<section id="pyscript" class="level2">
<h2 class="anchored" data-anchor-id="pyscript">PyScript</h2>
<p>Das freie (Apache-2.0-Lizenz) Framework <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyscript.html">PyScript</a>, mit dem Benutzer umfangreiche Python-Anwendungen im Browser erstellen können, und das von einem Team bei <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda</a> entwickelt wird, hatte ich lange links liegen lassen, weil mir eine »Killer-Applikation« fehlte. Bis ich gestern bei der Vorbereitung für diesen Beitrag auf der Seite »<a href="https://abav.lugaralgum.com/Resources-for-teaching-programming/">Resources for teaching programming for artists, designers and architects</a>« von <em>Alexandre Villares</em> das Modul <a href="https://proceso.cc/">Proseco</a> entdeckte.</p>
<section id="pyscript-und-processing-mit-proseco" class="level3">
<h3 class="anchored" data-anchor-id="pyscript-und-processing-mit-proseco">PyScript und Processing (mit Proseco)</h3>
<p>Proceso ist ein Python-Paket für kreatives Programmieren im Web. Der Fokus liegt darauf, Programmieren für Künstler, Designer, Pädagogen, Anfänger und alle anderen zugänglich zu machen. Das Paket bietet eine Python-Schnittstelle zur <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">p5.js</a>-Bibliothek und ist stark von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> inspiriert. Proceso ist für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pyodide.html">Pyodide</a>-basierte Umgebungen mit Schwerpunkt auf PyScript konzipiert.</p>
<p>Auch Proseco kann man sowohl in der Cloud (zum Beispiel bei <a href="https://pyscript.com/">Anaconda</a> – Vorsicht! Wieder ein amerikanischer Server!), aber auch in einer selbstgehosteten Wolke oder in einer <a href="https://proceso.cc/welcome/getting_started#local-anaconda-vs-code">lokalen Umgebung</a> zum Beispiel mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> betreiben. Es kann mit <code>pip install proseco</code> auf dem eigenen Rechner installiert werden.</p>
<p>Proseco scheint so etwas zu sein, von dem ich die letzten Monate geträumt habe: <strong><a href="https://kantel.github.io/posts/2024072701_py5_pyscript/">Py5 im Browser</a></strong>. Ich kann es kaum erwarten, erste Tests zu fahren, um festzustellen, ob Proseco dieses Versprechen auch wirklich einlöst. Ich habe also wieder zu tun. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54620166000/">Python with Glasses</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Franco-Belgian Comic Style. Illustration of a green python with glasses and a pointer in front of a chart with diagrams in a crowded office. Large shelves with many books on the walls. It’s a sunny morning</em>«. Modell: Flux (Pro), Style: None.</p>


</section>
</section>

 ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Trinket</category>
  <category>Turtle</category>
  <category>VPython</category>
  <category>PyScript</category>
  <category>Proseco</category>
  <category>Pygame</category>
  <category>Pygbag</category>
  <category>Pyxel</category>
  <category>microStudio</category>
  <category>Brython</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025062801_python_im_browser/</guid>
  <pubDate>Sat, 28 Jun 2025 19:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062801_python_im_browser/images/pythonwglasses.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Mathematik der Demokratie: Das Wahlspiel mit dem Tiger und der Schlange</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062502_waehler_tigerjython/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54613406114/"><img src="https://kantel.github.io/posts/2025062502_waehler_tigerjython/images/waehler-b.jpg" class="img-fluid"></a></p>
<p>Spätestens seit der Wiederwahl von <em>Donald Trump</em> zum Präsidenten der USA fragen sich ja etliche, wie es dort mit der Demokratie bestellt sei. Und womit? Mit Recht! Dazu passend ein Spiel, das <em>Peter Donelly</em> vom <em>University College of Swansea</em> in Wales und <em>Domenic Welsh</em> von der <em>Oxford University</em> schon in den 80er Jahren des letzten Jahrhunderts untersucht hatten. Populär wurde es dann durch eine Veröffentlichung von <em>Alexander K. Dewdney</em> in der <em>Scientific American</em> und in der deutschen Schwesterzeitschrift <em>Spektrum der Wissenschaft</em>. Er nannte das Spiel »WAEHLER«:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54609195500/"><img src="https://kantel.github.io/posts/2025062502_waehler_tigerjython/images/wahler-o.jpg" class="img-fluid figure-img" alt="Screenshot waehler.py"></a></p>
<figcaption>Screenshot waehler.py</figcaption>
</figure>
</div>
<p>In diesem Spiel werden die Felder eines rechteckigen Feldes (im obigen Screenshot 15 x 15 Felder) zuerst wahllos mit den Symbolen der Republikaner (Elephant) oder der Demokraten (Esel) besetzt. Das widerspiegelt die politische Einstellung der »Einwohner« dieses »Planeten«. Bei jedem Spielzug wird nun ein Einwohner in seiner politischen Meinung schwankend und nimmt die Einstellung eines seiner zufällig herausgegriffenen Nachbarn an (falls er nicht sowieso schon dessen Meinung war).</p>
<p>Als Nachbarschaft gilt hier die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/softcomputing/moorenb.html">Moore-Nachbarschaft</a>, also alle 8 Nachbarfelder. Die Randbedingungen sind periodisch, das heißt jeder Spieler auf einem Randfeld hat »Nachbarn« auf der gegenüberliegenden Seite, die Spieler in den Eckfeldern sogar auf beiden gegenüberliegenden Seiten. Unser Spielfeld nimmt daher die Form eines Reifens oder eines Torus an, wie zum Beispiel auch in der populären Simulation <a href="https://de.wikipedia.org/wiki/Wator">WATOR</a>.</p>
<p>Nun passiert Folgendes: Aus der anfänglich wüsten Verteilung bilden sich im Laufe des Spiels feste Inseln einer Meinung heraus. Und im Endeffekt gewinnt eine Partei die alleinige Herrschaft. Das geschieht manchmal sehr schnell, manchmal dauert es länger, weil sich einige Inseln des Widerstands hartnäckig halten, aber das Endergebnis ist immer gleich: Der Planet wird entweder komplett von Eseln oder komplett von Dickhäutern regiert. Ob das der Sinn einer Demokratie ist?</p>
<p>Das Spiel ist verwandt mit dem Selektions-Spiel, das <em>Ruthild Winkler</em> und <em>Manfred Eigen</em> schon 1975 in ihrem Buch »Das Spiel« vorgestellt hatten. Auch wenn die Regeln leicht abgewandelt sind, das Ergebnis ist stets das gleiche. Es überlebt immer nur eine Partei. Das ändert sich übrigens auch nicht, wenn man das Feld mit mehr als zwei Parteien beim Start füllt. Also ist nicht das amerikanische Wahlsystem die alleinige Ursache des Übels.</p>
<section id="der-code" class="level3">
<h3 class="anchored" data-anchor-id="der-code">Der Code</h3>
<p>Der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a>-Code ist <em>straight forward</em>. Lediglich die Behandlung der Randbedingungen ist allgemeiner gehalten, als unbedingt nötig. Damit sind bei Abwandlungen auch andere Nachbarschaften als die Moore-Umgebung möglich. Er folgt einem <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing- (Java-)</a> Code, den ich <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/demokratiespiel.html">vor Jahren schon einmal programmiert</a> hatte.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-4"></span>
<span id="cb1-5">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.path.dirname(os.path.abspath(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Konstanten</span></span>
<span id="cb1-8">REP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-9">DEM <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-10">NCOLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10 oder 20</span></span>
<span id="cb1-11">NROWS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10 oder 20</span></span>
<span id="cb1-12">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span></span>
<span id="cb1-13">WIDTH  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NCOLS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W</span>
<span id="cb1-14">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NROWS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H</span>
<span id="cb1-15">MAXRUNDEN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2000 oder 20000</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (globale) Variablen</span></span>
<span id="cb1-18">nReps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nDems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-19">repImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gp.getImage(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rep.png"</span>))</span>
<span id="cb1-20">demImg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gp.getImage(os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dem.png"</span>))</span>
<span id="cb1-21">grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-22">keepGoing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb1-23">runde <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-24"></span>
<span id="cb1-25">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb1-26">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, HEIGHT)</span>
<span id="cb1-27">gp.windowPosition(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb1-28">gp.bgColor(gp.Color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packpapier</span></span>
<span id="cb1-29">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Wähler.py: Das Demokratie-Spiel"</span>)</span>
<span id="cb1-30">gp.enableRepaint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize Spielfeld</span></span>
<span id="cb1-33"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NROWS):</span>
<span id="cb1-34">    grid.append([])</span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NCOLS):</span>
<span id="cb1-36">        grid[x].append(randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb1-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> grid[x][y] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> REP:</span>
<span id="cb1-38">            nReps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-39">            gp.image(repImg, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H)</span>
<span id="cb1-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-41">            nDems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-42">            gp.image(demImg, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H)</span>
<span id="cb1-43"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start: Demokraten = "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(nDems) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-44">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", Republikaner = "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(nReps))</span>
<span id="cb1-45"></span>
<span id="cb1-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulationsscheife</span></span>
<span id="cb1-47"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> keepGoing:</span>
<span id="cb1-48">    runde <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zufällig einen Wähler heraussuchen</span></span>
<span id="cb1-50">    waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, NROWS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-51">    waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, NCOLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zufällig einen Nachbarn heraussuchen </span></span>
<span id="cb1-53">    auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (Moore-Umgebung)</span></span>
<span id="cb1-54">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-55">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX</span>
<span id="cb1-56">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-58">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-59">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb1-61">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-62">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY</span>
<span id="cb1-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb1-64">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-65">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:</span>
<span id="cb1-67">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX</span>
<span id="cb1-68">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb1-70">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-71">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-72">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>:</span>
<span id="cb1-73">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-74">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY</span>
<span id="cb1-75">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> auswahl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>:</span>
<span id="cb1-76">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-77">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> waehlerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-78">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-79">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Irgend etwas ist gewaltig schiefgelaufen!"</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Notausgang</span></span>
<span id="cb1-80">        </span>
<span id="cb1-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prüfung der Ränder</span></span>
<span id="cb1-82">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-83">        nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NROWS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nachbarX</span>
<span id="cb1-84">    nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nachbarX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> NROWS</span>
<span id="cb1-85">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-86">        nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NCOLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nachbarY</span>
<span id="cb1-87">    nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nachbarY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> NCOLS</span>
<span id="cb1-88">    </span>
<span id="cb1-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Neuzeichnen des Spielfelds</span></span>
<span id="cb1-90">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> grid[nachbarX][nachbarX] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> DEM:</span>
<span id="cb1-91">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> grid[waehlerX][waehlerY] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> DEM:</span>
<span id="cb1-92">            nDems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-93">            nReps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-94">        grid[waehlerX][waehlerY] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DEM</span>
<span id="cb1-95">        gp.image(demImg, waehlerX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W, waehlerY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H)</span>
<span id="cb1-96">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> grid[waehlerX][waehlerY] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> REP:</span>
<span id="cb1-98">            nReps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-99">            nDems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-100">        grid[waehlerX][waehlerY] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> REP</span>
<span id="cb1-101">        gp.image(repImg, waehlerX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>W, waehlerY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>H)</span>
<span id="cb1-102">    gp.repaint()</span>
<span id="cb1-103">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Runde: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(runde) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">",Demokraten = "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(nDems) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-104">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", Republikaner = "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(nReps))</span>
<span id="cb1-105">    gp.delay(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-106">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (nReps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> (nDems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> (runde <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MAXRUNDEN):        </span>
<span id="cb1-107">        keepGoing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-108"></span>
<span id="cb1-109"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ende der Simulation!"</span>)</span></code></pre></div>
<p>Wer das Spiel selber nachprogrammieren möchte, hier gibt es auch noch die beiden Icons für die Republikaner (Elephant) und Demokraten (Esel):</p>
<p><img src="https://kantel.github.io/posts/2025062502_waehler_tigerjython/images/rep.png" class="img-fluid">&nbsp;<img src="https://kantel.github.io/posts/2025062502_waehler_tigerjython/images/dem.png" class="img-fluid"></p>
</section>
<section id="caveat" class="level3">
<h3 class="anchored" data-anchor-id="caveat">Caveat</h3>
<p>Ungeduldige sollten erst einmal mit einem 10x10-Gitter beginnen. Dann hat man in der Regel schnell ein Ergebnis. Ich hatte auf diesem kleinen Gitter auch schon nach unter 2.000 Runden die absolute Herrschaft einer Partei erreicht. Auf einem 20x20-Gitter hingegen ist die Demoratie oft sehr hartnäckig, hier kann es durchaus auch mal 200.000 Runden und mehr dauern, bis die Diktatur kommt. Aber auf so einem großen Spielfeld erkennt man natürlich die stabilen »Inseln gleicher Meinung« sehr viel besser.</p>
<p>Es gibt sicher einen Schwellwert, der – wenn unterschritten – kein zurück zur Macht mehr erlaubt. Aber er ist sehr klein: Ich habe es schon erlebt, daß Parteien, die unter die 10-Prozent-Marke gerutscht waren, sich wieder berappelten und im Endeffekt doch noch die Macht ergriffen.</p>
</section>
<section id="weiterführende-literatur" class="level3">
<h3 class="anchored" data-anchor-id="weiterführende-literatur">Weiterführende Literatur</h3>
<ul>
<li>A.K. Dewdney: <em>Wie man π erschießt. Fünf leichte Stücke für WHILE-Schleifen und Zufallsgenerator, oder: lebensechte Simulationen von Zombies, Wählern und Warteschlangen</em>, in: Immo Diener (Hg.): <em>Computer-Kurzweil</em>, Heidelberg (Spektrum der Wissenschaft, Reihe: Verständliche Forschung) 1988</li>
<li>Manfred Eigen, Ruthild Winkler: <em>Das Spiel. Naturgesetze steuern den Zufall</em>, München (Piper), 1975 (unveränderte Taschenbuchausgabe 1985)</li>
<li>George G. Szpiro: <em>Die verflixte Mathematik der Demokratie</em>, Berlin und Heidelberg, Zürich (Springer, Verlag Neue Züricher Zeitung) 2011</li>
</ul>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54613406114/">Wahlen mit dem Tiger und der Schlange</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored franco-belgian comic style. Illustration of a tiger in a red dressing gown and a python with glasses each sit in their own voting booth and fill out ballot papers</em>«. Modell: Flux (Pro), Style: None.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Simulation</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025062502_waehler_tigerjython/</guid>
  <pubDate>Wed, 25 Jun 2025 15:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062502_waehler_tigerjython/images/waehler.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Spandau bei Berlin: Rund um die Zitadelle</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062501_spandau_bei_berlin/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54611281927/"><img src="https://kantel.github.io/posts/2025062501_spandau_bei_berlin/images/spandau-b.jpg" class="img-fluid"></a></p>
<p>Gestern wollte ich mal ganz besonders mutig sein, mein gewohntes Berlin verlassen und auf eine Entdeckungsreise gehen. Also bin ich mit einer lieben Freundin nach <a href="https://de.wikipedia.org/wiki/Berlin-Spandau">Spandau bei Berlin</a> gefahren und habe einen Spaziergang rund um die <a href="https://de.wikipedia.org/wiki/Zitadelle_Spandau">Zitadelle</a> mit dem <a href="https://de.wikipedia.org/wiki/Zitadelle_Spandau#Juliusturm">Juliusturm</a> gewagt.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54612376948/"><img src="https://kantel.github.io/posts/2025062501_spandau_bei_berlin/images/spandau01.jpg" class="img-fluid"></a></p>
<p>Dabei lief mir nicht nur das imposante Eingangsportal vor die Linse meiner Smartphonekamera,</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54612165276/"><img src="https://kantel.github.io/posts/2025062501_spandau_bei_berlin/images/spandau02.jpg" class="img-fluid"></a></p>
<p>sondern auch ein paar wilde Gänse wollten unbedingt von mir photographiert werden.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54612376788/"><img src="https://kantel.github.io/posts/2025062501_spandau_bei_berlin/images/spandau03.jpg" class="img-fluid"></a></p>
<p>Und zum Schluß buhlten noch diese bunten Blüten um meine Aufmerksamkeit, so als wollten sie beweisen, daß nicht nur <a href="https://kantel.github.io/posts/2025062001_wohnsitz_priesterweg/">Sofas und andere Sitzmöbel</a>, sondern auch Gartenpflanzen darum kämpfen, daß sie aus ihren engen Gefängnissen der Vorgärten in die Freiheit der Großstadt entweichen können. (Nun ja, Spandau ist nicht wirklich Großstadt, aber sei’s drum.)</p>
<hr>
<p><strong>Photos</strong> (<a href="https://creativecommons.org/licenses/by-sa/4.0/deed.de">cc</a>) 2025: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>Atlas Curiosa</category>
  <category>Parks und Gärten</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2025062501_spandau_bei_berlin/</guid>
  <pubDate>Wed, 25 Jun 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062501_spandau_bei_berlin/images/spandau.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rotkäppchen und die drei Tanten</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062202_rotkaeppchen/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54602929149/"><img src="https://kantel.github.io/posts/2025062202_rotkaeppchen/images/rotkaeppchen-b.jpg" class="img-fluid"></a></p>
<p>Zu Feier der Sommersonnenwende ein Ausflug in die Welt der Märchen: Rotkäppchen hatte nicht nur eine Großmutter, sondern – was weniger bekannt ist – auch drei Tanten, Agathe, Beatrice und Cynthia. Diese wohnten in drei Häusern, die zusammen ein Dreieck bildeten. Wenn Rotkäppchen nicht ihre Großmutter besuchte, dann besuchte sie eine der drei Tanten. Letzten Sonntag jedoch war sie sehr unschlüssig, welche sie besuchen sollte. Sie startete, um Agathe einen Besuch abzustatten. Jedoch genau auf dem halben Weg zu Agathe wurde sie unsicher und überlegte es sich noch einmal. Sie beschloß, eine ihrer drei Tanten aufzusuchen, es könnte auch wieder Agathe, aber auch Beatrice oder Cynthia gewesen sein. Doch es war wie verhext: Jedesmal, wenn sie genau den halben Weg zurückgelegt hatte, wurde sie wieder unsicher und entschloß sich neu, einer ihrer drei Tanten aufzusuchen, möglicherweise die gleiche, möglicherweise eine andere. Und das wieder, und wieder, und wieder …</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54602847798/"><img src="https://kantel.github.io/posts/2025062202_rotkaeppchen/images/rotkaeppchen-o.jpg" class="img-fluid figure-img" alt="Das Tantenspiel"></a></p>
<figcaption>Das Tantenspiel</figcaption>
</figure>
</div>
<p><em>William P. Beuamont</em> nannte es das »Tantenspiel«. Ziel ist es nicht, herauszufinden, welche Tante gewinnt (es kann gar keine gewinnen), sondern welche Figur entsteht, wenn man Rotkäppchens Irrweg visualisiert. Ich habe das einmal mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> nachprogrammiert und herausgekommen ist obige Figur, in der Fachliteratur auch als <a href="https://de.wikipedia.org/wiki/Sierpinski-Dreieck">Sierpinski Dreieck</a> bekannt, benannt nach dem polnischen Mathematiker <em>Wacław Sierpiński</em>, der das Fraktal schon 1915 als erster beschrieb.</p>
<section id="der-quellcode" class="level3">
<h3 class="anchored" data-anchor-id="der-quellcode">Der Quellcode</h3>
<p>Normalerweise wird dieses Fraktal mit einem rekursiven Algorithmus erzeugt, aber es geht eben auch mithilfe dieses »Chaos-Spiels«, das <em>Dietmar Herrmann</em> 1994 beschrieb:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotkäppchen und die drei Tanten</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> colorsys</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-6"></span>
<span id="cb1-7">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb1-8">radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-9">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH)</span>
<span id="cb1-10">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, HEIGHT)</span>
<span id="cb1-11"></span>
<span id="cb1-12">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb1-13">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-14">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rotkäppchen und die drei Tanten"</span>)</span>
<span id="cb1-15">gp.bgColor(gp.Color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>))</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>):</span>
<span id="cb1-18">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb1-20">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-21">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> HEIGHT)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> (p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-23">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-24">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-26">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> WIDTH)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-27">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> HEIGHT)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-28">    gp.move(x, y)</span>
<span id="cb1-29">    hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100.0</span></span>
<span id="cb1-30">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb1-31">    gp.setColor(col)</span>
<span id="cb1-32">    gp.fillCircle(radius)</span>
<span id="cb1-33"></span>
<span id="cb1-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Man sieht sehr schön, wie sich das Dreieck zufällig, aber dennoch erkennbar, zusammensetzt. Je nach zufälligem Startwert liegen die ersten drei bis vier Punkte noch außerhalb des Fraktals, danach geht aber alles seinen geordneten, aber trotzdem chaotischen Gang. Und an den Farben erkennt Ihr, daß auch die Reihenfolge, in der die einzelnen Punkte des Fraktals von Rotkäppchen angelaufen werden, ebenfalls unvorhersehbar sind.</p>
</section>
<section id="verwendete-und-weiterführende-literatur" class="level3">
<h3 class="anchored" data-anchor-id="verwendete-und-weiterführende-literatur">Verwendete und weiterführende Literatur</h3>
<ul>
<li>William P. Beaumont: <em>Conquering the Math Bogeyman</em>, in Clifford A. Pickover (Ed.): <em>Fractal Horizons – The Future Use of Fractals</em>, New York (St.&nbsp;Martin’s Press) 1996, Seiten 3-15</li>
<li>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994, Seiten 132ff.</li>
</ul>
<p>Auch <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/rotkaeppchen.py">diesen Quellcode</a> gibt es auch wieder in meinem GitLab-Repositorium zu TigerJython. <em>Habt Spaß damit!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54602929149/">Rotkäppchen zwischen Tiger und Python</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored franco-belgian comic style. Illustration of Little Red Riding Hood, carrying a basket of cheese and wine, picks flowers in a forest clearing. She is accompanied by a (tiger in a red dressing gown)+ and a (python with glasses)+</em>«. Modell: Flux (Pro), Style: None.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Dynamische Systeme</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025062202_rotkaeppchen/</guid>
  <pubDate>Sun, 22 Jun 2025 18:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062202_rotkaeppchen/images/rotkaeppchen.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Jāņi auf dem Kulturbunkerdach</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062201_jani_auf_dem_kulturbunker/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54603881617/"><img src="https://kantel.github.io/posts/2025062201_jani_auf_dem_kulturbunker/images/sonnenwende1-b.jpg" class="img-fluid"></a></p>
<p>Gestern war nicht nur Sommersonnenwende, sondern in Berlin fand auch auch gleichzeitig und schon mit einer gewissen Tradition die <em><a href="https://www.fetedelamusique.de/">Fête de la Musique</a></em> zur Feier der kürzesten Nacht des Jahres statt. Aus diesem Anlaß veranstaltete auch das <em><a href="https://www.trial-error.org/">Kulturlabor Trial &amp; Error</a></em> auf dem Kulturbunkerdach in der Neuköllner Rungiusstraße ein <a href="https://www.trial-error.org/projekte-1/kulturbunkerdach/">Sommerfest</a>, unter anderem mit einer <em>Belly Dance Show</em> und vor allem mit viel lettischer Musik und Tanz zur Sonnenwende.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54605061095/"><img src="https://kantel.github.io/posts/2025062201_jani_auf_dem_kulturbunker/images/sonnenwende2.jpg" class="img-fluid"></a></p>
<p>Denn das Sommersonnenwendefest – in <a href="https://www.pasch-net.de/de/projekte/schuelerblog/schuelerredaktionen/klick/die-kuerzeste-nacht-des-jahres.html">Lettland <em>Jāņi</em> oder auch <em>Līgo</em></a> genannt – ist eine alte lettische Tradition und dort das <a href="https://www.latvia.travel/de/traditionen-der-feier-vom-johannisfest">wichtigste Fest des Jahres</a>, vergleichbar mit Weihnachten in Deutschland. Auch wenn es in Lettland erst am Vorabend des 23. Juni gefeiert wird, hat <em>Trial&nbsp;&amp;&nbsp;Error</em> die Gelegenheit am Schopf gepackt, um uns das Fest ein paar Abende früher zur <em>Fête de la Musique</em> vorzustellen.</p>
<p>Es wurde <a href="https://de.wikipedia.org/wiki/Mittsommerfest#Lettland:_J%C4%81%C5%86i">richtig traditionell gefeiert</a>, mit dem Flechten und Tragen von Blumenkränzen, mit Tanz und Volksmusik, mit einem Lagerfeuer (aus Brandschutzgründen in einer Feuerschale) und mit Kümmelkäse und Bier.</p>
<p>Dazwischen gab es immer wieder Erläuterungen und Animationen zum Mitsingen und Mittanzen, denen sich niemand entziehen konnte. Ich hatte nicht nur viel Spaß, sondern auch viel über lettische Traditionen gelernt. Für beides möchte ich dem engagierten Team von <em>Trial&nbsp;&amp;&nbsp;Error</em> danken.</p>
<p><strong>Das gewohnte Caveat</strong>: Ich bin vom <a href="https://qm-glasower-strasse.de/">Quartiersmanagement Glasower Straße</a> zum (ehrenamtlichen) Paten des Projekts »<a href="https://qm-glasower-strasse.de/nachbarschaftscafe-auf-dem-kulturbunker-wieder-geoeffnet/">Nachbarschaftliches Miteinander auf dem Kulturbunker</a>« bestellt worden und daher natürlich immer ein wenig Partei. Aber das bin ich in diesem Fall gerne 🤓, und das bin ich auch <a href="https://kantel.github.io/posts/2024041901_rip_gabi/">Gabi</a> schuldig.</p>
<hr>
<p><strong>Photos</strong> (<a href="https://creativecommons.org/licenses/by-sa/4.0/deed.de">cc</a>) 2025: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>Kiezfest</category>
  <category>Kulturbunker</category>
  <category>Neukölln</category>
  <category>Neuköllner Bilderbogen</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2025062201_jani_auf_dem_kulturbunker/</guid>
  <pubDate>Sun, 22 Jun 2025 17:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062201_jani_auf_dem_kulturbunker/images/sonnenwende1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Statische Seiten mit MkDocs (Material)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062101_mkdocs/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54469007653/"><img src="https://kantel.github.io/posts/2025062101_mkdocs/images/mkdocs-b.jpg" class="img-fluid"></a></p>
<p>Als ich vor etwa einem Jahr meinen <a href="https://kantel.github.io/posts/2024062301_mac_mini/">Rechnerumzug</a> organisierte, <a href="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/">stolperte</a> ich auch wieder eher zufällig über <a href="https://kantel.github.io/posts/2024070602_mkdocs_reloaded/">MkDocs</a>, einen schnellen und freien (BSD-Lizenz), in Python geschriebenen, Markdown-basierten Generator für statische Seiten, der allem für die <a href="https://realpython.com/python-project-documentation-with-mkdocs/">Dokumentation von Software-Projekten</a> entwickelt worden war.</p>
<p>Ich hatte früher viel mit dem Teil gearbeitet und damit zum Beispiel meine Seiten »<a href="http://py.kantel-chaos-team.de.s3-website-us-east-1.amazonaws.com/">Processing.py in Beispielen</a>« erstellt, eine Sammlung von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a>-Tutorials, die ich von 2015 bis 2018 geschrieben und online veröffentlicht hatte.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/xlABhbnNrfI?si=yPOYB5xSw9fxsDf9" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Doch <em>Tempus fuget</em>: Mittlerweile gibt es »<a href="https://squidfunk.github.io/mkdocs-material/">Material für MkDocs</a>«, eine Erweiterung, die sich von einem Template fast zu einer eigenständigen Anwendung entwickelt hat. <em>James Willet</em> hat darüber nicht nur das <a href="https://www.youtube.com/watch?v=xlABhbnNrfI">obige Video</a> hochgeladen, sondern auch für alle, die lieber lesen, ein Tutorial »<a href="https://jameswillett.dev/getting-started-with-material-for-mkdocs/">Getting Started with Material for MkDocs</a>« publiziert, das natürlich mit Material für MkDocs erstellt wurde.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/pPEUhfTZswc?si=nHS1jPyFrWLKcwpR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Doch jetzt kommt der Clou: Material für MkDocs kann nicht nur Dokumentationsseiten, sondern ist zu einem vollständigen <em>Static Sites Generator</em> aufgebohrt, das auch Blog kann. Dies demonstriert <em>James Willet</em> in seinem Video »<a href="https://www.youtube.com/watch?v=pPEUhfTZswc">How To Build and Deploy a Stunning Blog for free using Material for MkDocs</a>«.</p>
<p>Jetzt bin ich natürlich hin- und hergerissen. Nicht, daß ich mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>, der Engine, die momentan dieses <del>Weblog</del> Kritzelheft antreibt, unzufrieden wäre, aber ein wenig behäbig ist die Software doch geworden. Also habe ich mir erst einmal noch drei längere Videos zu MkDocs herausgesucht:</p>
<ol type="1">
<li><a href="https://www.youtube.com/watch?v=NY7DHvo1XVM">Step-by-Step Guide To Making An MkDocs Material Website</a> von <em>Ken Harris</em>.</li>
<li><a href="https://www.youtube.com/watch?v=tMsO0aX91_Q">Art of Docs Fast Building with MkDocs, GitHub &amp; ChatGPT</a> vom <em>Aeropa Webinars</em>.</li>
<li><a href="https://www.youtube.com/watch?v=DeZjkCtttss">How to create a Beautiful documentation-blog website for free with MkDocs Material</a> von <em>Thomas Wilde</em>.</li>
</ol>
<p>Doch das alles läuft erst einmal unter der Überschrift »Video-Tutorials zum Wochenende«, entschieden habe ich noch lange nichts. <em>Still digging!</em></p>
<iframe class="if16_9" src="https://www.youtube.com/embed/3JaxakWjXhk?si=gik04aWW2Iyo_Bvj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, auf der <a href="https://media.ccc.de/b/conferences/gpn/gpn23">23.&nbsp;Gulaschprogrammiernacht</a> des Chaos Computer Clubs hielt <em><a href="https://cfp.gulas.ch/gpn23/speaker/XGPKKD/">perrflynn</a></em> am 21. Juni dieses Jahres den Vortrag »<a href="https://www.youtube.com/watch?v=3JaxakWjXhk">IndieWeb: Publish (on your) Own Site, Syndicate Elsewhere</a>« (trotz des englisch klingenden Titels auf Deutsch). Passt doch irgendwie zum Thema, oder?</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54469007653/">A Man in an Office</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>colored belgian comic style, illustration of an clean shaven man, short white hair, blue eyes, glasses, sits at a desk in front of two huge monitors, there are a few open books on the desk, and large mug of steaming coffee next to them, and a computer keyboard in front of the monitor, on the wall there are many shelves with a lot of files and books, the shelves looks unorganized, the sun shines through a large window</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>MkDocs</category>
  <category>Markdown</category>
  <category>Statische Seiten</category>
  <category>Webworking</category>
  <guid>https://kantel.github.io/posts/2025062101_mkdocs/</guid>
  <pubDate>Sat, 21 Jun 2025 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062101_mkdocs/images/mkdocs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Wohnsitz Neukölln: Freier Sessel Priesterweg</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025062001_wohnsitz_priesterweg/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54602616161/"><img src="https://kantel.github.io/posts/2025062001_wohnsitz_priesterweg/images/priesterweg-b.jpg" class="img-fluid"></a></p>
<p>Neues aus der Nachbarschaft: Dieses sehenswerte, freigelassene Sitzmöbel hatte ich heute abend auf dem Neuköllner Priesterweg entdeckt. Wieder ein wunderschönes Fundstück für meine stetig wachsende Sammlung »<a href="https://www.flickr.com/photos/schockwellenreiter/albums/1244272/">Wohnsitz Neukölln</a>«.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54602828923/"><img src="https://kantel.github.io/posts/2025062001_wohnsitz_priesterweg/images/priesterweg-o.jpg" class="img-fluid"></a></p>
<p>Denn da müßt Ihr jetzt durch. Seit meinem <a href="https://kantel.github.io/posts/2025010601_bye_social_media/">Abschied aus den asozialen Medien</a> werde ich alles, was mir (nicht nur) in Neukölln vor die Linse gerät, in diesem <del>Blog</del> Kritzelheft veröffentlichen.</p>
<hr>
<p><strong>Photos</strong> (<a href="https://creativecommons.org/licenses/by-sa/4.0/deed.de">cc</a>) 2025: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>Neukölln</category>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2025062001_wohnsitz_priesterweg/</guid>
  <pubDate>Fri, 20 Jun 2025 19:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025062001_wohnsitz_priesterweg/images/priesterweg.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Hexagonaler Random Walk mit TigerJython</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025061802_hexawalk/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54598377130/"><img src="https://kantel.github.io/posts/2025061802_hexawalk/images/hexawalk-b.jpg" class="img-fluid"></a></p>
<p>Der bei Microsoft forschende Psychologe und Informatiker <em>Dan Goldstein</em> <a href="https://www.decisionsciencenews.com/?p=6464">berichtet in seinem Blog</a>, wie er mit seiner neunjährigen Tochter in einem Bagel-Shop warten mußte. Um sich die Langeweile zu verkürzen, kramte er ein hexagonal-kariertes Blatt Papier und einen Würfel hervor (Psychologen bei Microsoft haben immer einen hexagonal-karierten Notizblock und einen Würfel in der Tasche). Und dann entschied er, daß, wenn eine Eins gewürfelt wurde, die Tochter auf dem Papier einen Strich nach oben (nach Norden) malen durfte, bei einer Zwei ging es nach Nordost, bei einer Drei nach Südost und so weiter in alle sechs Richtungen, die ein Hexagon erlaubt. Heraus kam ein <a href="https://de.wikipedia.org/wiki/Random_Walk">Random Walk</a> in sechs Richtungen.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54596446850/"><img src="https://kantel.github.io/posts/2025061802_hexawalk/images/hexawalk-o.jpg" class="img-fluid"></a></p>
<p>Als ich dies las, dachte ich, daß dies doch ein schönes Projekt für eine Realisierung mit der Turtle sei. Zuerst stellte ich mir die Frage, wie man denn der Schildkröte beibringt, ein Hexagon zu zeichnen. Ein <a href="https://de.wikipedia.org/wiki/Sechseck">Blick in die Wikipedia</a> half mir weiter, denn dort konnte ich entnehmen, daß die Schildkröte an jedem der sechs Endpunkt einen Winkel von <img src="https://latex.codecogs.com/png.latex?60%C2%B0"> einschlagen mußte, entweder konsequent nach rechts oder konsequent nach links. Die sechs Winkel für die sechs möglichen Richtungen sind also <img src="https://latex.codecogs.com/png.latex?0%C2%B0">, <img src="https://latex.codecogs.com/png.latex?60%C2%B0">, <img src="https://latex.codecogs.com/png.latex?120%C2%B0">, <img src="https://latex.codecogs.com/png.latex?180%C2%B0">, <img src="https://latex.codecogs.com/png.latex?240%C2%B0"> und <img src="https://latex.codecogs.com/png.latex?300%C2%B0">. <em>Brute Force</em> zeichnet sich ein Hexagon also so:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">hexi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb1-2">hexi.setHeading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-3">hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-4">hexi.setHeading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb1-5">hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-6">hexi.setHeading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)</span>
<span id="cb1-7">hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-8">hexi.setHeading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)</span>
<span id="cb1-9">hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-10">hexi.setHeading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>)</span>
<span id="cb1-11">hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-12">hexi.setHeading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb1-13">hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
<p>Natürlich geht das in einer Schleife viel kompakter und einfacher:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">hexi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>):</span>
<span id="cb2-4">    angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb2-5">    hexi.setHeading(angle)</span>
<span id="cb2-6">    hexi.forward(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
<p>Für die eigentliche Realisierung in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> habe ich dann noch auf die bewährte <a href="http://cognitiones.kantel-chaos-team.de/multimedia/farbpaletten/codingtrainfarben.html">Coding Train Farbpalette</a> zurückgegriffen, damit auch alles schön bunt wird. Außerdem habe ich mit Pythons <code>randint</code>-Modul einen Würfel simuiert, der dafür sorgt, daß der Random Walk auf wirklich (pseudo-) zufällig ist:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Roll Dice and set Angle</span></span>
<span id="cb3-2">roll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-3">angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb3-4">hexi.setHeading(angle)</span></code></pre></div>
<p>Und schießlich habe ich noch als Reminiszenz an <em>Christian Thompson</em> (aka <em>TokyoEdtech</em>, Ihr wisst schon, der Mann, der Unglaubliches mit Pythons Turtle anstellt) dem Turtle-Playground einen Rand spendiert. Das hat zwar den Quellcode fast verdoppelt, aber er ist immer noch recht kurz geraten:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hexagonaler Random Walker</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb4-5"></span>
<span id="cb4-6">WIDTH, HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb4-7">MIN_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-8">MAX_X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-9">MIN_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-10">MAX_Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> </span>
<span id="cb4-11">BORDERSIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-12">STEPSIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb4-13"></span>
<span id="cb4-14">codingtrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">248</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">158</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>),</span>
<span id="cb4-15">               makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">248</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">239</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">197</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">244</span>),</span>
<span id="cb4-16">               makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">164</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">146</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">82</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">161</span>),</span>
<span id="cb4-17">               makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">129</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">122</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">198</span>),  makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">199</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">119</span>)]</span>
<span id="cb4-18"></span>
<span id="cb4-19">gt.setPlaygroundSize(WIDTH, HEIGHT)</span>
<span id="cb4-20">tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.TurtleFrame()</span>
<span id="cb4-21">tf.title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hexagonaler Random Walker"</span></span>
<span id="cb4-22">tf.clean(makeColor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2a282d"</span>))</span>
<span id="cb4-23"></span>
<span id="cb4-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw Border</span></span>
<span id="cb4-25">border <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb4-26">border.penWidth(BORDERSIZE)</span>
<span id="cb4-27">border.setPenColor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e6e2cc"</span>)</span>
<span id="cb4-28">border.penUp()</span>
<span id="cb4-29">border.hideTurtle()</span>
<span id="cb4-30">border.moveTo(MIN_X, MIN_Y)</span>
<span id="cb4-31">border.penDown()</span>
<span id="cb4-32">border.moveTo(MAX_X, MIN_Y)</span>
<span id="cb4-33">border.moveTo(MAX_X, MAX_Y)</span>
<span id="cb4-34">border.moveTo(MIN_X, MAX_Y)</span>
<span id="cb4-35">border.moveTo(MIN_X, MIN_Y)</span>
<span id="cb4-36">border.penUp()</span>
<span id="cb4-37"></span>
<span id="cb4-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Random Walk</span></span>
<span id="cb4-39">hexi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb4-40">hexi.hideTurtle()</span>
<span id="cb4-41">hexi.penWidth(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hexi.speed(1000)</span></span>
<span id="cb4-43"></span>
<span id="cb4-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> goHome():</span>
<span id="cb4-45">    hexi.penUp()</span>
<span id="cb4-46">    hexi.home()</span>
<span id="cb4-47">    hexi.penDown()</span>
<span id="cb4-48"></span>
<span id="cb4-49"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>):</span>
<span id="cb4-50">    </span>
<span id="cb4-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set Pencolor</span></span>
<span id="cb4-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb4-53">        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.makeColor(codingtrain[randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(codingtrain) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)])</span>
<span id="cb4-54">        hexi.setPenColor(c)</span>
<span id="cb4-55">        </span>
<span id="cb4-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Roll Dice and set Angle</span></span>
<span id="cb4-57">    roll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-58">    angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> roll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span>
<span id="cb4-59">    hexi.setHeading(angle)</span>
<span id="cb4-60">    </span>
<span id="cb4-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb4-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> hexi.getX() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MAX_X:</span>
<span id="cb4-63">        goHome()</span>
<span id="cb4-64">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> hexi.getX() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> MIN_X:</span>
<span id="cb4-65">        goHome()</span>
<span id="cb4-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> hexi.getY() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> MAX_Y:</span>
<span id="cb4-67">        goHome()</span>
<span id="cb4-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> hexi.getY() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> MIN_Y:</span>
<span id="cb4-69">        goHome()</span>
<span id="cb4-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb4-71">        hexi.forward(STEPSIZE)</span>
<span id="cb4-72"></span>
<span id="cb4-73"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Und dann habe ich, wenn die Turtle das Spielfeld verlässt, sie wieder nach Hause geschickt (ein wenig wie beim Monopoly-Spiel: »<em>Gehe nicht über Los und ziehe keine 4.000 Euro ein</em>«), wo sie ihre Reise wieder neu beginnt. Dadurch wollte ich vermeiden, daß sie irgendwann im Nirwana verschwindet.</p>
<section id="weiterführende-literatur" class="level2">
<h2 class="anchored" data-anchor-id="weiterführende-literatur">Weiterführende Literatur</h2>
<p>Random-Walk-Modelle finden einige interessanten Anwendungen von der Biologie bis zur Finanzwirtschaft. Wer sich da hineinlesen will, findet hier ein paar interessante Beiträge:</p>
<ul>
<li>Norbert Henze: <em>Irrfahrten und verwandte Zufälle. Ein elementarer Einstieg in die stochastischen Prozesse</em>, Wiesbaden (Springer Spektrum) 2013</li>
<li>Jake Hofman: <em><a href="http://jakehofman.com/talks/dalton_hunter_20071031.pdf">Simple math for a complex world: Random walks in biology and finance</a></em> (Vortragsfolien, PDF), 31.&nbsp;Oktober&nbsp;2007</li>
<li>Rubin H. Landau: <em><a href="https://sites.science.oregonstate.edu/~landaur/INSTANCES/WebModules/5_RandomWalk/RandomWalk.html">Random Walks</a></em>, aus: <em><a href="https://sites.science.oregonstate.edu/~landaur/INSTANCES/index.html">INSTANCES</a> (Incorporating Computational Scientific Thinking Advances into Education &amp; Science Courses)</em>, Oregon State Univ, Corvallis (Depart of Physics), 2013</li>
<li>William F. Sharpe, Daniel G. Goldstein und Philip W. Blythe: <em><a href="https://web.stanford.edu/~wfsharpe/art/qpaper/qpaper.pdf">The Distribution Builder: A Tool for Inferring Investor Preferences</a></em> (PDF), 10. Oktober 2000</li>
</ul>
<p>Und auch im oben verlinkten <a href="https://www.decisionsciencenews.com/?p=6464">Original-Blog-Post</a>, der mich zu diesem Beitrag inspirierte, hat <em>Dan Goldstein</em> ein paar überraschende Überlegungen zum (hexagonalen) Zufallsspaziergang der Schildkröte angestellt.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54598377130/">Hexawalk mit Tiger und Python</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored franco-belgian comic style. Illustration of a tiger in a red dressing gown and a python with glasses wandering through a surreal, hexagonal landscape</em>«. Modell: Flux (Pro), Style: None.</p>


</section>

 ]]></description>
  <category>TigerJython</category>
  <category>Turtle</category>
  <category>Python</category>
  <category>Nature of Code</category>
  <category>Simulation</category>
  <guid>https://kantel.github.io/posts/2025061802_hexawalk/</guid>
  <pubDate>Wed, 18 Jun 2025 15:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025061802_hexawalk/images/hexawalk.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Gehirnamputierte E-Scooter-Fahrer(-innen)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025061801_gehirnamputierte/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54598079613/"><img src="https://kantel.github.io/posts/2025061801_gehirnamputierte/images/gehirnamputiert-b.jpg" class="img-fluid"></a></p>
<p>Ich bin wirklich kein Freund von <em><a href="https://de.wikipedia.org/wiki/Boris_Palmer">Boris Palmer</a></em>, auch wenn er mit zunehmendem Alter <a href="https://de.wikipedia.org/wiki/Helmut_Palmer">seinem Vater</a> (der mit seiner unkonventionellen und direkten Art ein Held meiner Jugend war) immer ähnlicher wird. Aber in dieser Frage muß ich ihm Recht geben: <a href="https://www.stimme.de/baden-wuerttemberg/boris-palmer-e-scooter-aerger-instagram-facebook-gehirnamputierte-tuebingen-oberbuergermeister-soziale-medien-falsch-geparkt-kommentare-art-5063239">Wieso darf eigentlich jeder Gehirnamputierte E-Scooter benutzen</a>?</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2025: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em></p>



 ]]></description>
  <category>E-Scooter</category>
  <category>Neukölln</category>
  <category>Verkehrswende</category>
  <guid>https://kantel.github.io/posts/2025061801_gehirnamputierte/</guid>
  <pubDate>Wed, 18 Jun 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025061801_gehirnamputierte/images/gehirnamputiert.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Cantor-Käse-Konstruktionen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025061701_cantor_kaese/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54593831598/"><img src="https://kantel.github.io/posts/2025061701_cantor_kaese/images/cantorkaese-b.jpg" class="img-fluid"></a></p>
<p>Die <a href="https://de.wikipedia.org/wiki/Cantor-Menge">Cantor-Menge</a> ist eine überabzählbar mächtige, total unzusammenhängende und nirgends dichte, aber dennoch kompakte Punktmenge, die laut <em>Ian Stewart</em><sup>1</sup> 1875 von <em>Henry Smith</em> entdeckt und von <em><a href="https://de.wikipedia.org/wiki/Georg_Cantor">Georg Cantor</a></em> 1883 veröffentlicht wurde. Sie gilt als das älteste Fraktal überhaupt.</p>
<p>Da die Cantor-Menge schwer zu visualisieren ist, wird sie häufig durch eine Figur dargestellt, die aus Kreisen konstruiert wird und zur Cantor-Menge topologisch äquivalent ist. <em>Clifford A. Pickover</em> beschreibt sie so<sup>2</sup>: Aus einem Kreis wird bis auf zwei kleinere Kreise alles entfernt. Aus diesen zwei kleineren Kreisen wird wiederum bis auf zwei kleinere Kreise alles entfernt. Nun hat man schon vier Kreise, aus denen man jeweils bis auf zwei kleinere Kreise alles entfernt. Und so weiter und so fort …</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54592726472/"><img src="https://kantel.github.io/posts/2025061701_cantor_kaese/images/cantorkaese01.jpg" class="img-fluid figure-img" alt="Cantor-Käse"></a></p>
<figcaption>Cantor-Käse</figcaption>
</figure>
</div>
<p>Entlang des waagrechten Durchmessers (der Horizontalen) ist die fraktale Dimension für die Punktmenge nahezu&nbsp;<img src="https://latex.codecogs.com/png.latex?1">. Kleinere Fraktale mit einer geringeren Dimension entstehen durch die Verwendung geschrumpfter und getrennter Kreise.</p>
<p>Das schreit natürlich nach einer rekursiven Funktion und die ist in Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> recht schnell erstellt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb1-2"></span>
<span id="cb1-3">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb1-4">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb1-5"></span>
<span id="cb1-6">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb1-7">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-8">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cantor-Käse"</span>)</span>
<span id="cb1-9">gp.bgColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cheese(x, y, r, level):</span>
<span id="cb1-12">    gp.move(x, y)</span>
<span id="cb1-13">    gp.setColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb1-14">    gp.fillCircle(r)</span>
<span id="cb1-15">    gp.setColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-16">    gp.circle(r)</span>
<span id="cb1-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-18">        cheese(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, y, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-19">        cheese(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, y, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21">cheese(WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Wandelt man das Skript ein wenig ab, indem man auf der x-Achse jeweils den Durchmesser (<img src="https://latex.codecogs.com/png.latex?r">) anstelle der Radii (<img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Br%7D%7B2%7D">) addiert, respektive subtrahiert,</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb2-2">    cheese(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r, y, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-3">    cheese(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r, y, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<p>erhält man das Gebilde im Bannerbild oben. Das ist zwar strenggenommen kein Cantor-Käse mehr, sieht aber – wie ich finde – auch recht hübsch aus.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54593651661/"><img src="https://kantel.github.io/posts/2025061701_cantor_kaese/images/cantorkaese02.jpg" class="img-fluid figure-img" alt="Cantors-Doppelkäse"></a></p>
<figcaption>Cantors-Doppelkäse</figcaption>
</figure>
</div>
<p>Schon bei <a href="http://blog.schockwellenreiter.de/2016/09/2016091601.html">früheren Experimenten</a> hatte ich mich gefragt, was für eine Figur entstände, wenn man den Käse sich nicht nur in der Horizontalen, sondern auch in der Vertikalen ausbreiten ließe?</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb3-2"></span>
<span id="cb3-3">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb3-4">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb3-5">maxLevel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb3-6"></span>
<span id="cb3-7">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb3-8">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-9">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cantors-Doppelkäse"</span>)</span>
<span id="cb3-10">gp.bgColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cheese(x, y, r, level):</span>
<span id="cb3-13">    gp.move(x, y)</span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gp.setColor(gp.makeColor(255, 255, 255))</span></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gp.fillCircle(r)</span></span>
<span id="cb3-16">    gp.setColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb3-17">    gp.circle(r)</span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb3-19">        cheese(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, y, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-20">        cheese(x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-21">        cheese(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, y, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-22">        cheese(x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24">cheese(WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, maxLevel)</span>
<span id="cb3-25"></span>
<span id="cb3-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Auch dieses Ergebnis sieht recht nett aus, allerdings sollte man hier die Rekursionstiefe kleiner wählen, sonst verschwindent alles hinter einem wüsten <a href="https://de.wikipedia.org/wiki/Moir%C3%A9-Effekt">Moiré-Muster</a>.</p>
<section id="weiterführende-literatur" class="level3">
<h3 class="anchored" data-anchor-id="weiterführende-literatur">Weiterführende Literatur</h3>
<ul>
<li>Benoît B. Mandelbrot: <em>Die fraktale Geometrie der Natur</em>, Basel, Boston, Berlin (Birkhäuser) 1991. Die Cantor-Menge wird im Kapitel&nbsp;8 (Seiten 86-95) beschrieben.</li>
<li>Jörg Kantel: <em><a href="http://blog.schockwellenreiter.de/2016/09/2016091601.html">Cantors Doppelkäse mit Shoes</a></em>, Der Schockwellenreiter vom 16. September 2016.</li>
<li>Clifford A. Pickover: <em>Mit den Augen des Computers. Phantastische Welten aus dem Geist der Maschine</em>, München (Markt und Technik) 1992. Dem Cantor-Käse ist auf den Seiten 171-181 ein eigenes Kapitel gewidmet.</li>
<li>Chris Robart (Ed.): <em><a href="https://mmhs.ca/compsci/ideas2.pdf">Programming Ideas: For Teaching High School Computer Programming</a></em>, (PDF 260 KB, 2nd Edition) 2001. Eine Fundgrube voller Ideen, deren Download sich in jedem Fall lohnt.</li>
<li>Ian Stewart: <em>Spielt Gott Roulette? Uhrwerk oder Chaos</em>, Frankfurt/Main, Leipzig (Insel Taschenbuch) 1993, Seiten 130-134.</li>
</ul>
<p>Den Quellcode gibt es auch wieder in meinem GitLab-Repositorium zu TigerJython. Hier der <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/cantorcheese.py">Cantor-Käse</a>, hier das <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/nocantorcheese.py">abgewandelte Beispielprogramm mit dem Bannerbild oben</a> und hier den <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/doublecantorcheese.py">doppelten Cantor-Käse</a>. <em>Habt wieder Spaß damit!</em></p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ian Stewart: <em>Spielt Gott Roulette?</em> Frankfurt/Main und Leipzig (Insel Taschenbuch) 1993, S. 130ff.↩︎</p></li>
<li id="fn2"><p>Clifford A. Pickover: <em>Mit den Augen des Computers. Phantastische Welten aus dem Geist der Maschine</em>, München (Markt und Technik) 1992, S. 171ff.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Dynamische Systeme</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025061701_cantor_kaese/</guid>
  <pubDate>Tue, 17 Jun 2025 12:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025061701_cantor_kaese/images/cantorkaese.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Mira-Abbildung, noch ein seltsamer Attraktor</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025061201_mira_abbildung/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54585046143/"><img src="https://kantel.github.io/posts/2025061201_mira_abbildung/images/mira2-b.jpg" class="img-fluid"></a></p>
<p>Laut <em>Herm1994</em><sup>1</sup> war die Gumowski-Mira-Abbildung das Tagesgespräch der IFIP-Konferenz von 1974 in Stockholm. Sie ist auch im Konferenzband<sup>2</sup> publiziert und besitzt folgende Gleichung:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ax_%7Bn+1%7D%20&amp;=%20by_%7Bn%7D%20+%20F(x_%7Bn%7D)%5C%5C%0Ay_%7Bn+1%7D%20&amp;=%20x_%7Bn%7D%20+%20F(x_%7Bn+1%7D)%0A%5Cend%7Baligned%7D%0A"></p>
<p>Dabei ist <img src="https://latex.codecogs.com/png.latex?F"> die Funktion</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AF(x)%20&amp;=%20ax%20-%20(1-a)%5Cfrac%7B2x%5E%7B2%7D%7D%7B1+x%5E%7B2%7D%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>oder in anderer Schreibweise:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AF(x)%20&amp;=%20ax%20+%202(1-a)x%5E%7B2%7D(1+x%5E%7B2%7D)%5E%7B-2%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>In einigen Quellen kommt auch noch ein Paramter <img src="https://latex.codecogs.com/png.latex?c"> hinzu, den ich vorerst unberücksichtig lasse. Vielleicht wage ich mich in zukünfigen Beiträgen auch daran<sup>3</sup>.</p>
<p>Die <em>Gumowski-Mira-Abbildung</em> ist ein »<a href="https://de.wikipedia.org/wiki/Seltsamer_Attraktor">seltsamer Attraktor</a>« <em>(Strange Attractor)</em>, ein <a href="http://www.spektrum.de/lexikon/physik/attraktor/926">Attraktor</a> eines dynamischen Systems, das sich zwar chaotisch verhält, aber dennoch eine kompakte Menge ist, die das System nie verläßt.</p>
<p>Normalerweise werden die gefundenen Punkte der Abbildung als Pixel auf dem Monitor dargestellt. Auf heutigen Monitoren mit ihrer hohen Auflösung fallen diese Pixel aber so klein aus, daß sie mit dem bloßen Auge kaum wahrnehmbar sind. Daher habe ich in meinen mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> realisierten beiden Beispielen die gefundenen Punkte als Kreise mit dem Radius <img src="https://latex.codecogs.com/png.latex?2"> zeichnen lassen und diesen sogar noch einen kleinen, schwarzen Rand spendiert. Dadurch heben sie sich nun deutlich vom (hellen) Hintergrund ab. Das gibt zwar keinen neuen Erkenntnisgewinn, aber mir gefällt es so.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54585020798/"><img src="https://kantel.github.io/posts/2025061201_mira_abbildung/images/mira1.jpg" class="img-fluid figure-img" alt="Mira-Abbildung für a=0.4, b=0.1"></a></p>
<figcaption>Mira-Abbildung für a=0.4, b=0.1</figcaption>
</figure>
</div>
<p>Das erste Beispiel ist eine Abbildung mit den Parametern <img src="https://latex.codecogs.com/png.latex?a=0.4"> und <img src="https://latex.codecogs.com/png.latex?b=1.0">. Die Schleife wird 120.000 mal durchlaufen und als Skalierungsfaktoren zur Anpassung an die Fenstergröße habe ich diese Parameter gewählt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span>
<span id="cb1-2">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54583960732/"><img src="https://kantel.github.io/posts/2025061201_mira_abbildung/images/mira2.jpg" class="img-fluid figure-img" alt="Mira-Abbildung für a=-0.48, b=0.93"></a></p>
<figcaption>Mira-Abbildung für a=-0.48, b=0.93</figcaption>
</figure>
</div>
<p>Die zweite Abbildung ist auch unter dem Namen <em>Fantastic Feather Fractal</em> bekannt<sup>4</sup> und besitzt die Parameter <img src="https://latex.codecogs.com/png.latex?a=-0.48"> und <img src="https://latex.codecogs.com/png.latex?b=0.93">. Da sie nach einer gewissen Anzahl von Iterationen auf einen Fixpunkt in der Mitte zuläuft, reichen hier 10.000 Schleifendurchläufe. Zur Anpassung an die Fenstergröße waren auch nur geringe Änderungen im Code notwendig:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb2-2">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">280</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span></code></pre></div>
<p>Wie immer habe ich diese Parameter durch wildes Experimentieren herausbekommen. Nun aber den vollständigen Quellcode (für das Fantastische Feder-Fraktal):</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mira-Abbildung (2): Fantastic Feather Fractal</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> colorsys</span>
<span id="cb3-5"></span>
<span id="cb3-6">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb3-7">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb3-8">radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameter</span></span>
<span id="cb3-11">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.48</span></span>
<span id="cb3-12">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.93</span></span>
<span id="cb3-13">hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb3-14"></span>
<span id="cb3-15">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb3-16">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-17">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mira-Abbildung (2): Fantastic Feather Fractal"</span>)</span>
<span id="cb3-18">gp.bgColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> f(x):</span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb3-22"></span>
<span id="cb3-23">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span></span>
<span id="cb3-24">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> </span>
<span id="cb3-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>):</span>
<span id="cb3-26">    x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> f(x)</span>
<span id="cb3-27">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> f(x1)</span>
<span id="cb3-28">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1</span>
<span id="cb3-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Skalierungsparameter für die Fenstergröße:</span></span>
<span id="cb3-30">    xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb3-31">    yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">280</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span></span>
<span id="cb3-32">    gp.move(xx, yy)</span>
<span id="cb3-33">    gp.setColor(gp.makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb3-34">    gp.circle(radius)</span>
<span id="cb3-35">    hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100.0</span></span>
<span id="cb3-36">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb3-37">    gp.setColor(col)</span>
<span id="cb3-38">    gp.fillCircle(radius)</span>
<span id="cb3-39">    </span>
<span id="cb3-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)    </span></code></pre></div>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Florian Freistetter: <em><a href="http://scienceblogs.de/astrodicticum-simplex/2015/02/04/best-of-chaos-der-seltsame-attraktor/">Best of Chaos: Der seltsame Attraktor</a></em>, Science Blogs (Astrodicticum Simplex) vom 4. Februar 2015</li>
<li>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994</li>
<li>Clifford A. Pickover: <em>Mazes for the Mind. Computers and the Unexpected</em>, New York (St.&nbsp;Martin’s Press) 1992</li>
<li>ders.: <em>Chaos in Wonderland – Visual Adventures in a Fractal World</em>, New York (St.&nbsp;Martin’s Press) 1994</li>
</ul>
<p>Den Quellcode gibt es auch wieder in meinem GitLab-Repositorium zu TigerJython. Hier das <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/mira1.py">erste Beispiel</a> und hier das <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/mira2.py">Fantastische Feder-Fraktal</a>. <em>Habt Spaß damit!</em></p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994, S. 126ff.↩︎</p></li>
<li id="fn2"><p>Gumowski, I./Mira, C.: <em>Point sequences generated by two-dimensional recurrences</em>, IFIP 1975, North Holland↩︎</p></li>
<li id="fn3"><p>Die Seite <a href="https://sequelaencollection.home.blog/2d-chaotic-attractors/">2D Chaotic Attractors</a> der <em>Sequelaen Collection</em> zeigt noch viele weitere, wunderbare chaotische Attraktoren, die meiner Entdeckung harren. (Das steht hier nur, damit ich den Link zu der Seite nicht vergesse&nbsp;🥸)↩︎</p></li>
<li id="fn4"><p><em>Clifford A. Pickover</em> hat in »Mazes for the Mind – Computers and the Unexpected« dem <em>Fantastic Feather Fractal</em> sogar ein ganzes, wenn auch kleines Kapitel gewidmet (Seiten 33f). Und da dieses Fraktal eines seiner Lieblingsfraktale ist, kommt es in seinem Buch »Chaos in Wonderland – Visual Adventures in a Fractal World« noch einmal vor (Seite 261).↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Dynamische Systeme</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025061201_mira_abbildung/</guid>
  <pubDate>Thu, 12 Jun 2025 17:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025061201_mira_abbildung/images/mira2-c.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der Rössler-Attraktor, ein weiterer seltsamer Attraktor in TigerJython</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060902_roessler_attraktor/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54577986723/"><img src="https://kantel.github.io/posts/2025060902_roessler_attraktor/images/roessler-b.jpg" class="img-fluid"></a></p>
<p>Inspiriert durch die gestern vorgestellte <a href="https://kantel.github.io/posts/2025060801_lorenz_attraktor/">Lorenz-Gleichung</a> fand der deutsche Biochemiker <em><a href="http://de.wikipedia.org/wiki/Otto%20E.%20R%C3%B6ssler">Otto E. Rössler</a></em> das nach ihm benannte System. Der <a href="https://de.wikipedia.org/wiki/R%C3%B6ssler-Attraktor">Rössler-Attraktor</a> wurde 1976 zum ersten Mal publiziert<sup>1</sup> und ist durch das folgende Differentialgleichungssystem definiert:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cdot%20x%20&amp;%20=%20-(y%20+%20z)%5C%5C%0A%5Cdot%20y%20&amp;%20=%20x%20+%20ay%5C%5C%0A%5Cdot%20z%20&amp;%20=%20b%20+%20xz%20-%20cz%0A%5Cend%7Balign%7D%0A"></p>
<p>Laut <em>Otto E. Rössler</em> wurde dieses Modell durch die Betrachtung einer Bonbonknetmaschine <em>(taffy puller)</em> auf Coney Island inspiriert, die ihre Toffeemasse wiederholt dehnt und faltet.</p>
<p>Der Attraktor weist eine einfachere Dynamik auf als der von Lorenz; <img src="https://latex.codecogs.com/png.latex?a">, <img src="https://latex.codecogs.com/png.latex?b"> und <img src="https://latex.codecogs.com/png.latex?c"> stellen die (frei wählbaren) Parameter des Systems dar, häufig wird <img src="https://latex.codecogs.com/png.latex?a=b=0.2"> und der Bifurkationspaparmeter <img src="https://latex.codecogs.com/png.latex?c=8.0"> gewählt. Ich habe in Anlehnung an <em>Herm1994</em><sup>2</sup> die Parameter auf <img src="https://latex.codecogs.com/png.latex?a=0.25">, <img src="https://latex.codecogs.com/png.latex?b=0.28"> und <img src="https://latex.codecogs.com/png.latex?c=5.8"> gesetzt. Das Ergebnis wirkt mit diesen Parametern etwas dramatischer. Jedoch seid Ihr aufgefordert, mit anderen Werten zu experimentieren, um festzustellen, wie sie das System beeinflussen.</p>
<p>Über seinen Atttraktor sagte Rössler (zitiert nach <em>Glei1990</em><sup>3</sup>): Er sei</p>
<blockquote class="blockquote">
<p>wie ein offener Strumpf mit einem Loch am Ende und der Wind bläht ihn auf. Dann sitzt der Wind in der Falle. Gegen ihren Willen bewirkt die Energie nun etwas Produktives, so wie der Teufel in mittelalterlichen Geschichten. Das Prinzip ist, daß die Natur etwas gegen ihren eigenen Willen tut und durch Selbstverwirklichung Schönheit hervorruft.</p>
</blockquote>
<p>Wegen der beschriebenen Form heißt das System im Englischen auch <em>Roessler funnel</em>.</p>
<section id="der-quellcode" class="level3">
<h3 class="anchored" data-anchor-id="der-quellcode">Der Quellcode</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math, colorsys</span>
<span id="cb1-3"></span>
<span id="cb1-4">WIDTH  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb1-5">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb1-6"></span>
<span id="cb1-7">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb1-8">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.28</span></span>
<span id="cb1-9">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.8</span></span>
<span id="cb1-10">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb1-11">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span></span>
<span id="cb1-12">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb1-13">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb1-14">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb1-17">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-18">gp.windowPosition(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb1-19">gp.bgColor(gp.Color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>))</span>
<span id="cb1-20">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rössler-Attraktor 3D"</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22">gp.lineWidth(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>):</span>
<span id="cb1-24">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb1-25">    gp.setColor(col)</span>
<span id="cb1-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Euler-Integration</span></span>
<span id="cb1-27">    dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>z)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-28">    dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-29">    dz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> c)))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-30">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dx</span>
<span id="cb1-31">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dy</span>
<span id="cb1-32">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dz</span>
<span id="cb1-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># auf Fenstergröße skalieren</span></span>
<span id="cb1-34">    xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">330</span></span>
<span id="cb1-35">    yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z)</span>
<span id="cb1-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb1-37">        gp.move(xx, yy)</span>
<span id="cb1-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-39">        gp.draw(xx, yy)</span>
<span id="cb1-40">    hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>i)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100.0</span></span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Den <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/roessler01.py">Quellcode</a> gibt es auch wieder in meinem GitLab-Repositorium zu TigerJython.</p>
</section>
<section id="noch-mehr-zu-otto-e.-rössler" class="level3">
<h3 class="anchored" data-anchor-id="noch-mehr-zu-otto-e.-rössler">Noch mehr zu Otto E. Rössler</h3>
<p>Rössler bekam 1977 eine Professur am Institut für Physikalische und Theoretische Chemie in Tübingen. Seit Mitte der 1980er Jahre stritt er sich aber heftig mit der Universitätsleitung und deren Aufsichtsbehörde, dem Wissenschaftsministerium Baden-Württemberg. Es ging in der Hauptsache über Umfang und Inhalte der jeweiligen akademischen Lehrverpflichtungen. Rössler und seine Frau Reimara verloren durch diesen Streit viel Geld und auch ihr Haus. Nicht nur er sah sich als ein <a href="https://www.spiegel.de/lebenundlernen/uni/tuebinger-dauerfehde-der-chaosforscher-und-die-windmuehlenfluegel-a-151581.html">Opfer der Uni</a>, die sich Querdenker wie ihn im heutigen akademischen Massenbetrieb nicht mehr leisten wolle.</p>
<p>Außerdem wurde <em>Otto E. Rössler</em> auch als Gegner des am <a href="http://de.wikipedia.org/wiki/CERN">CERN</a> gebauten Teilchenbeschleunigers <a href="http://de.wikipedia.org/wiki/Large%20Hadron%20Collider">Large Hadron Collider</a> (LHC) bekannt. Er vertrat die These, daß im Betrieb des LHC winzig kleine künstliche Schwarze Löcher erzeugt werden könnten und diese sich vergrößern und die gesamte Masse der Erde verschlingen würden. Ich verstehe zu wenig von Physik, um weder die <a href="https://www.golem.de/0802/57477.html">Argumentation Rösslers</a> noch die <a href="https://www.ketweb.de/stellungnahmen/20080730_Stellungnahme_zu_den_Behauptungen_von_Prof_Otto_Roessler.pdf">Erwiderung darauf vom Komitee für Elementarteilchenphysik</a> (KET) nachvollziehen zu können, doch finde ich die Forschung, die am LHC betrieben wird, faszinierend und mittlerweile wissen wir, daß Rössler vermutlich Unrecht hatte. Doch eine freie und offene Forschung muß auch dies ertragen können, sonst unterscheidet sie sich nicht von der derzeitigen Kahlschlag- und Zensurpolitik der US-amerikanischen Regierung.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Otto E. Rössler: <em>An Equation for Continuous Chaos</em>, Physics Letters Vol. 57A no 5, pp 397-398, 1976↩︎</p></li>
<li id="fn2"><p>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994, S. 89ff.↩︎</p></li>
<li id="fn3"><p>James Gleick: <em>CHAOS: die Ordnung des Universums. Vorstoß in Grenzbereiche der modernen Physik</em>, München (Knaur Taschenbuch) 1990, S. 208f.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Dynamische Systeme</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025060902_roessler_attraktor/</guid>
  <pubDate>Mon, 09 Jun 2025 16:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060902_roessler_attraktor/images/roessler.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Um die digitale Souveränität zurückzugewinnen: LibreOffice 25.2.4</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060901_libreoffice_25_2_4/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54491846110/"><img src="https://kantel.github.io/posts/2025060901_libreoffice_25_2_4/images/officelady-b.jpg" class="img-fluid"></a></p>
<p>Eigentlich wollte ich in Zukunft ja keine Update-Meldungen mehr bringen, aber hier mache ich mal eine Ausnahme. Denn da es in diesen Zeiten immer wichtiger wird, auf seine digitale Souveränität zu achten, ist es wichtig, sich von Microsoft zu verabschieden. Außerdem ist <a href="https://de.wikipedia.org/wiki/LibreOffice">LibreOffice</a> sowieso viel mehr sexy als der marktbeherrschende Monopolist aus Redmond.</p>
<p>Das letzte Update für LibreOffice 25.2.3 kam <a href="https://kantel.github.io/posts/2025050201_libreoffice_25_2_3/">Ende April</a>. Seitdem hat das Team drei <em>Release Candidates</em> (<a href="https://wiki.documentfoundation.org/Releases/25.2.4/RC1">25.2.4/RC1</a>, <a href="https://wiki.documentfoundation.org/Releases/25.2.4/RC2">25.2.4/RC2</a> und <a href="https://wiki.documentfoundation.org/Releases/25.2.4/RC3">25.2.4/RC3</a>) fertiggestellt und damit auch viele Fehlerkorrekturen vorgenommen, bis die neue <a href="https://blog.documentfoundation.org/blog/2025/06/06/tdf-announces-libreoffice-25-2-4/">finale Version von LibreOffice als 25.2.4</a> vor wenigen Tagen <a href="https://www.libreoffice.org/download/download-libreoffice/">bereitgestellt</a> wurde.</p>
<p>Hinter LibreOffice steht keine US-amerikanische Firma, sondern die <em><a href="https://de.wikipedia.org/wiki/LibreOffice#The_Document_Foundation">Document Foundation</a></em>, eine gemeinnützige Stiftung nach deutschem Recht. Wer also auf ein Office-Paket nicht verzichten kann (weil zu Beispiel <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/latex/latex.html">LaT<sub>E</sub>X</a> keine Alternative für sie oder ihn (Gendern ohne Sternchen&nbsp;🤓) ist), hat mit LibreOffice die Gelegenheit, ihre oder seine digitale Souveränität zurückzuerobern.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54491846110/">(Libre-) Office Lady</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>Colored French Comic Style. A sexy young woman with long red hair, green eyes and red lipstick is sitting in an office at a desk in front of a monitor and a keyboard. She is wearing a white, open blouse with a low neckline and a rust-colored vest. She has a pencil in one hand. On the desk is an open notepad, a cup with writing utensils and a stack of books. There are shelves on the walls with many more books and files. The spring sun is shining through a window in the background</em>«. Modell: Flux LoRA, Style: Classic French Roast.</p>



 ]]></description>
  <category>LibreOffice</category>
  <category>Produktivität</category>
  <category>Digitale Souveränität</category>
  <guid>https://kantel.github.io/posts/2025060901_libreoffice_25_2_4/</guid>
  <pubDate>Mon, 09 Jun 2025 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060901_libreoffice_25_2_4/images/officelady.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der Lorenz-Attraktor, eine Ikone der Chaos-Theorie, mit TigerJython</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060801_lorenz_attraktor/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54575243149/"><img src="https://kantel.github.io/posts/2025060801_lorenz_attraktor/images/lorenz-b.jpg" class="img-fluid"></a></p>
<p>Das Abenteuer <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> geht weiter, heute mit einer Ikone der Chaos-Forschung, dem <a href="https://de.wikipedia.org/wiki/Lorenz-Attraktor">Lorenz-Attraktor</a>. Als einer der ersten hatte 1961 <em><a href="http://de.wikipedia.org/wiki/Edward%20N.%20Lorenz">Edward N. Lorenz</a></em>, ein Meteorologe am <a href="http://de.wikipedia.org/wiki/Massachusetts%20Institute%20of%20Technology">Massachusetts Institute of Technology</a> (MIT), erkannt, daß Iteration Chaos erzeugt. Er benutzte dort einen Computer, um ein einfaches nichtlineares Gleichungssystem zu lösen, das ein simples Modell der Luftströmungen in der Erdatmosphäre simulieren sollte. Dazu benutzte er ein System von sieben Differentialgleichungen, das <em>Barry Saltzman</em> im gleichen Jahr aus den <a href="http://de.wikipedia.org/wiki/Navier-Stokes-Gleichungen">Navier-Stokes-Gleichungen</a><sup>1</sup> hergeleitet hatte. Für dieses System existierte keine analytische Lösung, also mußte es numerisch (das hieß wie damals und auch heute noch vielfach üblich in FORTRAN) gelöst werden. Lorenz hatte entdeckt, daß bei nichtperiodischen Lösungen der Gleichungen vier der sieben Variablen gegen Null strebten. Daher konnte er das System auf drei Gleichungen reduzieren:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cfrac%7Bdx%7D%7Bdt%7D%20&amp;=%20-%5Csigma%20(y%20-%20z)%20%5C%5C%0A%5Cfrac%7Bdy%7D%7Bdt%7D%20&amp;=%20(%5Crho%20-%20z)x%20-%20y%20%5C%5C%0A%5Cfrac%7Bdz%7D%7Bdt%7D%20&amp;=%20xy%20-%20%5Cgamma%20z%0A%5Cend%7Baligned%7D%0A"></p>
<p>Dabei sind <img src="https://latex.codecogs.com/png.latex?%5Csigma%20=%20-10">, <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%2040"> und <img src="https://latex.codecogs.com/png.latex?%5Cgamma%20=%20-%20%5Cfrac%7B8%7D%7B3%7D">. Die Parameter der Gleichung habe ich <em>Herm1994</em><sup>2</sup> entnommen, <em>Stew1993</em><sup>3</sup> gibt <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%2028"> an, aber der Wert ändert nichts an dem Verhalten der Kurve und <img src="https://latex.codecogs.com/png.latex?%5Crho%20=%2040"> füllt das Fenster einfach besser aus.&nbsp;😜</p>
<p>Nach ersten Läufen gab Lorenz die Anfangswerte nicht mehr sechstellig (das war damals der FORTRAN-Standard), sondern nur noch dreistellig ein, da er der Meinung war, daß eine Abweichung von unter einem Promille keine Bedeutung habe.</p>
<p>Dabei entdeckte er, daß diese Lösung nur noch in den Anfangswerten mit der Lösung der sechsstelligen Eingabe übereinstimmte. Alle weiteren Werte liefen beträchtlich auseinander. Lorenz grundlegende Erkenntnis war, daß dieses Phänomen kein Computerfehler, sondern eine prinzipielle Eigenschaft nichtlinearer Gleichungssysteme sei. Schon die geringeste Änderung in den Anfangsbedingungen kann eine komplett andere Lösung hervorbringen. Diese Beobachtung ging später als »<a href="http://de.wikipedia.org/wiki/Schmetterlingseffekt">Schmetterlingseffekt</a>« <em>(»Der Schlag eines Schmetterlingsflügels in Brasilien kann einen Tornado über Texas hervorrufen.«)</em> in die Geschichte der <a href="http://de.wikipedia.org/wiki/Chaostheorie">Chaostheorie</a> ein.</p>
<p>Da TigerJython keine eingebaute Bibliothek zur numerischen Lösung von Differentialgleichungen besitzt, habe ich das einfache <a href="https://de.wikipedia.org/wiki/Explizites_Euler-Verfahren">Eulersche Polygonzugverfahren</a> zur numerischen Berechnung herangezogen</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sigma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-2">dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> z) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-3">dz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-4">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dx</span>
<span id="cb1-5">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dy</span>
<span id="cb1-6">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dz</span></code></pre></div>
<p>und dabei konstant <code>dt = 0.01</code> gesetzt. Das benötigt natürlich mehr Rechenkapazität, als sie Lorenz je zur Verfügung standen, aber trotz der größeren Genauigkeit ändert sich nichts am chaotischen Verhalten der Kurve. Für die Farbberechnung habe ich dieses mal nur den Farbwert (<code>hue</code>) bei jeder Iteration geändert, Sättigung und Helligkeit bleiben konstant auf dem höchsten Wert. Das ergibt kräftige Farben, die von Rot über Orange nach Gelb und dann über Grün, Blau und Violett wieder zurück nach rot wandern. So kann man schön erkennen, daß die beiden »Flügel« des Attraktors immer wieder, aber für uns unvorhersehbar, durchlaufen werden.</p>
<p>Um das zu verdeutlichen, habe ich mit</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>t)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100.0</span></span>
<span id="cb2-2">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span></code></pre></div>
<p>ein wenig getrickst, damit der Farbbereich in Abhängigkeit von den Iterationsschritten der Schleife schneller und gegebenenfalls mehrfach durchlaufen wird.</p>
<p>Außerdem wollte ich, daß sich der Attraktor langsam aufbaut, damit Ihr die Entstehung der Kurve nachvollziehen könnt. Normalerweise zeichnet TigerJython alles sofort nach der Berechnung auf den Bildschirm, das heißt der Lorenz-Attraktor ist komplett schon nach Sekundenbruchteilen auf dem Monitor zu sehen. Eine schnelle Lösung wäre, bei jedem Iterationsschritt mit <code>delay(ms)</code><sup>4</sup> eine Pause zu erzwingen. Das führt jedoch zu einem Flackern des Bildschirms. Dem kann man wiederum entgehen, indem man das Neuzeichnen in einem Hintergrundspeicher <em>(Bildbuffer)</em> ausführt und dann erst das fertige Bild in einem Schritt auf den Monitor herausrendert. Dieses Verfahren nennt man <strong>Doppelbufferung</strong>. Bei Animationen wird daher das automatische Rendern der einzelnen Graphikbefehle mit <code>enableRepaint(False)</code> deaktiviert und der Bildbuffer zum geeigneten Zeitpunkt mit <code>repaint()</code> gerendert.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">gp.enableRepaint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>):</span>
<span id="cb3-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Berechne und zeichne das Bild im Hintergrundspeicher</span></span>
<span id="cb3-5">    gp.repaint() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne das fertige Bild auf den Monitor</span></span>
<span id="cb3-6">    gp.delay(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fünf Millisekunden Pause</span></span>
<span id="cb3-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># …</span></span></code></pre></div>
<p>Zu guter Letzt ist noch das Problem zu lösen, daß sich der klassische Lorenz-Attraktor aus drei unabhängigen Variablen zusammensetzt, TigerJythons <em>GPanel</em> aber nur zweidimensional Graphiken darstellen kann. Eine weitverbreitete Methode, dies zu lösen, ist, immer nur zwei Ebenen darzustellen. Angefangen habe ich mit der Darstellung des Attraktors in der x-z-Ebene:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54575287503/"><img src="https://kantel.github.io/posts/2025060801_lorenz_attraktor/images/lorenz1.jpg" class="img-fluid figure-img" alt="Lorenz-Attraktor, x-z-Ebene"></a></p>
<figcaption>Lorenz-Attraktor, x-z-Ebene</figcaption>
</figure>
</div>
<p>Bei der Skalierung auf die Fenstergröße habe ich ein wenig geschummelt, um das Fenster jeweils bestmöglich auszufüllen. Für die x-z-Ebene habe ich diese Parameter genutzt:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span></span>
<span id="cb4-2">zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">470</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>)</span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>):</span>
<span id="cb4-4">        gp.move(xx, zz)</span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb4-6">        gp.draw(xx, zz)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54575390865/"><img src="https://kantel.github.io/posts/2025060801_lorenz_attraktor/images/lorenz2.jpg" class="img-fluid figure-img" alt="Lorenz-Attraktor, y-z-Ebene"></a></p>
<figcaption>Lorenz-Attraktor, y-z-Ebene</figcaption>
</figure>
</div>
<p>In der y-z-Ebene waren es dann diese Parameter:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span></span>
<span id="cb5-2">zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">470</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>)</span>
<span id="cb5-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>):</span>
<span id="cb5-4">        gp.move(yy, zz)</span>
<span id="cb5-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb5-6">        gp.draw(yy, zz)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54575390860/"><img src="https://kantel.github.io/posts/2025060801_lorenz_attraktor/images/lorenz3.jpg" class="img-fluid figure-img" alt="Lorenz-Attraktor, x-y-Ebene"></a></p>
<figcaption>Lorenz-Attraktor, x-y-Ebene</figcaption>
</figure>
</div>
<p>Und in der x-y-Ebene fand ich dann, daß diese Skalierungsparameter das Bildschirmfenster optimal ausfüllten:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span></span>
<span id="cb6-2">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb6-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>):</span>
<span id="cb6-4">        gp.move(xx, yy)</span>
<span id="cb6-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb6-6">        gp.draw(xx, yy)</span></code></pre></div>
<p>Denn nicht nur das Hirn, sondern auch das Auge soll sich schließlich an den Ergebnissen erfreuen können. Dafür nimmt man dann schon einmal eine kleine Schummelei in Kauf.&nbsp;🤓</p>
<p>Jetzt aber den kompletten Quellcode, damit Ihr auch alles nachvollziehen, nachprogrammieren, aber auch erweitern und ausbauen könnt:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math, colorsys</span>
<span id="cb7-3"></span>
<span id="cb7-4">WIDTH  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb7-5">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb7-6"></span>
<span id="cb7-7">sigma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span></span>
<span id="cb7-8">rho   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">40.0</span></span>
<span id="cb7-9">gamma <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb7-10">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb7-11">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb7-12">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb7-13"></span>
<span id="cb7-14">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb7-15">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-16">gp.windowPosition(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb7-17">gp.bgColor(gp.Color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>))</span>
<span id="cb7-18">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lorenz-Attraktor, x-z-Ebene"</span>)</span>
<span id="cb7-19"></span>
<span id="cb7-20">gp.enableRepaint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb7-21"></span>
<span id="cb7-22">gp.lineWidth(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">74.9</span>:</span>
<span id="cb7-24">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb7-25">    gp.setColor(c)</span>
<span id="cb7-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Euler-Integration</span></span>
<span id="cb7-27">    dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sigma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb7-28">    dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(rho <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> z) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb7-29">    dz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> gamma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>z)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb7-30">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dx</span>
<span id="cb7-31">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dy</span>
<span id="cb7-32">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dz</span>
<span id="cb7-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># auf Fenstergröße skalieren</span></span>
<span id="cb7-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Skalierungsparameter für die Fenstergröße:</span></span>
<span id="cb7-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x-z-Ebene: xx = (x*8) + 320, zz = 470 - (z*5.5)</span></span>
<span id="cb7-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y-z-Ebene: yy = (y*7) + 320, zz = 470 - (z*5.5)</span></span>
<span id="cb7-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x-y-Ebene: xx = (x*8) + 320, yy = 240 - (y*5)</span></span>
<span id="cb7-38">    xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">320</span></span>
<span id="cb7-39">    zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">470</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>)</span>
<span id="cb7-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>):</span>
<span id="cb7-41">        gp.move(xx, zz)</span>
<span id="cb7-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-43">        gp.draw(xx, zz)</span>
<span id="cb7-44">    gp.repaint()</span>
<span id="cb7-45">    gp.delay(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb7-46">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dt</span>
<span id="cb7-47">    hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>t)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100.0</span></span>
<span id="cb7-48"></span>
<span id="cb7-49"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Wie bei (fast) allen meinen TigerJython-Experimenten gibt es den <a href="https://gitlab.com/kantel/tigerjython/-/blob/master/fraktale/lorenz01.py">Quellcode</a> natürlich auch in meinem GitLab-Repositorium.</p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Karl-Heinz Becker, Michael Dörfler: <em>Kochrezepte für Fraktale. Computergrafische Experimente mit Python</em>, Bremen 2024</li>
<li>Sau Sheong Chang: <em>Exploring Everyday Things with R and Ruby</em>, Sebastopol (O’Reilly) 2012</li>
<li>Florian Freistetter: <em><a href="https://scienceblogs.de/astrodicticum-simplex/2015/02/04/best-of-chaos-der-seltsame-attraktor/?all=1">Best of Chaos: Der seltsame Attraktor</a></em>, Science Blogs <em>(Astrodicticum Simplex)</em> vom 4. Februar 2015</li>
<li>James Gleick: <em>CHAOS – die Ordnung des Universums. Vorstoß in Grenzbereiche der modernen Physik</em>, München (Knaur Taschenbuch) 1990</li>
<li>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994</li>
<li>Frank Piefke: <em>Simulationen mit dem Personalcomputer</em>, Heidelberg (Hüthig) 1991</li>
<li>Karline Soetaert, Peter M.J. Hermann: <em>A Practical Guide to Ecological Modelling: Using R as a Simulation Platform</em>, o.O. (Springer Netherlands) 2009</li>
<li>Ian Stewart: <em>Spielt Gott Roulette?</em> Frankfurt (Insel TB) 1993</li>
</ul>
<p>Einen ausführlichen Bericht von <em>Eric W. Weisstein</em> über den <a href="https://mathworld.wolfram.com/LorenzAttractor.html">Lorenz-Attractor</a> mit vielen weiteren Literaturhinweisen gibt es auf der Wolfram Mathworld.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Eine sehr schöne Einführung in das <a href="http://scienceblogs.de/astrodicticum-simplex/2017/01/20/sternengeschichten-folge-217-das-ungeloeste-problem-der-navier-stokes-gleichungen/">ungelöste Problem der Navier-Stokes-Gleichungen</a> findet Ihr bei <em>Florian Freistetter</em> in der 217. Folge seiner Sternengeschichten↩︎</p></li>
<li id="fn2"><p>Dietmar Herrmann: <em>Algorithmen für Chaos und Fraktale</em>, Bonn (Addison-Wesley) 1994, S. 80ff.↩︎</p></li>
<li id="fn3"><p>Ian Stewart: <em>Spielt Gott Roulette?</em> Frankfurt (Insel TB) 1993, S. 141ff.↩︎</p></li>
<li id="fn4"><p>Der Parameter <code>ms</code> steht für Millisekunden.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Dynamische Systeme</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025060801_lorenz_attraktor/</guid>
  <pubDate>Sun, 08 Jun 2025 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060801_lorenz_attraktor/images/lorenz.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Das Verkehrschaos geht weiter</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060701_verkehrschaos_ii/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54502187857/"><img src="https://kantel.github.io/posts/2025060701_verkehrschaos_ii/images/verkehrschaos-b.jpg" class="img-fluid"></a></p>
<p><a href="https://kantel.github.io/posts/2025050702_verkehrschaos_im_kiez/">Das Verkehrschaos</a> geht weiter, denn auch am nächsten Wochenende von Freitag, 13. Juni 2025, 21:00 Uhr bis Montag, 16. Juni, 06:00 Uhr wird die Autobahn erneut in unserem Kiez gekippt, denn es gibt innerhalb weniger Wochen eine vierte, mehrtägige <a href="https://viz.berlin.de/aktuelle-meldungen/vollsperrung-a100-fur-inbetriebnahme-des-16-bauabschnitts/">Vollsperrung der A100 im Bereich des Britzer Tunnels in beiden Richtungen zwischen Gradestraße und Späthstraße</a>. Wie schon in den letzten drei Mai-Wochenenden werden Fußgängerinnen und Fußgänger, Radfahrerinnen und Radfahrer als Folge einer mißlungenen Verkehrsplanung durch die Auto(-bahn)-Lobby des Berliner Senats erneut an den Rand der Straßen gedrängt und müssen abgasgeschwängerte Luft atmen. Und auch die Busse der BVG werden wieder im Stau stecken, so daß die <a href="https://www.rbb24.de/panorama/beitrag/2025/04/verkehr-studie-berlin-autos-fussgaenger-bus-bahn-bvg-s-bahn.html">Menschen, die keinen PKW besitzen</a> (und das ist in unserem Kiez die Mehrheit der Familien) in ihrem Quartier gefangen gehalten werden.</p>
<p>Aber das ist den Ignorantinnen und Ignoranten des Berliner Senats egal. Statt den <a href="https://www.rbb24.de/politik/beitrag/2025/05/neue-busspuren-senat-bvg-verkehr-stvo-reform-verspaetungen-puenktlichkeit-sonderfahrstreifen.html">Bussen des ÖPNV durch mehr Busspuren das Vorankommen zu erleichtern</a>, streicht die Berliner Verkehrssenatorin <em>Ute Bonde</em> (CDU) fröhlich und in völliger Mißachtung der Bürgerwünsche und über die Köpfe der Bezirksparlamente hinweg <a href="https://taz.de/Senat-streicht-Kiezblock-Mittel/!6090436/">schon zugesagte Kiezblock-Mittel</a> und baut <a href="https://entwicklungsstadt.de/kiezblocks-fahrradstrassen-kontroversen-die-veraenderung-des-berliner-stadtraums/">Radstreifen</a> zugunsten von Parkplätzen <a href="https://entwicklungsstadt.de/neues-verkehrskonzept-fuer-kantstrasse-stoesst-auf-widerstand-im-bezirk/">zurück</a>. Hauptsache, die Bleifußkoalition von CDU und SPD bekommt ihren Willen.</p>
<p>Liebe Mitbürgerinnen und Mitbürger, im September nächsten Jahres sind Wahlen. Wählt diese unfähigen und bleifußhörigen Ignorantinnen und Ignoranten dann doch einfach ab!</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54502187857/">Verkehrschaos im Kiez</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A multitude of cars trudge through narrow city streets. The air is filled with exhaust fumes, and pedestrians are pushed to the side of the road by the cars</em>«. Modell: Flux LoRA, Style: Classic French Roast.</p>



 ]]></description>
  <category>Neukölln</category>
  <category>Städte für Menschen</category>
  <category>Verkehr</category>
  <category>Verkehrswende</category>
  <category>Failed State Berlin</category>
  <guid>https://kantel.github.io/posts/2025060701_verkehrschaos_ii/</guid>
  <pubDate>Sat, 07 Jun 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060701_verkehrschaos_ii/images/verkehrschaos.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Noch mehr Spaß mit TigerJython: Die Schmetterlingskurve</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060503_butterfly_curve/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54567864481/"><img src="https://kantel.github.io/posts/2025060503_butterfly_curve/images/butterflykurve-b.jpg" class="img-fluid"></a></p>
<p>Seit den Tagen meiner ersten Programmierversuche in den 1980er Jahren auf meinem damals hochmodernen, 8 MHZ schnellen <a href="https://de.wikipedia.org/wiki/Atari_ST">Atari Mega ST&nbsp;2</a> mit <a href="https://de.wikipedia.org/wiki/Modula-2">Modula-2</a> ist die <a href="https://en.wikipedia.org/wiki/Butterfly_curve_(transcendental)">Schmetterlingskurve</a> eines meiner bevorzugten computergraphischen Objekte. Auch im <em>Schockwellenreiter</em> tauchte sie schon mehrfach auf, einmal im <a href="http://blog.schockwellenreiter.de/essays/tkinter01.html">April 2014 realisiert mit Python und Tkinter</a> und eimal im <a href="http://blog.schockwellenreiter.de/2017/01/2017011804.html">Januar 2017 programmiert mit Processing.py</a>. Was liegt also näher, sie nun auch einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> zu realisieren?</p>
<p>Die Kurve wurde erstmals 1989 von <em>Temple H. Fay</em> entdeckt. Sie wird in Polarkoordinaten beschrieben und ihre Formel ist</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Crho=e%5E%7B%5Ccos(%5Ctheta)%7D-2%5Ccdot%20%5Ccos(4%5Ccdot%20%5Ctheta)+%5Csin(%5Ctfrac%7B%5Ctheta%7D%7B12%7D)%5E5%0A"></p>
<p>oder in Python-Code:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp(cos(theta)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>cos(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>theta) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (sin(theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span></code></pre></div>
<p>In TigerJython sieht das dann so aus:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gpanel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gp</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math, colorsys</span>
<span id="cb2-3"></span>
<span id="cb2-4">WIDTH  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb2-5">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xOld <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> yOld <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb2-8">hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb2-9"></span>
<span id="cb2-10">gp.makeGPanel(gp.Size(WIDTH, HEIGHT))</span>
<span id="cb2-11">gp.window(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, WIDTH, HEIGHT, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-12">gp.windowPosition(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-13">gp.bgColor(gp.Color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>))    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (42, 40, 45)</span></span>
<span id="cb2-14">gp.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Schmetterlings-Kurve"</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16">gp.lineWidth(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">75.39</span>:</span>
<span id="cb2-18">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span>
<span id="cb2-19">    gp.setColor(c)</span>
<span id="cb2-20">    r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.exp(math.cos(theta)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>math.cos(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>theta) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (math.sin(theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># aus Polarkoordinaten konvertieren</span></span>
<span id="cb2-22">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>math.cos(theta)</span>
<span id="cb2-23">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>math.sin(theta)</span>
<span id="cb2-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># auf Fenstergröße skalieren</span></span>
<span id="cb2-25">    xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> WIDTH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-26">    yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>):</span>
<span id="cb2-28">        gp.move(xx, yy)</span>
<span id="cb2-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-30">        gp.draw(xx, yy)</span>
<span id="cb2-31">    theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span></span>
<span id="cb2-32">    hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> theta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb2-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Um die Kurve optisch aufzuhübschen, habe ich – wie <a href="http://blog.schockwellenreiter.de/2022/10/2022100901.html">hier schon einmal beschrieben</a> – das <a href="https://docs.python.org/3/library/colorsys.html">Colorsys-Modul</a> verwendet, das Teil der Python-Standard-Bibliothek ist, und mit</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorsys.hsv_to_rgb(hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> hue, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>)</span></code></pre></div>
<p>den <a href="https://de.wikipedia.org/wiki/HSV-Farbraum">HSV-Farbraum</a> statt des normal in TigerJython genutzten RGB-Farbraums genutzt. Denn das HSV-Modell ist für die meisten Menschen viel anschaulicher als der RGB-Farbraum und bietet viele Möglichkeiten, sich zum Beispiel bunte Farbaletten für die Darstellung von Fraktalen zurechtzubasteln.</p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Stan Wagon: <em>Mathematica® in Aktion</em>, Heidelberg (Spektrum Akademischer Verlag) 1993</li>
<li>Temple H. Fay: <em>The Butterfly Curve</em>, American Math. Monthly, 96(5); 442-443</li>
<li>Clifford A. Pickover: <em>Mit den Augen des Computers. Phantastische Welten aus dem Geist der Maschine</em>, München (Markt&amp;Technik) 1992, S. 41ff.</li>
</ul>
<p>Die Kurve ist ein guter Einstieg, um von hier aus über die <a href="https://de.wikipedia.org/wiki/Lorenz-Attraktor">Lorenz-Kurve</a> zu den im letzten Beitrag erwähnten iterativen Fraktalen und seltsamen Attraktoren überzuleiten. <em>Still digging!</em></p>


</section>

 ]]></description>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Mathematik</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025060503_butterfly_curve/</guid>
  <pubDate>Thu, 05 Jun 2025 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060503_butterfly_curve/images/butterflykurve.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meiner Bibliothek: Kochrezepte für Fraktale</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060502_fraktales_kochbuch/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54537889896/"><img src="https://kantel.github.io/posts/2025060502_fraktales_kochbuch/images/pythonteaching-b.jpg" class="img-fluid"></a></p>
<p>Meine <a href="https://kantel.github.io/posts/2025052801_tigerjython_reloaded/">frisch erwachte Begeisterung</a> für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> hat mich nach Inspirationen suchen lassen, mit denen ich mich mit dieser IDE austoben kann. Und ich mußte nicht lange suchen und dann war ich fündig geworden:</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://m.media-amazon.com/images/I/619LGyqhqPL._SY425_.jpg"><img src="https://kantel.github.io/posts/2025060502_fraktales_kochbuch/images/fraktale.jpg" class="img-fluid"></a>
</div>
<p>Denn der schon mehrfach in diesem <del>Blog</del> Kritzelheft erwähnte »Freund aus Bremen«, <em>Karl-Heinz Becker</em> hat zusammen mit <em>Michael Dörfler</em> das Buch »<a href="https://www.amazon.de/Kochrezepte-f%C3%BCr-Fraktale-Computergrafische-Experimente/dp/B0DLTZ13JY?source=ps-sl-shoppingads-lpcontext&amp;ref_=fplfs&amp;psc=1&amp;smid=A3JWKAKR8XB7XF&amp;language=de_DE">Kochrezepte für Fraktale: Computergrafische Experimente mit Python</a>« (Amazon-Link) herausgegeben. Ausgehend von dem <a href="https://de.wikipedia.org/wiki/Lorenz-Attraktor">Lorenz-Attraktor</a> werden auf 140 Seiten in 90 »Rezepten« 90 iterative Fraktale mit seltsamen Attraktoren vorgestellt und wie man sie in Python programmiert. Die beiden Autoren haben dafür ganz klassisch <code>numpy</code>, die <code>matplotlib</code> und für die Lösung der Differentialgleichungen <code>scipy odeint</code> eingesetzt. Meine Aufgabe wird es jetzt sein, dies nach TigerJython zu portieren und dabei die Differentialgleichungen numerisch »von Hand« zu lösen. Ich freue mich schon auf diese Herausforderung.</p>
<p><strong>Caveat</strong>: Ich bin mit <em>Karl-Heinz Becker</em> und <em>Michael Dörfler</em> befreundet und daher voreingenommen. Trotzdem glaube ich, daß ich das »Kochbüchlein« mit gutem Gewissen empfehlen kann.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54537889896/">Python Teaching</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>A python wearing horn-rimmed glasses and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«. Modell: Flux.1 (schnell), Style: PixelWave.</p>



 ]]></description>
  <category>Bücher</category>
  <category>Python</category>
  <category>TigerJython</category>
  <category>Dynamische Systeme</category>
  <category>Mathematik</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025060502_fraktales_kochbuch/</guid>
  <pubDate>Thu, 05 Jun 2025 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060502_fraktales_kochbuch/images/pythonteaching.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neue Version: Pygame-CE 2.5.4 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54569329440/"><img src="https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/images/pygamece-b.jpg" class="img-fluid"></a></p>
<p>Soeben erreichte mich die Nachricht, daß vor wenigen Tagen von <a href="https://pyga.me/">Pygame-CE</a>, der <a href="https://kantel.github.io/posts/2024081502_pygame_ce/"><em>Community Edition</em>-Fork</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a>, die <a href="https://github.com/pygame-community/pygame-ce/releases/tag/2.5.4">Version 2.5.4 freigegeben</a> wurde.</p>
<p><a href="https://github.com/pygame-community"><img src="https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/images/pygamecommunity.jpg" class="img-fluid"></a></p>
<p>In das Update sind einige nennenswerte Änderungen (unter anderem können jetzt animierte GIFs und WEBP als Animation geladen werden) und etliche Bugfixes eingeflossen. Außerdem wollen die Entwickler einen großen Schritt in Richtung SDL3-Unterstützung gemacht haben. Die <a href="https://github.com/pygame-community/pygame-ce/releases/tag/2.5.4">Release-Notes</a> verraten mehr. Und ein <a href="https://github.com/pygame-community/pygame-ce/compare/2.5.3...2.5.4">komplettes Changelog</a> der Versionen 2.5.3 bis 2.5.4 gibt es hier.</p>
<p>Ein Update kann mit</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> uninstall pygame     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if installed</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install pygame-ce <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span></span></code></pre></div>
<p>erfolgen.</p>
<p>Da Pygame-CE die einzige Version ist, die offiziell von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygbag.html">Pygbag</a> unterstützt wird und somit Pygame-Apps webtauglich macht, hatte ich im letzten Jahr auch den <a href="https://kantel.github.io/posts/2024081502_pygame_ce/">Schritt von Pygame nach Pygame-CE gewagt</a>. Und kürzlich hatte ich gesehen, daß auch <a href="https://webtigerpython.ethz.ch/">WebTigerPython</a> (via Pyodide) Pygame-CE <a href="https://pyodide.org/en/stable/usage/packages-in-pyodide.html">unterstützen soll</a>. Es gibt also noch viel zu spielen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54569329440/">Pygame-CE</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC-Comics Style. A python wearing horn-rimmed glasses with a gamepad and a laptop sits in a beer garden and playing computer games</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Pygame</category>
  <category>Python</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/</guid>
  <pubDate>Thu, 05 Jun 2025 14:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060501_pygame_ce_2_5_4/images/pygamece.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Spaß mit Python, dem Tiger und der Schildkröte</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54565258311/"><img src="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/tigerpython-b.jpg" class="img-fluid"></a></p>
<p>Da nun doch ziemlich viel Zeit verstrichen war, seitdem ich das letzte Mal etwas mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> angestellt hatte, habe ich ein über fünf Jahre altes Projekt hervorgekramt, um wieder mit der Programmierung in dieser Python-Umgebung vertrauter zu werden. Es ist der Beitrag »<a href="http://blog.schockwellenreiter.de/2021/02/2021020901.html">Fraktale überall</a>« vom 9. Februar 2021, in dem ich einen symmetrischen wie auch einen asymmetrtischen <a href="https://de.wikipedia.org/wiki/Pythagoras-Baum">Pythagoras-Baum</a> mit TigerJythons Turtle realisiert hatte.</p>
<p>Auch dieses Mal mußte ich nur minimale Änderungen vornehmen, die in der Hauptsache dem Umstand geschuldet waren, daß ich damals noch recht gedankenlos den auch von den Machern von TigerJython angewandeten Wildcard-Import eingesetzt hatte. Heute habe ich nun statt</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<p>lieber die Konstruktion</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span></code></pre></div>
<p>genutzt, um Namensraumverschmutzungen zu vermeiden. Zwar sind sie im Falle des Turtle-Moduls recht unwarscheinlich, aber ich fühle mich einfach wohler damit.</p>
<section id="symmetrischer-pythagoras-baum" class="level3">
<h3 class="anchored" data-anchor-id="symmetrischer-pythagoras-baum">Symmetrischer Pythagoras-Baum</h3>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54564211087/"><img src="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/sympythagoras.jpg" class="img-fluid"></a></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb3-3"></span>
<span id="cb3-4">palette <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">183</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>),</span>
<span id="cb3-5">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">251</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>),</span>
<span id="cb3-6">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">154</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">205</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">142</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">134</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>),</span>
<span id="cb3-7">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">115</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>)]</span>
<span id="cb3-8">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb3-9">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb3-10">maxRec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> tree(s):</span>
<span id="cb3-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> maxRec:</span>
<span id="cb3-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb3-15">    square(s)</span>
<span id="cb3-16">    p.forward(s)</span>
<span id="cb3-17">    s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-18">    p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb3-19">    tree(s1)</span>
<span id="cb3-20">    p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb3-21">    p.forward(s1)</span>
<span id="cb3-22">    tree(s1)</span>
<span id="cb3-23">    p.back(s1)</span>
<span id="cb3-24">    p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb3-25">    p.back(s)</span>
<span id="cb3-26">    </span>
<span id="cb3-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> square(s):</span>
<span id="cb3-28">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> palette[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(palette)]</span>
<span id="cb3-29">    p.setFillColor(col)</span>
<span id="cb3-30">    p.startPath()</span>
<span id="cb3-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb3-32">        p.forward(s)</span>
<span id="cb3-33">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb3-34">    p.fillPath()</span>
<span id="cb3-35"></span>
<span id="cb3-36">gt.Options.setPlaygroundSize(WIDTH, HEIGHT)      </span>
<span id="cb3-37">tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.TurtleFrame()</span>
<span id="cb3-38">tf.setTitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Symmetrischer Pythagoras-Baum"</span>)</span>
<span id="cb3-39">tf.clear(makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hintergrundfarbe</span></span>
<span id="cb3-40">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb3-41">p.setPenColor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#923545"</span>)</span>
<span id="cb3-42">p.hideTurtle()</span>
<span id="cb3-43">p.setPos(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb3-44">tree(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-45"></span>
<span id="cb3-46"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
</section>
<section id="asymmetrischer-pythagoras-baum" class="level3">
<h3 class="anchored" data-anchor-id="asymmetrischer-pythagoras-baum">Asymmetrischer Pythagoras-Baum</h3>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54565205826/"><img src="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/asympythagoras.jpg" class="img-fluid"></a></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gturtle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> gt</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb4-3"></span>
<span id="cb4-4">palette <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">189</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">183</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>),</span>
<span id="cb4-5">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">251</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">152</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">47</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">69</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>),</span>
<span id="cb4-6">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">154</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">205</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">107</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">142</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>), makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">134</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">78</span>),</span>
<span id="cb4-7">           makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">139</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">115</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>)]</span>
<span id="cb4-8">WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">640</span></span>
<span id="cb4-9">HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> tree(s, level):</span>
<span id="cb4-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb4-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span></span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb4-15">        quadrat(s)</span>
<span id="cb4-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Linke Seite</span></span>
<span id="cb4-17">        ls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-18">        p.forward(s)</span>
<span id="cb4-19">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-20">        p.forward(s)</span>
<span id="cb4-21">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb4-22">        p.forward(ls)</span>
<span id="cb4-23">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-24">        tree(ls, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rechte Seite</span></span>
<span id="cb4-26">        rs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-27">        p.right(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>)</span>
<span id="cb4-28">        p.forward(rs)</span>
<span id="cb4-29">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-30">        tree(rs, level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-31">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb4-32">        p.back(s)</span>
<span id="cb4-33">        </span>
<span id="cb4-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> quadrat(s):</span>
<span id="cb4-35">    col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> palette[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(palette)]</span>
<span id="cb4-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># p.setPenColor(col)</span></span>
<span id="cb4-37">    p.setFillColor(col)</span>
<span id="cb4-38">    p.startPath()</span>
<span id="cb4-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb4-40">        p.forward(s)</span>
<span id="cb4-41">        p.left(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb4-42">    p.fillPath()</span>
<span id="cb4-43"></span>
<span id="cb4-44">gt.Options.setPlaygroundSize(WIDTH, HEIGHT)</span>
<span id="cb4-45">gt.Options.setFramePosition(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)       </span>
<span id="cb4-46">tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.TurtleFrame()</span>
<span id="cb4-47">tf.setTitle(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asymmetrischer Pythagoras-Baum"</span>)</span>
<span id="cb4-48">tf.clear(makeColor(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>))   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hintergrundfarbe</span></span>
<span id="cb4-49">p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gt.Turtle(tf)</span>
<span id="cb4-50">p.setPenColor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#923545"</span>)</span>
<span id="cb4-51">p.hideTurtle()</span>
<span id="cb4-52">p.setPos(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>HEIGHT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb4-53">tree(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb4-54"></span>
<span id="cb4-55"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>Im Prinzip liegen die Unterschiede in den beiden Versionen nur in der Funktion <code>tree()</code>, allerdings muß sich die Schildkröte in der Funktion <code>square()</code> resepektive <code>quadrat()</code> beim symmetrischen Pythagoras-Baum vom Startpunkt aus nach <strong>rechts</strong> (<code>p.right(90)</code>) und bei der asymmetrischen Variante nach <strong>links</strong> (<code>p.left(90)</code>) bewegen.</p>
</section>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Jarka Arnold, Tobias Kohn, Aegidius Plüss: <em><a href="https://programmierkonzepte.ch/index.php">Programmierkonzepte mit Python und der Lernumgenbung TigerJython</a></em>, Version 2.77, Letzte Aktualisierung: 1. Juni 2024</li>
<li>Jarka Arnold, Aegidius Plüss: <em><a href="https://www.jython.ch/index.php">Grafik, Robotik, Datenbanken und Spielprogrammierung mit TigerJython</a></em> (TigerJython für Gymnasien), Version 2.5, Letzte Aktualisierung: 12. Juli 2024</li>
</ul>
<p>Ich habe mal wieder Blut geleckt und werde daher in Zukunft noch einiges mit TigerJython, aber auch mit <a href="https://webtigerpython.ethz.ch/">WebTigerPython</a> (hier der Link zu der (Entwickler-) <a href="https://docs.webtigerpython.ethz.ch/index.html">Dokumentation</a>) anstellen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54565258311/">Tiger und Python unter einem Pythagoras-Baum</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC-Comics Style. A python wearing horn-rimmed glasses and a tiger in a red dressing gown sit under a giant Pythagoras tree in a beer garden and drink beer from large glasses</em>«. Modell: Flux Kontext, Style: None.</p>


</section>

 ]]></description>
  <category>TigerJython</category>
  <category>Python</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/</guid>
  <pubDate>Mon, 02 Jun 2025 14:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025060201_spass_mit_tigerjython/images/tigerpython.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
