<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/index.html</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Thu, 28 Sep 2023 18:35:00 GMT</lastBuildDate>
<item>
  <title>Dynamik eines nichtlinearen Mini-Weltmodells: Experimente mit Py5 und FPlotter</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092802_miniweltsim/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53216111029/"><img src="https://kantel.github.io/posts/2023092802_miniweltsim/images/weltsim-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nachdem ich vor ein <a href="https://kantel.github.io/posts/2023092401_fplotter_py5/">paar Tagen</a> meine »Matplotlib für Arme« <a href="http://blog.schockwellenreiter.de/2021/03/2021031901.html">FPlotter</a> (<a href="http://blog.schockwellenreiter.de/2021/03/2021033002.html">2</a>) von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> nach <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> portiert hatte, galt es, dies auch mit Leben zu erfüllen. Bevor ich damit die Ergebnisse der hier vorgestellten <a href="https://kantel.github.io/posts/2023092301_forestfire_sim_1/">Waldbrandsimulation</a> nach <em>Al Sweigart</em> visualisiere, wollte ich als Fingerübung erst einmal ein Modell von <em>Hartmut Bossel</em>, ein »nichtlineares Mini-Weltmodell«<sup>1</sup> in Py5 implementieren. Das erwies sich aufwendiger, als ursprünglich geplant, aber dafür kann sich das Ergebnis durchaus sehen lassen.</p>
<p>Ziel der Simulation ist es, ein (stark vereinfachtes) »Weltmodell« zu erstellen, das eine in etwa richtige Beschreibung der globalen Dynamik liefern kann, wie sie sich aus dem Zusammenspiel zwischen Bevölkerungsentwicklung, Umweltbelastung und Konsum entweickeln könnte. Dafür wird ein System aus drei gekoppelten Differentialgleichungen angenommen, die sich wie folgt zusammensetzen:</p>
<p>Die <strong>Bevölkerungsentwicklung</strong> (<img src="https://latex.codecogs.com/png.latex?V">) entspricht in etwa der Beziehung <em>neue Bevölkerungszahl = alte alte Bevölkerungszahl + Geburtenrate (<img src="https://latex.codecogs.com/png.latex?B">) - Sterberate (<img src="https://latex.codecogs.com/png.latex?D">)</em> (als Einheit wird – auch in allen folgenden Beziehungen/Gleichungen – ein Jahr vorausgesetzt). Das ergibt die Gleichung</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5CDelta%20V%7D%7B%5CDelta%20t%7D=B-D%0A"></p>
<p>Im Teilmodell der <strong>Umweltbelastung</strong> (<img src="https://latex.codecogs.com/png.latex?L">) müssen zwei Verhaltensmöglichkeiten berücksichtigt werden. Liegt sie <strong>unter</strong> einem kritischen Wert (der Kapazitätsgrenze <img src="https://latex.codecogs.com/png.latex?L%5E%5Cast">), so ist der Abbau pro Zeiteinheit proportional zur vorhandenen Umweltbelastung. Liegt die Belastung dagegen <strong>über</strong> den kritischen Wert, so kann pro Zeiteinheit nur noch die (konstante) Menge abgebaut werden, die der Kapazitätsgrenze entspricht. Wenn die Belastung mit Schadstoffen pro Zeiteinheit gleich <img src="https://latex.codecogs.com/png.latex?S"> ist und das Maß für die relative Umweltbelastung <img src="https://latex.codecogs.com/png.latex?Q=%5Cfrac%7BL%5E%5Cast%7D%7BL%7D">, dann ergibt sich mit dem Parameter <img src="https://latex.codecogs.com/png.latex?a"> für die spezifische Abbaurate folgende Gleichung:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5CDelta%20L%7D%7B%5CDelta%20t%7D%20=%20%5Cbegin%7Bcases%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20S%20-%20a%20%5Ccdot%20L%20&amp;%20%5Ctext%7B%20falls%20%7D%20L%20%3C=%20L%5E%5Cast%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20S%20-%20a%20%5Ccdot%20L%20%5Ccdot%20Q%20&amp;%20%5Ctext%7B%20falls%20%7D%20L%20%3E%20L%5E%5Cast%0A%5Cend%7Bcases%7D%0A"> Die Entwicklung des <strong>Konsums</strong> hingegen ist weitestgehend <em>autokatalytisch</em>, das heißt, es besteht eine positive Rückkoppelung zwischen dem Konsumniveau (<img src="https://latex.codecogs.com/png.latex?K">) und seiner Wachstumsrate. Das führt bei einer konstanten Wachstumsrate <img src="https://latex.codecogs.com/png.latex?c"> zu exponentiellem Wachstum:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5CDelta%20K%7D%7B%5CDelta%20t%7D%20=%20c%20%5Ccdot%20K%0A"></p>
<p>Da jedoch auch beim Konsumniveau exponentielles Wachstum zu einem Zusammenbruch des Gesamtsystems führen würde, wird also einer mehr oder weniger realistische Wachstumsbegrenzung angenommen. Sinnvoll ist die Annahme einer Kapazitätsgrenze <img src="https://latex.codecogs.com/png.latex?K%5E%5Cast"> und der Modifizierung der Wachstumsrate so, daß diese sich bei der Annäherung an die Kapazitätsgrenze auf Null reduziert. Dies kann erreicht werden duch den <em>logistischen</em> Ansatz</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7B%5CDelta%20K%7D%7B%5CDelta%20t%7D%20=%20c%20%5Ccdot%20K%20%5Ccdot%20(1%20-%20f%20%5Ccdot%20K)%0A"></p>
<p>Dabei bestimmt der Kapazitätsfaktor <img src="https://latex.codecogs.com/png.latex?f%20=%20%5Cfrac%7B1%7D%7BK%5E%5Cast%7D">, auf welchem Konsumniveau Sättigung eintritt.</p>
<p>Jetzt müssen diese Teilmodelle »nur« noch verkoppelt werden. Dabei trifft <em>Bossel</em> folgende Annahmen:</p>
<p>Die erste Verkopplung von Umweltbelastung (im Quellcode <code>last</code>) mit der Bevölkerungsentwicklung (im Quellcode <code>volk</code>) ist intendiert als Maßnahme zur Bevölkerungskontrolle in Reaktion auf hohe Umweltbelastung. Sie setzt daher bei der Geburtenrate an. Ausgangspunkt ist zweckmäßigerweise der bereits definierte Umweltqualitätsfaktor <img src="https://latex.codecogs.com/png.latex?Q%20=%20%5Cfrac%7BL%5E%5Cast%7D%7BL%7D%20=%20%5Cfrac%7B1%7D%7BL%7D">. Bei sinkender Umweltqualität würde damit die Geburtenrate entsprechend verringert. Diese Wirkung ist durch den Faktor <img src="https://latex.codecogs.com/png.latex?u"> zu beeinflussen<sup>2</sup>.</p>
<p>Die zweite Kopplung von <code>last</code> nach <code>volk</code> beschreibt ein Sinken der Lebenserwartung durch den gesundheitsschädlichen Einfluß der Umweltbelastung. Sie muß deshalb von <img src="https://latex.codecogs.com/png.latex?L"> auf die Sterberate wirken. Im Modell wird <img src="https://latex.codecogs.com/png.latex?L"> direkt mit dem Faktor <img src="https://latex.codecogs.com/png.latex?1"> für die Sterberate genutzt.</p>
<p>Die Kopplung von <code>volk</code>nach <code>last</code> steht in einem direkten Zusammenhang mit der Kopplung des Konsums (im Quellcode <code>kons</code>) nach <code>last</code>, da der Schadstoffeintrag sowohl von der Bevölkerungsgröße wie auch von der Höhe des Konsums abhängt. Er ist daher proprtional zum Produkt <img src="https://latex.codecogs.com/png.latex?V%20%5Ccdot%20K">. Als Wichtungsfaktor wird im Modell <img src="https://latex.codecogs.com/png.latex?e%20=%200.02"> eingesetzt.</p>
<p>Die Kopplung von <code>kons</code> nach <code>volk</code> modelliert die Erhöhung der Zahl der (überlebenden) Kinder bei wachsendem Wohlstand. Ähnlich wie bei der Verbindung von <img src="https://latex.codecogs.com/png.latex?L"> auf die Sterberate wirkt <img src="https://latex.codecogs.com/png.latex?K"> (ebenfalls mit der Gewichtung von <img src="https://latex.codecogs.com/png.latex?1">) direkt auf die Geburtenrate</p>
<p>Die Kopplung von <code>kons</code> nach <code>volk</code> nimmt an, daß eine Erhöhung der Umweltbelastung auch eine Erhöhung des Konsums mit sich zieht, daß <img src="https://latex.codecogs.com/png.latex?L"> also auch auf die Wachstumsrate von <img src="https://latex.codecogs.com/png.latex?K"> wirkt. Auch hier nimmt <em>Bossels</em> Modell wieder einen einfachen, proportionalen Einfluß mit der Gewichtung von <img src="https://latex.codecogs.com/png.latex?1"> an.</p>
<p>Die letzte verbleibende Kopplung von <code>last</code> nach <code>kons</code> besitzt eine von der Eingriffsstärke abhängige Gewichtung, die bewirkt, daß das Wachstum des Konsumniveaus eine Grenze findet. Im Modell wird daher sinnvollerweise <img src="https://latex.codecogs.com/png.latex?L"> mit dem Sättigungsterm so verkoppelt, daß auch diese Wichtung durch den Kapazitätsfaktor <img src="https://latex.codecogs.com/png.latex?f"> ausgedrückt wird.</p>
<p>Unter diesen Annahmen erhalten wir ein Gleichungssystem, das aus folgenden, nichtlinearen Differentialgleichungen besteht:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0A%5Cfrac%7B%5CDelta%20V%7D%7B%5CDelta%20t%7D%20&amp;%20=%20b%20%5Ccdot%20V%20%5Ccdot%20u%20%5Ccdot%20(%5Cfrac%7BL%5E%5Cast%7D%7BL%7D%20K%20-%20d%20%5Ccdot%20V%20%5Ccdot%20L)%20%5C%5C%0A%5Cfrac%7B%5CDelta%20L%7D%7B%5CDelta%20t%7D%20&amp;%20=%20%5Cbegin%7Bcases%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20e%20%5Ccdot%20K%20%5Ccdot%20V%20-%20a%20%5Ccdot%20L%5E%5Cast%20&amp;%20%5Ctext%7B%20falls%20%7D%20L%20%3E%20L%5E%5Cast%20%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20e%20%5Ccdot%20K%20%5Ccdot%20V%20-%20a%20%5Ccdot%20L%20%20%20%20%20%20&amp;%20%5Ctext%7B%20falls%20%7D%20L%20%3C=%20L%5E%5Cast%0A%5Cend%7Bcases%7D%20%5C%5C%0A%5Cfrac%7B%5CDelta%20K%7D%7B%5CDelta%20t%7D%20&amp;%20=%20c%20%5Ccdot%20K%20%5Ccdot%20L%20%5Ccdot%20(1%20-%20K%20%5Ccdot%20L%20%5Ccdot%20f)%0A%5Cend%7Balign*%7D%0A"></p>
<p>mit den Anfangsbedingungen</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AV_0%20=%201,%20L_0%20=%201,%20K_0%20=%201%0A"></p>
<p>und den Paramtern</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Aa%20=%200.1,%20b%20=%200.03,%20c%20=%200.05,%20d%20=%200.01,%20e%20=%200.02%0A"></p>
<p>Der Eingriffsparameter <img src="https://latex.codecogs.com/png.latex?u"> sollte in der Nähe von <img src="https://latex.codecogs.com/png.latex?1"> gewählt werden, der Eingriffsparameter <img src="https://latex.codecogs.com/png.latex?f"> kann zwischen etwa <img src="https://latex.codecogs.com/png.latex?0"> und <img src="https://latex.codecogs.com/png.latex?10"> liegen.</p>
<p>In Code gegossen und mit Hilfe des Eulerschen Polygonzugverfahrens gelöst sieht das so aus:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calc_world_model():</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">global</span> t, volk, last, kons</span>
<span id="cb1-3">    qual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>last</span>
<span id="cb1-4">    volk_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>volk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>qual<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>volk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last</span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> qual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb1-6">        abbau <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-8">        abbau <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>qual</span>
<span id="cb1-9">    last_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>kons<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> abbau</span>
<span id="cb1-10">    kons_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>kons<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (kons<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>f))</span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Numerische Lösung nach Euler</span></span>
<span id="cb1-12">    volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> volk_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-13">    last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> last_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-14">    kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> kons_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb1-15">    volk_array.append(volk)</span>
<span id="cb1-16">    last_array.append(last)</span>
<span id="cb1-17">    kons_array.append(kons)</span>
<span id="cb1-18">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dt</span></code></pre></div>
<p>Das der »Rest« des Skriptes mit insgesamt fast 200 Zeilen unerwarteterweise doch recht umfangreich geraten ist, liegt daran, daß mich das Bastelfieber gepackt hatte und ich die Plotfunktionen noch etwas aufhübschen wollte. Der Kasten links mit den Namen und Farben der einzelnen Kurven wie auch der Kasten unten mit den Eingriffsparamtern hatten etliche zusätzliche Codezeilen verursacht. Dafür ist das Gesamtergebnis (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53216111029/">Screenshot</a>) doch recht nett geworden (wie ich als stolzer Schöpfer finde).</p>
<p>Nun aber – wie gewohnt – für alle, die gerne Quellcode lesen, das Skript nachvollziehen, nachprogrammieren oder variieren wollen, hier das komplette Programm:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Einfache Simulation eines Weltmodells</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nach Hartmut Bossel: Modellbildung und Simulation</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Braunschweig 2. Auflage 1994, Seiten 78ff.</span></span>
<span id="cb2-4"></span>
<span id="cb2-5">WIN_WIDTH, WIN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">740</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot-Parameter</span></span>
<span id="cb2-8">plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Fensterbreite rechts</span></span>
<span id="cb2-9">plot_x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ende Fensterbreite links</span></span>
<span id="cb2-10">label_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb2-11">plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Fensterhöhe oben</span></span>
<span id="cb2-12">plot_y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ende Fensterhöhe unten</span></span>
<span id="cb2-13">label_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span></span>
<span id="cb2-14">plot_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dynamik eines nichtlinearen Mini-Weltmodells"</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Sonstige Parameter</span></span>
<span id="cb2-17">final <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simulationszeitraum (Jahre)</span></span>
<span id="cb2-18">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Schrittweite</span></span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Funktionsabhängige Konstanten</span></span>
<span id="cb2-21">x_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Startwert x</span></span>
<span id="cb2-22">x_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> final                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximalwert x</span></span>
<span id="cb2-23">y_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Startwert f(x)</span></span>
<span id="cb2-24">y_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximalwert f(x)</span></span>
<span id="cb2-25">stepsize_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ticks auf der x-Achse</span></span>
<span id="cb2-26">stepsize_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ticks auf der y-Achse</span></span>
<span id="cb2-27"></span>
<span id="cb2-28"></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb2-30">bg_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packpapier</span></span>
<span id="cb2-31">text_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Grün</span></span>
<span id="cb2-32">text_color_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Schwarz</span></span>
<span id="cb2-33">plot_window_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Weiß</span></span>
<span id="cb2-34">grid_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Blau-Grau</span></span>
<span id="cb2-35">line_color_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rot</span></span>
<span id="cb2-36">line_color_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Blau</span></span>
<span id="cb2-37">line_color_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">235</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">146</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Orange</span></span>
<span id="cb2-38"></span>
<span id="cb2-39"></span>
<span id="cb2-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Paramteter des Weltmodells</span></span>
<span id="cb2-41"></span>
<span id="cb2-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Bevölkerungsentwicklung</span></span>
<span id="cb2-43">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Geburtenrate</span></span>
<span id="cb2-44">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sterberate</span></span>
<span id="cb2-45"></span>
<span id="cb2-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Umweltbelastung</span></span>
<span id="cb2-47">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Abbaurate Umweltbelastung</span></span>
<span id="cb2-48">e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wichtungsfaktor Schadstoffeintrag</span></span>
<span id="cb2-49"></span>
<span id="cb2-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Konsum</span></span>
<span id="cb2-51">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wachstumsrate Konsum</span></span>
<span id="cb2-52"></span>
<span id="cb2-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Eingriffsfaktoren -- Hier kann geändert werden ###################</span></span>
<span id="cb2-54">u <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wirkung Umweltqualität auf Bevölkerungsentwicklung #</span></span>
<span id="cb2-55">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Kapazitätsfaktor Sättigung Konsum                  #</span></span>
<span id="cb2-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#####################################################################</span></span>
<span id="cb2-57"></span>
<span id="cb2-58">volk_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-59">last_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-60">kons_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-61"></span>
<span id="cb2-62"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> settings():</span>
<span id="cb2-63">    size(WIN_WIDTH, WIN_HEIGHT)</span>
<span id="cb2-64"></span>
<span id="cb2-65"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup():</span>
<span id="cb2-66">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">global</span> t, volk, last, kons</span>
<span id="cb2-67">    window_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dynamik eines nichtlinearen Mini-Weltmodells"</span>)</span>
<span id="cb2-68">    window_move(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb2-69"></span>
<span id="cb2-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Anfangswerte</span></span>
<span id="cb2-71">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb2-72">    volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bevölkerungsentwicklung</span></span>
<span id="cb2-73">    last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Umweltbelastung</span></span>
<span id="cb2-74">    kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Konsum</span></span>
<span id="cb2-75">    </span>
<span id="cb2-76"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw():</span>
<span id="cb2-77">    background(bg_color)</span>
<span id="cb2-78">    draw_plot_window()</span>
<span id="cb2-79">    calc_world_model()</span>
<span id="cb2-80">    </span>
<span id="cb2-81">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> final:</span>
<span id="cb2-82">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(volk, last, kons)</span>
<span id="cb2-83">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_min</span>
<span id="cb2-84">        i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-85">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(volk_array):</span>
<span id="cb2-86">            stroke(line_color_1)</span>
<span id="cb2-87">            x_v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(x, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb2-88">            y_v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(volk_array[i], y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb2-89">            circle(x_v, y_v, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-90">            stroke(line_color_2)</span>
<span id="cb2-91">            x_v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(x, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb2-92">            y_v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(last_array[i], y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb2-93">            circle(x_v, y_v, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-94">            stroke(line_color_3)</span>
<span id="cb2-95">            x_v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(x, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb2-96">            y_v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(kons_array[i], y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb2-97">            circle(x_v, y_v, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-98">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dt</span>
<span id="cb2-99">            i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-100">                                </span>
<span id="cb2-101">        stroke(text_color)                       </span>
<span id="cb2-102">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe"</span>)</span>
<span id="cb2-103">        no_loop()</span>
<span id="cb2-104">    </span>
<span id="cb2-105"></span>
<span id="cb2-106"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calc_world_model():</span>
<span id="cb2-107">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">global</span> t, volk, last, kons</span>
<span id="cb2-108">    qual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>last</span>
<span id="cb2-109">    volk_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>volk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>u<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>qual<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>volk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last</span>
<span id="cb2-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> qual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb2-111">        abbau <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last</span>
<span id="cb2-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb2-113">        abbau <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>qual</span>
<span id="cb2-114">    last_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>kons<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> abbau</span>
<span id="cb2-115">    kons_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>kons<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (kons<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>f))</span>
<span id="cb2-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Numerische Lösung nach Euler</span></span>
<span id="cb2-117">    volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> volk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> volk_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb2-118">    last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> last_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb2-119">    kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> kons_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>dt</span>
<span id="cb2-120">    volk_array.append(volk)</span>
<span id="cb2-121">    last_array.append(last)</span>
<span id="cb2-122">    kons_array.append(kons)</span>
<span id="cb2-123">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dt</span>
<span id="cb2-124"> </span>
<span id="cb2-125"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_plot_window():</span>
<span id="cb2-126">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Den Plot in einem weißen Kasten zeichnen</span></span>
<span id="cb2-127">    fill(plot_window_color)</span>
<span id="cb2-128">    rect_mode(CORNERS)</span>
<span id="cb2-129">    no_stroke()</span>
<span id="cb2-130">    rect(plot_x1, plot_y1, plot_x2, plot_y2)</span>
<span id="cb2-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Kasten für y-Label</span></span>
<span id="cb2-132">    stroke(grid_color)</span>
<span id="cb2-133">    stroke_weight(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-134">    rect(label_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, (plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, label_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, (plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb2-135">    no_stroke()</span>
<span id="cb2-136">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Kasten für x-Label</span></span>
<span id="cb2-137">    stroke(grid_color)</span>
<span id="cb2-138">    stroke_weight(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-139">    rect(plot_x1, label_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, label_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb2-140">    no_stroke()</span>
<span id="cb2-141">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Titel des Plots zeichnen</span></span>
<span id="cb2-142">    fill(text_color)</span>
<span id="cb2-143">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb2-144">    text_align(LEFT)</span>
<span id="cb2-145">    text(plot_title, plot_x1, plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-146">    draw_grid()</span>
<span id="cb2-147">    draw_axis_labels()</span>
<span id="cb2-148">    </span>
<span id="cb2-149"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_grid():</span>
<span id="cb2-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne Gitter und Label</span></span>
<span id="cb2-151">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-152">    text_align(CENTER, TOP)</span>
<span id="cb2-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x_Achse</span></span>
<span id="cb2-154">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(x_min, x_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, stepsize_x):</span>
<span id="cb2-155">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(i, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb2-156">        fill(text_color)</span>
<span id="cb2-157">        text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i), x, plot_y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-158">        stroke_weight(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-159">        stroke(grid_color)</span>
<span id="cb2-160">        line(x, plot_y1, x, plot_y2)</span>
<span id="cb2-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y-Achse</span></span>
<span id="cb2-162">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(y_max, y_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, stepsize_y):</span>
<span id="cb2-163">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(j, y_max, y_min, plot_y1, plot_y2)</span>
<span id="cb2-164">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> y_min:</span>
<span id="cb2-165">            text_align(RIGHT, BOTTOM)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unten</span></span>
<span id="cb2-166">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> y_max:</span>
<span id="cb2-167">            text_align(RIGHT, TOP)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open</span></span>
<span id="cb2-168">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb2-169">            text_align(RIGHT, CENTER)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Vertikal zentrieren</span></span>
<span id="cb2-170">        fill(text_color)</span>
<span id="cb2-171">        text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(j), plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, y)</span>
<span id="cb2-172">        stroke_weight(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-173">        stroke(grid_color)</span>
<span id="cb2-174">        line(plot_x1, y, plot_x2, y)</span>
<span id="cb2-175">        </span>
<span id="cb2-176"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_axis_labels():</span>
<span id="cb2-177">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)</span>
<span id="cb2-178">    text_leading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb2-179">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y-Achse</span></span>
<span id="cb2-180">    text_align(LEFT, CENTER)</span>
<span id="cb2-181">    fill(line_color_1)</span>
<span id="cb2-182">    text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bevölkerung"</span>, label_x, (plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb2-183">    fill(line_color_2)</span>
<span id="cb2-184">    text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Umweltbelastung"</span>, label_x, (plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-185">    fill(line_color_3)</span>
<span id="cb2-186">    text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Konsum"</span>, label_x, (plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb2-187">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x-Achse</span></span>
<span id="cb2-188">    fill(text_color_2)</span>
<span id="cb2-189">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)</span>
<span id="cb2-190">    text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Eingriffsparameter: Umwelt-Qualität: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(u) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", Konsum-Faktor: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(f), plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, label_y)</span>
<span id="cb2-191">    fill(text_color)</span></code></pre></div>
<p>Den Code findet Ihr natürlich auch in meinem <a href="https://github.com/kantel/py5/tree/main/weltsim">GitHub-Repositorium</a>.</p>
<p>Ein Wort noch zur Gültigkeit des Modells: <em>Bossel</em> selber weist darauf hin (S. 92f), daß sich sein Programm zwar im großen und ganzen plausibel verhält, daß dieser Eindruck aber nie dazu verleiten darf, den Modellergebnissen ohne weitere Überprüfungen bedingungslos zu vertrauen oder sie gar zur Grundlage wichtiger Entscheidungen zu machen. Vor allem müßte die empirische Gültigkeit und die Anwendungsgültigkeit hinterfragt werden.</p>
<p>Eine <strong>empirische Gültigkeit</strong>, das heißt eine zahlenmäßige Übereinstimmung mit der Realität, kann dieses Modell sicher nicht leisten. Dafür fehlen nicht nur die zahlenmäßigen Übereinstimmungen mit realen Größen mit meßbaren Entsprechungen im Realsystem, sondern auch die Parameter hätten wesentlich genauer (und komplexer) erfaßt und formuliert werden müssen.</p>
<p>Dagegen dürfte eine <strong>Anwendungsgültigkeit</strong> als einfaches, didaktisches Modell zur Demonstration der dynamischen Effekte elementarer Zusammenhänge zwischen Umwelt und der menschlichen Gesellschaft durchaus gegeben sein.</p>
<p>Diese Einschränkungen gelten aber nahezu für alle Modelle. So machen zum Beispiel <em>Svein Linge</em> und <em>Hans Petter Langtangen</em> in ihrem SIR-Modell zur Ausbreitung einer Grippe<sup>3</sup> ähnliche Einschränkungen zur Güligkeit – und das, obwohl ihre Modellparameter eine viel kleinere Gruppe (Schüler in einem Internat) und nicht die ganze Welt, sondern nur einen begrenzten Raum (das Internat ist abgeschlossen von der Umwelt und besitzt daher keinen Kontakt zur Außenwelt) umfassen.</p>
<p>Behaltet diese Einschränkungen also im Hinterkopf, bevor Ihr in den sozialen Medien ein Faß aufmacht und über Wissenschaftlerinnen und Wissenschaftler im Besonderen und über Wissenschaft im Allgemeinen herzieht. Denn diese sind sich schon der Beschränkungen ihrer Modelle bewußt, aber die Presse, die die Ergebnisse vermitteln sollte, unterschlägt dies gerne und häufig.</p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<ul>
<li>Hartmut Bossel: <em>Modellbildung und Simulation. Konzepte, Verfahren und Modelle zum Verhalten dynamischer Systeme. Ein Lehr- und Arbeitsbuch</em>, Braunschweig (Vieweg) 2.,&nbsp;veränderte Auflage mit verbesserter Simulationssoftware 1994</li>
<li>Svein Linge, Hans Petter Langtangen: <em>Programming Computations – Python. A Gentle Introduction to Numerical Simulations with Python 3.6</em>, Cham CH (Springer) Second Edition 2020</li>
</ul>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Vergleiche: Hartmut Bossel, <em>Modellbildung und Simulation</em> Braunschweig (Vieweg), 2. Auflage 1994, Seiten 78ff↩︎</p></li>
<li id="fn2"><p><em>Bossel</em> nennt diesen Faktor <img src="https://latex.codecogs.com/png.latex?g">, da aber <code>g</code> in Py5 ein »reservierter« Bezeichner ist, habe ich ihn in meiner Version durch <img src="https://latex.codecogs.com/png.latex?u"> ersetzt.↩︎</p></li>
<li id="fn3"><p>Vergleiche: Svein Linge, Hans Petter Langtangen: <em>Programming Computations</em>, Cham CH (Springer) 2.&nbsp;Auflage 2020, Seiten 225ff↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Py5</category>
  <category>Simulation</category>
  <category>Modellierung</category>
  <category>Dynamische Systeme</category>
  <category>FPlotter</category>
  <category>Visualisierung</category>
  <guid>https://kantel.github.io/posts/2023092802_miniweltsim/index.html</guid>
  <pubDate>Thu, 28 Sep 2023 18:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092802_miniweltsim/images/weltsim.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert erneut in Version 117 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092801_chrome_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/6/6e/Gustave_Courbet_-_Reclining_Woman.jpg"><img src="https://kantel.github.io/posts/2023092801_chrome_update/images/femmecouchee-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch Google kommt in diesem update-reichen Monat nicht zur Ruhe und veröffentlicht ein weiteres Update der Version 117 (117.0.5938.132) seines Browsers Chrome und schließt damit erneut <a href="https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_27.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://fr.wikipedia.org/wiki/Liste_de_tableaux_de_Gustave_Courbet">Gustave Courbet</a> (1819-1877): Femme couchée, etwa 1865-1866. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Gustave_Courbet_-_Reclining_Woman.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023092801_chrome_update/index.html</guid>
  <pubDate>Thu, 28 Sep 2023 13:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092801_chrome_update/images/femmecouchee.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Spätsommer in Neukölln – der Bilderbogen im September</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092703_bilderbogen/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53212715441/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230901-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Auch wenn es nur wenige Schnappschüsse sind: Der Monat neigt sich dem Ende zu und so will ich heute alle die Photos heraushauen, die mir im September vor die Linse meines Smartphones geraten sind und die anderweitig (noch) keine Verwendung fanden. Denn sonst sind sie nicht mehr aktuell.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53173505619/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230902.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53189741878/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230903.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53189379896/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230904.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53200661774/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230905.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53200661854/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230906.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53217836683/"><img src="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230907.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Ob ein flüchtiger <a href="https://www.flickr.com/photos/schockwellenreiter/53173505619/">Polstersessel mit gebrochenem</a> Bein neben einem Mülleimer in der Glasower Straße, ein <a href="https://www.flickr.com/photos/schockwellenreiter/53189379896/">freigelassenes Sofa</a> eben dort, ein <a href="https://www.flickr.com/photos/schockwellenreiter/53189741878/">leergeräumter Kleiderschrank</a>, die Parole, daß der <a href="https://www.flickr.com/photos/schockwellenreiter/53200661774/">Emmauswald bleibt</a> (natürlich bleibt er, da kann sich der <a href="https://www.rbb24.de/panorama/beitrag/2023/09/berlin-neukoelln-bezirk-senat-emmaus-kirchhof-wald.html">Senat noch so auf den Kopf stellen</a>), die <a href="https://www.flickr.com/photos/schockwellenreiter/53200661854/">Stolpersteine in der Andreasberger Straße</a> vor der Hausnummer&nbsp;9 (die dringend mal geputzt werden müßten), der spätsommmerliche <a href="https://www.flickr.com/photos/schockwellenreiter/53212715441/">Himmel über dem Carl-Weder-Park</a> oder ein <a href="https://www.flickr.com/photos/schockwellenreiter/53217836683/">Getränkestand im Freien</a> vor unserer Haustür – all das ist (nicht nur, aber auch) Neukölln. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Neuköllner Bilderbogen</category>
  <category>Wohnsitz Neukölln</category>
  <category>Neukölln</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2023092703_bilderbogen/index.html</guid>
  <pubDate>Wed, 27 Sep 2023 16:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092703_bilderbogen/images/bilderbogen20230901.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 115.3 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092702_thunderbird_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/c/cf/Le_R%C3%A9veil_by_Courbet_Bern_Kunstmuseum.png"><img src="https://kantel.github.io/posts/2023092702_thunderbird_update/images/lereveil-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p><a href="https://kantel.github.io/posts/2023092601_firefox_118/">Gestern</a> war der kleine, rote Panda dran, also folgt nach den Regeln von Mozilla heute der Donnervogel: Daher haben Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> das Update auf die Version 115.3 freigegeben und damit auch wieder <a href="https://www.thunderbird.net/en-US/thunderbird/115.3.0/releasenotes/">Sicherheitslücken</a> behoben.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://fr.wikipedia.org/wiki/Liste_de_tableaux_de_Gustave_Courbet">Gustave Courbet</a> (1819-1877): Le Réveil, 1866. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:Le_R%C3%A9veil_by_Courbet_Bern_Kunstmuseum.png">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023092702_thunderbird_update/index.html</guid>
  <pubDate>Wed, 27 Sep 2023 14:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092702_thunderbird_update/images/lereveil.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>MacOS Sonoma und die Folgen – noch eine Apple Update-Orgie</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092701_sonoma/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/A_Young_Woman_Reading_A17297.jpg/1257px-A_Young_Woman_Reading_A17297.jpg"><img src="https://kantel.github.io/posts/2023092701_sonoma/images/jeunefemmelisant-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Diesen Monat kommt Apple aus seiner Update-Orgie <a href="https://kantel.github.io/posts/2023090901_apple_flickentag/">einfach</a> nicht <a href="https://kantel.github.io/posts/2023092201_apple_updates_2/">heraus</a>. Denn ohne das übliche Trara hatte Apple eine neue Betriebssystem-Version für seine Computer freigegeben und dies hatte wieder gleich einen ganzen Rattenschwanz weiterer Updates zur Folge, die ich – wie mittlerweile bei Apple üblich – nur noch <em>en bloc</em> abhandeln kann. Also wie gewohnt der Reihe nach:</p>
<section id="apple-veröffentlicht-macos-14-sonoma" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-14-sonoma">Apple veröffentlicht macOS 14 Sonoma</h3>
<p>Gestern abend hatte Apple die neue Betriebssystemversion <a href="https://www.ifun.de/macos-sonoma-ist-da-das-neue-mac-betriebssystem-leistet-viel-219312/">macOS 14 Sonoma freigegeben</a>. Das kostenlose Update stellt an die Hardware folgende Voraussetzungen:</p>
<ul>
<li>MacBook Air 2018 und neuer</li>
<li>MacBook Pro 2018 und neuer</li>
<li>Mac mini 2018 und neuer</li>
<li>iMac 2019 und neuer</li>
<li>Mac Studio ab 2022</li>
<li>Mac Pro 2019 und neuer</li>
<li>iMac Pro ab 2017</li>
</ul>
<p>Das neue Betriebssystem, dessen wichtigste Funktionen Apple auf <a href="https://www.apple.com/de/macos/sonoma-preview/">dieser Sonderseite</a> zusammengefaßt hat, legt seine Widgets nun erstmals auf dem Desktop ab und bringt die vom Apple TV bekannten Bildschirmschoner auf den Mac.</p>
<p>Wie immer bei neuen macOS-Versionen gilt auch hier der unter langjährigen Mac-Nutzern bekannte Rat, besser das »erste Punkt-Update« (also z. B. macOS Sonoma 14.1) abzuwarten, ehe man sich auf das Abenteuer des Umstiegs einläßt.</p>
<p>Falls man sich dennoch mutig zu einem Upgrade entschließt, ist natürlich eine entsprechende Datensicherung dringend zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-monterey" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-monterey">Apple veröffentlicht Sicherheitsupdate für macOS Ventura und Monterey</h3>
<p>Apple hat auch das Sicherheitsupdate auf <a href="https://support.apple.com/de-de/HT213941">macOS Ventura</a> (nur Safari) und <a href="https://support.apple.com/de-de/HT213941">macOS Monterey</a> (ebenfalls nur Safari) freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-iosipados-17.0.2" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-iosipados-17.0.2">Apple veröffentlicht iOS/iPadOS 17.0.2</h3>
<p>Apple hat nun das Update auf iOS 17.0.2 auch für die übrigen Modelle des iPhones ebenso wie iPadOS 17.0.2 für die iPads bereitgestellt. Das Update soll ein Problem bei der Datenübertragung während des Einrichtungsprozesses beheben.</p>
<p>Das Update auf iOS/iPadOS 17.0.2 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-10.0.2-für-apple-watch-series-9-und-ultra-2" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-10.0.2-für-apple-watch-series-9-und-ultra-2">Apple veröffentlicht watchOS 10.0.2 für Apple Watch Series 9 und Ultra&nbsp;2</h3>
<p>Und wie gewohnt zum Schluß die Uhr: Apple hat für die neuen Uhrenmodellen Series 9 und Ultra 2 die Versions watchOS 10.0.2 bereitgestellt.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://fr.wikipedia.org/wiki/Liste_de_tableaux_de_Gustave_Courbet">Gustave Courbet</a> (1819-1877): Jeune femme lisant, zwischen 1866 und 1868. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:A_Young_Woman_Reading_A17297.jpg">Wikimedia Commons</a>)</em></p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023092701_sonoma/index.html</guid>
  <pubDate>Wed, 27 Sep 2023 13:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092701_sonoma/images/jeunefemmelisant.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Version 118.0</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092601_firefox_118/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.pubhist.com/works/25/large/gustave_courbet_bathers.jpg"><img src="https://kantel.github.io/posts/2023092601_firefox_118/images/courbetbathers-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/118.0/releasenotes/">Version 118.0</a> und die <a href="https://www.mozilla.org/en-US/firefox/115.3.0/releasenotes/">Version ESR 115.3</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: <a href="https://www.pubhist.com/person/3782/gustave-courbet">Gustave Courbet</a> (1819-1877) zugeschrieben: <a href="https://www.pubhist.com/w25202">Bathers</a>)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023092601_firefox_118/index.html</guid>
  <pubDate>Tue, 26 Sep 2023 12:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092601_firefox_118/images/courbetbathers.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>FPlotter: Meine »Matplotlib für Arme« nach Py5 portiert</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092401_fplotter_py5/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53210041601/"><img src="https://kantel.github.io/posts/2023092401_fplotter_py5/images/fplotterpy5-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Um meine <a href="https://kantel.github.io/posts/2023092301_forestfire_sim_1/">gestern begonnenen Experimente</a> weiterführen zu können, habe ich heute erst einmal das Skript <a href="http://blog.schockwellenreiter.de/2021/03/2021031901.html">FPlotter</a> (<a href="http://blog.schockwellenreiter.de/2021/03/2021033002.html">2</a>), meine »Matplotlib für Arme«, von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> nach <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> portiert.</p>
<p>Im großen und ganzen war der Port <em>straight forward</em>, lediglich bei der von mir beinahe inflationär verwendeten <code>map()</code>-Funktion von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a> mußte ich berücksichtigen, daß diese – damit sie nicht in Konflikt mit der gleichnamigen Python-Funktion gerät – in Py5 in <a href="https://py5coding.org/reference/sketch_remap.html"><code>remap()</code></a> umbenannt wurde.</p>
<p>Außerdem habe ich schon Slots vorbereitet, die es zum einen ermöglichen sollen, mehr als eine Funktion zu zeichnen und zum anderen, die zu zeichnenden Funktionswerte aus einer Liste (oder mehrere Listen) lesen zu können. Doch dies werde ich ein einer zweiten Version dieses Skriptes realisieren, die ich in den nächsten Tagen fertig- und vorstellen möchte.</p>
<p>Doch hier erst einmal den Quellcode der ersten Fassung dieses Skriptes in Py5, damit Ihr das Modul nachvollziehen und mit Euren eigenen Ideen erweitern könnt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Funkrionsplotter in Py5</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Inspired from »Visualizing Data« (Ben Fry) and</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># »Math Adventures with Python« (Peter Farrell)</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb1-6"></span>
<span id="cb1-7">WIN_WIDTH, WIN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">740</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichenfenster</span></span>
<span id="cb1-10">plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Fensterbreite rechts</span></span>
<span id="cb1-11">plot_x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIN_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ende Fensterbreite links</span></span>
<span id="cb1-12">label_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb1-13">plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start Fensterhöhe oben</span></span>
<span id="cb1-14">plot_y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> plot_y1   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ende Fensterhöhe unten</span></span>
<span id="cb1-15">label_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WIN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Schrittweite</span></span>
<span id="cb1-18">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Titel</span></span>
<span id="cb1-21">plot_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sinuskurve"</span></span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Farben</span></span>
<span id="cb1-24">bg_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">234</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">218</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">184</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Packpapier</span></span>
<span id="cb1-25">text_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Grün</span></span>
<span id="cb1-26">plot_window_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Weiß</span></span>
<span id="cb1-27">grid_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Blau-Grau</span></span>
<span id="cb1-28">line_color_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rot</span></span>
<span id="cb1-29">line_color_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Blau</span></span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Funktionsabhängige Konstanten</span></span>
<span id="cb1-32">x_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-33">x_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-34">y_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-35">y_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-36">stepsize_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ticks auf der x-Achse</span></span>
<span id="cb1-37">stepsize_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ticks auf der y-Achse</span></span>
<span id="cb1-38"></span>
<span id="cb1-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup():</span>
<span id="cb1-40">    size(WIN_WIDTH, WIN_HEIGHT)</span>
<span id="cb1-41">    window_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Funktionsplotter"</span>)</span>
<span id="cb1-42">    window_move(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-43">    plot_font <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_font(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"American Typewriter"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb1-44">    text_font(plot_font)</span>
<span id="cb1-45">    no_loop()</span>
<span id="cb1-46">    </span>
<span id="cb1-47"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw():</span>
<span id="cb1-48">    background(bg_color)</span>
<span id="cb1-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Den Plot in einem weißen Kasten zeichnen</span></span>
<span id="cb1-50">    fill(plot_window_color)</span>
<span id="cb1-51">    rect_mode(CORNERS)</span>
<span id="cb1-52">    no_stroke()</span>
<span id="cb1-53">    rect(plot_x1, plot_y1, plot_x2, plot_y2)</span>
<span id="cb1-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Titel des Plots zeichnen</span></span>
<span id="cb1-55">    fill(text_color)</span>
<span id="cb1-56">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb1-57">    text_align(LEFT)</span>
<span id="cb1-58">    text(plot_title, plot_x1, plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-59">    draw_grid()</span>
<span id="cb1-60">    draw_axis_labels()</span>
<span id="cb1-61">    draw_plot()</span>
<span id="cb1-62">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe"</span>)</span>
<span id="cb1-63">    </span>
<span id="cb1-64"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> f(x):</span>
<span id="cb1-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span>(math.sin(x))</span>
<span id="cb1-66"></span>
<span id="cb1-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_plot():</span>
<span id="cb1-68">    stroke(line_color_1)</span>
<span id="cb1-69">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_min</span>
<span id="cb1-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> x_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dt:</span>
<span id="cb1-71">        x_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(x, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb1-72">        x_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dt, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb1-73">        y_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(f(x), y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb1-74">        y_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(f(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dt), y_min, y_max, plot_y2, plot_y1)</span>
<span id="cb1-75">        line(x_0, y_0, x_1, y_1)</span>
<span id="cb1-76">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> dt</span>
<span id="cb1-77"></span>
<span id="cb1-78"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_grid():</span>
<span id="cb1-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zeichne Gitter und Label</span></span>
<span id="cb1-80">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-81">    text_align(CENTER, TOP)</span>
<span id="cb1-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x_Achse</span></span>
<span id="cb1-83">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(x_min, x_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, stepsize_x):</span>
<span id="cb1-84">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(i, x_min, x_max, plot_x1, plot_x2)</span>
<span id="cb1-85">        fill(text_color)</span>
<span id="cb1-86">        text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i), x, plot_y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-87">        stroke_weight(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-88">        stroke(grid_color)</span>
<span id="cb1-89">        line(x, plot_y1, x, plot_y2)</span>
<span id="cb1-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y-Achse</span></span>
<span id="cb1-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(y_max, y_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, stepsize_y):</span>
<span id="cb1-92">        y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> remap(j, y_max, y_min, plot_y1, plot_y2)</span>
<span id="cb1-93">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> y_min:</span>
<span id="cb1-94">            text_align(RIGHT, BOTTOM)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unten</span></span>
<span id="cb1-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> y_max:</span>
<span id="cb1-96">            text_align(RIGHT, TOP)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open</span></span>
<span id="cb1-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-98">            text_align(RIGHT, CENTER)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Vertikal zentrieren</span></span>
<span id="cb1-99">        fill(text_color)</span>
<span id="cb1-100">        text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(j), plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, y)</span>
<span id="cb1-101">        stroke_weight(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-102">        stroke(grid_color)</span>
<span id="cb1-103">        line(plot_x1, y, plot_x2, y)</span>
<span id="cb1-104">        </span>
<span id="cb1-105"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_axis_labels():</span>
<span id="cb1-106">    fill(text_color)</span>
<span id="cb1-107">    text_size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)</span>
<span id="cb1-108">    text_leading(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb1-109">    text_align(CENTER, CENTER)</span>
<span id="cb1-110">    text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y = sin(x)"</span>, label_x, (plot_y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_y2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-111">    text_align(CENTER)</span>
<span id="cb1-112">    text(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x-Werte (-10 … 10)"</span>, (plot_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_x2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label_y)</span></code></pre></div>
<p>Natürlich gibt es den <a href="https://github.com/kantel/py5/blob/main/fplotter/fplotter.py">Quellcode</a> auch in meinem GitHub-Repositorium.</p>
<p>Für die weitere Entwicklung wäre es schön, wenn man die Simulation und den (oder die) zu zeichnenden Graphen entweder in separaten Fenstern oder in verschiedenen Tabs<sup>1</sup> laufen lassen könnte. Hier sollte ich mal nachschauen, ob und wie weit es mittlerweile möglich ist, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pysimplegui.html">PySimpleGUI</a> mit Py5 <a href="http://blog.schockwellenreiter.de/2022/11/2022111201.html">zu verkuppeln</a><sup>2</sup>. <em>Still digging!</em></p>
<section id="literatur" class="level3">
<h3 class="anchored" data-anchor-id="literatur">Literatur</h3>
<p>Fogende beiden Werke hatten mich auf die Idee zu dem Funktionsplotter in Processing.py und Py5 gebracht und zu meiner eigenen Version inspiriert:</p>
<ul>
<li>Ben Fry: <em>Visualizing Data – Exploring and Explaining Data with the Processing Environment</em>, Sebastopol (O’Reilly) 2008, Seiten 54ff.</li>
<li>Peter Farrell: <em>Math Adventures with Python. An Illustrated Guide to Exploring Math with Code</em>, San Francisco (No Starch Press) 2019, Seiten 61ff.</li>
</ul>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>In <em>Visualizing Data</em> (eines der Inspirationsquellen für den FPlotter) pp.&nbsp;83 ff zeigt <em>BenFry</em>, wie man mehrere Tab-Panele in Processing realisiert. Sollte ich mir daher noch einmal genauer anschauen.↩︎</p></li>
<li id="fn2"><p>Es gab vor etwa einem Jahr erste, erfolgreiche Versuche von <em>Alexandre B A Villares</em>, für die aber noch <a href="https://twitter.com/villares/status/1591034843852333058">einige seltsame Hürden</a> berücksichtigt werden mußten.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Visualisierung</category>
  <category>Py5</category>
  <category>Processing</category>
  <guid>https://kantel.github.io/posts/2023092401_fplotter_py5/index.html</guid>
  <pubDate>Sun, 24 Sep 2023 16:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092401_fplotter_py5/images/fplotterpy5.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Waldbrandsimulation in Python (Py5) – Stage 1</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092301_forestfire_sim_1/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53206780452/"><img src="https://kantel.github.io/posts/2023092301_forestfire_sim_1/images/forestfiresimstage1-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe es getan: Ich habe mir die <a href="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/">hier vorgestellte</a> Waldbrand-Simulation von <em>Al Sweigart</em> und meine eigene, in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> implementierte <a href="http://py.kantel-chaos-team.de.s3-website-us-east-1.amazonaws.com/12zellautom/#der-waldbrand-simulator">Version</a> geschnappt und daraus eine – wie ich hoffe – verbesserte Fassung in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> programmiert.</p>
<p>Zwei grundsätzliche Änderungen gegenüber dem Programm von <em>Al Sweigart</em> habe ich vorgenommen: Zum einen habe ich die Randbedingungen vereinfacht, indem ich die Felder an den Rändern grundsätzlich leer gelassen habe (der Wald hört also nicht an den Rändern, sondern ein Zeile oder Spalte davor auf). Das ändert nichts an dem Verhalten der Simulation (der Wald ist einfach nur je eine Zeile oben und unten und je eine Spalte rechts und links kleiner), erspart der Programmiererin oder dem Programmierer aber eine Menge Arbeit bei der Behandlung der Ränder: Wenn die Abfragen immer nur von <code>range(1, N_ROWS-1)</code> respektive von <code>range(1, N_COLS-1)</code> reichen, können sie nie die Dimensionen eines zweidimendionalen Arrays sprengen.</p>
<p>Die zweite Änderung bedarf schon einer größeren Diskussion: Statt der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/softcomputing/moorenb.html">Moore-Nachbarschaft</a>, die von <em>Al Sweigart</em> verwendet wurde und bei der alle acht Nachbarfelder einer Zelle abgefragt werden, habe ich die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/softcomputing/neumannnb.html">Von-Neumann-Nachbarschaft</a> verwendet, bei der nur die vier Zellen, die eine Kante mit der Basisfläche gemeinsam haben, als Nachbarn berücksichtigt werden. Diese Nachbarschaft habe ich aus pragmatischen Gründen gewählt, da die Abfrage von vier statt von acht Nachbarn den Code halbiert. Und ich denke, daß man die Wahl damit begründen kann, daß die diagonal entfernten Felder, die nur eine Ecke mit der Basiszelle gemeinsam haben, weiter entfernt von der Basiszelle liegen und daher weniger der Brandgefahr ausgesetzt sind. Ich befinde mich da in guter Gesellschaft, da auch in der einschlägigen Literatur fast immer die <em>Von-Neumann-Nachbarschaft</em> Verwendung findet<sup>1</sup>. Außerdem habe ich keine grundsätzliche Änderung im Verhalten der Simulation bei Verwendung der <em>Moore-Nachbarschaft</em> feststellen können.</p>
<p>Das Modell hat in seiner einfachsten Form drei Paramter, an denen geschraubt werden kann und die Einfluß auf den Verlaut der Simulation haben: Es sind mit <code>a</code> die Wahrscheinlichkeit, mit der ein einem Feld ein Baum (nach-) wächst, <code>b</code> die Wahrscheinlichkeit, mit der ein Baum (zum Beispiel durch Blitzeinschlag) Feuer fängt und <code>s</code> die Wahrscheinlichkeit, mit welcher Dichte beim Start das Feld mit Bäumen besetzt ist. Sowohl bei Sweigart wie auch bei Scholz finden sich weiter Ideen, wie die Siumlation erweitert und ausgebaut werden kann.</p>
<p>Doch jetzt erst einmal das komplette Programm, damit Ihr die Simulation nachlesen, nachprogrammieren oder mit eigenen Ideen erweitern könnt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Forest Fire Simulation</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint, uniform</span>
<span id="cb1-3"></span>
<span id="cb1-4">TS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Tilesize</span></span>
<span id="cb1-5">N_ROWS, N_COLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb1-6">PLOT_WIDTH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span></span>
<span id="cb1-7">PLOT_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> N_COLS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS</span>
<span id="cb1-8">SCREEN_WIDTH, SCREEN_HEIGHT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> N_ROWS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS, N_COLS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>TS   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 640x480 Pixel</span></span>
<span id="cb1-9"></span>
<span id="cb1-10">empty <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-11">tree <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-12">burning <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb1-13">w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TS</span>
<span id="cb1-14"></span>
<span id="cb1-15">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wachstumswahrscheinlichkeit in Prozent</span></span>
<span id="cb1-16">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wahrscheinlichkeit Blitzeinschlag in Prozent</span></span>
<span id="cb1-17">s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Startbepflanzung in Prozent</span></span>
<span id="cb1-18"></span>
<span id="cb1-19">grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-20">newgrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-21"></span>
<span id="cb1-22">trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-23">fires <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup():</span>
<span id="cb1-26">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">global</span> tree_image, fire_image, no_trees, no_fire</span>
<span id="cb1-27">    size(SCREEN_WIDTH, SCREEN_HEIGHT)</span>
<span id="cb1-28">    window_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🌲 Forest Fire Simulation 🔥"</span>)</span>
<span id="cb1-29">    window_move(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-30">    tree_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/tree.png"</span>)</span>
<span id="cb1-31">    fire_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/fire.png"</span>)</span>
<span id="cb1-32">    no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-33">    create_new_forest()</span>
<span id="cb1-34">    newgrid[:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid[:]</span>
<span id="cb1-35">    frame_rate(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start: Bäume = "</span>, no_trees, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" Brände = "</span>, no_fire)</span>
<span id="cb1-37">    trees.append(no_trees)</span>
<span id="cb1-38">    fires.append(no_fire)</span>
<span id="cb1-39">    </span>
<span id="cb1-40"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw():</span>
<span id="cb1-41">    background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">210</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span>)</span>
<span id="cb1-42">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Runde: "</span>, frame_count, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" Bäume = "</span>, no_trees, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" Brände = "</span>, no_fire)</span>
<span id="cb1-43">    display_plot()</span>
<span id="cb1-44">    trees.append(no_trees)</span>
<span id="cb1-45">    fires.append(no_fire)</span>
<span id="cb1-46">    display_forest()</span>
<span id="cb1-47">    calc_next()</span>
<span id="cb1-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> frame_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>:</span>
<span id="cb1-49">        no_loop()</span>
<span id="cb1-50"></span>
<span id="cb1-51"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> display_plot():</span>
<span id="cb1-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb1-53"></span>
<span id="cb1-54"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_new_forest():</span>
<span id="cb1-55">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">global</span> no_trees</span>
<span id="cb1-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N_ROWS):</span>
<span id="cb1-57">        grid.append([])</span>
<span id="cb1-58">        newgrid.append([])</span>
<span id="cb1-59">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N_COLS):</span>
<span id="cb1-60">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Erstbepflanzung Wald</span></span>
<span id="cb1-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ((x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> N_ROWS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-62">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> N_COLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> s):</span>
<span id="cb1-63">                grid[x].append(tree)</span>
<span id="cb1-64">                no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-65">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb1-66">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ränder bleiben leer</span></span>
<span id="cb1-67">                grid[x].append(empty)</span>
<span id="cb1-68"></span>
<span id="cb1-69"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> display_forest():</span>
<span id="cb1-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N_ROWS):</span>
<span id="cb1-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(N_COLS):</span>
<span id="cb1-72">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> tree:</span>
<span id="cb1-73">                image(tree_image, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w, j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h, w, h)</span>
<span id="cb1-74">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> grid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> burning:</span>
<span id="cb1-75">                image(fire_image, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w, j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h, w, h)</span>
<span id="cb1-76"></span>
<span id="cb1-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calc_next():</span>
<span id="cb1-78">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">global</span> no_trees, no_fire</span>
<span id="cb1-79">    newgrid[:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid[:]</span>
<span id="cb1-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Next Generation, Randfelder ignorieren</span></span>
<span id="cb1-81">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N_ROWS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-82">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N_COLS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb1-83">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> burning:</span>
<span id="cb1-84">                newgrid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> empty</span>
<span id="cb1-85">                no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-86">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Nachbarbaum anzünden (von-Neumann-Nachbarschaft)</span></span>
<span id="cb1-87">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> tree:</span>
<span id="cb1-88">                    newgrid[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> burning</span>
<span id="cb1-89">                    no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-90">                    no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-91">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i][j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> tree:</span>
<span id="cb1-92">                    newgrid[i][j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> burning</span>
<span id="cb1-93">                    no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-94">                    no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-95">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i][j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> tree:</span>
<span id="cb1-96">                    newgrid[i][j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> burning</span>
<span id="cb1-97">                    no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-98">                    no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-99">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> tree:</span>
<span id="cb1-100">                    newgrid[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> burning</span>
<span id="cb1-101">                    no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-102">                    no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-103">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Neuer Baum?</span></span>
<span id="cb1-104">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> grid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> empty:</span>
<span id="cb1-105">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> uniform(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> a:</span>
<span id="cb1-106">                    newgrid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tree</span>
<span id="cb1-107">                    no_trees <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-108">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Schlägt ein Blitz ein?</span></span>
<span id="cb1-109">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> tree:</span>
<span id="cb1-110">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> uniform(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> b:</span>
<span id="cb1-111">                    newgrid[i][j] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> burning</span>
<span id="cb1-112">                    no_fire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-113">    grid[:] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> newgrid[:]</span></code></pre></div>
<p>In dem Skript sind schon Slots offengehalten, um einen Plot des Simulationsverlaufes zu erstellen. Leider weigert sich die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> hartnäckig, mit Py5 zusammenzuarbeiten. Daher ist meine Idee, <a href="http://blog.schockwellenreiter.de/2021/03/2021031901.html">FPlotter</a> (<a href="http://blog.schockwellenreiter.de/2021/03/2021033002.html">2</a>), meine in Processing.py implementierte »Matplotlib für Arme« wieder zu reaktivieren und in dieser Simulation einzusetzen. Das wird vermutlich mein nächster Schritt sein.</p>
<p>Ansionsten gibt es den <a href="https://github.com/kantel/py5/tree/main/forestfire">Quellcode</a> wie immer in meinem GitHub-Repositorium und die <a href="https://github.com/kantel/py5/tree/main/forestfire/data">Bilder</a> habe ich den freien (<a href="https://creativecommons.org/licenses/by/4.0/">CC-BY 4.0</a>) <a href="https://twemoji.twitter.com/">Twemojis</a> von Twitter entnommen und mit einem Graphikprogramm meines Vertrauens auf 16x16 Pixel verkleinert.</p>
<section id="verwendete-literatur" class="level3">
<h3 class="anchored" data-anchor-id="verwendete-literatur">Verwendete Literatur:</h3>
<ul>
<li>Heinz-Otto Peitgens, Hartmut Jürgens und Dietmar Saupe: <em>Bausteine des Chaos – Fraktale</em>, Berlin-Heidelberg-Stuttgart (Springer, Klett-Cotta) 1992</li>
<li>Daniel Scholz: <em>Pixelspiele – Modellieren und Simulieren mit zellulären Automaten</em>, Berlin-Heidelberg (Springer) 2014</li>
<li>Al Sweigart: <em><a href="https://inventwithpython.com/bigbookpython/">The Big Book of Small Python Projects</a> – 81 Easy Practice Programs</em>, San Francisco (No Starch Press) 2021</li>
</ul>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Vergleiche Peitgen, Jürgens, Saupe: <em>Bausteine des Chaos – Fraktale</em>, Berlin-Heidelberg-Stuttgart (Klett-Cotta/Springer) 1992, Seiten 424ff. oder Scholz: <em>Pixelspiele</em>, Berlin-Heidelberg (Springer) 2014, Seiten 19ff.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Simulation</category>
  <category>Modellbildung</category>
  <category>Py5</category>
  <category>Processing</category>
  <guid>https://kantel.github.io/posts/2023092301_forestfire_sim_1/index.html</guid>
  <pubDate>Sat, 23 Sep 2023 17:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092301_forestfire_sim_1/images/forestfiresimstage1.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apples zweiter Flickentag in diesem Monat</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092201_apple_updates_2/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/9/90/Les_Baigneuses-Courbet.jpg"><img src="https://kantel.github.io/posts/2023092201_apple_updates_2/images/baigneuses-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Schon zum <a href="https://kantel.github.io/posts/2023090901_apple_flickentag/">zweiten Mal in diesem Monat</a> gibt es aus Cupertino einen Patchday für alle Betriebssystem, die von der Firma mit dem angebissenen Apfel im Logo noch unterstützt werden. Das läßt eine echte Gefahr vermuten und daher sollten die Updates möglichst zeitnah eingespielt werden. Doch – wie immer – der Reihe nach:</p>
<section id="apple-veröffentlicht-macos-ventura-13.6" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-ventura-13.6">Apple veröffentlicht macOS Ventura 13.6</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Ventura 13.6 freigegeben und korrigiert damit auch wieder <a href="https://support.apple.com/de-de/HT213931">Sicherheitsprobleme</a>.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdates-für-macos-big-sur-und-monterey" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdates-für-macos-big-sur-und-monterey">Apple veröffentlicht Sicherheitsupdates für macOS Big Sur und Monterey</h3>
<p>Gleichzeitig hat Apple auch das Sicherheitsupdate auf <a href="https://support.apple.com/de-de/HT213930">macOS Big Sur</a> (nur Safari) und macOS <a href="https://support.apple.com/de-de/HT213932">Monterey 12.7</a> freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-ios-17.0.1-und-ipados-17.0.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.0.1-und-ipados-17.0.1">Apple veröffentlicht iOS 17.0.1 und iPadOS 17.0.1</h3>
<p>Apple hat das Update auf iOS 17.0.1 und iPadOS 17.0.1 bereitgestellt. Die Updates korrigieren wieder <a href="https://support.apple.com/de-de/HT213926">kritische Sicherheitslücken</a> und sollten daher zügig eingefahren werden.</p>
<p>Das Update auf auf iOS 17.0.1 iPadOS 17.0.1 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-ein-sicherheitsupdate-auf-iosipados-für-ältere-systeme" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ein-sicherheitsupdate-auf-iosipados-für-ältere-systeme">Apple veröffentlicht ein Sicherheitsupdate auf iOS/iPadOS für ältere Systeme</h3>
<p>Apple hat gleichzitig das Update auf iOS/iPadOS 16.7 für ältere Systeme bereitgestellt und behebt damit ebenfalls <a href="https://support.apple.com/de-de/HT213927">kritische Sicherheitsprobleme</a>.</p>
<p>Wie oben gilt: Das Update auf auf iOS/iPadOS 16.7 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Auch hier ist eine vorherige Sicherung des Geräts wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-ios-17.0.2-für-die-neuen-iphone-15" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.0.2-für-die-neuen-iphone-15">Apple veröffentlicht iOS 17.0.2 für die neuen iPhone 15</h3>
<p>Apple hat ebenfalls das Update auf iOS 17.0.2 für die ab heute verfügbaren Modelle iPhone 15 bereitgestellt. Die Updates korrigieren wieder kritische Sicherheitslücken und sollten daher zügig eingefahren werden, sobald das neue Gerät ausgepackt wurde. 😉</p>
<p>Auch das Update auf iOS 17.0.2 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Und wie immer: Eine vorherige Sicherung des Geräts ist sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-10.0.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-10.0.1">Apple veröffentlicht watchOS 10.0.1</h3>
<p><em>Last but not least</em> hat auch Apple seine Uhr nicht vergessen und hat für die Apple Watch <a href="https://support.apple.com/de-de/HT213928">watchOS 10.0.1</a> und für ältere System <a href="https://support.apple.com/de-de/HT213929">watchOS 9.6.3</a> bereitgestellt und damit auch wieder Sicherheitsprobleme behoben.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone unter <code>Allgemein &gt; Softwareupdate</code>gestartet. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Gustave Courbet (1819-1877): <a href="https://en.wikipedia.org/wiki/The_Bathers_%28Courbet%29">Les Baigneuses</a>, 1853. Bildquelle: <a href="https://en.wikipedia.org/wiki/File:Les_Baigneuses-Courbet.jpg">Wikimedia Commons</a>)</em></p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023092201_apple_updates_2/index.html</guid>
  <pubDate>Fri, 22 Sep 2023 18:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092201_apple_updates_2/images/baigneuses.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Simulationen und Visualisierung mit Python: Matplotlib-Tutorials</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092101_matplotlib_tuts/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://miro.medium.com/v2/resize:fit:1100/format:webp/1*ScqcMcxqc46jzRon-Iw1TQ.png"><img src="https://kantel.github.io/posts/2023092101_matplotlib_tuts/images/datavizseaborn-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Im Nachtrag zu meinem <a href="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/">gestrigen Beitrag</a>, in dem ich ja unter anderem mein wiedererwachtes Interesse an Simulationen und Visualisierungen mit Python und der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> bekundete, habe ich etwas mehr als eine Handvoll Tutorials hervorgekramt, die meine noch vorhandenen Lücken bei der Matplotlib schließen sollen. Denn besonders bei der Frage, wie ich Animationen mit der Matplotlib erstelle, schwimme ich noch ein wenig. Aber auch andere Topics können eine Auffrischung durchaus vertragen.</p>
<ul>
<li>Den Anfang macht der anderthalbstündige Vortrag »<a href="https://www.youtube.com/watch?v=g8F1hufnuLU">Introduction to Matplotlib for visualization in Python</a>«, den <em>Tim Hoffmann</em> auf der EuroSciPy 2023 in Basel gehalten hat. In <a href="https://pretalx.com/euroscipy-2023/talk/AHXAXM/">seinem Beitrag</a> hatte <em>Tim Hoffmann</em> sowohl Anfänger wie auch schon erfahrene Nutzer im Visier.</li>
<li>Das viertelstündige Video-Tutorial »<a href="https://www.youtube.com/watch?v=7RgoHTMbp4A">Matplotlib Animations in Python</a>« des YouTube-Users <em>NeuralNine</em> klingt wie für mich gemacht.</li>
<li>Für (interaktive) Simulation hochinteressant ist auch das knapp halbstündige »<a href="https://www.youtube.com/watch?v=Hn24Q9MPAsk">Matplotlib Widgets – Creating Interactive Plots with Sliders</a>« von <em>Finxter</em>.</li>
<li>Manchmal funktionieren Visualisierungen mit Karten besser. Das viertelstündige Video »<a href="https://www.youtube.com/watch?v=5G-1k4CNChI">Plotting maps with Geopandas and Matplotlib</a>« zeigt, wie das geht.</li>
</ul>
<p>Da ja <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> zu meinem beforzugten Texteditor mutiert ist, möchte ich den halbstündigen Vortrag »<a href="https://www.youtube.com/watch?v=eneTYlnYt9A">Python and VS Code: Revolutionizing The Way You Do Data Science</a>«, den <em>Jeffrey Mew</em> auf der EuroPython 2022 in Dublin gehalten hat, nicht unerwähnt lassen. Jeffrey arbeitet bei Microsoft an der Entwicklung von Data-Science- und AI-Tools, er sollte also wissen, wovon er spricht. Und außerdem ist er Halter eines kleinen <a href="https://de.wikipedia.org/wiki/Welsh_Corgi_Pembroke">Corgis</a>, damit ist er <em>per se</em> sympathisch.</p>
<p>Und keine Python-Linkschleuder ohne <em>Tech with Tim</em>. Dieses Mal hat er sich mit seinem einstündigen Tutorial »<a href="https://www.youtube.com/watch?v=lwquHLH958w">Visualizing SpaceX Launches With Python</a>« für die Aufnahme qualifiziert. Den <a href="https://github.com/techwithtim/SpaceX-Launch-Visualization">Quellcode für dieses Tutorial</a> gibt es – wie immer bei Tim – in seinem GitHub-Repositorium.</p>
<p><strong>War sonst noch was?</strong> Ach ja, <a href="https://seaborn.pydata.org/">Seaborn</a> ist eine <em>High Level</em>-Visualisierung-Bibliothek, die auf der Matplotlib aufsetzt. Die aktuelle Version ist 0.12.2 und im letzten Jahr freigegeben worden. Anläßlich der Veröffentlichung von Seaborn 0.11 vor drei Jahren gab es von <em>Soner Yıldırım</em> einen Beitrag auf Medium.com (daher eventuell hinter einer Bezahlschranke versteckt – sorry), der <a href="https://towardsdatascience.com/seaborn-0-11-just-released-with-great-new-features-c5b45efad7e2">in die neuen Features einführte</a>. Wenn ich mit der Matplotlib durch bin, sollte ich mir auch Seaborn einmal genauer anschauen. <em>Still digging!</em></p>



 ]]></description>
  <category>Python</category>
  <category>Matplotlib</category>
  <category>Seaborn</category>
  <category>Visualisierung</category>
  <category>Visual Studio Code</category>
  <category>Simulation</category>
  <guid>https://kantel.github.io/posts/2023092101_matplotlib_tuts/index.html</guid>
  <pubDate>Thu, 21 Sep 2023 14:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092101_matplotlib_tuts/images/datavizseaborn.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Zurück zum Hacken mit Code: microStudio, Python, Pygame und/oder Py5</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023092001_game_engines_und_mehr/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53199499558/"><img src="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/images/microstudiofirststeps-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie <a href="https://kantel.github.io/posts/2023091901_update_game_engines/">gestern schon angedeutet</a> möchte ich für ein paar Tage eine Pause bei meinem <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>- und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>-Projekt einlegen. Denn die Menge der Tutorials, die ich in den letzten Tagen herausgehauen habe, hat mich ein wenig ausgelaugt, und so möchte ich erst mal etwas anderes anstellen, um danach mit frischer Kraft mich wieder meinen Twine-Tutorials zu widmen.</p>
<p>Angestachelt dazu hat mich auch das <a href="https://kantel.github.io/posts/2023091502_renpy_statt_unity/">Unity-Desaster</a>, das in den letzten Tagen durch die Spieleentwicklerszene geisterte. Die Suche nach freien Alternativen zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> hat auch mich erfaßt, doch leider werde ich immer noch nicht mit dem als Top-Alternative gehandeltem <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/godot.html">Godot</a> wirklich warm. Das liegt auch daran, daß mein räumliches Vorstellungsvermögen anscheinend begrenzt ist und ich Schwierigkeiten habe, ein Spiel in 3D zu konzipieren. Und für 2D-Spiele scheint mir Godot doch ein wenig <em>Overkill</em> zu sein.</p>
<p>Doch in meinen Kommentaren erinnerte mich ein Leser an <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a>. Diese freie (MIT-Lizenz) 2D-Game-Engine hatte ich im Mai letzten Jahres schon einmal <a href="http://blog.schockwellenreiter.de/2022/05/2022053001.html">im Schockwellenreiter vorgestellt</a> und wollte sie damals auch unbedingt testen. Doch leider ist dies im Alltagsgeschäft untergegangen und in Vergessenheit geraten.</p>
<p>Nun habe ich die Gelegenheit am Schopf gefaßt und das Programm wieder hervorgekramt. Per Default wird die Engine mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microscript.html">microScript</a> programmiert, einer <a href="http://cognitiones.kantel-chaos-team.de/programmierung/lua.html">Lua</a>-ähnlichen Programmiersprache, die nach JavaScript übersetzt. Aber auch die Programmierung in Lua selber, JavaScript direkt oder gar Python (genauer: <a href="https://brython.info/">Brython</a>) ist möglich<sup>1</sup>.</p>
<p>microStudio ist so etwas wie die freie Fantasykonsole <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tic80.html">TIC-80</a> (oder das proprietäre Pico-8), nur ohne deren gewollten, konzeptionellen, nostalgischen Einschränkungen. Und ich würde – nicht nur wegen der Beschränkung auf 2D – die Engine nicht unbedingt als Unity-Alternative sehen, sondern eher als freie und plattformübergreifende (Windows, macOS, Linux, Raspberry Pi) Alternative zum in der Indy-Szene immer noch beliebten, aber proprietären <a href="https://de.wikipedia.org/wiki/Game_Maker">Game Maker</a> (und dem in der aktuellen Version nur noch unter Windows lauffähigen <a href="https://de.wikipedia.org/wiki/GameMaker:_Studio">GameMaker: Studio</a>).</p>
<p>Das Projekt ist noch recht jung und so ist auch die Literatur und die Anzahl der (Video-) Tutorials etwas knapp. Aber ein paar nette Tutorials habe ich doch für mich und Euch zusammengesucht (sie behandeln als darunterliegende Programmiersprache alle microScript):</p>
<ul>
<li>Die <a href="https://sites.google.com/ed.act.edu.au/games-programming/game-elements/">Tutorials von mrLman</a> werden sogar auf der microStudio-Homepage <a href="https://microstudio.dev/community/resources/game-programming-tutorials-by-mrlman/52/">empfohlen</a>.</li>
<li><a href="https://prog.world/basics-of-the-microscript-language/">Basics of the microScript language</a> ist ein sehr ausführliches und (ich glaube) vollständiges Tutorial zu microScript.</li>
<li><a href="https://www.youtube.com/playlist?list=PLBe3We7ebJUQgy3ZRJfIcc2LH4sVOjPgg">Design, Code, Play</a> ist eine Playlist der <em>Makercademy</em> mit drei Videos zwischen je ein- und zweistündiger Spieldauer.</li>
<li>Und <em>last but not least</em> hat der Kanal von <em>Retro Nick</em>, der sich sonst eher mit BASIC und (Free-) Pascal beschäftigt, auch einige Videos zu microStudio veröffentlicht (leider keine aussagekräftige Playlist). Gefunden habe ich dort:
<ul>
<li><a href="https://www.youtube.com/watch?v=1-1qmtFKudI">microStudio - Easy Game Development</a> (25 Minuten)</li>
<li><a href="https://www.youtube.com/watch?v=4wM3YBtAYp8">microStudio - My Space Invaders</a> (Fünf Minuten)</li>
<li><a href="https://www.youtube.com/watch?v=isukdmx0fOk">microStudio 2D Arrays And Other Problems</a> (Zwölf Minuten)</li>
</ul></li>
</ul>
<p>Schaun wir mal, was ich mit diesen Informationen anstellen werde …</p>
<div style="float: right; margin-left: 12px; margin-top: 6px;">
<a href="https://inventwithpython.com/bigbookpython/"><img src="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/images/cover_bigbookpython_thumb.jpg" class="img-fluid"></a>&nbsp;<a href="https://inventwithpython.com/recursion/"><img src="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/images/cover_recursion_thumb.jpg" class="img-fluid"></a>
</div>
<p><strong>Doch nun noch eine zweite Baustelle</strong>: Eher zufällig hat mir YouTube das Video »<a href="https://www.youtube.com/watch?v=o5ALfgFhYkQ">Forest fire simulation tutorial with PyGame</a>« von <em>Steve’s Coding Lab</em> vorgeschlagen<sup>2</sup>. Der hat in <em>Al Sweigarts</em> »<a href="https://inventwithpython.com/bigbookpython/">The Big Book of Small Python Projects</a>« gestöbert und die dort behandelte <a href="https://inventwithpython.com/bigbookpython/project29.html">Waldbrand-Simulation</a> nach <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> übertragen und die Auswertung mit der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/matplotlib.html">Matplotlib</a> vorgenommen. Das hatte ich auch schon einmal im <em>Schockwellenreiter</em> <a href="http://blog.schockwellenreiter.de/2022/08/2022082901.html">vorgestellt</a> und vor Jahren eine <a href="http://py.kantel-chaos-team.de.s3-website-us-east-1.amazonaws.com/12zellautom/#der-waldbrand-simulator">graphische Version</a> auch schon einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processingpy.html">Processing.py</a> implementiert. Jetzt hätte ich große Lust, die Simulation auch einmal entweder in Pygame oder – noch abgefahrener – in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/py5.html">Py5</a> zu programmieren (im letzten Fall natürlich ebenfalls unter Einbeziehung der Matplotlib).</p>
<p>Das muß doch irgendwie zu machen sein. Auf jeden Fall habe ich mir schon einmal die Bücher von <em>Al Sweigart</em> (neben dem »Big Book of Small Python Projects« auch das »<a href="https://inventwithpython.com/recursion/">Recursive Book of Recursion</a>« – beide Bücher könnt Ihr online für umme lesen) aus meinen Bücherregalen <a href="http://blog.schockwellenreiter.de/2022/08/2022083102.html">wieder hervorgekramt</a> und hoffe, daraus weitere Inspirationen zu ziehen.</p>
<p>Abschließen möchte ich diesen Beitrag mit den beiden je etwa halbstündigen Videos »<a href="https://www.youtube.com/watch?v=dTX5nOoIXI0">Random Walk in 1D with Python</a>« und »<a href="https://www.youtube.com/watch?v=tJ4eng0EnyE">Random Walk in 2D with Python</a>« von <em>Abhijit Kar Gupta</em>. Auch hier juckt es mich in den Fingern, eine (Re-) Implementierung in Py5 oder in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/turtlepython.html">Pythons Turtle</a> (die habe ich in den letzten Wochen ebenfalls sträflich vernachlässigt) zu versuchen.</p>
<p>Ihr seht, neben Twine und Ren’Py habe ich noch etliche andere Baustellen zu bearbeiten. Ich habe daher zu tun. <em>Still digging!</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Auch wenn ich testweise mal mit Brython und microStudio herumegespielt habe (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53199499558/">Screenshot</a>), werde ich bei weiteren Versuchen mich erst einmal auf microScript beschränken. Die Dokumentation für Brython in microStudio scheint mir doch noch zu spärlich. Aber sollte ich mit microStudio und microScript vertrauter werden, werde ich mich eventuell doch an die Python-Implementierung wagen.↩︎</p></li>
<li id="fn2"><p>Das Video ist Teil der Playlist »<a href="https://www.youtube.com/playlist?list=PLnvbxuUibBuV1CP-DKKKDCy0yPau7re-7">Python – Intermediate</a>«. Daraus ist im Zusammenhang mit diesem Beitrag auch noch das <a href="https://www.youtube.com/watch?v=M6x6m3c7khs">Video zu Conway’s Game of Life</a> (15 Minuten) interessant.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Spieleprogrammierung</category>
  <category>microStudio</category>
  <category>Pygame</category>
  <category>Py5</category>
  <category>Simulation</category>
  <guid>https://kantel.github.io/posts/2023092001_game_engines_und_mehr/index.html</guid>
  <pubDate>Wed, 20 Sep 2023 15:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023092001_game_engines_und_mehr/images/microstudiofirststeps.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ren’Py und Pygame: Updates für Spieleprogrammierer</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091901_update_game_engines/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53199319995/"><img src="https://kantel.github.io/posts/2023091901_update_game_engines/images/renpy813-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Kaum hatte ich <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">gestern</a> meinen Prototypen mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> fertiggestellt und bereit für den Port nach <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> gemacht, trudelte diese Update-Meldung bei mir rein:</p>
<p>Je ein Update auf <a href="https://www.renpy.org/release/8.1.3">Ren’Py 8.1.3</a> und auf <a href="https://www.renpy.org/release/7.6.3">Ren’Py 7.6.3</a> wurde von den Entwicklern freigegeben. Es sind jeweils <a href="https://www.renpy.org/doc/html/changelog.html">Bugfix-Releases ohne wirklich neue Features</a>. Dennoch ist speziell Nutzern neuerer Macs das Update zu empfehlen, da ein Fehler in der <code>gl2</code>-Render-Bibliothek behoben wurde. Die neue 7.6.3-Version wiederum ist nur für diejeinigen unter Euch interessant, die noch ein altes Projekt bearbeiten, das nicht mit Ren’Py 8.1 und neuer kompatibel ist.</p>
<p>Ich habe das Update auf 8.1.3 auf meinem Rechner installiert und es läuft ohne Probleme (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53199319995/">Screenshot</a>). Dennoch werde ich mit meinem aktuellen Twine-/Ren’Py-Projekt erst einmal ein paar Tage pausieren (dazu im nächsten Beitrag mehr).</p>
<p>Außerdem gab es noch von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> ein Update auf die <a href="https://www.pygame.org/news/2023/9/pygame-2-5-2-yet-another-bug-fix-release">Version 2.5.2</a>. Auch dies ist ein schlichtes 🦋 Bugfix-Release 🍄 das ein paar Bugs aus der SDL-Bibliothek entfernt hat. Mehr dazu findet Ihr in den <a href="https://github.com/pygame/pygame/releases/tag/2.5.2">Release Notes</a>.</p>
<p>Auch dieses Update ließ sich via</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">pip install pygame<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5.2</span></span></code></pre></div>
<p>selbst auf auf meinem betagten MacBook Pro und seinem Default <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/anaconda.html">Anaconda-Python</a> problemlos installieren.</p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <category>RenPy</category>
  <category>Pygame</category>
  <guid>https://kantel.github.io/posts/2023091901_update_game_engines/index.html</guid>
  <pubDate>Tue, 19 Sep 2023 16:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091901_update_game_engines/images/renpy813.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Noch mehr Updates von Microsoft und Apple</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091802_updates_ms_apple/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/1866_Gustave_Courbet_-_Woman_with_a_ParrotFXD.jpg/1280px-1866_Gustave_Courbet_-_Woman_with_a_ParrotFXD.jpg"><img src="https://kantel.github.io/posts/2023091802_updates_ms_apple/images/femmeparrot-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>So langsam vermute ich, daß die massive Häufung von Updates diesen Monat irgendetwas mit dem Herbstbeginn zu tun hat. Ist zwar nicht sehr wahrscheinlich, aber mindestens so gut wie jede andere Verschwörungstheorie.&nbsp;🤓</p>
<p>Wie dem auch sei, heute stehen Apple (mal wieder) und Microsoft mit ihren Updates auf der Matte:</p>
<section id="apple-veröffentlicht-iosipados-17-und-watchos-10-heute-abend" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-iosipados-17-und-watchos-10-heute-abend">Apple veröffentlicht iOS/iPadOS 17 und watchOS 10 heute Abend</h3>
<p>Wie angekündigt wird Apple heute (18.09.) Abend (ca. 19 Uhr) das Update auf iOS 17 bereitstellen. Die Hardware-Voraussetzungen sind: iPhone Xs und neuer und iPhone SE (2. Gen.). Die Neuerungen können im wesentlichen <a href="https://www.apple.com/de/ios/ios-17-preview/">hier verfolgt</a> werden.</p>
<p>Für die iPads wird Apple das Update auf iPadOS 17 bereitstellen. Die Hardware-Voraussetzungen sind: iPad Pro (ab 2. Gen), iPad Air (ab 3. Gen), iPad mini (ab 5. Gen) und iPad (ab 6. Gen). Die Neuerungen können <a href="https://www.apple.com/de/ipados/ipados-17-preview/">hier verfolgt</a> werden.</p>
<p>Das Update auf iOS/iPadOS 17 erfolgt üblicherweise über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, ausreichende Akku-Kapazität und freier Speicherplatz sollte sichergestellt sein).</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
<p>Darüber hinaus wird Apple für die Apple Watch ab Series 4 watchOS 10.0 bereitstellen. Die <a href="https://www.apple.com/de/watchos/watchos-preview/">Neuerungen</a> finden sich hier.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone (erfordert iPhone Xs oder neuer) gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
</section>
<section id="microsoft-veröffentlicht-update-16.77-für-office-for-mac" class="level3">
<h3 class="anchored" data-anchor-id="microsoft-veröffentlicht-update-16.77-für-office-for-mac">Microsoft veröffentlicht Update 16.77 für Office for Mac</h3>
<p>Microsoft liefert mit dem Update auf 16.77 für Office 365, 2021 und 2019 for Mac natürlich auch wieder <a href="https://docs.microsoft.com/en-us/officeupdates/release-notes-office-for-mac">aktuelle Sicherheitskorrekturen</a>.</p>
<p>Sofern Office nicht schon von sich aus darauf hinweist, erhält man die Korrekturen am einfachsten über Microsofts AutoUpdate – in einem beliebigen Office-Programm über das Menü <code>Hilfe &gt; Auf Updates überprüfen</code>.</p>
<p><strong>Wichtig zu beachten</strong>: Microsoft Office unterstützt stets nur die drei Hauptversionen von macOS. Momentan sind dies Big Sur, Monterey und Ventura. Wenn am 26. September dann planmäßig das Update auf macOS Sonoma erfolgt, fliegt Big Sur raus. Das bedeutet also, daß mit dem bevorstehenden Update vom Oktober 2023 (16.78) macOS Monterey oder höher erforderlich ist, um Office auf dem Mac <a href="https://support.microsoft.com/de-de/office/aktualisieren-sie-macos-um-weiterhin-microsoft-365-und-office-für-mac-updates-zu-erhalten-16b8414f-08ec-4b24-8c91-10a918f649f8">sicher zu betreiben</a>!</p>
<p><em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Gustave Courbet (1819-1877): La Femme au perroquet, 1866. Bildquelle: <a href="https://commons.wikimedia.org/wiki/File:1866_Gustave_Courbet_-_Woman_with_a_ParrotFXD.jpg">Wikimedia Commons</a>)</em></p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023091802_updates_ms_apple/index.html</guid>
  <pubDate>Mon, 18 Sep 2023 17:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091802_updates_ms_apple/images/femmeparrot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Berlin Attack: Prototypen mit Twine und Chapbook</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091801_berlin_attack_twine/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53194206856/"><img src="https://kantel.github.io/posts/2023091801_berlin_attack_twine/images/berlinattackfinal-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Wie <a href="https://kantel.github.io/posts/2023091101_alice_humpel_pumpel/">angekündigt</a> möchte ich bei meinen Erkundungen von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> und dem Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> vorübergehend den Wunderland-Kosmos verlassen und an einem ganz anderen Beispiel zeigen, warum Chapbook trotz (oder besser: gerade wegen) seiner Beschränkungen hervorragend geeignet ist, einen Prototypen in Twine zu bauen, der dann später nach <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> portiert werden soll.</p>
<p>Dafür habe ich meine alte <a href="https://kantel.github.io/posts/2022122102_alien_invasion_stage_1/">Räuberpistole</a> wieder hervorgekramt, sie mit neuen Avataren aus <a href="https://lemmasoft.renai.us/forums/viewtopic.php?f=52&amp;t=30896">Clarissa Helps’ 14 Sprite Pack</a> (die stehen unter der freien <a href="http://creativecommons.org/licenses/by-sa/4.0/legalcode">CC-BY-SA 4.0</a>-Lizenz) aufgehübscht und ein wenig die Geschichte weitergesponnen.</p>
<p><strong>Vorab</strong>: Ich habe den Prototypen nicht in Twine, sondern in Twines Kommandozeilen-Compiler <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tweego.html">Tweego</a> entwickelt, weil ich da die einzelnen Passagen (einzeln oder auch mehrere, die meiner Meinung nach zusammengehören) in separate Dateien ablegen kann. Das hilft mir gewaltig, nicht die Übersicht zu verlieren.</p>
<p>Das Pojektverzeichnis habe ich – wie <a href="https://kantel.github.io/posts/2023082001_tweego_chapbook/">hier beschrieben</a> – so organisiert</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Projektverzeichnis</span></span>
<span id="cb1-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> Verzeichnis images</span>
<span id="cb1-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> Vereichnis src</span>
<span id="cb1-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">index.html</span></span></code></pre></div>
<p>und dann Tweego jeweils mit diesem Kommando (die erste Zeile muß nur beim ersten Mal verwendet werden) aus dem Terminal von <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> heraus aufgerufen:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>projektverzeichnis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/Applications/tweego/tweego'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index.html'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'src'</span></span></code></pre></div>
<p>Erst nachdem der Prototyp zu meiner Zufriedenheit fertiggestellt war, hatte ich ihn dann auch nach Twine importiert und die Passagen visuell ein wenig aufgeräumt, um den obigen <a href="https://www.flickr.com/photos/schockwellenreiter/53194206856/">Screenshot</a> zu erhalten. Doch das ist dann nur noch reine Kosmetik, der Prototyp funktioniert auch ohne den Re-Import nach Twine.</p>
<p><strong>Doch nun in <em>medias res</em></strong>: Die erste Passage ist die <code>Start</code>-Passage (<code>start.twee</code>), die erst einmal die notwendigen Angaben <code>StoryTitle</code> und <code>StoryData</code> enthält:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb3-1">:: StoryTitle</span>
<span id="cb3-2">Berlin Attack</span>
<span id="cb3-3"></span>
<span id="cb3-4"></span>
<span id="cb3-5">:: StoryData</span>
<span id="cb3-6">{</span>
<span id="cb3-7">  "ifid": &lt;Your IF-ID here&gt;,</span>
<span id="cb3-8">  "format": "Chapbook",</span>
<span id="cb3-9">  "format-version": "1.2.3",</span>
<span id="cb3-10">  "start": "Start",</span>
<span id="cb3-11">  "zoom": 1.0</span>
<span id="cb3-12">}</span></code></pre></div>
<p>Die <code>IF-ID</code> wird von Tweego beim ersten Durchlauf automatisch erzeugt. Sie ist ein eindeutiger Identifier, den Ihr auch kein zweites Mal vergeben solltet.</p>
<p>Dann folgt die eigentliche <code>Start</code>-Passage:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb4-1">:: Start</span>
<span id="cb4-2">config.style.page.color: "gray-0 on black"</span>
<span id="cb4-3">config.style.page.link.font: "18 none"</span>
<span id="cb4-4">config.style.page.link.color: "orange-4"</span>
<span id="cb4-5">config.style.page.link.lineColor: "orange-4"</span>
<span id="cb4-6">config.style.page.link.active.color: "orange-4"</span>
<span id="cb4-7">config.style.page.fork.divider.style: "none"</span>
<span id="cb4-8">has_stick: false</span>
<span id="cb4-9">hide_stick: false</span>
<span id="cb4-10">--</span>
<span id="cb4-11"></span>
<span id="cb4-12"># Die Geschichte beginnt …</span>
<span id="cb4-13"></span>
<span id="cb4-14">[note]</span>
<span id="cb4-15">Auftritt Hans Blond.</span>
<span id="cb4-16">Hans neutral</span>
<span id="cb4-17">[continued]</span>
<span id="cb4-18"></span>
<span id="cb4-19">{embed image: "images/buero_hans_1.png",  alt: "Hans Blond im Büro"}</span>
<span id="cb4-20"></span>
<span id="cb4-21">Das ist Hans, Hans Blond.</span>
<span id="cb4-22"></span>
<span id="cb4-23">Er arbeitet in der IT des Landesamtes für Verfassungsschutz. Seine Chefin</span>
<span id="cb4-24">*Sylvia Berlin* hat ihn zu einem [[Meeting-&gt;Holger]] gerufen.</span></code></pre></div>
<p>Hier habe ich im Header der Start-Passage erst einmal das Layout der Seiten definiert. Der Text sollte weiß auf schwarz erscheinen und alle Links in einem leuchtenden Orange erstrahlen. Und <em>last but not least</em> sollte eine <code>Fork</code> (dazu weiter unten mehr) ohne Trennstrich angezeigt werden.</p>
<p>Dann habe ich noch die beiden Variablen <code>has_stick</code> und <code>hide_stick</code> mit <code>false</code> vorbelegt.</p>
<p>Die darauf folgenden in <code>[note] … [continued]</code> geklammerten Zeilen sind »Regieanweisungen« für den Port nach Ren’Py, die von Twine ignoriert werden. Und da Chapbook – im Gegensatz zu den Storyformaten <a href="http://twine2.neocities.org/">Harlowe</a> oder <a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube</a> sehr intelligent und intuitiv mit <em>White Spaces</em> umgeht, braucht man sich hier auch keine Sorgen zu machen: Chapbook ignoriert die Zeilen einfach und legt auch keine Leerzeilen an.</p>
<p>Wie man Bilder einbettet und Links anlegt, hatte ich schon bei meinen Ausflügen mit Alice in den Wunderland-Kosmos erläutert. Und das Chapbook fast alle Markdown-Auszeichnungen versteht, sollte Euch auch schon bekannt sein.</p>
<p>Daher komme ich nun zu dem Komplex <code>Holger</code>, dessen Passagen ich der Übersicht wegen in einer Datei (<code>holger.twee</code>) zusammengefaßt habe:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb5-1">:: Holger</span>
<span id="cb5-2">has_stick: true</span>
<span id="cb5-3">--</span>
<span id="cb5-4">[note]</span>
<span id="cb5-5">Auftritt Holger Kern von rechts.</span>
<span id="cb5-6">Hans neutral</span>
<span id="cb5-7">[continued]</span>
<span id="cb5-8"></span>
<span id="cb5-9">{embed image: "images/buero_kern.png",  alt: "Hans und Holger"}</span>
<span id="cb5-10"></span>
<span id="cb5-11">Auf dem Weg zum Büro seiner Chefin lief Hans sein alter Freund und Kollege</span>
<span id="cb5-12">*Holger Kern* über den Weg.</span>
<span id="cb5-13">{reveal link: "Er war ganz aufgeregt.", passage: "Holger 1"}</span>
<span id="cb5-14"></span>
<span id="cb5-15">:: Holger 1</span>
<span id="cb5-16"></span>
<span id="cb5-17">&lt;p&gt;</span>
<span id="cb5-18"></span>
<span id="cb5-19">Holger: »Gut, daß ich Dich treffe. {reveal link: "Du mußt unbedingt diesen</span>
<span id="cb5-20">Datenstick für mich aufheben.«", passage: "Holger 2"}</span>
<span id="cb5-21"></span>
<span id="cb5-22">:: Holger 2</span>
<span id="cb5-23"></span>
<span id="cb5-24">Du mußt unbedingt diesen Datenstick für mich aufheben.«</span>
<span id="cb5-25"></span>
<span id="cb5-26">»Er enthält geheime Daten über eine</span>
<span id="cb5-27">{reveal link: "Verschwörung gegen den Senat.«", passage: "Holger 3"}</span>
<span id="cb5-28"></span>
<span id="cb5-29">:: Holger 3</span>
<span id="cb5-30"></span>
<span id="cb5-31">Verschwörung gegen den Senat.«</span>
<span id="cb5-32"></span>
<span id="cb5-33">»Du mußt ihn gut verstecken und darfst ihn niemanden geben,</span>
<span id="cb5-34">[[schon gar nicht Sylvia-&gt;Holger 4]].«</span>
<span id="cb5-35"></span>
<span id="cb5-36">:: Holger 4</span>
<span id="cb5-37"></span>
<span id="cb5-38">{embed image: "images/buero_kern_2.png",  alt: "Hans und Holger"}</span>
<span id="cb5-39"></span>
<span id="cb5-40">Er drückte Hans den Stick in die Hand. Doch was sollte dieser tun?</span>
<span id="cb5-41"></span>
<span id="cb5-42">&gt; [[Zurück in sein Büro und den Stick dort verstecken und damit eine</span>
<span id="cb5-43">Verspätung mit seinem Meeting riskieren?-&gt;Hide Stick]]</span>
<span id="cb5-44">&gt; [[Ihn einfach in die Tasche stecken und hoffen, daß alles gut geht?-&gt;Meeting]]</span></code></pre></div>
<p>Wie man mit dem Insert <code>reveal link</code> umgeht, hatte ich ebenfalls <a href="https://kantel.github.io/posts/2023091101_alice_humpel_pumpel/">hier schon behandelt</a>. Im Zusammenhang mit dem geplanten Ren’Py-Port ist hier von Bedeutung, daß die Dialoge in Ren’Py oftmals per Mausklick weitergehen. Das kann man in Chapbook mit <code>{reveal link: link, passage: Passagenname}</code> sehr gut nachbauen.</p>
<p>Hier mußte ich in Zeile 17 mit <code>&lt;p&gt;</code> doch einen Trick einbauen, um Twine zu zwingen, die neue Passage <code>Holger 1</code> in einem neuen Absatz anzuzeigen, denn sonst hätte Twine sie direkt an die vorherige Passage angehängt.</p>
<p>Ganz neu sind die <code>Forks</code> in den Zeilen 42 bis 44. Sie sind Links, die abgesetzt vom übrigen Text jeweils auf neue Passagen verweisen und damit äquivalent zu den <code>Menues</code> in Ren’Py und sie können ähnlich eingesetzt werden. Per Default werden die einzelnen Forks mit einem horizontalen Strich getrennt, die Anweisung <code>config.style.page.fork.divider.style: "none"</code> in der Start-Passage verhindert dies<sup>1</sup>.</p>
<p>Die Forks verweisen einmal auf die Passage <code>Hide Stick</code> (<code>hide_stick.twee</code>) und auf die Passage <code>Meeting</code> (<code>meeting.twee</code>). In der ersten wird einfach der Stick versteckt und die Variable <code>hide_stick</code> auf <code>true</code> gesetzt:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb6-1">:: Hide Stick</span>
<span id="cb6-2">hide_stick: true</span>
<span id="cb6-3">--</span>
<span id="cb6-4">[note]</span>
<span id="cb6-5">Auftritt Hans Blond von links.</span>
<span id="cb6-6">Hans neutral</span>
<span id="cb6-7">[continued]</span>
<span id="cb6-8"></span>
<span id="cb6-9">{embed image: "images/buero_hans_1a.png",  alt: "Hans Blond im Büro"}</span>
<span id="cb6-10"></span>
<span id="cb6-11">Hans versteckte den Stick in seinem Büro unter einer Kaffeetasse. Dann machte</span>
<span id="cb6-12">er sich schleunigst auf zu seinem [[Treffen mit seiner Chefin-&gt;Meeting]].</span></code></pre></div>
<p>Dann läuft auch diese Passage mit <code>Meeting</code> zusammen. Das ist die komplexestes Passage dieses Prototypen. Sie sieht so aus:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb7-1">:: Meeting</span>
<span id="cb7-2"></span>
<span id="cb7-3">{embed image: "images/buero_sylvia_1.png",  alt: "Sylvia Berlin im Büro"}</span>
<span id="cb7-4"></span>
<span id="cb7-5">Klopf, Klopf …</span>
<span id="cb7-6"></span>
<span id="cb7-7">[note]</span>
<span id="cb7-8">Auftritt Sylvia Berlin von rechts.</span>
<span id="cb7-9">[continued]</span>
<span id="cb7-10"></span>
<span id="cb7-11">[if has_stick &amp;&amp; !hide_stick]</span>
<span id="cb7-12"></span>
<span id="cb7-13">{reveal link: "Sylvia: »Herein!«", passage: "Wachschutz 1"}</span>
<span id="cb7-14"></span>
<span id="cb7-15">[else]</span>
<span id="cb7-16"></span>
<span id="cb7-17">Sylvia: »[[Herein!-&gt;Meeting 2]]«</span>
<span id="cb7-18"></span>
<span id="cb7-19">:: Meeting 2</span>
<span id="cb7-20"></span>
<span id="cb7-21">[note]</span>
<span id="cb7-22">Auftritt Hans Blond von links.</span>
<span id="cb7-23">Sylvia talking.</span>
<span id="cb7-24">[continued]</span>
<span id="cb7-25"></span>
<span id="cb7-26">{embed image: "images/buero_sylvia_2.png",</span>
<span id="cb7-27">alt: "Sylvia Berlin und Hans Blond im Büro"}</span>
<span id="cb7-28"></span>
<span id="cb7-29">Sylvia: »Mein lieber Herr Blond, die Bürgermeisterin hat mich gebeten, ihr für</span>
<span id="cb7-30">die anstehende Wahlwiederholung meinen besten IT-Spezialisten zur Verfügung zu</span>
<span id="cb7-31">stellen. Und da habe ich an Sie gedacht. Sie können morgen gleich anfangen.«</span>
<span id="cb7-32"></span>
<span id="cb7-33">Hans war sofort klar: Damit wollte Sylvia ihn als Konkurrenten um die</span>
<span id="cb7-34">Referatsleitung kaltstellen. Doch was sollte er tun?</span>
<span id="cb7-35"></span>
<span id="cb7-36">&gt; [[Wütend den Raum verlassen und die Tür hinter sich zuknallen?-&gt;Wut]]</span>
<span id="cb7-37">&gt; [[Gute Miene zum bösen Spiel machen und der Versetzung zustimmen?</span>
<span id="cb7-38">-&gt;Versetzung zugestimmt]]</span></code></pre></div>
<p>Sie beginnt mit einem Teil, der nur aufgerufen wird, wenn die Variablen <code>has_stick == true</code> <strong>und</strong> <code>hide_stick == false</code> sind<sup>2</sup>. Wenn dies zutrifft, läuft die Story über die Passage <code>Wachschutz 1</code> in das erste <code>Bad Ending</code>.</p>
<p>Ansonsten geht es nach dem <code>[else]</code> weiter und mündet in eine zweite Fork.</p>
<p>Doch zuerst einmal via <code>wachschutz.twee</code> zum ersten <code>Bad Ending</code> (<code>bad_ending_1.twee</code>):</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb8-1">:: Wachschutz 1</span>
<span id="cb8-2"></span>
<span id="cb8-3">Kaum hatte Hans den Raum betreten, heulten sämtliche Alarmsysteme des Amtes auf.</span>
<span id="cb8-4">Der Stick ihn seiner Hosentasche war wohl mit einem RFID ausgestattet und hatte</span>
<span id="cb8-5">den Alarm ausgelöst.</span>
<span id="cb8-6"></span>
<span id="cb8-7">Der Wachschutz betrat den Raum und [[führte Hans ab-&gt;Bad Ending 1]].</span></code></pre></div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb9-1">:: Bad Ending 1</span>
<span id="cb9-2"></span>
<span id="cb9-3">Bad Ending 1</span>
<span id="cb9-4"></span>
<span id="cb9-5">{restart link, label: "Noch einmal versuchen?"}</span></code></pre></div>
<p>Das hätte auch in eine Twee-Datei gepaßt, aber da ich in einer eventuellen, zukünftigen Fassung die Konfrontation mit dem Wachschutz noch ein wenig ausbauen und dramatisieren möchte, habe ich das vorsorglich getrennt.</p>
<p>Die Fork im <code>[else]</code>-Teil der Passage mündet entweder über die Passage <code>Wut</code> in das zweite <code>Bad Ending</code><sup>3</sup> (<code>bad_ending_2.twee</code>) dieser kurzen Geschichte</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb10-1">:: Wut</span>
<span id="cb10-2"></span>
<span id="cb10-3">[note]</span>
<span id="cb10-4">Abgang Hans nach links</span>
<span id="cb10-5">[continued]</span>
<span id="cb10-6"></span>
<span id="cb10-7">Hans [[verließ wütend den Raum-&gt;Bad Ending 2]] und schlug die Tür mit einem</span>
<span id="cb10-8">lauten Knall hinter sich zu.</span>
<span id="cb10-9"></span>
<span id="cb10-10">:: Bad Ending 2</span>
<span id="cb10-11"></span>
<span id="cb10-12">[note]</span>
<span id="cb10-13">Auftritt Hans von rechts.</span>
<span id="cb10-14">Reginald Hans traurig</span>
<span id="cb10-15">[continued]</span>
<span id="cb10-16"></span>
<span id="cb10-17">{embed image: "images/buero_hans_2.png", alt: "Hans traurig"}</span>
<span id="cb10-18"></span>
<span id="cb10-19">Kaum war Hans wieder in seinem Büro, als er auch schon eine Email bekam. Darin</span>
<span id="cb10-20">stand in dürren Worten, daß sein Antrag auf Beförderung abgelehnt sei.</span>
<span id="cb10-21"></span>
<span id="cb10-22">Tja Hans, zu hoch gepokert.</span>
<span id="cb10-23"></span>
<span id="cb10-24">Das ist das viel zu frühe Ende!</span>
<span id="cb10-25"></span>
<span id="cb10-26">&gt; {restart link, label: "Noch einmal versuchen?"}</span></code></pre></div>
<p>während über <code>Versetzung zugestimmt</code> (<code>versetzung_zugestimmt.twee</code>) die Geschichte in »normalen« Bahnen fortgeführt wird:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb11-1">:: Versetzung zugestimmt</span>
<span id="cb11-2"></span>
<span id="cb11-3">Hans: »Dann werde ich mal [[mein Büro räumen-&gt;Büro 2]].«</span>
<span id="cb11-4"></span>
<span id="cb11-5">:: Büro 2</span>
<span id="cb11-6"></span>
<span id="cb11-7">[note]</span>
<span id="cb11-8">Auftritt Hans Blond von rechts.</span>
<span id="cb11-9">Hans Flirting</span>
<span id="cb11-10">[continued]</span>
<span id="cb11-11"></span>
<span id="cb11-12">{embed image: "images/buero_hans_2a.png", alt: "Hans flirting"}</span>
<span id="cb11-13"></span>
<span id="cb11-14">Hans (zu sich): »Sylvia ist zwar ein intrigantes Biest, aber süß</span>
<span id="cb11-15">ist sie dennoch.« ❤️</span>
<span id="cb11-16"></span>
<span id="cb11-17">Hans beschloß, Feierband zu machen und [[nach Hause zu gehen-&gt;Im Park 1]].</span></code></pre></div>
<p>Mit den beiden Passagen <code>Im Park 1</code> (<code>im_park.twee</code>) und <code>Hans Home 1</code> (<code>hans_home_1.twee</code>) erreicht die Geschichte ihr vorläufiges Ende. Diese Passagem enthalten keine neuen Sprachelemente mehr:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb12-1">:: Im Park 1</span>
<span id="cb12-2">[note]</span>
<span id="cb12-3">Auftritt Felix Leiter von rechts.</span>
<span id="cb12-4">Auftritt Hans Blond von links.</span>
<span id="cb12-5">Felix Leiter neutral</span>
<span id="cb12-6">Reginald neutral</span>
<span id="cb12-7">[continued]</span>
<span id="cb12-8"></span>
<span id="cb12-9">{embed image: "images/im_park_1.jpg", alt: "Im Park"}</span>
<span id="cb12-10"></span>
<span id="cb12-11">Der Weg nach Hause führte Hans wie jeden Abend durch einen kleinen Park. Dort</span>
<span id="cb12-12">fiel ihm ein älterer Mann auf, der ihn zu beobachten schien. Er mußte ein</span>
<span id="cb12-13">Kollege sein, denn er trug ebenfalls ein Shirt mit dem Abzeichen des Amtes.</span>
<span id="cb12-14">In der Nähe einer zufällig dort stehenden Baumaschine sprach ihn der Fremde an:</span>
<span id="cb12-15"></span>
<span id="cb12-16">[note]</span>
<span id="cb12-17">Felix Leiter talking</span>
<span id="cb12-18">[cont]</span>
<span id="cb12-19"></span>
<span id="cb12-20">»Junger Mann, was immer in der nächsten Zeit passieren mag, gehen sie</span>
<span id="cb12-21">in den Untergrund!«</span>
<span id="cb12-22"></span>
<span id="cb12-23">[note]</span>
<span id="cb12-24">Abgang Felix Leiter nach links</span>
<span id="cb12-25">Hans Blond konfus</span>
<span id="cb12-26">[cont]</span>
<span id="cb12-27"></span>
<span id="cb12-28">Dann verschwand er wieder und lies Hans verwirrt zurück.</span>
<span id="cb12-29"></span>
<span id="cb12-30">Hans setzte seinen Weg [[nach Hause-&gt;Hans Home 1]] fort.</span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource twee number-lines code-with-copy"><code class="sourceCode"><span id="cb13-1">:: Hans Home 1</span>
<span id="cb13-2"></span>
<span id="cb13-3">Zu Hause angekommen mixte sich Hans erst einmal einen Drink um die Ereignisse</span>
<span id="cb13-4">des Tages zu verarbeiten.</span>
<span id="cb13-5"></span>
<span id="cb13-6">… Fortsetzung folgt.</span></code></pre></div>
<p>Das war es erst einmal. Als nächstes werde ich diesen Twine/Chapbook-Prototypen nach Ren’Py portieren und das Ergebnis ebenfalls auf diesen Seiten präsentieren.</p>
<p>Wie immer habe ich die Geschichte einmal auf Itch.io <a href="https://kantel.itch.io/berlin-attack">hochgeladen</a>, damit Ihr sie dort spielen, und zum anderen gibt es den <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/berlinattackchapbook/src">Quellcode</a> und die <a href="https://github.com/kantel/twine-entdecken/tree/master/tweego/berlinattackchapbook/images">Bilder</a> auch in meinem GitHub-Repositorium, damit Ihr alles nachvollziehen und -programmieren könnt. Habt Spaß damit!</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Da Forks mit einem <code>&gt;</code> eingeleitet werden, beißt sich dieses mit der Markdown-Auszeichnung für <em>Blockquotes</em>. Daher müssen diese in Chapbook mit der HTML-Anweisung <code>&lt;blockquote&gt; … &lt;/blockuote&gt;</code> geklammert werden.↩︎</p></li>
<li id="fn2"><p>Das hätte man auch mit einer Variable ausdrücken können, aber ich wollte ausprobieren, wie das <code>[if]</code>-Statement mit aus <em>und/oder</em> oder <em>not</em> zusammengesetzten boolschen Ausdrücken zurechtkommt.↩︎</p></li>
<li id="fn3"><p>Dramaturgisch ist es eigentlich ungeschickt, zwei <em>Bad Endings</em> so kurz hintereinander in eine Geschichte einzubauen, aber der Prototyp ist ja ebenfalls nur sehr kurz und irgendwie wollte ich zwei »böse Enden« einbauen.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Interactive Fiction</category>
  <category>Twine</category>
  <category>Chapbook</category>
  <category>Tweego</category>
  <category>Spieleprogrammierung</category>
  <category>RenPy</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2023091801_berlin_attack_twine/index.html</guid>
  <pubDate>Mon, 18 Sep 2023 15:50:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091801_berlin_attack_twine/images/berlinattackfinal.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Festival der Riesendrachen auf dem Tempelhofer Feld</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091601_drachenfest/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53191697100/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Heute war das <a href="https://www.stadtundland.de/Unternehmen/Veranstaltungen/Festival-der-Riesendrachen.php">Festival der Riesendrachen</a> auf dem <a href="https://de.wikipedia.org/wiki/Tempelhofer_Feld">Tempelhofer Feld</a> und ich bin froh, daß wir es trotz des notorischen Versagens der Berliner S-Bahn dorthin und auch wieder zurückgeschafft haben. Es begann damit, daß die S-Bahn wohl wegen des Riesenandrangs (so ein Volksfest kommt ja auch unvermittelt wie eine Naturkatastrophe, das kann man nicht planen) zwischen Neukölln und Tempelhof im Stau stand – aber vorher mußte sie noch ein leeres VIP-Shuttle auf die völlig überlastete Strecke schicken und diese noch weiter verstopfen.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53191304909/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53191699960/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53191308099/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53191509276/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53191870708/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53191310484/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53191512911/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53191874253/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53191311409/"><img src="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest09.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Aber egal, einmal angekommen war das Wetter genial und die Stimmung auf dem Feld trotz des großen Andrangs entspannt. Und so konnte ich ein paar Photos schießen, die ich Euch nun präsentiere. Da müßt Ihr durch!</p>
<p>Auf dem Rückweg hatte dann die Polizei den <a href="https://www.morgenpost.de/bezirke/tempelhof-schoeneberg/article239591127/drachenfest-berlin-2023-riesendrachen-tempelhofer-feld-andrang-polizei.html">Zugang zum Bahnhof Tempelhof wegen Überlastung gesperrt</a>. Wir sind dann notgedrungen zum Bahnhof Südkreuz gelaufen, um dort über zwanzig Minuten auf den nächsten Zug Richtung Neukölln zu warten (dort fährt normalerweise laut Fahrplan alle fünf Minuten eine Bahn<sup>1</sup>). Entsprechend überfüllt war dieser Zug dann und wir fuhren eng gequetscht (selbst Sardinen in einer Büchse reisen bequemer) wieder zurück nach Neukölln. So wird das nichts mit der Verkehrswende in Berlin! <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Aber Fahrpläne sind für die Berliner S-Bahn sowieso nichts anderes als »unverbindliche Serviervorschläge«.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Tempelhofer Feld</category>
  <category>Photographie</category>
  <category>Verkehrswende</category>
  <guid>https://kantel.github.io/posts/2023091601_drachenfest/index.html</guid>
  <pubDate>Sat, 16 Sep 2023 18:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091601_drachenfest/images/drachenfest00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Der Anfang vom Ende von Unity? Oder: Ren’Py als (eine) Unity-Alternative</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091502_renpy_statt_unity/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53188667812/"><img src="https://kantel.github.io/posts/2023091502_renpy_statt_unity/images/attackberlin-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Seit ein paar Tagen rumort es ganz gewaltig in der Spieleentwicklerszene, speziell unter den kleinen Indy-Labels. Grund ist, daß die in dieser Szene beliebte Game-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> ganz gewaltig zu Lasten gerade dieser kleinen Studios an ihrem <a href="https://www.spiegel.de/netzwelt/games/unity-und-sein-neues-preismodell-warum-gerade-so-viele-spieleentwickler-wuetend-sind-a-02a00d34-95b4-46fd-a9cb-e5b51792b955">Preismodell geschraubt hat</a>. Unity hat angekündigt, daß man ab dem 1. Januar 2024 <a href="https://playfront.de/unity-erhebt-zukuenftig-gebuehren-auf-bereits-installierte-spiele-entwickler-laufen-sturm-dagegen/">Gebühren auf jedes installierte Spiel erheben werde</a>, welches die Unity Engine nutzt. Die Rede ist von <a href="https://www.golem.de/news/unity-engine-spiele-installieren-kostet-entwickler-kuenftig-geld-2309-177613.html">20 Cent je Download</a>.</p>
<p>Nun könnte ich mich entspannt zurücklehnen und daran erinnern, daß ich schon immer vor proprietärer Software gewarnt habe. Aber seien wir ehrlich, es gab, bevor das freie (MIT-Lizenz) <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/godot.html">Godot</a> den Markt der Spiele-Engines aufmischte, kaum <a href="https://gamefromscratch.com/unity-alternatives-in-2023/">freie Alternativen zu Unity</a>.</p>
<p>Nun allerdings sieht es so aus, als ob sich Unity mit dieser Entscheidung <a href="https://www.br.de/nachrichten/netzwelt/unity-engine-eine-gaming-institution-demontiert-sich-selbst,TpuTpKN">selbst ins Abseits manövriert</a> hätte. Die Massen wechseln in Scharen zu Godot und anderen Alternativen (<a href="https://twitter.com/KenneyNL/status/1702238644671512666">auch Kenney.nl</a> hat einen Wechsel angekündigt) und werden dabei <a href="https://gamefromscratch.com/the-zenva-complete-godot-humble-bundle/">vielfach unterstützt</a>. Das ging so weit, daß Unity <a href="https://www.heise.de/news/Drohungen-wegen-neuem-Bezahlmodell-Unity-macht-Bueros-dicht-9306108.html">nach Morddrohungen sogar zwei Büros in den USA schließen</a> mußte.</p>
<p>Was mir bei den vielen Empfehlungen aber bisher fehlte, war die Erwähung von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> als Unity-Alternative. Zwar kann man damit nur schwer 3D-Blockbuster erstellen, aber zum Beispiel hat <a href="https://www.inklestudios.com/">Inkle Studios</a> mit seinen vielfach preisgekrönten Spielen wie zum Beispiel <a href="https://en.wikipedia.org/wiki/80_Days_(2014_video_game)">80 Days</a> oder <a href="https://en.wikipedia.org/wiki/Heaven's_Vault">Heaven’s Vault</a> gezeigt, wie man mit und in Unity interessante, interaktive Geschichten für Konsolen und Rechner entwickeln kann. Das Interessante daran ist, daß Inkle mit dem selbstentwickelten freien (MIT-Lizenz) <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink/Inky</a> eine Art <em>Bridge</em> zwischen einem <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>-ähnlichen Autoring-Tool und Unity als Game-Engine nutzt.</p>
<p>Nun wissen regelmäßige Leser des <em>Schockwellenreiters</em>, daß ich der Meinung bin, daß sich Twine (speziell mit dem Storyformat <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a>) ebenfalls durchaus als Autoring-Tool für interaktive Geschichten eignet, die im Endeffekt mit Ren’Py realisiert werden. Zwar ist die Brücke nicht ganz so komfortabel wie die Ink/Inky-Unity-Integration, aber mit Hilfe von <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> und den beiden Erweiterungen <a href="https://marketplace.visualstudio.com/items?itemName=cyrusfirheir.twee3-language-tools">Twee 3 Language Tool</a> und <a href="https://marketplace.visualstudio.com/items?itemName=LuqueDaniel.languague-renpy">Ren’Py Language Tool</a> durchaus machbar.</p>
<p>Ich schwöre, die aktuelle Unity-Situation war nicht der Auslöser für meine Chapbook/Twine-Tutorials (die hatte ich schon vorher begonnen), aber die nächsten zwei oder drei werden sich mit der Twine/Ren’Py-Integration beschäftigen (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53188667812/">Screenshot</a> im Banner oben).</p>
<p>Und ich meine, irgendwo im Netz mal eine Anleitung gefunden zu haben, wie man Godot aus den Klauen des internen Editors befreien und stattdessen ebenfalls Visual Studio Code nutzen kann. Sollte ich diese wiederfinden, wäre auch in Nachdenken über eine Twine/Godot-Integration möglich. Hierzu müßte ich allerdings noch ein wenig recherchieren (und vor allen Dingen endlich auch Godot lernen). <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>RenPy</category>
  <category>Twine</category>
  <category>Godot</category>
  <category>Interactive Fiction</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2023091502_renpy_statt_unity/index.html</guid>
  <pubDate>Fri, 15 Sep 2023 18:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091502_renpy_statt_unity/images/attackberlin.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Update auf iTunes for Windows behebt Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091501_itunes_update/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Gustave_Courbet_-_Trois_baigneuses_-_PPP732_-_mus%C3%A9e_des_Beaux-Arts_de_la_ville_de_Paris.jpg/1546px-Gustave_Courbet_-_Trois_baigneuses_-_PPP732_-_mus%C3%A9e_des_Beaux-Arts_de_la_ville_de_Paris.jpg"><img src="https://kantel.github.io/posts/2023091501_itunes_update/images/courbettroisbaigneuses-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Update-Origie für diesen Monat kommt nicht zur Ruhe. Nun hat auch noch die Firma aus Cupertino mit dem angebissenen Apfel im Logo ein weiteres, sicherheitsrelevantes Update nachgeschoben: Auch die <a href="https://support.apple.com/de-de/HT210384">neue Version von iTunes for Windows 12.12.10</a> unter Microsoft ab Windows 10 korrigiert wieder mehrere, teils kritische Schwachstellen.</p>
<p>Das Update erhält man auch im Microsoft Store. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Gustave Courbet (1819-1877): Trois baigneuses, zwischen 1865 und 1869. Bildquelle (nachbearbeitet): <a href="https://commons.wikimedia.org/wiki/File:Gustave_Courbet_-_Trois_baigneuses_-_PPP732_-_mus%C3%A9e_des_Beaux-Arts_de_la_ville_de_Paris.jpg">Wikimedia Commons</a>)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023091501_itunes_update/index.html</guid>
  <pubDate>Fri, 15 Sep 2023 13:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091501_itunes_update/images/courbettroisbaigneuses.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Dahlien – Spätzünder mit Leuchtkraft</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091402_dahlienfeuer/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53187187201/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer00-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Nachdem der Juli und August in diesem Jahr entweder zu heiß oder verregnet war, spielte das Wetter heute endlich wieder mit. Es war zwar warm und sonnig, aber nicht zu heiß. Genau das richtige, um ein lang geplantes Vorhaben zu verwirklichen und das <a href="https://www.britzergarten.de/blueten-gaerten/bluetenschauen/dahlienfeuer/">Dahlienfeuer im Britzer Garten</a> zu bewundern.</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53187398855/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187566033/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187196291/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53187196191/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187565643/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187192961/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53187386505/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187196551/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53186474337/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer09.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53187190226/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187186986/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer11.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187254664/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer12.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53187251349/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer13.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53186476902/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer14.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53186466832/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer15.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53187549808/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer16.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187546988/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer17.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187379725/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer18.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53187373475/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer19.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187183691/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer20.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53187546618/"><img src="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer21.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Ich verstehe ja nicht viel von der Botanik, aber nachdem ich mich durch den langen Eingang gequält und auch noch einen <a href="https://kantel.github.io/posts/2023062901_rosen_stauden_garten_toeff_toeff/">Abstecher zu den letzten Rosen</a> gemacht hatte, ging es dann endlich in das Dahlienfeuer und ich muß sagen, daß mich die Farbenpracht der über 7.000 bunten Herbstpflanzen überwältigt hatte.</p>
<p>Eines fand ich als Pufferküsser allerdings schade: Die Garten-Töff-Töff fuhr heute nicht. Und wie ein <a href="https://www.flickr.com/photos/schockwellenreiter/53186476902/">Aushang an allen Bahnhöfen verkündete</a>, fährt sie auch nicht, wenn ich anrufe und nachfrage, ob die Bahn <strong>wirklich nicht</strong> fährt. Sie fuhr heute einfach <strong>nicht</strong>. Also habe ich mir den Anruf geschenkt. <em>(Photos (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2023: <a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a>)</em></p>



 ]]></description>
  <category>Photographie</category>
  <category>Parks und Gärten</category>
  <category>Neukölln</category>
  <guid>https://kantel.github.io/posts/2023091402_dahlienfeuer/index.html</guid>
  <pubDate>Thu, 14 Sep 2023 18:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091402_dahlienfeuer/images/dahlienfeuer00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate des Foxit Reader (PDF Reader) auf 2023.2</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091401_update_foxit_reader/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://eclecticlightdotcom.files.wordpress.com/2015/07/courbetlatelier.jpg"><img src="https://kantel.github.io/posts/2023091401_update_foxit_reader/images/courbetlatelier-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Die Update-Orgie dieses Monats geht nun schon in die <a href="https://kantel.github.io/posts/2023091201_flickentag/">dritte</a> <a href="https://kantel.github.io/posts/2023091301_noch_mehr_updates/">Runde</a>: Heute melden die Entwickler des (nicht nur) unter Windows beliebten PDF Betrachters Foxit Reader, daß sie mit der Version 2023.2 wieder <a href="https://www.foxit.com/support/security-bulletins.html">Schwachstellen behoben</a> haben.</p>
<p>Die neue Version kann <a href="https://www.foxitsoftware.com/downloads/#Foxit-Reader/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<p><em>(Bild: Gustave Courbet (1819-1877): <a href="https://eclecticlight.co/2021/07/29/reject-gustave-courbet-the-painters-studio/">L’Atelier du peintre</a>. Allégorie réelle déterminant une phase de sept années de ma vie artistique et morale, 1855. Bildquelle: <a href="https://en.wikipedia.org/wiki/The_Painter's_Studio">Wikipedia</a>)</em></p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2023091401_update_foxit_reader/index.html</guid>
  <pubDate>Thu, 14 Sep 2023 12:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091401_update_foxit_reader/images/courbetlatelier.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Aus der Nachbarschaft: Fußballturnier und Spielefest abgesagt</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2023091303_fussballturnier_abgesagt/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://image.jimcdn.com/app/cms/image/transf/dimension=1920x400:format=jpg/path/s32c1921e1796e2bd/image/i4d12bab0d8e00411/version/1664129742/image.jpg"><img src="https://kantel.github.io/posts/2023091303_fussballturnier_abgesagt/images/fussballfest2022-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Laut einer <a href="https://proneubritz.jimdofree.com/kranoldwedernetz-ist-stinksauer-fu%C3%9Fball-turnier-und-spielefest-abgesagtst-stinksauer/">Pressemitteilung</a> ist das KranoldWederNetz, eine Initiative der in unserer Nachbarschaft aktiven, sozialen Einrichtungen, stinksauer. Denn schon seit einigen Jahren organisiert sie jeden Spätsommer ein Fußballturnier und Spielefest für Kinder und Jugendliche rund um den Spiel- und Bolzplatz an der Bendastraße zwischen Glasower Straße und Delbrückstraße im Quartiersmanagement-Gebiet Glasower Straße. Dieses Jahr war es für den 23. September geplant und mußte nun wegen eklatantem Behördenversagen kurzfristig abgesagt werden.</p>
<p>Denn im letzten Sommer wurde der Platz durch Vandalismus zerstört und trotz einer noch vor den Sommerferien gegebenen Zusage des zuständigen Stadtrats <em>Jochen Biedermann</em> (Grüne), daß der Platz zum Fest bespielbar sei, ist und bleibt er unbespielbar, weil die Bauarbeiten nur sehr zögerlich durchgeführt werden.</p>
<p>Das sei besonders deswegen ärgerlich – so die Inititative – weil nicht nur die Kinder und Jugendlichen der Umgebung schon seit Monaten unter dem traurigen Zustandes des Spielfeldes leiden, sondern weil auch der Frust unter den vielen Ehrenamtlichen, die das Fest organisieren, groß ist und außerdem Mittel in Höhe von 3.000 Euro aus dem Aktionsfonds des Quartiersmanagements Glasower Straße verfallen.</p>
<p>Trotz wiederholter Anfragen bei diversen Stellen haben die Organisatorinnen und Organisatoren nicht einmal Auskünfte zum Stand der Baumaßnahme erhalten. Das bestreitet zwar in einem <a href="https://www.tagesspiegel.de/berlin/bezirke/vandalismusschaden-an-bolzplatz-in-neukolln-kiezfest-und-jugendfussballturnier-kurzfristig-abgesagt-10464676.html">Beitrag des Tagesspiegels</a> <em>Christopher Dathe</em>, der Sprecher des Stadtrates <em>Jürgen Biedermann</em>, doch von Seiten des KranoldWederNetzes war zu erfahren, daß es nur Kontakte zwischen dem Grünflächenamt und dem Jugendamt (sic!) gegeben habe. Offenbar – so daß KranoldWederNetz – sei das Bezirksamt der Meinung, daß man mit den beteiligten Ehrenamtlichen, die die Organisation tragen und die Arbeit leisten, nicht reden müsse.</p>
<p>Den dabei gemachten Vorschlag, das Fest weit außerhalb des Kiezes in der Nähe des Körnerparks stattfinden zu lassen, wies die Initiative als unüberlegt und undurchführbar zurück. Denn weder könne in den noch verbleibenden zwei Wochen die Logistik organisiert und die Genehmigungen eingeholt werden, noch würden damit die Kinder und Jugendlichen im Kiez erreicht. Und drittens sei völlig unklar, ob die Mittel aus dem Aktionsfond des Quartiersmanagements überhaupt für ein Fest außerhalb des Quartiers genutzt werden können (ich vermute eher: Nein).</p>
<p>So blieb der Initiative nur, das Fest, das unter anderem vom Kindertreff Delbrücke, dem St.&nbsp;Josef Kinderheim, dem <a href="https://proneubritz.jimdofree.com/">Ortsteilverein proNeubritz</a>, dem Jugendclub Underworld und dem Verein Furkan in Kooperation mit der Kleiner Fratz GmbH organisiert wird, schweren Herzens und mit einer gehörigen Portion Wut im Bauch abzusagen. Dem ehrenamtlichen Engagement der Bürgerinnen und Bürger hat dieses Versagen des Bezirksamtes Neukölln sicher großen Schaden zugefügt.</p>
<p><strong>Disclaimer</strong>: <a href="http://www.gabi-kantel.de/">Gabi</a> und ich sind Mitglied bei proNeubritz e.V., einer der Organisatoren des geplanten und nun leider geplatzten Festes und daher betroffen. Das ändert aber nichts an den Tatsachen.</p>
<p><em>(Photo: Das Kiezfest vor einem Jahr. (© 2022: <a href="https://proneubritz.jimdofree.com/2022/09/25/spielefest-mit-fu%C3%9Fball-turnier/">proNeubritz</a>))</em></p>



 ]]></description>
  <category>Behördenversagen</category>
  <category>Failed City Neukölln</category>
  <category>Kiezfest</category>
  <guid>https://kantel.github.io/posts/2023091303_fussballturnier_abgesagt/index.html</guid>
  <pubDate>Wed, 13 Sep 2023 16:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2023091303_fussballturnier_abgesagt/images/fussballfest2022.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
