<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.5.47</generator>
<lastBuildDate>Wed, 09 Apr 2025 11:30:00 GMT</lastBuildDate>
<item>
  <title>Cute Planet mit microStudio</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040901_cute_planet/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54440578971/"><img src="https://kantel.github.io/posts/2025040901_cute_planet/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Ich scheine besessen von den scheinbar endlos scrollenden Hintergründen in Spielen zu sein. So besessen, daß ich mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> (und Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> als Programmiersprache) noch ein neues Experiment gestartet habe – dieses Mal mit einem »echten« endlos scrollenden Hintergrund.</p>
<p>Denn dieses Mal lasse ich den Hintergrund (einen Sternenhimmel) ebenfalls von microStudio erzeugen und der Zufallszahlengenerator setzt die Sterne jedesmal an eine andere Position, so daß es keine Wiederholungen gibt.</p>
<p>Doch zuerst einmal braucht jedes Spiel eine Geschichte: Octopussy hat auf einer entlegenen Raumstation monatelang Forschungsarbeiten betrieben und ist nun auf dem Rückflug nach Hause. Leider hat Ihr Raumschiff einen Defekt (der Motor stottert) und lässt sich nur noch schwer steuern. Das haben die bösen Space-Beetles und Rocket-Boys mitbekommen und wollen Octopussys Raumkrake zerstören. Octopussy muß also auf ihrem Heimflug den feindlichen Raumschiffen ausweichen.</p>
<iframe src="cuteplanet/index.html" class="if16_9" name="Cute Planet (v1)">
</iframe>
<p><em>Mit der [SPACE]-Taste kann das Rumschiff »gesteuert« werden.</em></p>
<p>Das ist die Geschichte, nun der Code für den endlos scrollenden Sternenhimmel, mit dem alles angefangen hat. Dafür habe ich die Klasse <code>Star</code> geschrieben:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Star:</span>
<span id="cb1-4">  </span>
<span id="cb1-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-8">    size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size, size</span>
<span id="cb1-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb1-11">    </span>
<span id="cb1-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w</span>
<span id="cb1-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-15">    </span>
<span id="cb1-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-17">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dx</span>
<span id="cb1-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb1-19">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-22">    screen.fillRound(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(255, 239, 0)"</span>)</span></code></pre></div>
<p>Jeder Stern wird mit einer zufälligen Größe an eine zufällig ausgewählte Position innerhalb des Fensters gesetzt und bewegt sich langsam nach links. Hat er links das Fenster wieder verlassen, wird er rechts außerhalb des Fensters erneut positioniert. Dabei wird seine vertikale Position wieder neu vom Zufallszahlengenerator gesetzt, so daß keine Wiederholung erkennbar ist.</p>
<p>Etwas seltsam ist das Casting auf <code>int()</code> innerhalb des Constructors. Denn eigentlich sollte die Integer-Division (<code>//</code>) einen Integerwert herausschreiben, aber in microStudio ergibt <code>screen.width//2</code> den Float-Wert <img src="https://latex.codecogs.com/png.latex?178.0"> und damit kommt <code>randint()</code> natürlich nicht klar. <code>screen.height//2</code> gibt mir hingegen ein korrektes <img src="https://latex.codecogs.com/png.latex?100"> heraus, aber sicherheitshalber habe ich auch dieses mit <code>int()</code> gecastet.</p>
<p>Ansonsten ist das Spiel dem <a href="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/">Pizza-Flieger</a> sehr ähnlich, nur daß Octopussys Raumkrake einer <a href="https://de.wikipedia.org/wiki/Flappy_Bird">Flappy Bird</a> ähnlichen Mechanik folgt: Die Raumkrake schwebt aufgrund ihres Defektes langsam nach unten und nur wenn der Spieler die [SPACE]-Taste drückt, hüpft sie wieder ein wenig nach oben. Dies wird in der Klasse <code>Octopussy</code> realisiert:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Octopussy:</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span></span>
<span id="cb2-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span> </span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"octopussy"</span></span>
<span id="cb2-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gravity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb2-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lift <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb2-11"></span>
<span id="cb2-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gravity</span>
<span id="cb2-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85</span></span>
<span id="cb2-15">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity</span>
<span id="cb2-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard.press, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPACE"</span>):</span>
<span id="cb2-17">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.velocity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.lift</span>
<span id="cb2-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check border</span></span>
<span id="cb2-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-20">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-23"></span>
<span id="cb2-24">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-25">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span>
<span id="cb2-26">    </span>
<span id="cb2-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_input(obj, val):</span>
<span id="cb2-28">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(obj, val):</span>
<span id="cb2-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> obj[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<p>Die Kraft, die die Raumkrake nach unten zieht, habe ich <code>gravity</code> genannt<sup>1</sup>. Und damit das Schiff, wenn es durch die Betätigung der [SPACE]-Taste nach oben geschleudert wird, nicht im Nirwana verschwindet, wird die <em>velocity</em> durch die Multiplikation mit einem Reibungsfaktor (in meinem Fall <img src="https://latex.codecogs.com/png.latex?0.85"><sup>2</sup>) abgebremst, bis sie die Raumkrake wieder nach unten zieht.</p>
<p>Die Klasse <code>Spaceship</code> für die bösen Buben ist nahezu identisch mit der Klasse <code>Enemy</code> (für die gefährlichen Pizzen) des <a href="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/">Pizza-Fliegers</a>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> uniform, randint, choice</span>
<span id="cb3-2"></span>
<span id="cb3-3">ship_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beetleship"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"beetleship"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rocketship"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"planet"</span>]</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Spaceship():</span>
<span id="cb3-6">  </span>
<span id="cb3-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb3-9">    </span>
<span id="cb3-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-11">    </span>
<span id="cb3-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb3-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb3-15">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> choice(ship_images)</span>
<span id="cb3-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uniform(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb3-17">    </span>
<span id="cb3-18">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-19">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb3-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb3-22">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-23">      </span>
<span id="cb3-24">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-25">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Nur, daß mit <code>random.choice()</code> unterschiedliche Gegner aus der Liste <code>ship_images[]</code> ausgewählt werden<sup>3</sup>. Daß <code>beetleship</code> zweimal in der Liste auftaucht, ist kein Fehler – ich wollte dadurch erreichen, daß der Marienkäfer-Bubbi häufiger im Spiel erscheint, als die anderen Figuren.</p>
<p>Das Hauptprogramm ist durch die Nutzung von Klassen wieder erfreulich kurz geraten:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">NUM_STARS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-2">NUM_ENEMIES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb4-3"></span>
<span id="cb4-4">stars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-5">spaceships <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb4-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_STARS):</span>
<span id="cb4-9">    stars.append(Star())</span>
<span id="cb4-10">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_ENEMIES):</span>
<span id="cb4-11">    spaceships.append(Spaceship())</span>
<span id="cb4-12">  octopussy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Octopussy()</span>
<span id="cb4-13">  spaceships.append(octopussy)</span>
<span id="cb4-14">  </span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb4-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> star <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> stars:</span>
<span id="cb4-18">    star.update()</span>
<span id="cb4-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ship <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> spaceships:</span>
<span id="cb4-20">    ship.update()</span>
<span id="cb4-21"></span>
<span id="cb4-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb4-23">  screen.clear(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(0, 80, 125"</span>)</span>
<span id="cb4-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> star <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> stars:</span>
<span id="cb4-25">    star.draw()</span>
<span id="cb4-26">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ship <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> spaceships:</span>
<span id="cb4-27">    ship.draw()</span></code></pre></div>
<p>Dadurch, daß ich <code>octopussy</code> auch mit in die Liste <code>spaceships[]</code> aufgenommen habe, konnte ich vermeiden, die Variable <code>octopussy</code> als <code>global</code> deklarieren zu müssen.</p>
<p>Die verwendeten Sprites sind nicht von mir (mir wurde leider kein Zeichenstift mit in die Wiege gelegt), sondern stammen aus der Sammlung »<a href="https://lostgarden.com/2007/04/07/spacecute-first-round-of-prototypes-and-new-graphics/">Space Cute</a>« von <em><a href="https://lostgarden.home.blog/">Daniel Cook</a></em>, die er unter einer <em>Creative Commons Licence</em> (<a href="https://creativecommons.org/licenses/by/3.0/us/">CC BY 3.0 US</a>) freigegeben hat. <a href="https://lostgarden.com/2007/03/15/lost-garden-license/">Diese Lizenz</a> (und der Anstand) verlangen die Namensnennung des Urhebers. Dem bin ich hiermit nachgekommen.</p>
<p>Wie immer habe ich auch dieses Skript auf den <a href="https://microstudio.io/i/kantel/cuteplanet/">Seiten von microStudio veröffentlicht</a>, damit Ihr es klonen, erweitern oder einfach nur damit herumspielen könnt.</p>
<p>Und unter <a href="https://kantel.github.io/#category=microStudio">diesem</a> Link könnt Ihr Euch alle bisher im <em>Schockwellenreiter</em> erschienenen Beiträge zu microStudio anzeigen lassen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ja, ich weiß, daß es im Weltall keine Gravitation gibt, aber hey, das ist mein Spiel und da bestimme ich die Regeln!↩︎</p></li>
<li id="fn2"><p>Mit diesem Wert, genau wie mit den Werten für <code>gravity</code> und <code>lift</code>, könnt Ihr spielen.↩︎</p></li>
<li id="fn3"><p>Der kleine grüne Planet ist eigentlich kein Gegner. In einer späteren Version des Spieles soll er als <em>Power Up</em> fungieren, der Octopussy wieder neue Lebenspunkte gibt.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025040901_cute_planet/</guid>
  <pubDate>Wed, 09 Apr 2025 11:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040901_cute_planet/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040802_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370075273/"><img src="https://kantel.github.io/posts/2025040802_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Das Mittwochs-Update kommt gewiß, auch wenn es schon am Dienstag ist: Unser aller Datenkrake Google veröffentlichte das Update der Version 135 (135.0.7049.84/85) seines Browsers Chrome und schloss damit <a href="https://chromereleases.googleblog.com/2025/04/stable-channel-update-for-desktop_8.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370075273/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040802_chrome_update/</guid>
  <pubDate>Tue, 08 Apr 2025 19:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040802_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schließt am »April-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040801_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54438121257/"><img src="https://kantel.github.io/posts/2025040801_android_update/images/robot-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2025-04-01">Sicherheitsupdate für Android</a> (und damit auch auf seinen Pixel-Geräten) wieder Sicherheitslücken geschlossen. Einige davon werden offenbar bereits ausgenutzt, so daß ein Update dringend empfehlenswert ist.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 9, 9 pro, 9 pro XL, Pixel 8a, Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a und Pixel 6/6 pro verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54438121257/">A Robot in Dystopia</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style. Illustration of a small green robot looking at his mobile phone in his hand. He is standing on a street in a run-down dystopian city with some car wrecks, the sun is shining</em>«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Android</category>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040801_android_update/</guid>
  <pubDate>Tue, 08 Apr 2025 16:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040801_android_update/images/robot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Frauen am Kontrabaß: Die Kim-Sisters haben Fieber</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040701_kim_sisters/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54437153250/"><img src="https://kantel.github.io/posts/2025040701_kim_sisters/images/kimsisters-b.jpg" class="img-fluid"></a></p>
<p>Die <a href="https://en.wikipedia.org/wiki/The_Kim_Sisters">Kim Sisters</a> waren eine weibliche Gesangsgruppe aus Südkorea, die in den 1950er und 1960er Jahren in den Vereinigten Staaten einige Erfolge feierten. Sie begannen ihre Karriere im Jahre 1953 schon als Kinder, als sie im Koreakrieg zur Unterhaltung US-Amerikanischer Soldaten auftraten. Ihre Eltern waren <em>Lee Nan-young</em>, eine berühmte koreanische Sängerin und <em>Kim Hae-song</em>, ein populärer Dirigent, der im Koreakrieg starb.</p>
<p>Sie erhielten schon früh eine musikalische Ausbildung, um mit ihren Aufgtrtitten vor den Soldaten zum Familienunterhalt beizutragen. Sie waren nicht nur Sängerinnen und Tänzerinnen, sondern auch Multi-Instrumentalistinnen, von denen mindestens eine auch den Kontrabaß virtuos beherrschte, wie das Video unten zeigt, in dem sie den durch <a href="https://zeitlupe.ch/panorama/kultur/musik/fever-von-peggy-lee/"><em>Peggy Lee</em> bekanntgewordenen Klassiker »Fever«</a> hinreissend interpretieren:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/qE8vPoq8AfY?si=mRY7obdDwfSj9sOQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Der <a href="https://www.youtube.com/watch?v=qE8vPoq8AfY">Videomitschnitt</a> stammt aus der <em>Ed Sullivan Show</em> vom 10. Januar 1965, daher entschuldigt bitte die bescheidene Bildqualität.</p>
<p>Das Trio bestand aus Sook-ja »Sue«, Ai-ja »Aija« und Min-ja »Mia« Kim, das nicht nur als eine der ersten Girl-Groups gilt, sondern auch als Vorreiter des <a href="https://de.wikipedia.org/wiki/K-Pop">K-Pop</a>, wie es <em>Melody Knox</em> in ihrem informativen Video »<a href="https://www.youtube.com/watch?v=buhXGuBLnho">How The Kim Sisters Brought K-Pop to America</a>« erläutert:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/buhXGuBLnho?si=vHwqSmOCYxLuuJ6B" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p>Sie geht darin auch auf den Rassismus ein, unter dem nicht nur die Musikerinnen, sondern viele Amerikanerinnen und Amerikaner asiatischer Herkunft leiden mussten. Und – leider meistens eine Ausnahme bei YouTube-Videos – sie benennt im Begleittext ihre Quellen. Daher habe ich den <a href="https://www.youtube.com/@melodyknoxyt">Kanal von ihr</a> auch gleich abonniert.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54437153250/">The Kim Sisters</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style. A girl band of three young Korean women on a show stage sing a hit song. They play double bass, saxophone, and electric guitar. They are wearing a Korean hanbok</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Musik</category>
  <guid>https://kantel.github.io/posts/2025040701_kim_sisters/</guid>
  <pubDate>Mon, 07 Apr 2025 17:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040701_kim_sisters/images/kimsisters.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040203_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54369803956/"><img src="https://kantel.github.io/posts/2025040203_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Zwar ist es schon spät, aber es ist immer noch Mittwoch, und Mittwochs aktualisiert (in der Regel) unser aller Datenkrake ihr Flaggschiff: Google veröffentlicht das Update der <a href="https://stadt-bremerhaven.de/chrome-135-ist-da-und-bringt-sicherheitsupdates-mit/">Version 135 (135.0.7049.41/42/52) seines Browsers Chrome</a> und schließt damit wieder <a href="https://chromereleases.googleblog.com/2025/04/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54369803956/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux.1 (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040203_chrome_update/</guid>
  <pubDate>Wed, 02 Apr 2025 19:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040203_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla Thunderbird Version 137.0 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040202_thunderbird_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54426720921/"><img src="https://kantel.github.io/posts/2025040202_thunderbird_update/images/thunderbird-b.jpg" class="img-fluid"></a></p>
<p>Dieses Mal hat sich der Donnervogel <a href="https://kantel.github.io/posts/2025033101_firefox_update/">zwei Tage Zeit gelassen</a>, bevor er den Feuerfuchs jagte: Die Entwickler des <a href="http://www.mozillamessaging.com/">Mozilla Thunderbird</a> haben das Update auf die Version 137.0 freigegeben und damit auch <a href="https://www.thunderbird.net/en-US/thunderbird/137.0/releasenotes/">Sicherheitslücken behoben</a>.</p>
<p>Thunderbird weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Thunderbird</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54426720921/">Thunderbird hunts Firefox</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comic style, illustration of a majestic thunderbird with colored feathers soaring above a mountain range during a bright sunset, hunting a red firefox</em>«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040202_thunderbird_update/</guid>
  <pubDate>Wed, 02 Apr 2025 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040202_thunderbird_update/images/thunderbird.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apple veröffentlicht watchOS 11.4</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040201_apple_update_nachschlag/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54424039170/"><img src="https://kantel.github.io/posts/2025040201_apple_update_nachschlag/images/applewatch-b.jpg" class="img-fluid"></a></p>
<p>Der IT-Riese aus Cupertino hat die beim <a href="https://kantel.github.io/posts/2025040102_apple_updates/">gestrigen Flickentag</a> fehlende Aktualisierung seiner Uhr heute nachgeliefert: Apple hat für die Apple Watch nun auch <a href="https://support.apple.com/en-us/122376">watchOS 11.4 bereitgestellt</a> und bietet damit im wesentlichen Fehlerbehebungen.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54424038415/">Zauberapfel im Zauberwald</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comic style, a mad hatter gives a sexy naked woman, with big boops, and a nice butt an apple in the summer enchanted forest</em>«. Modell: Flux.1 (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040201_apple_update_nachschlag/</guid>
  <pubDate>Wed, 02 Apr 2025 18:55:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040201_apple_update_nachschlag/images/applewatch.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apples monatlicher Flickentag</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040102_apple_updates/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54424038415/"><img src="https://kantel.github.io/posts/2025040102_apple_updates/images/appleupdates-b.jpg" class="img-fluid"></a></p>
<p>Der monatliche Patchday des IT-Riesen aus Cupertino mit dem angebissenen Apfel im Logo kommt dieses Mal sehr früh, was auf eine gewisse Dringlichkeit schließen lässt. Und bis auf die Uhr sind auch diesen Monat wieder alle Betriebssystem-Versionen betroffen, so daß ich sie der Einfachheit halber <em>en bloc</em> abhandeln kann:</p>
<section id="apple-veröffentlicht-macos-sequoia-15.4" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sequoia-15.4">Apple veröffentlicht macOS Sequoia 15.4</h2>
<p>Apple hat das Update auf die neue <a href="https://support.apple.com/en-us/122373">Betriebssystemversion macOS Sequoia&nbsp;15.4</a> freigegeben bietet auch hierzulande nun »Apple Intelligence« (KI) für die neueren Gerätemodelle und korrigiert auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht – nachdem <a href="https://www.mactechnews.de/news/article/Apple-veroeffentlicht-macOS-15-4-186910.html">anfängliche Schwierigkeiten</a> behoben wurden – über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-sonoma" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-sicherheitsupdate-für-macos-ventura-und-sonoma">Apple veröffentlicht Sicherheitsupdate für macOS Ventura und Sonoma</h2>
<p>Apple hat auch das Sicherheitsupdate auf <a href="https://support.apple.com/en-us/122375">macOS Ventura 13.7.5</a> und <a href="https://support.apple.com/en-us/122374">macOS Sonoma 14.7.5</a> freigegeben.</p>
<p>Die Updates stehen wie üblich über die Softwareaktualisierung bereit.</p>
</section>
<section id="apple-veröffentlicht-ios-ipados-18.4" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-ios-ipados-18.4">Apple veröffentlicht iOS / iPadOS 18.4</h2>
<p>Wie angekündigt hat Apple das <a href="https://support.apple.com/en-us/122371">Update auf iOS 18.4 und iPadOS 18.4</a> bereitgestellt. Die Updates bieten auch hierzulande nun »Apple Intelligence« (KI) für die neueren Gerätemodelle und darüber hinaus viele neue Funktionen und Fehlerbehebungen und korrigieren Sićherheitslücken.</p>
<p>Das Update auf auf iOS 18.4 und iPadOS 18.4 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code> an ausreichende Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-ipados-17.7.6-für-ältere-systeme" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-ipados-17.7.6-für-ältere-systeme">Apple veröffentlicht iPadOS 17.7.6 für ältere Systeme</h2>
<p>Apple hat nun das Update auf iPadOS 17.7.6 für ältere iPads bereitgestellt. Das Update behebt <a href="https://support.apple.com/en-us/122372">kritische Sicherheitslücken</a> für die Anwender, die nicht auf iOS/iPadOS 18 updaten wollen.</p>
<p>Das Update auf iPadOS 17.7.6 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code> an ausreichende Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-updates-für-diverse-ältere-systeme-von-iosipados" class="level2">
<h2 class="anchored" data-anchor-id="apple-veröffentlicht-updates-für-diverse-ältere-systeme-von-iosipados">Apple veröffentlicht Updates für diverse ältere Systeme von iOS/iPadOS</h2>
<p>Apple hat auch Updates für diverse ältere Systeme von iOS/iPadOS bereitgestellt. Auch diese Updates auf <a href="https://support.apple.com/en-us/122346">iOS/iPadOS 16.7.11</a> und <a href="https://support.apple.com/en-us/122345">iOS/iPadOS 15.8.4</a> beheben kritische Sicherheitslücken für alle Anwender, die nicht auf iOS/iPadOS 18 updaten wollen.</p>
<p>Auch diese Updates können über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code> an ausreichende Akku-Kapazität und freien Speicherplatz sollte gedacht werden) erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
<p><em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54424038415/">Zauberapfel im Zauberwald</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comic style, a mad hatter gives a sexy naked woman, with big boops, and a nice butt an apple in the summer enchanted forest</em>«. Modell: Flux.1 (Dev), Style: PixelWave.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025040102_apple_updates/</guid>
  <pubDate>Tue, 01 Apr 2025 11:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040102_apple_updates/images/appleupdates.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Die Mediadaten zum Frühlingsanfang</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025040101_mediadaten/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54362942869/"><img src="https://kantel.github.io/posts/2025040101_mediadaten/images/biber-b.jpg" class="img-fluid"></a></p>
<p>Ich hoffe <a href="https://kantel.github.io/posts/2025030301_mediadaten/">immer noch</a> auf den Frühling und das soll Euch auch wieder das (zugegeben leicht kitschige) <a href="https://www.flickr.com/photos/schockwellenreiter/54362942869/">Bannerbild oben</a> vermitteln. Aber auch an einem 1.&nbsp;April beginnt ein neuer Monat und daher ist es Zeit für das, was manches Mal hochtrabend auch <em>Mediadaten</em> genannt wird: Im März 2025 hatte der <em>Schockwellenreiter</em> laut seinem nicht immer zuverlässigen, aber dafür (hoffentlich!) datenschutzkonformen <del>Geißenpeter</del> <a href="https://www.goatcounter.com/">Neugiertool</a> exakt <strong>5.332&nbsp;Seitenaufrufe</strong>. Wie immer täuscht diese Exaktheit der Ziffer eine Genauigkeit der Zahl nur vor, trotzdem freue ich mich über jede Besucherin und jeden Besucher und bedanke mich bei allen meinen Leserinnen und Lesern.</p>
<p><em>😎 &nbsp; Bleibt mir gewogen!</em></p>
<p>Und dann noch der Blick auf die <em>Top Five</em> des Vormonats, der dieses Mal wieder ein paar interessante Einblicke aufweist:</p>
<ol type="1">
<li>Unangefochten an der Spitze steht – wie schon seit Monaten – der Artikel »<a href="https://kantel.github.io/posts/2024011002_ki_ohne_zensor/index.html">Bildgeneratoren und Künstliche Intelligenz – ohne Zensoren</a>« vom 10.&nbsp;Januar&nbsp;2024.</li>
<li>Schon weit abgeschlagen folgt »<a href="https://kantel.github.io/posts/2025030901_marimo/">Marimo – ein neuer Stern am (Python-) Notebook-Himmel?</a>« vom 9.&nbsp;des Vormonats.</li>
<li>Dann überraschend wieder etwas aus meinem Backkatalog: »<a href="https://kantel.github.io/posts/2023061701_platformer_pygame_pygbag_1/index.html">Ein Jump and Run (Mario Style) in Pygame und Pygbag (Stage 1)</a>«, ein Beitrag, den ich schon am 17.&nbsp;Juni&nbsp;2023 veröffentlicht hatte.</li>
<li>Doch auch (relativ) aktuelle Update-Meldungen finden ihre Leser, wie zum Beispiel die »<a href="https://kantel.github.io/posts/2025022801_libre_office_update/">Neue Version 24.8.5 von LibreOffice</a>«, erschienen am 28.&nbsp;Februar dieses Jahres.</li>
<li>Und <em>last but not least</em> fand die über ein Jahr alte Meldung »<a href="https://kantel.github.io/posts/2024031501_atom_wird_pulsar/">Der Atom-Editor lebt – und heißt jetzt Pulsar</a>« Euer reges Interesse.</li>
</ol>
<p>Bemerkenswert finde ich, daß drei der fünf Beiträge mindestens älter als ein Jahr sind, aber dennoch im letzten Monat viele Leser fanden. Das lässt zwei Rückschlüsse zu: Erstens, daß unser aller Datenkrake mich in ihrem Suchmaschinen-Algorithmus hochgerankt hat oder zweitens, daß im letzten Monat keine interessanten neuen Artikel hier in diesem <del>Blog</del> Kritzelheft erschienen sind. Ich hoffe jedoch stark, daß nur der erste Schluß zutrifft.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54362942869/">Ein Biber im Frühling</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a beaver in a red dressing gown sits on a bench in the garden with a laptop on his lap, next to him a small table with a steaming cup of coffee. It is spring, many flowering plants and many small birds can be seen, the warm spring sun is bathing the scenery</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Mediadaten</category>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2025040101_mediadaten/</guid>
  <pubDate>Tue, 01 Apr 2025 10:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025040101_mediadaten/images/biber.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Pizza Plane – jetzt in microStudio (Stage 1)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54412341755/"><img src="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/images/pizzaplanev1-b.jpg" class="img-fluid"></a></p>
<p>Wer meinen Beiträgen hier im <em>Schockwellenreiter</em> schon länger folgt, hat sicher geahnt, daß der vor einem <a href="https://kantel.github.io/posts/2025032501_seamless_scrolling_desert/">»endlos« scrollenden Hintergrund durch die Luft schwebende Dachs</a> nicht grundlos den Weg auf diese Seiten fand. Ich möchte nämlich herausfinden, ob mein Projekt »<a href="http://blog.schockwellenreiter.de/2022/10/2022101502.html">Pizza Plane</a>«, das ich ursprünglich einmal in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/tigerjython.html">TigerJython</a> begonnen, dann aber – nach meiner <a href="http://blog.schockwellenreiter.de/2022/10/2022103001.html">Abkehr von TigerJython</a> – in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/pygame.html">Pygame</a> wieder <a href="https://kantel.github.io/posts/2023010102_pizzaplane4/">aufgenommen</a> hatte, nicht auch in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> mit Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> realisieren kann.<sup>1</sup> Spoiler: Die ersten Experimente verliefen recht vielversprechend.</p>
<iframe src="pizzaplanev1/index.html" class="if16_9" name="Pzza Plane (v1)">
</iframe>
<p>Ich erinnere an die Spielidee: Die pöse Meloni möchte mit Hilfe mutierter, tödlicher und angriffslustiger Pizzen halb Europa unterdrücken. Nur ein kleiner grüner<sup>2</sup> Flieger leistet Widerstand und stellt sich den Pizzen über einer Kulturwüste entgegen. In einer ersten Version habe ich den Hintergrund, den Flieger und die Pizzen implementiert.</p>
<p>Zuerst einmal die Klasse <code>Background</code>, die sich kaum von der gleichnamigen Klasse im Dachsbeispiel unterscheidet:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Background:</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x</span>
<span id="cb1-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y</span>
<span id="cb1-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb1-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">285</span></span>
<span id="cb1-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb1-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert_bg"</span></span>
<span id="cb1-10">    </span>
<span id="cb1-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-12">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb1-14">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w</span>
<span id="cb1-15">      </span>
<span id="cb1-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-17">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Dann die Klasse <code>Plane</code>, bei der ich dem Flieger im Sprite-Editor eine kleine Animation (wie <a href="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/">hier beschrieben</a>) spendiert habe. Diese läuft, ohne daß man etwas programmieren muß, automatisch ab:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Plane:</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">140</span></span>
<span id="cb2-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span></span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span></span>
<span id="cb2-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"planefly"</span></span>
<span id="cb2-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.updown <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-10">    </span>
<span id="cb2-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span>):</span>
<span id="cb2-13">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.updown</span>
<span id="cb2-14">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check border</span></span>
<span id="cb2-15">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span>):</span>
<span id="cb2-18">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.updown</span>
<span id="cb2-19">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb2-20">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-22">    </span>
<span id="cb2-23">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-24">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Die Klasse, die momentan nur die Pizzen beherbergt, habe ich <code>Enemy</code> genannt, weil sie eventuell später auch noch feindliche Tomaten, Pepperoni, Auberginen oder sonstiges, gefährliches Gemüse aufnehmen soll:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Enemy:</span>
<span id="cb3-4">  </span>
<span id="cb3-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span></span>
<span id="cb3-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pizza"</span></span>
<span id="cb3-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-9">    </span>
<span id="cb3-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> reset(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-11">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb3-12">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb3-13">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-14">    </span>
<span id="cb3-15">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb3-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb3-19">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.reset()</span>
<span id="cb3-20">      </span>
<span id="cb3-21">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-22">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Die Methode <code>reset()</code> setzt die Pizzen auf eine zufällige Position rechts außerhalb des Bildschirmausschnitts zurück, so daß es – obwohl nur eine endliche Anzahl von Sprites im Spiel ist – so aussieht, als würden ständig neue Gegner den armen kleinen Flieger angreifen. Die Methode wird daher sowohl im Constructor als auch in <code>update()</code> (wenn eine Pizza das Fenster links verlassen hat) aufgerufen.</p>
<p>Der Vorteil der Objektorientierung ist ja, daß dadurch das Hauptprogramm relativ kurz und übersichtlich gehalten wird:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">NUM_ENEMIES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">bgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-4">enemies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb4-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> plane</span>
<span id="cb4-8">  plane <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Plane()</span>
<span id="cb4-9">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_ENEMIES):</span>
<span id="cb4-10">    enemies.append(Enemy())</span>
<span id="cb4-11">  bgs.append(Background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-12">  bgs.append(Background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1152</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>))</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb4-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bgs:</span>
<span id="cb4-16">    bg.update()</span>
<span id="cb4-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> enemy <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> enemies:</span>
<span id="cb4-18">    enemy.update()</span>
<span id="cb4-19">  plane.update()</span>
<span id="cb4-20"></span>
<span id="cb4-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb4-22">  screen.clear()</span>
<span id="cb4-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bgs:</span>
<span id="cb4-24">    bg.draw()</span>
<span id="cb4-25">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> enemy <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> enemies:</span>
<span id="cb4-26">    enemy.draw()</span>
<span id="cb4-27">  plane.draw()</span>
<span id="cb4-28">  </span>
<span id="cb4-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_input(obj, val):</span>
<span id="cb4-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(obj, val):</span>
<span id="cb4-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> obj[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-32">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<p>Wie immer habe ich auch dieses Skript auf den <a href="https://microstudio.io/i/kantel/pizzaplanev1/">Seiten von microStudio veröffentlicht</a>, damit Ihr es klonen, erweitern oder einfach nur damit herumspielen könnt.</p>
<p>Und unter <a href="https://kantel.github.io/#category=microStudio">diesem Link</a> könnt Ihr Euch alle bisher im <em>Schockwellenreiter</em> erschienenen Beiträge zu microStudio anzeigen lassen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Das Projekt liegt mir wirlich am Herzen. Zwischenzeitlich hatte ich mich auch schon einmal an eine <a href="https://kantel.github.io/posts/2023032602_pizza_plane_with_pizzas/">Version</a> in <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/trinket.html">Trinket</a> (in der <a href="https://kantel.github.io/posts/2023021601_my_first_trinket/">Processing.py-Variante</a>) und an eine <a href="https://kantel.github.io/posts/2024012902_pizzaplane_3/">Version in JavaScript</a> (<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>) versucht.↩︎</p></li>
<li id="fn2"><p>Das »Grün« ist nicht politisch gemeint, aber den ursprünglich verwendeten <strong>roten</strong> Doppeldecker habe ich wegen einer möglichen Assoziation mir dem »Roten Baron« <a href="https://de.wikipedia.org/wiki/Manfred_von_Richthofen">Manfred von Richthofen</a> suspendiert.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/</guid>
  <pubDate>Mon, 31 Mar 2025 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025033102_pizzaplane_v1_microstudio/images/pizzaplanev1.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Mozilla Firefox: Reguläre Updates nachgeschoben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025033101_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54416583582/"><img src="https://kantel.github.io/posts/2025033101_firefox_update/images/pandas2-b.jpg" class="img-fluid"></a></p>
<p>Nachdem die <a href="https://kantel.github.io/posts/2025032901_firefox_update/">Aktualisierung vom Sonnabend</a> offensichtlich ein Notfall-Update war (auch erkenntlich an den »schrägen« Versionsnummern) hat Mozilla heute die regulären Updates nachgeschoben: Die Entwickler des Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/137.0/releasenotes/">Version 137</a> und die <a href="https://www.mozilla.org/en-US/firefox/128.9.0/releasenotes/">Version ESR 128.9</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. Auch in diese Updates sollen wieder viele Veränderungen eingeflossen sein.</p>
<p>Firefox weist selbst auf diese Updates hin. Diese Prozedur kann aber auch über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54416583582/">Zwei rote Pandas</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC comic style, two red pandas in a spring enchanted forest</em>«. Modell: Flux (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025033101_firefox_update/</guid>
  <pubDate>Mon, 31 Mar 2025 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025033101_firefox_update/images/pandas2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es muß nicht immer Microsoft sein: Neue Version 25.2.2 von LibreOffice</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032902_libre_office_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54356593908/"><img src="https://kantel.github.io/posts/2025032902_libre_office_update/images/officewoman-b.jpg" class="img-fluid"></a></p>
<p>In der <a href="https://blog.documentfoundation.org/blog/2025/03/27/libreoffice-25-2-2-and-24-8-6/">neuen Version 25.2.2 des quelloffenen Officepaketes LibreOffice</a> wurden zahlreiche neue Funktionen bereitgestellt und zudem wurden Sicherheitslücken behoben.</p>
<p>Die <a href="https://www.libreoffice.org/download/download-libreoffice/?type=mac-x86_64&amp;version=25.2.2&amp;lang=de">Downloads der korrigierten Versionen</a> finden sich hier. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54356593908/">(Libre-) Office Woman</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored French Comic Style. A sexy young woman with long red hair, green eyes and red lipstick is sitting in an office at a desk in front of a monitor and a keyboard. She is wearing a white, open blouse with a low neckline and a rust-colored vest. She has a pencil in one hand. On the desk is an open notepad, a cup with writing utensils and a stack of books. There are shelves on the walls with many more books and files. The spring sun is shining through a window in the background</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>LibreOffice</category>
  <category>Produktivität</category>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032902_libre_office_update/</guid>
  <pubDate>Sat, 29 Mar 2025 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032902_libre_office_update/images/officewoman.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Ein Feuerfuchs kommt selten allein</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032901_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54416583502/"><img src="https://kantel.github.io/posts/2025032901_firefox_update/images/pandas-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/136.0.4/releasenotes/">Version 136.0.4</a> und die <a href="https://www.mozilla.org/en-US/firefox/128.8.1/releasenotes/">Version ESR 128.8.1</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. Wie immer sind in diese Updates auch viele Veränderungen eingeflossen.</p>
<p>Firefox weist selbst auf diese Updates hin. Diese Prozedur kann aber auch über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54416583502/">Zwei rote Pandas</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC comic style, two red pandas in a spring enchanted forest</em>«. Modell: Flux (Dev), Style: PixelWave.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032901_firefox_update/</guid>
  <pubDate>Sat, 29 Mar 2025 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032901_firefox_update/images/pandas.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitslücken im PDF/Postscript-Interpreter Ghostscript</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032701_ghostscript/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370053019/"><img src="https://kantel.github.io/posts/2025032701_ghostscript/images/ghost-b.jpg" class="img-fluid"></a></p>
<p>In dem besonders unter Linux/Unix verbreiteten Interpreter Ghostscript zum Umgang mit PDF- und PostScript-Dateien befindet sich einige Schwachstellen, die von Angreifer genutzt werden können, um Schadcode auszuführen.</p>
<p><a href="https://ghostscript.readthedocs.io/en/gs10.05.0/News.html?utm_source=ghostscript&amp;utm_medium=website&amp;utm_content=inline-link">Eine Korrektur ist bereits verfügbar</a> und sollte zeitnah eingefahren werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370053019/">Robo-Ghost</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032701_ghostscript/</guid>
  <pubDate>Thu, 27 Mar 2025 11:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032701_ghostscript/images/ghost.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032601_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370014529/"><img src="https://kantel.github.io/posts/2025032601_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Heute kommt die wöchentliche Mittwochs-Aktualisierung des Flaggschiffs unser aller Datenkrake tatsächlich am Mittwoch, weder die Datenkrake noch ich haben geschlampt: Google veröffentlicht das Update der Version 134 (134.0.6998.177/178) seines Browsers Chrome und schließt damit <a href="https://chromereleases.googleblog.com/2025/03/stable-channel-update-for-desktop_25.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370014529/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032601_chrome_update/</guid>
  <pubDate>Wed, 26 Mar 2025 15:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032601_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>MicroStudio: Endlos schwebt der Dachs (jetzt auch in Python)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032501_seamless_scrolling_desert/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54409670008/"><img src="https://kantel.github.io/posts/2025032501_seamless_scrolling_desert/images/desert01-b.jpg" class="img-fluid"></a></p>
<p>So viele <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a>-Tutorials wie ich befürchtet hatte, waren es nun doch nicht, die der Portierung von microScript nach Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> harrten. Neben der <a href="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/">gestern fertiggestellten Sprite-Animation</a> war es eigentlich nur noch der vor einem <a href="https://kantel.github.io/posts/2024031702_scrolling_badger/">scheinbar endlosen Hintergrund schwebende Dachs</a>, der noch nicht nach Python portiert war.</p>
<iframe src="seamlessscrollingdesert/index.html" class="if16_9" name="Seamless Scrolling Desert (Python)">
</iframe>
<p>Das hatte ich dann heute in Angriff genommen. Das <a href="https://www.flickr.com/photos/schockwellenreiter/54409610490/">Hintergrundbild der scheinbar endlos scrollenden Wüstenlandschaft</a> hatte ich von <a href="https://www.flickr.com/photos/schockwellenreiter/53537297945/">Scenarios</a> Skybox generieren lassen, denn diese Bilder gehen an den Enden wieder nahtlos ineinander über. Also mußte ich das Bild nur, wenn es am linken Bildschirmrand verschwunden war, am rechten Bildschirmrand wieder »ankleben«. Dafür habe ich eine Klasse <code>Background</code> geschrieben:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Background:</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, _x, _y):</span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _x</span>
<span id="cb1-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _y</span>
<span id="cb1-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb1-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">285</span></span>
<span id="cb1-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb1-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert02"</span></span>
<span id="cb1-10">    </span>
<span id="cb1-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-12">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w:</span>
<span id="cb1-14">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w</span>
<span id="cb1-15">      </span>
<span id="cb1-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-17">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Auch das <a href="https://www.flickr.com/photos/schockwellenreiter/53539184633/">Bild des fliegenden Dachses</a> hatte ich von Scenario erstellen lassen und dann mit einer Bildverarbeitung freigestellt. Eigentlich verharrt der Dachs an einer festen Stelle auf dem Bildschirm (daher bnötigt die Klasse <code>Badger</code> auch keine <code>update()</code>-Methode), die Illusion, daß er über einer Landschaft schwebt, wird durch das nach links gleitende Hintergrundbild erzeugt:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Badger:</span>
<span id="cb2-2">  </span>
<span id="cb2-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span>
<span id="cb2-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span></span>
<span id="cb2-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">44</span></span>
<span id="cb2-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span></span>
<span id="cb2-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"badger"</span></span>
<span id="cb2-9">    </span>
<span id="cb2-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-11">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Im Hauptscript wird dann alles zusammengefügt:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">bgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb3-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> badger</span>
<span id="cb3-5">  badger <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Badger()</span>
<span id="cb3-6">  bgs.append(Background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">334</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))</span>
<span id="cb3-7">  bgs.append(Background(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1358</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))</span>
<span id="cb3-8"></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb3-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bgs:</span>
<span id="cb3-12">    bg.update()</span>
<span id="cb3-13">    </span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb3-16">  screen.clear(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(100, 160, 160)"</span>)</span>
<span id="cb3-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bgs:</span>
<span id="cb3-18">    bg.draw()</span>
<span id="cb3-19">  badger.draw()</span></code></pre></div>
<p>Ich muß gestehen, die Startposition der x-Achse der ersten Instanz des Backgrounds (<code>x = 334</code>) habe ich durch Experimente ermittelt. Das Bild ist 1024 Pixel weit, die x-Achse der Fensterkordinaten (beim (Quer-) Format 16:9) reicht von <img src="https://latex.codecogs.com/png.latex?-178"> bis <img src="https://latex.codecogs.com/png.latex?178"> und die Startkoordinaten des Bildes liegen im Nullpunkt des Koordinatensystems in der Mitte des Bildes. Wie ich von diesen Zahlen auf <img src="https://latex.codecogs.com/png.latex?334"> kommen kann, hat sich mir bisher noch nicht erschlossen, aber mit diesem Wert liegt der linke Rand des Bildes exakt auf <img src="https://latex.codecogs.com/png.latex?-178"> der Bildschirmkoordinaten. Für die zweite Instanz des Bildes war es dann einfacher: Ich habe auf die Bildbreite (1024 Pixel) einfach den Wert <img src="https://latex.codecogs.com/png.latex?334"> aufaddiert.</p>
<p>Auch die y-Koordinaten (<code>y = -30</code>) hatte ich experimentell herausgefunden. Hier war der Grund aber ein ästhetischer: Ich wollte, daß der Dachs über einen scheinbar im Vordergrund wachsenden Kaktus schwebt, dadurch entsteht die Illusion, daß er <em>hinter</em> dem Kaktus vorbeigleitet. Da das Bild mit 285 Pixeln Höhe etwas größer ist als die Bildschirmhöhe von 200 Pixeln, hatte ich hier Spielraum, um einen passenden Ausschnitt zu finden.</p>
<p>Auch dieses Tutorial habe ich wieder auf den <a href="https://microstudio.io/i/kantel/seamlessscrollingdesert/">Seiten von microStudio veröffentlicht</a>, damit Ihr es klonen, erweitern oder einfach nur damit herumspielen könnt. Denn das Ziel dieser kleinen Tutorial-Reihe ist ja, daß nicht nur ich, sondern auch Ihr microStudio (mit Python/Brython) lernt.</p>
<p>Und unter diesem Link könnt Ihr Euch alle bisher im <em>Schockwellenreiter</em> erschienenen <a href="https://kantel.github.io/index.html#category=microStudio">Beiträge zu microStudio</a> anzeigen lassen. Und auch später alle noch neu erscheinenden, von denen sicher noch viele folgen werden. <em>Still digging!</em></p>



 ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Spieleprogrammierung</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025032501_seamless_scrolling_desert/</guid>
  <pubDate>Tue, 25 Mar 2025 14:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032501_seamless_scrolling_desert/images/desert01.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Animierte Sprites mit microStudio und Python</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54408082434/"><img src="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/rogue0-b.jpg" class="img-fluid"></a></p>
<p>Bei der Durchsicht meiner Beiträge zu <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> hier in <a href="https://kantel.github.io/index.html#category=microStudio">diesem <del>Blog</del> Kritzelheft</a> fiel mir auf, daß ich noch nicht alle Tutorials, die ich zu Beginn noch in microScript (der <em>nativen</em> Scriptsprache von microStudio) entwickelt hatte, nach Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> portiert habe. Das werde ich – beginnend mit <a href="https://kantel.github.io/posts/2024031201_microstudio_tut_01/">diesem Tutorial über Sprite-Animationen</a> – in den nächsten Tagen sukzessive nachholen.</p>
<p>Doch zuerst etwas anderes. Ich bemühe mich ja immer für meine Beiträge neue und gutaussehende (und frei zu nutzende) Tiles und Sprites zu entdecken. Und bei der Vorbereitung zu diesem Artikel bin ich über die <a href="https://o-lobster.itch.io/">Seiten von O_Lobster auf Itch.io</a> gestolpert und fand diese drei Asset-Packs bemerkenswert:</p>
<p><a href="https://img.itch.zone/aW1hZ2UvNjY0NjUxLzM1OTM5NjMucG5n/original/3GoyIU.png"><img src="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/3GoyIU.png" class="img-fluid"></a>&nbsp;<a href="https://img.itch.zone/aW1hZ2UvNDM2ODI5LzIxOTIxMjEucG5n/original/k2WT1Y.png"><img src="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/k2WT1Y.png" class="img-fluid"></a>&nbsp;<a href="https://img.itch.zone/aW1hZ2UvMTA3MjQ0OC82MTQ3OTUxLnBuZw==/original/F%2Bgnw1.png"><img src="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/F+gnw1.png" class="img-fluid"></a></p>
<ol type="1">
<li><a href="https://o-lobster.itch.io/simple-dungeon-crawler-16x16-pixel-pack">Simple Dungeon Crawler 16x16 Pixel Art Asset Pack</a>, (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>)</li>
<li><a href="https://o-lobster.itch.io/adventure-pack">Top-Down Adventure Pack</a>, (<a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>)</li>
<li><a href="https://o-lobster.itch.io/platformmetroidvania-pixel-art-asset-pack">Platformer/Metroidvania Asset Pack</a>, (<a href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>)</li>
</ol>
<p>Diese 16x16 Pixel großen Bildchen im Retro-Style sehen nicht nur gut aus, sondern lassen sich auch gut miteinander kombinieren, so daß Ihr mit diesen drei Packs schon ein nettes Roguelike oder einen Retro-Platformer zusammenstricken könnt. Ich habe sie jedenfalls heruntergeladen und werde sie in meinen nächsten Experimenten mit microStudio verwenden.</p>
<p>Und nun zu dem versprochenen Tutorial, in dem ein kleiner, animierter Rogue mithilfe der Pfeiltasten (alternativ sind auch die Tasten <code>a</code>, <code>s</code>, <code>d</code> und <code>w</code> möglich) über den Monitor bewegt werden kann:</p>
<iframe src="roguelike01python/index.html" class="if16_9" name="Roguelike 01 (Python)">
</iframe>
<p>Dafür habe ich aus dem oben schon erwähnten <a href="https://o-lobster.itch.io/adventure-pack">Top-Down Adventure Pack</a> von <a href="https://o-lobster.itch.io/">O_Lobster</a> den Helden mit je vier Streifen mit je vier Einzelbildern heruntergeladen. Einmal für die Idle-Animationen in den Richtungen oben, unten, rechts, links und dann für die Run-Animationen ebenfalls in den vier Himmelsrichtungen. Diese Streifen habe ich dann in microStudio importiert.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54405330686/"><img src="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/rogue1.jpg" class="img-fluid figure-img" alt="Screenshot 1: Strip zur Animation"></a></p>
<figcaption>Screenshot 1: Strip zur Animation</figcaption>
</figure>
</div>
<p>Dort habe ich dann im Sprite-Editor das erste Teilbild mit dem Auswahlwerkzeug markiert und dann mit dem darauf erscheinenden Button »Strip zur Animation« die Animation erstellt. Wichtig ist, daß die Größe des Streifens korrekt angegeben wird (in meinem Fall 4 mal 16 Pixel breit und 16 Pixel hoch, also 64 x 16 Pixel), sonst erscheinen die Bilder ziemlich gequetscht.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/54405565818/"><img src="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/rogue2.jpg" class="img-fluid figure-img" alt="Screenshot 2: Animationsgeschwindigkeit einstellen"></a></p>
<figcaption>Screenshot 2: Animationsgeschwindigkeit einstellen</figcaption>
</figure>
</div>
<p>Dann habe ich noch in dem darauf angezeigten Schieberegler rechts unten die Animationsgeschwindigekeit auf <code>8 FPS</code> eingestellt. Das war es dann schon. Denn wenn man nun im Code-Editor in der Funktion <code>draw()</code> zum Beispiel die Zeile</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1">screen.drawSprite(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_right"</span>, hero.x, hero.y, hero.w, hero.h)</span></code></pre></div>
<p>eingibt, zeigt microStudio den komplette Animationszyklus an, ohne daß man ihn zusätzlich programmieren muß. Interessant ist auch, daß man mit <code>w</code> und <code>h</code> die Sprites skalieren kann. Ich habe zum Beispiel die im Original 16x16&nbsp;Pixel großen Bildchen des Helden mit <code>self.w = 32</code> und <code>self.h = 32</code><sup>1</sup> auf die doppelte Größe aufgeblasen, was den Retro-Effekt noch einmal betont.</p>
<p>Jetzt gilt es nur noch, in der <code>update()</code>-Methode die korrekten Richtungen abhängig davon, welche Taste gedrückt ist, zu implementieren:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RIGHT"</span>):</span>
<span id="cb2-3">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb2-4">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span></span>
<span id="cb2-5">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_run_right"</span></span>
<span id="cb2-6">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb2-7">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_right"</span></span>
<span id="cb2-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LEFT"</span>):</span>
<span id="cb2-11">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb2-12">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span></span>
<span id="cb2-13">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_run_left"</span></span>
<span id="cb2-14">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb2-15">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_left"</span></span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UP"</span>):</span>
<span id="cb2-19">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb2-20">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span></span>
<span id="cb2-21">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_run_up"</span></span>
<span id="cb2-22">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb2-23">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_up"</span></span>
<span id="cb2-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> check_input(keyboard, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DOWN"</span>):</span>
<span id="cb2-27">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed</span>
<span id="cb2-28">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span></span>
<span id="cb2-29">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_run_down"</span></span>
<span id="cb2-30">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check Border</span></span>
<span id="cb2-31">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb2-32">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-33">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_down"</span></span>
<span id="cb2-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb2-35">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_right"</span></span>
<span id="cb2-36">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_left"</span></span>
<span id="cb2-37">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"up"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_up"</span></span>
<span id="cb2-38">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_down"</span></span></code></pre></div>
<p>Da ich wollte, daß der Rogue auch stehen bleibt und nicht auf der Stelle zappelt, wenn die Taste wieder losgelassen wird, lasse ich im letzten <code>else</code> die einzelnen idle-Sprite-Animationen für die jeweilige Richtung anzeigen<sup>2</sup>.</p>
<p>Die Klasse <code>Hero</code> leistet im großen und ganzen die Hauptarbeit und sieht so aus:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Hero:</span>
<span id="cb3-2">  </span>
<span id="cb3-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb3-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb3-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero_idle_down"</span></span>
<span id="cb3-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span></span>
<span id="cb3-10">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.speed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-11">    </span>
<span id="cb3-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># siehe oben</span></span>
<span id="cb3-14">  </span>
<span id="cb3-15">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb3-16">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span></code></pre></div>
<p>Dadurch ist der Hauptteil des Sketches wieder recht kurz geraten:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb4-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> hero</span>
<span id="cb4-3">  hero <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Hero()</span>
<span id="cb4-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(screen.width//4)</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb4-7">  hero.update()</span>
<span id="cb4-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard.press, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPACE"</span>):</span>
<span id="cb4-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("RESTART")</span></span>
<span id="cb4-10">    init()</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb4-13">  screen.clear(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(89, 127, 30"</span>)</span>
<span id="cb4-14">  hero.draw()</span>
<span id="cb4-15"></span>
<span id="cb4-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_input(obj, val):</span>
<span id="cb4-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(obj, val):</span>
<span id="cb4-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> obj[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span></code></pre></div>
<p>Das war es auch schon, das komplette Tutorial inklusive Quellcode und aller verwendeten Assets habe ich wieder auf den <a href="https://microstudio.io/i/kantel/roguelike01python/">Seiten von microStudio veröffentlicht</a>. Ihr könnt es Euch dort anschauen, klonen, herunterladen und/oder damit eigene Varianten erstellen.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Ihr seht, mein Held ist in seiner eigenen Klasse gekapselt.↩︎</p></li>
<li id="fn2"><p>Das passiert momentan bei gedrückter Taste in den mit <code># Check Border</code> kommentierten Code-Teilen, wo mein Held gestoppt und auf die exakte Randposition gesetzt wird.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Spieleprogrammierung</category>
  <category>Tiles und Sprites</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/</guid>
  <pubDate>Mon, 24 Mar 2025 19:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032401_microstudio_anim_sprites/images/rogue0.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>MicroStudio: Video-Tutorials zum Wochenende</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032201_microstudio_tutorials/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54401197019/"><img src="https://kantel.github.io/posts/2025032201_microstudio_tutorials/images/jugglingpython2-b.jpg" class="img-fluid"></a></p>
<p>Da ich vermutlich in den nächsten Wochen (oder sogar Monaten) noch einiges mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> und Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> anstellen möchte, habe ich bei YouTube mal nachgeschaut, was das Netz denn so an Tutorials zu microStudio anbietet. Die Auswahl war nicht gerade üppig, so daß ich sie nahezu komplett hier im <del>Blog</del> Kritzelheft auflisten kann:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/jQ744nrh8uE?si=Xh3V5gs-kmr8MR0l" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>GameFromScratch</strong> ist immer die erste Adresse, wenn es um Game Engines geht. Und auch im Fall von microStudio enttäuschte mich der Kanal nicht. Neben dem obigen Beitrag »<a href="https://gamefromscratch.com/microstudio-game-engine-adds-desktop-versions/">MicroStudio Game Engine Adds Desktop Versions</a>« hatte er noch zwei andere Beiträge im Portfolio: »<a href="https://gamefromscratch.com/microstudio-game-engine-open-sourced/">microStudio Game Engine Open Sourced</a>« und »<a href="https://gamefromscratch.com/microstudio-game-engine-hands-on/">microStudio Game Engine Hands-On</a>«. Zu beachten ist, daß die Beiträge in <em>GameFromScratch</em> eher Reviews und keine Tutorials sind.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/1cd-IWCEMoI?si=L6eeDpjoK2-wQQWX" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>mrLman</strong>: Die Tutorials von <em>mrLman</em> werden auch auf der <a href="https://microstudio.dev/tutorials/">Website von microStudio</a> angeboten. Zu ihnen gehört auch die Playlist »<a href="https://www.youtube.com/playlist?list=PLKKvmO6ujLbJhyQTkkhjnXmzCVHXWGC66">Microstudio Game Elements</a>«, die aus 24 eher kurzen Videos besteht, die jeweils ein Thema behandeln.</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/baeSkAv8sg8?si=YhC60XYex9H7R_Mz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>Makercademy</strong>: Aus nur drei, aber dafür sehr umfangreichen Videos besteht die Liste »<a href="https://www.youtube.com/playlist?list=PLBe3We7ebJUQgy3ZRJfIcc2LH4sVOjPgg">Design, Code, Play</a>« der <em>Makercademy</em>. Neben dem obigen »<a href="https://www.youtube.com/watch?v=baeSkAv8sg8">Make a simple game in Microstudio</a>« (1&nbsp;Stunde, 41 Minuten) besteht sie noch aus den Videos »<a href="https://www.youtube.com/watch?v=Y1aoBTP-iuQ">Code a Jumping Obstacles Game</a>« (54&nbsp;Minuten) und »<a href="https://www.youtube.com/watch?v=n27wp5C2vl0">Build a Simple Platformer Level</a>« (50 Minuten).</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/Eaf9VsB3WLU?si=YT-OSWFyGVRDhcUr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<p><strong>Mr.&nbsp;Play</strong>: Den Abschluß bildet die Playlist »<a href="https://www.youtube.com/playlist?list=PLIos1eMgRASadQvFm8p_QX7CiSRCFJkbL">microStudio</a>« von <em>Mr.&nbsp;Play</em>. Sie besteht aus neun extrem kurzen Videos (alle unter zwei Minuten).</p>
<p>Zu beachten ist, daß alle diese Tutorials die Programmierung mit microStudios eigener Programmiersprache microScript (einer Lua-ähnlichen Sprache) behandeln, Tutorials zu microScript mit Python/Brython habe ich keine gefunden. Da müsst Ihr schon auf die <a href="https://kantel.github.io/index.html#category=microStudio">Beiträge hier im <em>Schockwellenreiter</em></a> zurückgreifen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54401197019/">Juggling Python</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comic Style. A python with horn-rimmed glasses juggles a few balls with painted animal heads in a circus tent in front of an animal audience</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Nature of Code</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025032201_microstudio_tutorials/</guid>
  <pubDate>Sat, 22 Mar 2025 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032201_microstudio_tutorials/images/jugglingpython2.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>MicroStudio und Python: Bouncing Heads</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032101_microstudio_bouncing_heads/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54401021036/"><img src="https://kantel.github.io/posts/2025032101_microstudio_bouncing_heads/images/jugglingpython-b.jpg" class="img-fluid"></a></p>
<p>Natürlich konnte ich meine <a href="https://kantel.github.io/posts/2025031901_microstudio_bouncing_balls/">verbesserte Version der kollidierenden Bälle</a> von vorgestern nicht einfach so stehen lassen, ohne nicht noch ein paar Spielereien damit anzustellen. Also habe ich mir wieder das freie (<a href="https://kenney.nl/assets/animal-pack-redux">CC0</a>) <a href="https://kenney.nl/assets/animal-pack-redux">Animal Pack Redux</a> aus dem schier unerschöpflichen Fundus von Kenney geschnappt und statt der Bälle ein paar Tierköpfe sich gegenseitig die Schädel an- und wieder abstoßen lassen:</p>
<iframe src="bouncingheads/index.html" class="if16_9" name="Bouncing Heads">
</iframe>
<p>Als Entwicklungsumgebung habe ich wieder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> mit Python/<a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/brython.html">Brython</a> benutzt und der Quellcode unterscheidet sich nur unwesentlich von der Version von Mittwoch: Zuerst die Klasse <code>Head</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint, choice</span>
<span id="cb1-2"></span>
<span id="cb1-3">heads_im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bear"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"buffalo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chick"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chicken"</span>,</span>
<span id="cb1-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cow"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"crocodile"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dog"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duck"</span>,</span>
<span id="cb1-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elephant"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"frog"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"giraffe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"goat"</span>,</span>
<span id="cb1-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gorilla"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hippo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horse"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"monkey"</span>,</span>
<span id="cb1-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"moose"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"narwhal"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"owl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"panda"</span>,</span>
<span id="cb1-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parrot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pig"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rabbit"</span>,</span>
<span id="cb1-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rhino"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sloth"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snake"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"walrus"</span>,</span>
<span id="cb1-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whale"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zebra"</span>]</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> Head:</span>
<span id="cb1-13">  </span>
<span id="cb1-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-15">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb1-16">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-17">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d),</span>
<span id="cb1-18">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d))</span>
<span id="cb1-19">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-20">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector2(x, y)</span>
<span id="cb1-21">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-22">    dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> randint(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-23">    dy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-24">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PVector2(dx, dy)</span>
<span id="cb1-25">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gravity <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb1-26">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> choice(heads_im)</span>
<span id="cb1-27">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stroke <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(0, 0, 0)"</span></span>
<span id="cb1-28">    </span>
<span id="cb1-29">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-30">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.gravity</span>
<span id="cb1-31">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel)</span>
<span id="cb1-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check border</span></span>
<span id="cb1-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d:</span>
<span id="cb1-34">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d</span>
<span id="cb1-35">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d:</span>
<span id="cb1-37">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d</span>
<span id="cb1-38">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d:</span>
<span id="cb1-40">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen.width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.d</span>
<span id="cb1-41">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-42">    </span>
<span id="cb1-43">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-44">    screen.drawSprite(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.im, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h)</span>
<span id="cb1-45">    screen.drawRound(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.loc.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.h, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.stroke)</span></code></pre></div>
<p>Hier wurden lediglich die Kreis der Vorgängerversion durch zufällig ausgewählte Sprites aus dem Kenney-Pack ersetzt. Und auch das Hauptprogramm unterscheidet sich ebenfalls nur dadurch, daß die Kreise durch Köpfe ausgetauscht wurden:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> random <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> randint, choice</span>
<span id="cb2-2"></span>
<span id="cb2-3">heads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-4">NUM_HEADS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> init():</span>
<span id="cb2-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(NUM_HEADS):</span>
<span id="cb2-8">    heads.append(Head())</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update():</span>
<span id="cb2-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> head <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> heads:</span>
<span id="cb2-12">    head.update()</span>
<span id="cb2-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(heads)):</span>
<span id="cb2-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(heads)):</span>
<span id="cb2-15">      impact_vector <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heads[j].loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> heads[i].loc</span>
<span id="cb2-16">      d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> impact_vector.mag()</span>
<span id="cb2-17">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_circle_collision(heads[i], heads[j]):</span>
<span id="cb2-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make sure that the balls don't overlap</span></span>
<span id="cb2-19">        overlap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (heads[i].d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> heads[j].d))</span>
<span id="cb2-20">        diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> impact_vector</span>
<span id="cb2-21">        diff.limit(overlap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb2-22">        heads[i].loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> diff </span>
<span id="cb2-23">        heads[j].loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> diff </span>
<span id="cb2-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Swap the velocity of the colliding balls</span></span>
<span id="cb2-25">        heads[i].vel.x, heads[j].vel.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heads[j].vel.x, heads[i].vel.x</span>
<span id="cb2-26">        heads[i].vel.y, heads[j].vel.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heads[j].vel.y, heads[i].vel.y</span>
<span id="cb2-27">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> check_input(keyboard.press, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPACE"</span>):</span>
<span id="cb2-28">    heads.clear()</span>
<span id="cb2-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print("RESTART")</span></span>
<span id="cb2-30">    init()</span>
<span id="cb2-31"></span>
<span id="cb2-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw():</span>
<span id="cb2-33">  screen.clear(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(234, 218, 184)"</span>)</span>
<span id="cb2-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> head <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> heads:</span>
<span id="cb2-35">    head.draw()</span></code></pre></div>
<p>Dazu muß natürlich auch noch meine <a href="https://github.com/kantel/learningarcade/blob/master/noc/pvector.py">PVector2</a>-Bibliothek eingebunden werden (dich hier hier – um Platz zu sparen – nicht noch einmal abdrucke) und der Reiter <code>util</code> mit den zwei Hilfsfunktionen <code>check_input(obj, val)</code> und <code>is_circle_collision(obj1, obj2)</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_input(obj, val):</span>
<span id="cb3-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(obj, val):</span>
<span id="cb3-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> obj[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> is_circle_collision(obj1, obj2):</span>
<span id="cb3-7">  distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.dist([obj1.loc.x, obj1.loc.y], [obj2.loc.x, obj2.loc.y])</span>
<span id="cb3-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> obj1.d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> obj2.d:</span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb3-10">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
<p>Das <a href="https://microstudio.io/i/kantel/bouncingheads/">komplette Skript inklusive aller verwendeten Sprites</a> auf meinem microStudio-Account finden. Meine kleine »microStudio mit Python/Brython«-Reihe ist damit auf 15&nbsp;Beiträge angewachsen:</p>
<ul>
<li>MicroStudio und Python (Teil 1): <a href="https://kantel.github.io/posts/2024032201_microstudio_python_1/">Hallo Brython</a>!</li>
<li>MicroStudio und Python (Teil 2): <a href="https://kantel.github.io/posts/2024032401_microstudio_python_2/">Zombie Apokalypse</a></li>
<li>MicroStudio und Python (Teil 3): <a href="https://kantel.github.io/posts/2024032502_microstudio_python_3/">Dancing Crab</a></li>
<li>MicroStudio und Python (Teil 4): <a href="https://kantel.github.io/posts/2024032703_flying_badger_python/">Flying Badger</a></li>
<li>MicroStudio und Python (Teil 5): <a href="https://kantel.github.io/posts/2024032801_microstudio_noc_1/">PVector2 und »The Nature of Code«</a></li>
<li>MicroStudio und Python (Teil 6): <a href="https://kantel.github.io/posts/2024033102_bouncing_balls_microstudio/">Bouncing Balls</a></li>
<li>MicroStudio und Python (Teil 7): <a href="https://kantel.github.io/posts/2024040201_collision_detection_1/">Kollisionserkennung mit Kreisen</a></li>
<li>MicroStudio und Python (Teil 8): <a href="https://kantel.github.io/posts/2024040401_bouncing_birds/">Bouncing Birds</a></li>
<li>MicroStudio und Python (Teil 9): <a href="https://kantel.github.io/posts/2024040701_rect_collision/">Kollisionserkennung mit Rechtecken</a></li>
<li>MicroStudio und Python (Teil 10): <a href="https://kantel.github.io/posts/2024042301_bubbling_emojis/">Bubbly Emojis</a></li>
<li>MicroStudio und Python (Teil 11): <a href="https://kantel.github.io/posts/2024042702_microstudio_partikel/">Ein Partikelsystem</a></li>
<li>MicroStudio und Python (Teil 12): <a href="https://kantel.github.io/posts/2024042801_microstudio_particle2/">Ein Partikelsystem (2)</a></li>
<li>MicroStudio und Python (Teil 13): <a href="https://kantel.github.io/posts/2025031601_microstudio_nature_of_code/">Bouncing Duck</a> (mit Vektoren)</li>
<li>MicroStudio und Python (Teil 14): <a href="https://kantel.github.io/posts/2025031901_microstudio_bouncing_balls/">Bouncing Balls</a> (ohne Überlappungen)</li>
<li>MicroStudio und Python (Teil 15): Bouncing Heads</li>
</ul>
<p>Und ich habe immer noch neue Ideen, was ich mit microStudio alles so anstellen könnte. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54401021036/">Juggling Python</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored DC Comic Style. A python with horn-rimmed glasses juggles a few balls with painted animal heads in a circus tent in front of an animal audience</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>microStudio</category>
  <category>Python</category>
  <category>Brython</category>
  <category>Nature of Code</category>
  <category>Creative Coding</category>
  <guid>https://kantel.github.io/posts/2025032101_microstudio_bouncing_heads/</guid>
  <pubDate>Fri, 21 Mar 2025 17:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032101_microstudio_bouncing_heads/images/jugglingpython.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert wieder kritische Sicherheitslücken in Chrome</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2025032001_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/54370060323/"><img src="https://kantel.github.io/posts/2025032001_chrome_update/images/octopussy-b.jpg" class="img-fluid"></a></p>
<p>Das Mittwochs-Update kommt gewiss, auch wenn es erst am Donnerstag ist: Unser aller Datenkrake veröffentlichte eine Aktualisierung ihres Flaggschiffs Chrome in der Version 134 (134.0.6998.117/118) und schloss damit <a href="https://chromereleases.googleblog.com/2025/03/stable-channel-update-for-desktop_19.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="https://wwwuser.gwdguser.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/54370060323/">Octopussy</a></em>, erstellt mit <a href="https://openart.ai/home">OpenArt.ai</a>. Prompt: »<em>Colored french comic style, a sexy female robot evades from a gigantic data octopus</em>«. Modell: Flux (Pro), Style: None.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2025032001_chrome_update/</guid>
  <pubDate>Thu, 20 Mar 2025 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2025032001_chrome_update/images/octopussy.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
