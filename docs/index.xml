<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Fri, 16 Feb 2024 17:15:00 GMT</lastBuildDate>
<item>
  <title>Life is Life: Conways Game of Life in Python und P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021601_life_is_life/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53533306985/"><img src="https://kantel.github.io/posts/2024021601_life_is_life/images/life03-b.jpg" class="img-fluid"></a></p>
<p>Mit seinem »<a href="https://de.wikipedia.org/wiki/Conways_Spiel_des_Lebens">Spiel des Lebens</a>« <em>(Game of Life)</em> hat der britische Mathematiker <em><a href="https://de.wikipedia.org/wiki/John_Horton_Conway">John Horton Conway</a></em> 1970 eine Ikone der theoretischen Informatik und der Automatentheorie geschaffen, die auch <a href="https://mathematikalpha.de/game-of-life">heute noch fasziniert</a>. Aufgrund der einfachen Regeln ist dieses Spiel leich zu programmieren, überrascht aber doch immer wieder mit unerwarteten Ergebnissen. Hier zwei ganz frische Implementierungen, eine in Python und eine in JavaScript/P5.js:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/PpywbmIcUhM?si=bsoWVHrGQwWSWytd" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>In »<a href="https://www.youtube.com/watch?v=PpywbmIcUhM">Create Conway’s Game of Life in Paython</a>« wird eine <a href="https://realpython.com/courses/conway-game-of-life-python/">Implementierung gezeigt</a>, die auch <a href="https://realpython.com/conway-game-of-life-python/">im Terminal läuft</a>. Damit erinnert sie mich nicht nur an <em>Al Sweigart</em> legendärem »<a href="http://blog.schockwellenreiter.de/2022/08/2022082901.html">Big Book of Small Python Projects</a>« (der auf Seite 59ff ebenfalls eine Terminal-Implementierung von Life vorstellt), sondern durch den Einsatz der Herzchen (♥︎) auch an <em>Nick Caseys</em> bahnbrechenden Aufsatz »<a href="https://ncase.me/simulating/index_old.html">Simulating the World in Emojis</a>« aus dem Jahre 2016.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/lsWulRIWzdo?si=koJFVpneandoinbo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wenn ich an <em>Nick Caseys</em> Aufsatz denke, denke ich automatisch auch immer an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>, weil mit dem dort vorhandenen DOM-Modell sich sehr leicht Slider, Checkboxen oder andere GUI-Elemente in einen Sketch integrieren lassen. Daher möchte ich Euch auch noch das Video-Tutorial »<a href="https://www.youtube.com/watch?v=lsWulRIWzdo">Conway’s Game of Life</a>« vorstellen, das <em>Patt Vira</em> erst vor wenigen Stunden hochgeladen hat – zwar ohne DOM-Elemente, aber <em>Patt Viras</em> P5.js-Tutorials sind immer anschauenswert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/zH3eH3hlGoo?si=r5F7VQdLz139hHe3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, die Herzchen, Jörg, vergiß die verdammten Herzchen nicht. Wie könnte ich? Vor zwei Tagen war Valentins-Tag und aus diesem Anlaß hat <em>Patt Vira</em> mit »<a href="https://www.youtube.com/watch?v=zH3eH3hlGoo">Falling Hearts</a>« ein weiteres P5.js-Tutorial auf YouTube veröffentlicht – mit Herzchen bis zum Abwinken.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53533306985/">Conways Game of Life</a></em>, wie es die <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a> sieht. Prompt (ganz simpel): »<em>Conway’s Game of Life</em>«, Modell: Playground V2, Style: None.</p>



 ]]></description>
  <category>Creative Coding</category>
  <category>Informatik</category>
  <category>Python</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024021601_life_is_life/</guid>
  <pubDate>Fri, 16 Feb 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021601_life_is_life/images/life03.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Dancing Downtown (mit Scenario)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021501_dancing_downtown/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53530270222/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown00-b.jpg" class="img-fluid"></a></p>
<p>Es ist schon <a href="https://kantel.github.io/posts/2024012501_dock_of_the_bay/">etwas länger her</a>, seitdem ich Euch das letzte Mal auf diesen Seiten mit einer Galerie von Bildern, die eine gekünstelte Intelligenzia verbrochen hatte, langweilte. Doch nachdem ich heute für ein anderes Projekt ein Bild mit Sofas, die mit Menschen und Autos auf Neuköllns Straßen tanzen, benötigte, fand ich die Ergebnisse, die <a href="https://app.scenario.com/">Scenario</a> mir präsentierte, so nett, daß ich der Versuchung nicht widerstehen konnte:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53531508169/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531190366/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531507399/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53531189736/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531369128/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531368763/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53530281712/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531176731/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531597235/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown09.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53531596900/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53530268682/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown11.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Okay, das Ambiente erinnert mehr an ein mediterranes Städtchen denn an Neukölln (und das trotz des Stils »Belgian School Comic« – ich wußte gar nicht, daß Belgien am Mittelmeer liegt), aber Sofas sind da, Menschen sind da und Autos sind ebenfalls da. Mehr kann man von einer strunzdummen, künstlichen Intelligenz eigentlich nicht erwarten.</p>
<p>Und dank des »<a href="https://help.scenario.com/">Scenario Knowledge Centers</a>« und etlicher Tutorials, die die Macher von Scenario auf X (das früher einmal Twitter hieß) veröffentlichten, und die auf jeden Fall hilfreicher sind, als die offiziellen, meist sehr kryptischen Videos, verstehe ich so langsam, wie Scenario funktioniert. Vielleicht schaffe ich es doch noch, damit wirklich konsistente Charaktere zu entwickeln. <em>Still digging!</em></p>
<hr>
<p><strong>Bilder</strong>: <em>Dancing Downtown</em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>abandoned sofas+ and armchairs party and dance happily along with few people on the streets in downtown. there are a few cars on the street too</em>«. Negative Prompt: »<em>people, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, missing legs, extra legs+</em>«, Modell: Stable Diffusion XL, Style: Belgian School Comics.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <guid>https://kantel.github.io/posts/2024021501_dancing_downtown/</guid>
  <pubDate>Thu, 15 Feb 2024 19:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate für Adobe Reader und Acrobat</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021402_reader_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/"><img src="https://kantel.github.io/posts/2024021402_reader_update/images/femalereader-b.jpg" class="img-fluid"></a></p>
<p>Adobe liefert mit dem Update APSB24-07 wieder <a href="https://helpx.adobe.com/security/products/acrobat/apsb24-07.html">Korrekturen für Sicherheitslücken</a> im Reader und in Acrobat (unter Windows und Mac).</p>
<p>Das Update gelingt am einfachsten über den internen Update-Mechanismus. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/">Female Reader</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A young woman with red lips, blue eyes, slim, brown, curly hair and glasses in a colorful checked shirt and vest, short blue skirt and high heels. full body, sitting in an office in front of a computer. In the background are shelves with files and books. The sun shines through a large window. colored french comic style</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, gloves, backpack, shoulder bag, bag, (((shoulder bag)))</em>«, Modell: Stable Diffusion XL, Style: Illustrated Anime + Creepy Nordic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024021402_reader_update/</guid>
  <pubDate>Wed, 14 Feb 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021402_reader_update/images/femalereader.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 121 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021401_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53499388967/"><img src="https://kantel.github.io/posts/2024021401_chrome_update/images/datenkrake02202402-b.jpg" class="img-fluid"></a></p>
<p>Google veröffentlicht das Update der Version 121 (121.6167.184/185) seines Browsers Chrome und schließt damit auch wieder <a href="https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop_13.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53499388967/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A female robot flees from a gigantic data octopus</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024021401_chrome_update/</guid>
  <pubDate>Wed, 14 Feb 2024 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021401_chrome_update/images/datenkrake02202402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Das Abenteuer Bitsy geht weiter: Neue Tutorials von Dan Cox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021302_bitsy_tuts_2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53527691505/"><img src="https://kantel.github.io/posts/2024021302_bitsy_tuts_2/images/bitsyplayground-b.jpg" class="img-fluid"></a></p>
<p>Es sind nicht nur die interaktiven Geschichten mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, die mich umtreiben, sondern auch das »Abenteuer <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>« geht weiter, denn <em>Dan Cox</em> hat seine Tutorialreihe in seiner neu gestarteten <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6bprFqUBCOEWT47xqYmVQ4">Playlist zu Bitsy 8</a> mit neuen Videos gefüttert. Seit meiner <a href="https://kantel.github.io/posts/2024020102_bitsy_tuts/">ersten Erwähnung</a> vor knapp zwei Wochen sind diese Tutorials ganz frisch hinzugekommen:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=UmCYKlwR7ro">Crafting Dialogue</a> und <a href="https://www.youtube.com/watch?v=xv228U3mUAQ">Sequence, Cycle, and Shuffle Lists</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=ajZRsuhx9rU">Example: Having Conversations</a>.</li>
<li><a href="https://www.youtube.com/watch?v=cjfPvPzUJ0o">Items and Inventory</a> und <a href="https://www.youtube.com/watch?v=Br25SvLmUTQ">Branching List using Items</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=Zgyj9iYtPWQ">Collecting Papers</a>.</li>
<li><a href="https://www.youtube.com/watch?v=_FIfHbT-Kqo">Locking and Unlocking Exits</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=izSZHCalpbA">Using Keys</a>.</li>
<li><a href="https://www.youtube.com/watch?v=Y902SYlQs0I">Exit Interaction Actions</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=oMeMqgBHzGA">Teleporting Puzzle</a>.</li>
</ul>
<p>Wieder schafft es <em>Dan</em>, die Faszination dieser Engine in seinen Tutorials herüberzubringen und motiviert mich damit – nicht nur, weil ich die <a href="https://ledoux.itch.io/bitsybox">Bitsybox</a> im letzten Monat <a href="https://kantel.github.io/posts/2024010702_bitsybox/">entdeckt hatte</a> – auch meine Experimente mit dieser minimalistischen Engine fortzusetzen (genauer: endlich wieder aufzunehmen).</p>
<p>Auch von seinen <a href="https://kantel.github.io/posts/2024020201_harlowe_tuts/">Twine-Tutorials mit Harlowe</a> gibt es Updates. Darauf werde ich in einem separaten Beitrag in den nächsten Tagen zurückkommen.</p>



 ]]></description>
  <category>Bitsy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024021302_bitsy_tuts_2/</guid>
  <pubDate>Tue, 13 Feb 2024 20:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021302_bitsy_tuts_2/images/bitsyplayground.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Notion</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021301_notion/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53527238053/"><img src="https://kantel.github.io/posts/2024021301_notion/images/notion-b.jpg" class="img-fluid"></a></p>
<p><strong><a href="https://www.notion.so/de-de">Notion</a></strong> ist eine Freemium-Webanwendung (proprietär, aber für Privatanwender kostenlos) für Produktivität und Notizen, die von <em>Notion Labs Inc.</em> entwickelt wurde. Sie bietet Organisationstools wie Aufgabenverwaltung, Projektverfolgung, Aufgabenlisten und Lesezeichen.</p>
<p>Da in meinem Workflow zwischen Zettelkasten (<a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a>) und Publikationswerkzeug (<a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/pandoc.html">Pandoc</a> und <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>) immer noch eine Lücke für ein Entwurfswerkzeug klafft, habe ich mir testweise mal einen Notion-Account gegönnt und auch die Desktop App heruntergeladen.</p>
<p>Wohlgemerkt, das ist erst einmal ein Test und sonst gar nichts. Aber wie immer in solchen Fällen habe ich dem Teil <strong><a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/notion.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert. <em>Still digging!</em></p>



 ]]></description>
  <category>Zettelkasten</category>
  <category>Notion</category>
  <guid>https://kantel.github.io/posts/2024021301_notion/</guid>
  <pubDate>Tue, 13 Feb 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021301_notion/images/notion.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es geht noch geiler: Web2Executable</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021201_web2exec/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53524181232/"><img src="https://kantel.github.io/posts/2024021201_web2exec/images/web2exe-b.jpg" class="img-fluid"></a></p>
<p>Vor <a href="https://kantel.github.io/posts/2024010702_bitsybox/">etwa einen Monat</a> berichtete ich über die <a href="https://ledoux.itch.io/bitsybox">Bitsybox</a>, einen Emulator für Windows, macOS und Linux, mit dem man Bitsy-Spiele »native« auf den genannten Plattformen abspielen kann, und kommentiere dies mit »wie geil ist das denn?«</p>
<p>Es geht aber noch geiler: Denn bei meiner <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">jüngsten Erkundung</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> stolperte ich auch über den Beitrag »<a href="https://kirill-live.itch.io/tuesday-js/devlog/241616/creation-html-desctop-app-for-windows-macos-and-linux">Creation html desctop app for windows macos and linux</a>«. Im Kontext, in dem er stand, vermutete ich zunächst, daß es um eine Anwendung ging, die Tuesday-JS-Spiele für den Desktop fit machen kann. Aber <a href="https://github.com/nwutils/Web2Executable">Web2Executable</a>, das Teil, um das es in diesem Beitrag geht, kann viel mehr – es kann nahezu jede JavaScript/HTML-App mit Hilfe von Node (genauer: <a href="https://github.com/nwutils/Web2Executable">NW.js</a> (das früher mal <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/nodewebkit.html">Node Webkit</a> hieß)), in eine Standalone-App für Windows, macOS und Linux verwandeln, ohne daß man einen Rechner mit den genannten Betriebssystemen besitzen muß (Okay, mindestens auf einen Rechner muß man natürlich Zugriff haben, aber auf dem kann man die Binaries auch für die »fremden« Betriebssysteme erzeugen).</p>
<p>Das alles ist natürlich mehr als geil: Nicht nur, daß ich damit Desktop-Apps für Tuesday JS erzeugen kann, sondern auch aus interaktiven Geschichten mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink</a>, oder Spielen mit der <a href="https://kantel.github.io/posts/2024021001_ctJS/">jüngst entdeckten</a> JavaScript-Spiele-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">Ct.js</a> könnte ich »native« Anwendungen »stricken«. Und das ist noch nicht alles: Wegen meiner frisch erwachten JavaScript Begeisterung träume schon von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Applikationen auf dem Desktop, die die DOM-Erweiterungen von P5.js nutzen, und noch an vieles mehr. Die Möglichkeiten sind nahezu grenzenlos. <em>Still dreaming!</em></p>
<p>Aber erst einmal habe ich aus meinem <a href="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/">gestern erstellten</a> Tuesday-JS-Prototypen eine Desktop-Anwendung erstellt. Die Mac-Version läuft, da ich jedoch keine Hardware habe, um die Linux- oder Windows-Version zu testen, habe ich alles <a href="https://kantel.itch.io/poirots-abenteuer">auf Itch.io hochgeladen</a> und bitte Euch da draußen, das auch mal unter Windows oder Linux anzuwerfen (Vorsicht, die Downloads sind naturgemäß (133 MB bis 157 MB) recht fett). Über Erfolgs- oder Mißerfolgsberichte in meinen Kommentaren wäre ich dankbar.</p>
<p>Wenn Ihr das Teil selber testen wollt, gibt es zwei Hürden zu überwinden: Die jüngste <a href="https://github.com/nwutils/Web2Executable/releases/tag/v0.7.2b">Version 0.7.2b</a> gibt es momentan als Binariy nur für Windows, Nutzer »richtiger« Betriebssysteme müssen auf die <a href="https://github.com/nwutils/Web2Executable/releases/tag/v0.7.1b">Version 0.7.1b</a> zurückgreifen. Und Apple-Nutzer kämpfen wie gewohnt mit der Überfürsorge ihres Betriebssystems, das den Download als potentiell gefährlich einstuft. Dagegen hat vermutlich jede und jeder von Euch da draußen seine eigene Strategie entwickelt.</p>
<p>Natürlich habe ich <strong><a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/web2executable.html">Web2Executable</a></strong> auch eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert.</p>
<p><strong>War sonst noch was?</strong> Ach ja, wer lieber mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/electron.html">Electron</a> statt mit NW.js hantiert, für den hat der gleiche Autor das Tool <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/electrify.html">Electrify</a> entwickelt, das ähnlich wie Web2Executable funktioniert. Aber diese Anwendung ist seit etlichen Jahren verwaist und wird nicht mehr weiterentwickelt. Aber mir persönlich gefiel sowieso <a href="http://blog.schockwellenreiter.de/essays/nodewebkit01.html">Node Webkit/NW.js besser</a> als Electron, denn der Ansatz, zuerst eine HTML-Seite für die Applikation zu schreiben und dann das JavaScript drumherum zu stricken, <a href="http://blog.schockwellenreiter.de/2017/12/2017121105.html">liegt mir mehr</a>, als ausgehend von einer JavaScript-Datei <code>main.js</code> die Applikation zu erzeugen. Aber das ist vermutlich Geschmackssache – beide Anwedungen erzeugen – das liegt ein der Natur der Sache – gleich fette Dateien.</p>



 ]]></description>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024021201_web2exec/</guid>
  <pubDate>Mon, 12 Feb 2024 19:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021201_web2exec/images/web2exe.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Erste Schritte mit Tuesday JS</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53523114788/"><img src="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/images/poirottuesday-b.jpg" class="img-fluid"></a></p>
<p>Ich habe meine <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">Ankündigung vom Donnerstag</a> wahrgemacht und so etwas wie erste Schritte mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> unternommen, der freien (Apache-2.0-Lizenz) JavaScript-basierten Engine für <em>Visual Novels</em>, interaktive Geschichten und anderes. Und wenn ich ehrlich bin: Trotz der für mich ungewohnten Klicki-Bunti-Oberfläche hat es nicht wirklich wehgetan, sondern sogar ein wenig Spaß gemacht.</p>
<p>Zwar habe ich mich häufig – trotz der <a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial">Anleitung</a> – durch die Menüs wühlen müssen und einiges auch nur durch <em>Trial and Error</em> erreicht, aber <em>voilà</em>, hier ist er: Mein erster, echter Versuch mit Tuesday&nbsp;JS (und ein Nachbau meines <a href="http://blog.schockwellenreiter.de/2021/10/2021101502.html">ersten Ren’Py-Tutorials</a>):</p>
<iframe src="anim/index.html" width="640" height="366" name="Tuesday JS 1st Steps">
</iframe>
<p>Wie ich schon einmal schrieb, ist das Geniale an dieser Engine, daß sich die fertigen Ergebnisse problemlos in jede Webseite einbinden lassen und es damit ermöglicht, auch kleine Web-Comics oder ähnliche Experimente zu veröffentlichen. Ich werde darüber noch ein paar mal schlafen müssen.</p>
<p>Und wenn ich wirklich verstanden habe, wie diese Maschine funktioniert, wird es auch kleine Tutorials dazu hier im <em>Schockwellenreiter</em> geben. <em>Still digging!</em></p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/</guid>
  <pubDate>Sun, 11 Feb 2024 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/images/poirottuesday.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rembg - Kann die KI auch weiße Kaninchen?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021101_white_rabbit/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53520935501/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit_bgrem-b.jpg" class="img-fluid"></a></p>
<p>Gestern hatte ich mir <a href="https://kantel.github.io/posts/2024020702_rembg/">noch einmal Rembg</a> vorgeknöpft, denn mich interessierte natürlich brennend die Frage, ohne deren Antwort Ihr vermutlich auch nicht mehr ruhig schlafen könnt: Kann die gekünstelte Intelligenzia auch weiße Kaninchen freistellen? Spoiler: Sie kann – wenn auch mit Abstrichen.</p>
<p>Die Frage ist nicht so unsinnig, wie es zunächst scheint. Denn vermutlich ist die KI, die hinter <a href="https://github.com/danielgatis/rembg">Rembg</a> werkelt, mit Bildern von Menschen trainiert worden. Daher ist die Frage »Kann das Teil auch etwas anderes als Menschen freistellen?« durchaus berechtigt. Um es der KI nicht allzu schwer zu machen, habe ich als Testobjekt ein anthropomorphes weißes Kaninchen ausgewählt, dessen Bilder ich schon <a href="https://kantel.github.io/posts/2023102601_big_apple_patchday/">im Oktober letzten Jahres</a> von der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/comicfactory.html">AI Comic Factory</a> habe generieren lassen.</p>
<p>Dabei hat sich die KI ganz wacker geschlagen. Die Fehler in den freigestellten Bildern sind sicher zum großen Teil darauf zurückzuführen, daß der Konstrast zwischen Vorder- und Hintergrund zu gering war:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53520073552/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53521396730/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53520967381/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53520967381/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit04.jpg" class="img-fluid"></a></p>
<p>Trotzdem scheint die KI bei den freigestellten Kaninchen doch größere Probleme als bei Bildern von Menschen zu haben (so werden zum Beispiel die »Ohren« des Sessels als zum Kaninchen gehörend erkannt) – auch wenn sie ebenfalls im Comic-Stil gezeichnet sind. Jedenfalls scheinen auch bei Rembg durchaus noch Tests notwendig zu sein, vor allem wenn man so alltägliche Gegenstände wie Hexenbesen, Giftflaschen oder Zauberbücher freistellen will.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/65LQ1v-sidU?si=mLIaU6ov722eyDvw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Für diese Tests habe ich eine Erweiterung in meinem Skript eingebaut, die ich beim User <em>Gravitar</em> in seinem Video »<a href="https://www.youtube.com/watch?v=65LQ1v-sidU">Python Tutorial deutsch, Objekte in Photos freistellen</a>« gefunden habe: Er läßt beide Bilder in einer Art »Vorher - Nacher«-Ansicht in einem Fenster anzeigen. Das mußte ich natürlich <em>stante pede</em> meinem Skipt ebenfalls gönnen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> rembg</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-5"></span>
<span id="cb1-6">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images"</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whiterabbit03_02.png"</span>)</span>
<span id="cb1-9">output_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whiterabbit03_02_output.png"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the input image</span></span>
<span id="cb1-12">input_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(input_path)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input image to a numpy array</span></span>
<span id="cb1-15">input_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_image)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply background removal using rembg</span></span>
<span id="cb1-18">output_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rembg.remove(input_array)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a PIL Image from the output array</span></span>
<span id="cb1-21">output_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(output_array)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the output image</span></span>
<span id="cb1-24">output_image.save(output_path)</span>
<span id="cb1-25">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGBA'</span>, (input_image.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, input_image.height))</span>
<span id="cb1-26">result.paste(input_image, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-27">result.paste(output_image, (input_image.width, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-28">result.show()</span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p><em>Gravatar</em> ist die Idee zu diesem Video durch <a href="https://kantel.github.io/posts/2024020702_rembg/">meinen Beitrag</a> hier in diesem ~<del>Blog</del>~ Kritzelheft gekommen, worauf er auch in seinem Video hinweist. Das war <a href="http://blog.schockwellenreiter.de/2022/10/2022101101.html">nicht das erste Mal</a> und ich freue mich natürlich immer über Feedback. Und noch ein Hinweis: <code>PIL</code> war ursprünglich der Name der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pil.html">Python Image Library</a>, die lange Jahre so etwas wie ein Standard für Bildbearbeitung in Python war. Aus Lizenzgründen war sie jedoch nie Bestandteil der Standardbibliothek, sondern mußte separat installiert werden. Seit etlichen Jahren wird sie jedoch nicht mehr weiterentwickelt und läuft daher auch nicht mehr unter Python&nbsp;3. Um diesem unerfreulichen Umstand abzuhelfen, hat eine Gruppe von Enthusiasten eine »befreundete« <em>(friendly)</em> Fork <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> ins Leben gerufen, die weitestgehen aufrufkompatibel zu PIL sein will. Jedoch sollte man – um Verwirrung zu vermeiden – nicht mit <code>import PIL</code> arbeiten, sondern mit <code>from PIL import Image</code>.</p>
<hr>
<p><strong>Bilder</strong>: Die Kaninchenbilder wurden im Original mit der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/comicfactory.html">AI Comic Factory</a> erstellt. Prompt: »<em>a white rabbit with a pocket watch in his hand, wearing jacket and west, and a marabou with looking glasses, sitting on a coffeetable in the zoo</em>«, Style: Franco-Belgian</p>



 ]]></description>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Pillow</category>
  <guid>https://kantel.github.io/posts/2024021101_white_rabbit/</guid>
  <pubDate>Sun, 11 Feb 2024 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit_bgrem.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Ct.js – eine Spiele-Engine in pure JavaScript</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021001_ctJS/</link>
  <description><![CDATA[ 




<p><a href="https://raw.githubusercontent.com/ct-js/ct-js/develop/branding/GithubHeader.png"><img src="https://kantel.github.io/posts/2024021001_ctJS/images/ctjs_banner-b.jpg" class="img-fluid"></a></p>
<p>Soeben trudelte in meinem Feedreader die Meldung herein, daß <a href="https://ctjs.rocks/">Ct.js</a>, eine kleine, feine und vor allem freie (MIT-Lizenz) JavaScript-Game-Engine, in der <a href="https://ctjs.rocks/changelog/">Version 4.0</a> freigegeben wurde. Ich hatte das Teil vor etwa zwei Jahren schon einmal auf dem Schirm, aber nicht weiter beachtet. Nun aber – mit meiner frisch erwachten Begeisterung für JavaScript – finde ich, daß ich das Teil unbedingt einmal testen sollte.</p>
<p>Denn es behauptet von sich, eine 2D-Game-Engine mit hochwertiger Dokumentation, visuellen Tools für die Asset-Verwaltung und einem intelligenten Code-Editor, alles integriert in einer IDE, zu sein. Dammit ich meine guten Vorsätze nicht vergesse, habe ich ihm erst einmal <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert.</p>
<p>Auf der eigenen Homepage macht das Teil massiven Gebrauch von den freien (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) <a href="https://www.kenney.nl/assets">Kenney-Game-Assets</a> (siehe auch Bannerbild oben). Das brachte mich auf eine Idee: Wenn ich rechtzeitig mit meinen Tests der Engine beginne und mit ihr ein wenig vertraut bin, könnte ich vielleicht damit an der <a href="https://kantel.github.io/posts/2024012901_kenney_jam_2024/">Kenney Jam 2024</a> teilnehmen. Die Idee hat einen gewissen Charme. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <guid>https://kantel.github.io/posts/2024021001_ctJS/</guid>
  <pubDate>Sat, 10 Feb 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021001_ctJS/images/ctjs_banner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Konsistente Charaktere und Künstliche Intelligenz</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020902_ki_kons_char/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53518059577/"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/entrancehallmockup-b.jpg" class="img-fluid"></a></p>
<p>Es ist ziemlich schwierig, mit den derzeitigen Werkzeugen der gekünstelten Intelligenzia wenigstens einigermaßen konsistente Charaktere zu generieren. Zwar gibt es auf YouTube eine große Anzahl von Videos, die behaupten, Lösungen für das Problem gefunden zu haben, jedoch ist das, was sie unter »Charakterkonsistenz« verstehen, meist weit von dem entfernt, was man zum Beispiel bei Avataren für eine <em>Visual Novel</em> benötigt.</p>
<p>Bei interaktiven Geschichten, die man etwa mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erstellt, kann man das Problem meistens großzügig ignorieren und einfach hoffen, daß der Leserin/Spielerin oder dem Leser/Spieler die Brüche in den Zeichnungen nicht störend auffallen, da meist in der Regel die Abbildung je auf einer separaten Seite für sich alleine steht (vergleiche die <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Smashing Pumpkins</a>, wo ich wild Bilder zusammengemixt hatte). Aber zum Beispiel bei <em>Visual Novels</em> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a> sieht die Sache schon anders aus.</p>
<p>Und da ich momentan an <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">ersten Tests mit Tuesday&nbsp;JS</a> arbeite, wurde ich mit dem Problem konfrontiert, und ich glaube, eine Lösung gefunden zu haben, die mich erst einmal zufriedenstellt. Für diesen Prototypen habe ich zwei Charaktere (einen Privatdetektiv und ein Zimmermädchen) mit <a href="https://app.scenario.com/">Scenario</a> generiert (ich habe jeweils bestimmt je 100 Versuche gestartet, bis ich endlich mit den Ergebnissen zufrieden war).</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53515278291/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid_orig.jpg" class="img-fluid" alt="Zimmermädchen"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53517612235/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye_orig.jpg" class="img-fluid" alt="Privatdetektiv"></a></p>
<p>Diese Bilder habe ich dann in <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> importiert und als Grundlage für ein <em>»Image to Image« Refinement</em> genommen (das geht auch in Scenario, aber ich bin momentan einfach mit DreamStudio vertrauter – die vielen LoRAS in Scenario verwirren mich einfach, da greife ich doch lieber auf das gewohnte <em>Comic Book</em> zurück). Dort habe ich dann mit dem gleichen Prompt Variationen generiert, in dem ich an zweiter Position den Prompt um die gewünschten <em>facial expressions</em> ergänzt hatte (zum Beispiel <em>angry</em>, <em>confused</em>, <em>sad</em>, <em>smiling</em> oder <em>talking</em>). Und weil ich den Detektiv eigentlich ohne Brille haben wollte, habe ich seinem Negativ-Prompt noch ein <em>looking glass</em> spendiert. Nicht alle Bilder waren produktionsreif, aber die besten sahen so aus – bei dem Zimmermädchen (Auswahl):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53519145519/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid01.jpg" class="img-fluid" alt="Zimmermädchen sehr traurig"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519142594/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid02.jpg" class="img-fluid" alt="Zimmermädchen sprechend"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53518827531/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid03.jpg" class="img-fluid" alt="Zimmermädchen fröhlich"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53519248330/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid04.jpg" class="img-fluid" alt="Zimmermädchen verwirrt"></a>&nbsp;<span class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid05.jpg" class="img-fluid" alt="Zimmermädchen verärgert"></span></p>
<p>Oder bei dem Detektiv (ebenfalls nur eine Auswahl):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53519169229/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye01.jpg" class="img-fluid" alt="Privatdetektiv sehr traurig"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519168809/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye02.jpg" class="img-fluid" alt="Privatdetektiv sprechend"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53517964722/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye03.jpg" class="img-fluid" alt="Privatdetektiv fröhlich"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53519012558/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye04.jpg" class="img-fluid" alt="Privatdetektiv verwirrt"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519156939/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye05.jpg" class="img-fluid" alt="Privatdetektiv verärgert"></a></p>
<p>Diese Bilder habe ich dann mit dem <a href="https://kantel.github.io/posts/2024020702_rembg/">kürzlich entdecken Rembg</a> vom Hintergrund freigestellt und kann sie nun als Avatare in (m)einer <em>Visual Novel</em> nutzen. Als <em>Proof of Concept</em> habe ich zwei von ihnen in das <em>Mockup</em> des Bannerbilds oben einkopiert.</p>
<p>Ich will ehrlich sein: Erstens ist es mit Sicherheit nicht das, was versierte Pixelartisten daraus hätten machen können (aber hey, es ist nur eine Maschine ohne Kreativität und Verstand, die ich damit beauftragt habe). Zweitens sind trotz aller Auswahl und vieler verworfener Versuche noch immer einige Inkonsistenzen zu entdecken. Einige davon habe ich schon für das obige Mockup mit der Bildbearbeitung meines Vertrauens zu eliminieren versucht, aber noch einmal – ich bin kein Pixelartist.</p>
<p>Trotzdem bin ich mit dem Ergebnis recht zufrieden und werde die Bildchen in meinem geplanten Tuesday&nbsp;JS Test einsetzen. Denn erst in der Anwendung zeigt sich, ob das Erreichte wirklich etwas taugt. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53518059577/">Mockup für eine Visual Novel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> und <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>.</p>



 ]]></description>
  <category>Künstliche Intelligenz</category>
  <category>Bilder</category>
  <category>Stable Diffusion</category>
  <category>DreamStudio</category>
  <category>Scenario</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <category>Tuesday JS</category>
  <guid>https://kantel.github.io/posts/2024020902_ki_kons_char/</guid>
  <pubDate>Fri, 09 Feb 2024 19:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020902_ki_kons_char/images/entrancehallmockup.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apple Patchday Februar 2024 – erste Lieferung</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020901_apple_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53482831798/"><img src="https://kantel.github.io/posts/2024020901_apple_patchday/images/apple20240201-b.jpg" class="img-fluid"></a></p>
<p>Die Firma aus Cupertino mit dem angebissenen Apfel im Logo hatte gestern ihren monatlichen Flickentag. Auch wenn sie vermutlich noch nicht alle Updates unters Volk gebracht hat, sind es doch so viele, daß ich sie wieder <em>en bloc</em> veröffentlichen möchte:</p>
<section id="apple-veröffentlicht-macos-sonoma-14.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sonoma-14.3.1">Apple veröffentlicht macOS Sonoma 14.3.1</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sonoma 14.3.1 freigegeben und korrigiert damit auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-ios-17.3.1-und-ipados-17.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.3.1-und-ipados-17.3.1">Apple veröffentlicht iOS 17.3.1 und iPadOS 17.3.1</h3>
<p>Wie angekündigt hat Apple das Update auf iOS 17.3.1 und iPadOS 17.3.1 bereitgestellt. Die Updates bieten Fehlerbehebungen und korrigieren kritische Sicherheitslücken.</p>
<p>Das Update auf auf iOS 17.3.1 iPadOS 17.3.1 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-10.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-10.3.1">Apple veröffentlicht watchOS 10.3.1</h3>
<p>Apple hat für die Apple Watch watchOS 10.3.1 bereitgestellt und behebt damit auch wieder Sicherheitsprobleme.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p>Die übrigen, noch fehlenden Updates für die älteren, noch unterstützten Betriebssystemversionen werden sicher in den nächsten Tagen folgen. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53482831798/">Schneewittchen, die Hexe und die Äpfel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>The evil witch gives Snow White a half-eaten apple in the fairytale forest</em>«, Modell: Stable Diffusion XL, Style: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020901_apple_patchday/</guid>
  <pubDate>Fri, 09 Feb 2024 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020901_apple_patchday/images/apple20240201.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kurios und kurioser: Tuesday JS v42 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020801_tuesdayjs_update/</link>
  <description><![CDATA[ 




<p><a href="https://kirilllive.github.io/tuesday-js/screenshots/script_structure.jpg"><img src="https://kantel.github.io/posts/2024020801_tuesdayjs_update/images/tuesday_script_struct-b.jpg" class="img-fluid"></a></p>
<p>Meine <a href="https://kantel.github.io/posts/2024020702_rembg/">gestrigen Experimente</a> mit dem Freistellen von Bildern hatte ich nicht grundlos durchgeführt. Denn gestern schneite in meinen Feedreader die Meldung herein, daß <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, die freie (Apache 2.0-Lizenz) JavaScript-basierte Engine für <em>Visual Novels</em> und interaktive Geschichten (und noch einiges mehr) in der <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/42.0.0">Version 4.2 erschienen</a> sei (bisher fuhr ich mit der Version 35, das (wichtige!) Update auf die <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/41.0.0">Version 41</a> vom 21. Dezember letzten Jahres hatte ich wohl im Festtagsstreß verschlafen).</p>
<p>Das erinnerte mich – unabhängig davon, daß die Engine sowieso auf meiner Testliste steht – an eine Idee von mir: Schon lange wollte ich mal so etwas wie kurze, interaktive Geschichten entwickeln, die man im Netz (also vor allem auch in diesem <del>Blog</del> Kritzelheft) einbinden und präsentieren kann, kurze, bebilderte Nachrichten, satirische Kommentare oder ähnliches. Ursprünglich hatte ich dafür <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> vorgesehen (hier der <a href="https://kantel.itch.io/neuklln-ist-arm">Link zu einem Prototyp</a> auf Itch.io), aber der Ballast, den Ren’Py in seiner HTML-Version mitschleppt, ist so fett, daß die Ladezeit länger dauert als die Zeit, die das Skript zur Ausführung benötigt. Da ist Tuesday JS doch bedeutend schlanker und schneller (hier ebenfalls ein <a href="https://kantel.itch.io/tuesday-js-test">Link zu einem Prototyp</a> auf Itch.io) und zusätzlich kann die Applikation direkt vom eigenen Server in die Webseite eingebunden werden (ohne von einem dritten Anbieter kommen zu müssen) und lädt auch recht schnell:</p>
<iframe src="anim/index.html" width="640" height="480" name="Tuesday JS Test">
</iframe>
<p>Daher will ich nun ein wenig mit Tuesday JS experimentieren und dazu gehört nicht nur, daß ich mir von einer gekünstelten Intelligenzia dafür die Bilder und Avatare erstellen lasse, sondern daß ich mir auch die Tutorials dazu reinziehe. Denn wie ich <a href="https://kantel.github.io/posts/2023101901_tuesdayjs_1st_steps/">hier schon schrieb</a>, ist für einen Menschen wie mich, der am liebsten in seinem Texteditor herumsaut, die <em>Point-and-Click</em>-Oberfläche eines Tools wie Tuesday JS doch recht gewöhnungsbedürftig.</p>
<p>Daher hier (teilweise noch einmal) die Tutorials, die mir bisher zu dieser Engine untergekommen waren:</p>
<ul>
<li><a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial">Tuesday JS Quick Guide</a></li>
<li><a href="https://kirill-live.itch.io/tuesday-js/devlog/241616/creation-html-desctop-app-for-windows-macos-and-linux">Creation html desctop app for windows macos and linux</a></li>
<li>Creating Interactive Narratives Made Easy: <a href="https://medevel.com/tuseday-js/">Introducing Tuesday JS, the Open-Source Visual Novel Engine</a></li>
</ul>
<p>Als erstes habe ich vor, ich ein <a href="http://blog.schockwellenreiter.de/2021/10/2021101202.html">frühes</a> Ren’Py-Tutorial, das ich vor Jahren mal <a href="http://blog.schockwellenreiter.de/2021/10/2021101502.html">verbrochen hatte</a>, nach Tuesday zu portieren, um ein Gefühl für die Engine zu bekommen.</p>
<p>Parallel dazu möchte ich mir mit den Bildern, die ich mit KI-Applikationen erstellen werde, eine Repertoire an Charakteren, Avataren und Hintergrundbildern zusammenstellen, die ein einigermaßen konsistentes Erscheinungsbild dieser Experimente ermöglchen. Da ich mit beiden Tools – der Bildergenerierung mit Hilfe Künstlicher Intelligenz, wie auch mit Tuesday JS – Neuland betrete, bin ich selber gespannt ob und wenn ja, was dabei herauskommen wird. <em>Still digging!</em></p>
<p><strong>Was sonst noch was?</strong> Ach ja, <a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#bot_telegram">Tuesday JS kann auch Chatbot</a>. Ein weiterer Grund, sich mit der Engine zu befassen.</p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <guid>https://kantel.github.io/posts/2024020801_tuesdayjs_update/</guid>
  <pubDate>Thu, 08 Feb 2024 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020801_tuesdayjs_update/images/tuesday_script_struct.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rembg – Bildhintergrund mit Python entfernen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020702_rembg/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53514357412/"><img src="https://kantel.github.io/posts/2024020702_rembg/images/rembgpy-b.jpg" class="img-fluid"></a></p>
<p>Als Geheimwaffe, um Bilder vom Hintergrund freizustellen, wurde mir häufig die freie (MIT-Lizenz) Python-Bibliothek <a href="https://github.com/danielgatis/rembg">Rembg</a> empfohlen. Doch auch, wenn das Teil <a href="https://pypi.org/project/rembg/2.0.28/">auf PyPI zu finden</a> und daher leicht zu installieren war, hatte ich es nicht zum Laufen bekommen. Bis ich dann heute über <a href="https://medium.com/@HeCanThink/rembg-effortlessly-remove-backgrounds-in-python-c2248501f992">diese Anleitung</a> stolperte.</p>
<p>Dort stand nämlich, daß Rembg das Bild als <code>numpy.array()</code> benötigte, um zu funktionieren. Also mein Versuchsprogramm wie folgt geändert</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> rembg</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-5"></span>
<span id="cb1-6">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images"</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maid05.png"</span>)</span>
<span id="cb1-9">output_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maid05_output.png"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the input image</span></span>
<span id="cb1-12">input_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(input_path)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input image to a numpy array</span></span>
<span id="cb1-15">input_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_image)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply background removal using rembg</span></span>
<span id="cb1-18">output_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rembg.remove(input_array)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a PIL Image from the output array</span></span>
<span id="cb1-21">output_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(output_array)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the output image</span></span>
<span id="cb1-24">output_image.save(output_path)</span>
<span id="cb1-25">output_image.show()</span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p>und schon funzte das mit der Bildhintergrund-Entfernung. Zwar gibt es noch eine <code>deprecation</code>-Warnung, aber die kann ich – glaube ich – erst einmal ignorieren.</p>
<p>Warum ich so scharf auf das Teil bin, wo es doch so viele, meist kostenlose Online-Tools gibt, die vorgeben, das gleiche zu erledigen? Weil diese Tools meistens die Größe der Ausgabebilder beschränken (in der Regel auf 512 x 512 Pixel). Mein Testbild hatte aber die Größe von 4.096 x 4.096 Pixel und Rembg akzeptierte diese Größe ohne zu meckern und produzierte auch eine gleich große Ausgabe.</p>
<p>Das Testbild hatte ich mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> generiert, genaueres entnehmt Ihr bitte der Bildbeschreibung unten.</p>
<p>Wer das nachprogrammieren will: Die Pillow-Funktion <code>Image.show()</code> funtioniert nicht mit allen Betriebssystemen. Ihr könnt sie aber einfach auskommentieren, ohne daß die Funktionsfähigkeit des Skriptes beeinträchtigt wird.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53515278291/">Ein Dienstmädchen</a> (Entwurf für eine Visual Novel)</em>, erstellt mit Scenario, Prompt: »<em>A young maid with curly brown hair, green eyes and red lips, wearing a white bonnet, black dress and white apron, 2D graphic style+, point and click game character, full body shot</em>«, Negative Prompt: »<em>Background, ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook</p>



 ]]></description>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Bilder</category>
  <category>Pillow</category>
  <guid>https://kantel.github.io/posts/2024020702_rembg/</guid>
  <pubDate>Wed, 07 Feb 2024 20:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020702_rembg/images/rembgpy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 121 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020701_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53500571394/"><img src="https://kantel.github.io/posts/2024020701_chrome_update/images/datenkrake20240201-b.jpg" class="img-fluid"></a></p>
<p>Das (beinahe) wöchentliche Update von unser aller Datenkrake: Google veröffentlicht ein Update der Version 121 (121.6167.160/161) seines Browsers Chrome und schließt damit auch wieder <a href="https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53500571394/">Octopussy</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>. Prompt: »<em>A sexy female robot flees from a gigantic data octopus</em>«, Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020701_chrome_update/</guid>
  <pubDate>Wed, 07 Feb 2024 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020701_chrome_update/images/datenkrake20240201.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Quarto 1.4 released</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020602_quarto_1_4/</link>
  <description><![CDATA[ 




<p><a href="https://quarto.org/docs/blog/posts/2024-01-24-1.4-release/images/thumbnail.png"><img src="https://kantel.github.io/posts/2024020602_quarto_1_4/images/quarto14-b.jpg" class="img-fluid"></a></p>
<p>Auch wenn es erst heute in meinen Feedreader spülte, schon vor etwa zwei Wochen, am 24. Januar 2024, wurde von Quarto die <a href="https://quarto.org/docs/blog/posts/2024-01-24-1.4-release/">Version 1.4 freigegeben</a>. Da <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> nicht nur seit <a href="https://kantel.github.io/posts/2022120802_hello_quarto/">etwas mehr als einem Jahr</a> diese Seiten antreibt (seit <a href="https://kantel.github.io/posts/2023121602_quarto_vscode/">Dezember letzten Jahres</a> zusammen mit <a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/visualstudiocode.html">Visual Studio Code</a> als Editor) diese Seiten antreibt, sondern auch – ebenfalls zusammen mit VS Code – eine <a href="https://kantel.github.io/posts/2023081101_logseq_quarto_vscode/">Schlüsselrolle in meinem Publikationsworkflow</a> einnimmt, war das natürlich eine wichtige Nachricht für mich.</p>
<p>Zuerst einmal die übliche Entwarnung: Obwohl ich bei solchen wichtigen Updates immer ein wenig ein mulmiges Gefühl im Magen habe, verlief es auf meinem Mac problemlos. Einfach das <code>.pkg</code> <a href="https://quarto.org/docs/download/">herunterladen</a> und nach einem Doppelklick ersetzte die neue Version unsichtbar im Hintergrund meine biserige Version 1.3 (was icn nur in der Fußzeile meines Editors erkennen konnte).</p>
<p>Und was ist nun neu? Nun, einmal besitzt Quarto nun eine bessere Unterstützung für interaktive <a href="https://quarto.org/docs/dashboards/">Dashboards</a>. Diese ist die neueste Sau, die durch das Data Science Dorf getrieben wird, und so war es wirklich nur eine Frage der Zeit, bis auch Quarto auf diese neue Sau setzte.</p>
<p>Dann <a href="https://quarto.org/docs/output-formats/typst.html">unterstützt</a> Quarto in der neuen Version auch <a href="https://typst.app/">Typst</a>. Meine Meinung zu Typst hatte ich nach ersten (und vermutlich auch letzten) Tests <a href="https://kantel.github.io/posts/2023091002_typst_1st_steps/">hier unmißverständlich kundgetan</a>. Ich halte das Teil für so überflüssig wie ein Kropf. Aber man muß die Typst-Unterstützung ja nicht nutzen.</p>
<p>Kommen wir zu einem angenehmeren neuen Feature: Quarto besitzt ein neues Publikationsformat für <a href="https://quarto.org/docs/manuscripts/">Manuskripte</a> und andere (nicht nur wissenschaftliche) Artikel. Das ist eine großartige Ergänzung zum bisherigen Publikationsformat <a href="https://quarto.org/docs/books/">Books</a> und wird sicher nicht nur meinen Publikationsworkflow bereichern.</p>
<p>Weitere Neuerungen, die mir gefielen:</p>
<ul>
<li>Es gibt eine bessere <a href="https://quarto.org/docs/dashboards/interactivity/shiny-python/index.html">Unterstützung für Shiny for Python</a>.</li>
<li>Mit der Jupyter-Engine lassen sich aus Quarto heraus Python-, Julia- oder R-Skriptdateien mit Markdown-Kommentaren als eine Art »Notebook für Arme« herausschreiben.</li>
<li>Und das ist auch für den <em>Schockwellenreiter</em> nützlich: Quarto 1.4 unterstützt <a href="https://quarto.org/docs/output-formats/html-lightbox-figures.html">Lightbox-Galerien</a>, mit der Thumbnails mit Beschriftung in einer Art Galerie angzeigt und mit größeren Bildern verlinkt werden können. <em>(Notiz an mich: Unbedingt testen!)</em></li>
</ul>
<p>Quarto war schon lange kein Thema mehr auf diesen Seiten (warum auch? Es hat einfach funktioniert), aber ich möchte die Nachricht vom Update dazu nutzen, auch noch auf einige Video-Tutorials zum Thema hinzuweisen:</p>
<ul>
<li>Die Playlist »<a href="https://www.youtube.com/playlist?list=PLY9YSTWETzmq-3Qb6cmBN3nO5sPpATUl1">Introduction to Quarto</a>« (26 im Schnitt etwa zehnminütige Videos) von <em>Data&nbsp;&amp; Design</em> läßt kaum noch Fragen offen.</li>
<li>Die Monsterplaylist zur »<a href="https://www.youtube.com/playlist?list=PL9HYL-VRX0oRFZslRGHwHuwea7SvAATHp">posit::conf (2023)</a>« (108 (sic!) Videos) bringt auch schon einige <a href="https://www.youtube.com/watch?v=AbuK2F57NEs">Teaser</a> zu neuen Quarto-Version.</li>
</ul>
<p><strong>War sonst noch was?</strong> Ach ja, auch wenn die versprochene, verbesserte Quarto-Unterstützung für <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> sich offensichtlich verspätet, sind das Video »<a href="https://www.youtube.com/watch?v=cKFp8DBF75Y">From Zero to Hero with Notebooks in VS Code</a>« und die Playlist »<a href="https://www.youtube.com/playlist?list=PLj6YeMhvp2S6gDMYrkDb81vneeuk_Lf3v">Jupyter Notebooks Tutorials</a>« – beide vom <a href="https://www.youtube.com/@code"><em>Visual Studio Code Kanal</em></a> – sicher meiner (und Eurer) Aufmerksamkeit wert. Denn Visual Studio Code unterstützt JupyterLab schon länger und sehr umfangreich.</p>



 ]]></description>
  <category>Quarto</category>
  <category>Statische Seiten</category>
  <category>Visual Studio Code</category>
  <guid>https://kantel.github.io/posts/2024020602_quarto_1_4/</guid>
  <pubDate>Tue, 06 Feb 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020602_quarto_1_4/images/quarto14.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google schließt am »Februar-Patchday« wieder Sicherheitslücken in Android</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020601_android_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53377940333/"><img src="https://kantel.github.io/posts/2024020601_android_update/images/android202402-b.jpg" class="img-fluid"></a></p>
<p>Google hat mit seinem monatlichen <a href="https://source.android.com/docs/security/bulletin/2024-02-01?hl=de">Sicherheitsupdate für Android</a> (und damit auch auf seinen <a href="https://source.android.com/docs/security/bulletin/pixel/2024-02-01?hl=de">Pixel-Geräten</a>) wieder Sicherheitslücken geschlossen.</p>
<p>Die Updates werden so nach und nach per OTA <em>(over the air)</em> auf Pixel 8/8 pro, Pixel Tablet, Pixel Fold, Pixel 7a, Pixel 7/7 pro, Pixel 6a, Pixel 6/6 pro, Pixel 5 verteilt.</p>
<p>Die anderen Hersteller werden wie üblich in Bälde nachziehen, sofern sie überhaupt noch entsprechenden Support leisten. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <a href="https://www.flickr.com/photos/schockwellenreiter/53377940333/"><em>Grüner Android</em></a>, erstellt mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a>. Prompt: »<em>a little green robot helds a mobilphone in an futuristic city. colored french comic style</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020601_android_update/</guid>
  <pubDate>Tue, 06 Feb 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020601_android_update/images/android202402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google Bard mit Imagen: New KI on the Blog</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020502_bard_imagen/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/"><img src="https://kantel.github.io/posts/2024020502_bard_imagen/images/pythonbard-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Es rauscht im Blätterwald (eigentlich eine blöde Metapher – heutzutage rauscht es schon lange nicht mehr in Blättern, sondern spült in Webseiten und Feedreader), Googles als ChatGPT-Konkurrent gestarteter, aber bisher eher verborgen gebliebener Chatbot <a href="https://bard.google.com/">Bard</a> hat vor <a href="https://blog.google/intl/de-de/unternehmen/technologie/bard-mit-gemini-pro/">wenigen Tagen</a> als Update die KI-Engine <a href="https://blog.google/intl/de-de/unternehmen/technologie/gemini/">Gemini</a> verpaßt bekommen und soll damit endlich aus dem Dornröschenschlaf geweckt werden.</p>
<p>Doch das ist nicht alles: Bard kann mit diesem Update endlich das, was ChatGPT schon lange kann – nämlich Bilder generieren. Google nutzt dafür <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/imagegen.html">Imagen</a>, die bisher eigentlich nur als <a href="https://imagen.research.google/">Forschungspapier</a> existierende Antwort auf <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/dalle.html">DALL-E</a>. <a href="https://medium.com/the-generator/google-bards-new-ai-image-generator-everything-to-know-7180e52a7554">Erste Reaktionen</a> (Medium.com-Link) sind sehr positiv.</p>
<p>Google will einiges besser (oder besser: anders) machen als die Konkurrenz: Erstens soll der Dienst – im Gegensatz zu ChatGPT – auch weiterhin kostenlos bleiben. Zweitens will Google gegen <a href="https://generativeai.pub/google-bard-can-now-generate-images-this-is-huge-a98a0897ce44"><em>Deep Fakes</em> vorgehen</a> und bestimmte Prompts (zum Beispiel Photos von Personen) zurückweisen – Zeichnungen im Comic-Stil sollen aber akzeptiert werden. Wem das nach Zensur stinkt, der hat natürlich recht. Aber für bedenklicher halte ich, daß die Bilder ein unsichtbares Wasserzeichen verpaßt bekommen, das auf den Urheber zurückverfolgbar sein soll. Was autoritäre Regime damit anstellen könnten, will ich mir gar nicht erst ausmalen.</p>
<p>Wie auch immer, momentan ist das Tool in Deutschland <a href="https://www.mactechnews.de/news/article/Google-Bard-erhaelt-Update-Gemini-Pro-auf-Deutsch-aktualisiertes-KI-Bildmodell-184234.html">noch nicht verfügbar</a><sup>1</sup>. Aber wenn es da ist (eine Einführung ist angekündigt), werde ich das Teil auf jeden Fall testen.</p>
<p><strong>War sonst noch was?</strong> Ach ja, auf dem Weltwirtschaftsforum in Davos letzten Monat machte die französische Softwarefirma <a href="https://mistral.ai/">Mistral AI</a> von <a href="https://mistral.ai/">sich reden</a>. Deren KI-Modelle <em>Mistral 7B</em> und <em>Mixtral 8x7B</em> sollen nicht nur sehr leistungsfähig sein, sondern sind auch als <em>Open Source</em> für jeden frei nutzbar. Neben der aus London stammenden, ebenfalls freien KI-Software <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable Diffusion</a> ist das ein weiterer europäischer Player mit freier Software gegen die meist US-amerikanischen, kommerziellen und großen Softwareriesen.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53501579722/">Schlange am Schreibtisch</a></em>, erstellt mit <a href="https://app.scenario.com/">Scenario</a>. Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«, Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Fußnoten</h2>

<ol>
<li id="fn1"><p>Bevor hier wieder blöde Kommentare reinschneien: Ich weiß, wie man einen Proxy-Server hochzieht, aber ich habe keine Lust darauf.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Chatbot</category>
  <category>Bilder</category>
  <category>Imagen</category>
  <category>Künstliche Intelligenz</category>
  <guid>https://kantel.github.io/posts/2024020502_bard_imagen/</guid>
  <pubDate>Mon, 05 Feb 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020502_bard_imagen/images/pythonbard.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Berlin Attack auf Itch.io hochgeladen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020501_berlinattack_itch/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53511069090/"><img src="https://kantel.github.io/posts/2024020501_berlinattack_itch/images/attackberlin_v02-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Ich habe meinen <a href="https://kantel.github.io/posts/2024020401_renpy_scenario/">gestern erstellten</a> Prototypen eines <em><a href="https://de.wikipedia.org/wiki/Point-and-Click-Adventure">Point-and-Click-Adventures</a></em>, den ich in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> entwickelt und mit Bildern und Charakteren aufgehübscht habe, die ich mit dem KI-Bildgenerator <a href="https://app.scenario.com/">Scenario</a> generiert hatte, nach <a href="https://kantel.itch.io/attack-berlin">Itch.io hochgeladen</a>, damit Ihr Euch ein Bild von dem bisherigen Ergebnis machen könnt.</p>
<p>Und da Itch.io auch das Einbinden von HTML-Games in die eigene Website ermöglicht, hier das eingebundene Spielchen:</p>
<iframe frameborder="0" src="https://itch.io/embed-upload/9663602?color=ede4d4" allowfullscreen="" width="640" height="392">
<a href="https://kantel.itch.io/attack-berlin">Play Attack Berlin on itch.io</a>
</iframe>
<p>Wohlgemerkt, es ist nicht mehr als ein <em>Proof of Concept</em>, in dem ich ausprobieren möchte, ob und wie weit mit gekünstelter Intelligenzia erzeugte Avatare als Spielcharaktere geeignet sind. Dennoch möchte ich diesen Prototypen so <em>peu a peu</em> weiterentwickeln, bis er mindestens den Stand meiner <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">Twine-Version</a> (<a href="https://kantel.itch.io/berlin-attack">Itch.io-Link</a>) erreicht hat. Dabei werde ich sicher auch noch mit anderen KI-Bildgeneratoren experimentieren. Schaun wir mal, was dabei herauskommt. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Stable Diffusion</category>
  <guid>https://kantel.github.io/posts/2024020501_berlinattack_itch/</guid>
  <pubDate>Mon, 05 Feb 2024 15:40:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020501_berlinattack_itch/images/attackberlin_v02.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Auf ein Neues: Ren’Py und Scenario</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020401_renpy_scenario/</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53508931429/"><img src="https://kantel.github.io/posts/2024020401_renpy_scenario/images/attackscenario-b.jpg" class="img-fluid figure-img"></a></p>
</figure>
</div>
<p>Meine Beschäftigung mit den Bildgeneratoren der gekünstelten Intelligenzia hat natürlich einen triftigen Grund: Ich möchte herausbekommen, ob oder wie weit diese Tools mittlerweile in der Lage sind, Bilder für interaktive Geschichten und Spiele zu erzeugen, die es auch Menschen wie mir – denen bei der Geburt der Zeichenstift nicht in die Wiege gelegt worden war – ermöglicht, solche Geschichten mit Bildern zu erzählen.</p>
<p>Mein erster Versuch mit der <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Hexe und den zertrümmerten Kürbissen</a> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> verlief ja recht erfolgversprechend, wie Ihr auf meinem Itch.io-Account <a href="https://kantel.itch.io/smashing-pumpkins">nachspielen</a> könnt. Die <a href="https://www.flickr.com/photos/schockwellenreiter/albums/72177720312336247/with/53296778977">Bilder dafür</a> hatte ich – eher aus einer Laune heraus, denn aus einem wichtigen Grund – mit <a href="https://clipdrop.co/stable-diffusion">Clipdrop</a> erzeugt, aber ich glaube, jeder andere einiggermaßen leistungsfähige KI-Bildgenerator hätte dies auch gekonnt.</p>
<p>Allerdings stellt solch eine Geschichte mit statischen Bildern noch keine allzu großen Anforderungen an die Konsistenz der Figuren: Bei den einzelnen Bildern, meist auch noch je auf einer eigenen Seite, verzeiht der Betrachter doch schnell leichte Abweichungen. Anders sieht es dagegen bei <em><a href="https://de.wikipedia.org/wiki/Point-and-Click-Adventure">Point-and-Click Adventures</a></em> aus, da hier die Charaktere auf <strong>einer</strong> Bühne (einem Bildschirm) auftreten und da Abweichungen eher auffallen.</p>
<p>Da meine (geplante) »Räuberpistole« <a href="https://kantel.github.io/posts/2023091801_berlin_attack_twine/">Berlin Attack</a> (für die ich auch schon einen Prototypen in Twine mit <a href="https://klembot.github.io/chapbook/guide/">Chapbook</a> gebastelt hatte) im Prinzp so etwas wie ein <em>Point-and-Click-Adventure</em> ist, hatte ich das Teil wieder hervorgekramt und dafür mit <a href="https://app.scenario.com/">Scenario</a> ein paar Bilder erzeugt und sie in die <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a>-Version dieses Prototyps testweise eingesetzt.</p>
<p>Scenario habe ich deswegen ausgewählt, weil auf dem YouTube-Kanal mehrere Videos (unter anderem »<a href="https://www.youtube.com/watch?v=gWOAO1ltZ_Y">The Arcade Hacker</a>«,»<a href="https://www.youtube.com/watch?v=-co2CLGsCpc">Murder Mystery</a>« und »<a href="https://www.youtube.com/watch?v=0_KAF4TziUY">The Stolen Necklace</a>«) damit prahlten, wie gut das Teil für die Generierung von Assets für <em>Point-and-Click-Games</em> geeignet sei. Zwar wird in diesen Tutorials <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/unity.html">Unity</a> als Zielplattform genutzt, aber – wie ich <a href="https://kantel.github.io/posts/2023091502_renpy_statt_unity/">hier schon schrieb</a> – ist für dieses Genre Ren’Py durchaus eine gute und leistungsfähige freie Alternative.</p>
<p>Mit dem Ergebnis bin ich aber noch nicht wirklich zufrieden. Das liegt in der Hauptsache daran, daß die oben erwähnten Video-Tutorials einfach zu schnell durch die Generierung huschen und zu viel Vorwissen voraussetzen. So habe ich es zum Beispiel ums Verrecken nicht geschafft, meinen Protagonisten einen geöffneten, sprechenden Mund zu spendieren, obwohl zum Beispiel <em>The Stolen Necklace</em> zeigt, daß das geht. Aber mit der lakonischen Anweisung »Use the canvas to change your character’s facial expressions« bin ich einfach überfordert. Was muß ich wo im Canvas benutzen, um den Gesichtsausdruck meiner Figuren zu ändern?</p>
<p>Prinzipiell scheint das aber möglich zu sein, hier muß ich mich aber erst noch durch das Dickicht der (offensichtkich zu) hastig erstellten (die Tools sind alle noch recht neu) Tutorials quälen. Und vermutlich besitzt nicht nur Scenario alleine diese Fähigkeiten, ich glaube (mindestens) jede <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/stablediffusion.html">Stable-Diffusion</a>-Anwendung scheint dazu in der Lage zu sein.</p>
<p>Ich bleibe jedenfalls am Ball. Und neben Ren’Py steht ja auch noch die <em>Visual Novel Engine</em> <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> in den Startlöchern und harrt einer Nutzung. <em>Still digging!</em></p>



 ]]></description>
  <category>RenPy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Künstliche Intelligenz</category>
  <category>Scenario</category>
  <category>Stable Diffusion</category>
  <guid>https://kantel.github.io/posts/2024020401_renpy_scenario/</guid>
  <pubDate>Sun, 04 Feb 2024 19:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020401_renpy_scenario/images/attackscenario.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
