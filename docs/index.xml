<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Der Schockwellenreiter</title>
<link>https://kantel.github.io/</link>
<atom:link href="https://kantel.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Schockwellenreiter</description>
<generator>quarto-1.4.549</generator>
<lastBuildDate>Wed, 21 Feb 2024 14:20:00 GMT</lastBuildDate>
<item>
  <title>Réveil du Printemps</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024022101_printemps/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53534056200/"><img src="https://kantel.github.io/posts/2024022101_printemps/images/printemps-b.jpg" class="img-fluid"></a></p>
<p>Bleibt stark! Bald habt Ihr es geschafft, in genau einem Monat beginnt der Frühling.</p>
<p>Daher Notiz an mich: Dringend meine <a href="https://kantel.github.io/posts/2023031502_fruehlingsplaene/">Jahreskarte</a> für den <a href="https://www.britzergarten.de/">Britzer Garten</a> erneuern.</p>
<hr>
<p><strong>Photo</strong> (<a href="http://creativecommons.org/licenses/by-nc-nd/2.0/">cc</a>) 2024: <em><a href="http://cognitiones.kantel-chaos-team.de/cv.html">Jörg Kantel</a></em>.</p>



 ]]></description>
  <category>Modernes Leben</category>
  <category>Photographie</category>
  <guid>https://kantel.github.io/posts/2024022101_printemps/</guid>
  <pubDate>Wed, 21 Feb 2024 14:20:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024022101_printemps/images/printemps.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>JupyterLab Desktop goes Thonny</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024022002_jupyterlabdesktop_thonny/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53501582607/"><img src="https://kantel.github.io/posts/2024022002_jupyterlabdesktop_thonny/images/juypterlabdesktop-b.jpg" class="img-fluid"></a></p>
<p>Eines der größten Vorzüge von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/thonny.html">Thonny</a>, der kleinen, (nicht nur anfänger-) freundlichen Python-IDE ist ja, daß sie in einer eigenen, einfach innerhalb Thonny zu verwaltenden Python-Umgebung läuft, und so dem Nutzer die volle Kontrolle über die Umgebung und die Umgebungsvariablen erlaubt. Doch jetzt geht <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlabdesktop.html">JupyterLab Desktop</a>, die Variante der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyter.html">Jupyter</a>-IDE, die <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/jupyterlab.html">JupyterLab</a> aus den Klauen der Webbrowser befreien will, mit der aktuellen Version 4.1 noch einen Schritt weiter: Sie erlaubt die Erstellung, Verwaltung und den Aufruf virtueller Umgebungen aus der Applikation heraus, ohne sich in die (Un-) Tiefen der Kommandozeile begeben zu müssen. Wie man dies bewerkstelligt, erläuterte gestern <em>Mehmet Bektas</em> ausführlich in dem Beitrag »<a href="https://blog.jupyter.org/python-environment-management-in-jupyterlab-desktop-3b119c5811d9">Python environment management in JupyterLab Desktop</a>« im Jupyter Blog.</p>
<p>Bisher hatte ich virtuelle Python-Umgebungen ja weitestgehend gemieden, da ich schnell die Übersicht verlor, welche Umgebungen ich schon angelegt und wie ich sie benannt hatte. (Ich weiß, <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pycharm.html">PyCharm</a> liefert eine Übersicht, aber diese IDE war mir zum einen zu fett und zum anderen in der freien (Apache-Lizenz) <em>Community Edition</em> zu sehr eingeschränkt in den Möglichkeiten.) Aber natürlich haben virtuelle Umgebungen unbestritten Vorteile, und wenn JuypterLab Desktop deren Verwaltung tatsächlich so einfach macht, wie der Beitrag im Jupyter Blog verspricht, sollte ich JuyterLab als (m)eine Python-IDE doch wieder in Erwägung ziehen.</p>
<p>Vor allem, weil auch noch ein zweiter Artikel in dem Blog meine Aufmerksamkeit erregte: <em>Marc Wouts</em> schreibt dort nämlich unter »<a href="https://blog.jupyter.org/the-jupytext-menu-is-back-3e6212e8c090">The Jupytext Menu is back!</a>«, daß man aus JupyterLab (Desktop) auch wieder einfach »Jupytext Notebooks« speichern und editieren könne. Das sind Juypter Notebooks, die entweder als Markdown-Dateien (Endung <code>.md</code>) oder als Python-Skripte (Endung <code>.py</code>) im Texteditor oder der IDE Eures Vertrauens weiterverarbeitet werden können (vergleiche auch »<a href="https://towardsdatascience.com/introducing-jupytext-9234fdff6c57">Introducing Jupytext</a>«, ebenfalls von <em>Marc Wouts</em>). Das bereitet sie auch für die <a href="https://kantel.github.io/posts/2023083003_myst_jupyterbook/">Publikation via MyST Markdown</a> vor.</p>
<p>Einen Wermutstropfen in all dieser Euphorie gibt es allerdings: Die <a href="https://github.com/jupyterlab/jupyterlab-desktop/releases/tag/v4.1.1-1">Release Notes</a> schreiben, daß JupyterLab Desktop unter macOS »mindestens« die Version macOS 10.15 (Catalina) benötigt. Das ist die letzte Version, mit der mein betagtes MacBook Pro noch läuft. Es ist also abzusehen, daß ich irgendwann eine aktuelle Version von JupyterLab Desktop auf meiner Kiste nicht mehr installieren kann.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53501582607/">Python am Schreibtisch</a></em> erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A python with ((glasses)) and a pointer in front of a chart with diagrams in an office. Shelves with books on the walls. It’s a sunny morning</em>«. Modell: Stable Diffusion XL, Style: Stylized Fantasy + Whimsical Storybook.</p>



 ]]></description>
  <category>Python</category>
  <category>Jupyter</category>
  <category>JupyterLab Desktop</category>
  <category>MyST Markdown</category>
  <guid>https://kantel.github.io/posts/2024022002_jupyterlabdesktop_thonny/</guid>
  <pubDate>Tue, 20 Feb 2024 18:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024022002_jupyterlabdesktop_thonny/images/juypterlabdesktop.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Flying Badger: Erste Schritte mit microStudio</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024022001_microstudio_1st_steps/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53540030015/"><img src="https://kantel.github.io/posts/2024022001_microstudio_1st_steps/images/flyingbadger-b.jpg" class="img-fluid"></a></p>
<p>Nachdem ich in den letzten Wochen einige <a href="https://kantel.github.io/posts/2024013002_microstudio_update/">Spiele-Engines</a> <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">vorgestellt</a> <a href="https://kantel.github.io/posts/2024021001_ctJS/">hatte</a>, wollte ich mit ihnen auch etwas anstellen. Erste vorsichtige Versuche mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a> hatte ich ja schon <a href="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/">durchgeführt</a> und war mit dem <a href="https://kantel.itch.io/poirots-abenteuer">Ergebnis</a> eigentlich recht zufrieden. Blieben also noch <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">Ct.js</a> und <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a>.</p>
<p>Ct.js war – zumindest in der Desktop-Version – eine Entäuschung. Das Teil fand die laut <a href="https://docs.ctjs.rocks/">Dokumentation</a> mitgelieferten Assets einfach nicht, obwohl ich Schritt für Schritt der <a href="https://docs.ctjs.rocks/tutorials/making-games-platformer.html">Anleitung</a> gefolgt war. Also habe ich mich microStudio zugewendet und dies nicht bereut.</p>
<p>Ich habe als ersten Schritt eine kleine Animation erstellt (siehe <a href="https://www.flickr.com/photos/schockwellenreiter/53540030015/">Bannerbild</a> oben), die noch ohne Interaktion mit dem Nutzer auskommt. Hier fliegt ein kleiner Dachs in einer Ballongondel über eine Wüstenlandschaft. Hat er das rechte Ende des Bildschirms erreicht, taucht er am linken Bildschirmrand erneut auf:</p>
<iframe src="flyingbadger/index.html" class="if16_9" name="Flying Badger">
</iframe>
<p>Das Bild des Hintergrunds und den Sprite mit dem Dachs habe ich mit <a href="https://www.flickr.com/photos/schockwellenreiter/53537297945/">Scenario</a> erstellt, wobei ich den Dachs mit <a href="https://github.com/danielgatis/rembg">Rembg</a> vom Bildhintergrund freigestellt und mit einer <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/gc.html">Bildverarbeitung meines Vertrauens</a> noch grob nachgearbeitet hatte. Wie ich schon häufiger erwähnte, bin ich kein Pixelartists, aber für diesen kleinen Test war das Ergebnis (für mich) ausreichend.</p>
<p>MicroStudio funktioniert ähnlich wie <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/processing.html">Processing</a>: Die Engine besitzt eine Funktion <code>init()</code>, die genau einmal beim Start des Programms aufgerufen wird und die Funktionen <code>update()</code> und <code>draw()</code> die mit einer Framerate von sechzig Mal die Sekunde aufgerufen werden. Und auch wenn das Teil in Python, JavaScript und Lua programmiert werden kann, habe ich meine ersten Versuche mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microscript.html">microScript</a> unternommen, der nativen, Lua-ähnlichen Sprache von microStudio. Der Code sieht dann so aus:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource lua number-lines code-with-copy"><code class="sourceCode lua"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">init</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-2">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">object</span></span>
<span id="cb1-3">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb1-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span></span>
<span id="cb1-5">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">w</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb1-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">h</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span></span>
<span id="cb1-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">speed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>   </span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-12">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">speed</span></span>
<span id="cb1-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">w</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">then</span></span>
<span id="cb1-14">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">draw</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-19">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>fillRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgb(255, 255, 255)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-20">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>drawSprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desert"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-21">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">screen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>drawSprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flyingbadger_med"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">badger</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">h</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
<p>Im Gegensatz zu den meisten anderen Engines besitzt microStudio in eigenes, virtuelles und auflösungsunabhängiges Koordinatensystem, das seinen Mittelpunkt (0, 0) in der Mitte des Spielefensters besitzt. Bei einem (in den Einstellungen festgelegten) Seitenverhältnis von 16:9 geht die x-Achse von -178 (links) bis +178 (rechts) und die y-Achse von +100 (oben) bis -100 (unten). Die realen Koordinaten und die »reale« Größe der Bilder und Sprites werden dann von microStudio zur Laufzeit umgerechnet. Das ist erst einmal ungewohnt, macht aber einiges einfacher, da man sich als Entwickler nicht um die Auflösung der Zielplattformen kümmern muß.</p>
<p>Das Teil behält erst einmal alles (Code und Assets) in seiner Engine, wenn man das Ergebnis irgendwo verwenden möchte, muß man es »publizieren«. Wenn man den entsprechenden Button in der IDE geklickt hat, bekommt man diverse Ziele angeboten (wobei mir nur Itch.io bekannt ist) oder kann unter <code>Zu HTML5 exportieren</code> eine Zip-Datei herunterladen, die ausgepackt alles enthält, was man benötigt, um das Spiel in seine eigenen Seiten einzubinden.</p>
<p>Damit habe ich nicht nur das Einbinden in dieses <del>Blog</del> Kritzelheft bewerkstelligt, sondern auch die Synchronisation mit meinem <a href="https://github.com/kantel/microstudio">GitHub-Repositorium</a> vorgenommen. Wenn Ihr von dort die Datei <code>flyingbadger.zip</code> in Eure eigene microStudio-IDE (egal ob online oder auf dem Desktop) importiert, könnt Ihr Euch das »Spiel« nicht nur ansehen, sondern auch verändern und eigene Versionen davon entwickeln. Habt Spaß damit.</p>



 ]]></description>
  <category>microStudio</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024022001_microstudio_1st_steps/</guid>
  <pubDate>Tue, 20 Feb 2024 16:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024022001_microstudio_1st_steps/images/flyingbadger.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Update: Decker goes Visual Novel</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021902_decker_goes_vn/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53539275828/"><img src="https://kantel.github.io/posts/2024021902_decker_goes_vn/images/deckervn-b.jpg" class="img-fluid"></a></p>
<p>Vor drei Tagen spülte in meinen Feedreader die Nachricht herein, daß <a href="http://cognitiones.kantel-chaos-team.de/programmierung/decker.html">Decker</a>, der nostalgische, plattformübergreifende <a href="http://cognitiones.kantel-chaos-team.de/programmierung/hypercard.html">HyperCard</a>-Nachbau, in der <a href="https://internet-janitor.itch.io/decker/devlog/683067/decker-139">Version 1.39 veröffentlicht</a> wurde. Es ist ein großes Update mit vielen Bugfixes, Ergänzungen und einer wichtigen Neuerung.</p>
<p>Diese wichtigste Neuerung ist das Modul <a href="http://beyondloom.com/decker/puppeteer.html">Puppetier</a>, das die Erstellung von <em>Visual Novel</em> ähnlichen Spielen noch einfacher machen will. Zwar gab es die Möglichkeit mit der <a href="https://beyondloom.com/decker/dialog.html">Dialogizer</a>-Bibliothek schon vorher, doch Puppetier will das Prototyping dafür noch einfacher machen. Daher wurde auch dem Dialogizer ein Update spendiert, damit er mit Puppetier zusammenarbeitet.</p>
<p>Das läßt mich natürlich träumen: Interaktive Geschichten, wie sie zu HyperCards Zeiten ausgesehen hätten, in einer wunderschönen Ditherpunk-Ästhtik&nbsp;… was verlangt das nostalgisch veranlagte Herz eines Nerds eigentlich mehr?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53539156741/"><img src="https://kantel.github.io/posts/2024021902_decker_goes_vn/images/madhatter-b.jpg" class="img-fluid figure-img" alt="Mad Hatter dithered mit dem Atkinson Algorithmus"></a></p>
<figcaption>Mad Hatter dithered mit dem Atkinson Algorithmus</figcaption>
</figure>
</div>
<p><strong>War sonst noch was?</strong> Ach ja, damit das mit der Ditherpunk-Ästhetik auch wirklich klappt, gibt es von <em>John Earnest</em>, dem Macher von Decker, auch noch die Online-App <a href="https://beyondloom.com/tools/dith.html">Dith</a>, mit der Ihr Eure modernen Bilder in schwarz-weiße Retro-Pics umwandeln könnt – wahlweise mit dem Atkinson-, dem Floyd-Steinberg oder einem Treshold-Alogrithmus. So viel zu spielen, so wenig Zeit&nbsp;…</p>



 ]]></description>
  <category>Decker</category>
  <category>Retrocomputing</category>
  <category>Hypermedia</category>
  <category>Retrogaming</category>
  <category>Interactive Fiction</category>
  <guid>https://kantel.github.io/posts/2024021902_decker_goes_vn/</guid>
  <pubDate>Mon, 19 Feb 2024 16:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021902_decker_goes_vn/images/deckervn.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mozilla veröffentlicht neue Firefox-Versionen</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021901_firefox_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53539421545/"><img src="https://kantel.github.io/posts/2024021901_firefox_update/images/firefox02202402-b.jpg" class="img-fluid"></a></p>
<p>Die Entwickler des Mozilla Firefox haben die neue <a href="https://www.mozilla.org/en-US/firefox/123.0/releasenotes/">Version 123.0</a> und die neue <a href="https://www.mozilla.org/en-US/firefox/115.8.0/releasenotes/">Version ESR 115.8</a> veröffentlicht und darin auch wieder Sicherheitslücken behoben. Außerdem sind in das Update auch viele Veränderungen geflossen.</p>
<p>Firefox weist selbst auf dieses Update hin. Diese Prozedur kann aber auch wie immer über das Menü <code>Hilfe &gt; Über Firefox</code> angestoßen werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53539421545/">Ein Feuerfuchs kommt selten allein</a></em>, erstellt mit <a href="https://www.flickr.com/photos/schockwellenreiter/53537297945/">Scenario</a>. Prompt: »<em>A fire fox in a sunny clearing in the enchanted spring forest</em>«. Modell: Stable Diffusion XL, Style: Creepy Nordic Fairytale.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024021901_firefox_update/</guid>
  <pubDate>Mon, 19 Feb 2024 15:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021901_firefox_update/images/firefox02202402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Mercator-Professur 2023 für Dr. Mai Thi Nguyen-Kim (maiLab)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021802_mailab/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53537297945/"><img src="https://kantel.github.io/posts/2024021802_mailab/images/ehrendoktorin-b.jpg" class="img-fluid"></a></p>
<p>Da ich meine <a href="https://kantel.github.io/posts/2024021801_iframe_respnonsive/">jüngsten Änderungen</a> auch irgendwie verifizieren muß, freut es mich, daß die von mir sehr geschätzte Wissenschaftsjournalistin und Grimme-Preisträgerin <em><a href="https://de.wikipedia.org/wiki/Mai_Thi_Nguyen-Kim">Dr.&nbsp;Mai Thi Nguyen-Kim</a></em> im November 2023 die <a href="https://de.wikipedia.org/wiki/Universit%C3%A4t_Duisburg-Essen#Mercator-Professoren">Mercator-Professur</a> der Universität Duisburg-Essen erhalten hatte. Leider kann man das <a href="https://www.youtube.com/watch?v=Pjo5cniCzWM">Video der Preisverleihung</a> mit dem wunderbaren Vortrag der Geehrten »There’s no such thing as bad publicity?« nicht in dritte Webseiten einbinden, Ihr müßt es Euch daher auf YouTube direkt anschauen.</p>
<p>Daher – und damit ich endlich das responsive Verhalten von <code>iframes</code> testen kann – habe ich Euch ein weiteres, ganz frisches MaiLab-Video herausgesucht:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/_AV62rAyDc0?si=X7iQQexmNlV1WYqa" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Und vor wenigen Minuten kam auch noch diese Auflösung hinzu:</p>
<iframe class="if16_9" src="https://www.youtube.com/embed/GtBnj3Z3eO4?si=UQCCqNgolQ4B_B2M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Das Statement und die darauf folgende »Korrektur« machen klar, warum <em>Mai Thi Nguyen-Kim</em> die Angstgegnerin aller Schwurbler, Verschwörungstheoreriker und sonstiger wissenschaftsfeindlicher Spinner ist. (Und sie ist einer der Gründe, warum ich immer noch gerne meine Rundfunkgebühren zahle.)</p>
<p><strong>Jetzt aber wieder zurück zur Technik</strong> (das ist hier in erster Linie immer noch ein Technikblog): Das Einbinden des Videos mit meinen neuen, responsiven Klassen scheint jedenfalls zu funktionieren. Ich habe dazu zwei CSS-Klassen (je eine für das Seitenverhältnis 16:9 und eine für das Seitenverhältnis 4:3) angelegt:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb1-1">iframe<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.if16_9</span>  {</span>
<span id="cb1-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">aspect-ratio</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>/<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">}</span>
<span id="cb1-5"></span>
<span id="cb1-6">iframe<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.if4_3</span> {</span>
<span id="cb1-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">aspect-ratio</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>/<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">}</span></code></pre></div>
<p>und in dem <code>iframe</code>-Code die Parameter <code>width</code> und <code>height</code> durch die Klassenangabe (in diesem Fall <code>class="if16_9"</code>) ersetzt.</p>
<p><strong>Und bevor sich hier jemand beschwert</strong>: Ich weiß es selber, das Bannerbild ist <em>Kitsch as Kitsch can</em>. Aber ich übe ja noch und arbeite mich hart an der gekünstelten Intelligenzia ab. Daher habe ich auf die Schnelle nichts Besseres zustande gebracht. Und manchmal darf man auch einfach keine Angst vor Kitsch haben.&nbsp;🤓</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53537297945/">Ehrendoktorin</a></em>, erstellt mit <a href="https://www.flickr.com/photos/schockwellenreiter/53537297945/">Scenario</a>. Prompt: »<em>A young woman, with long dark hair, receives an honorary doctorate, in a university town</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, double person, second character</em>«. Modell: Stable Diffusion XL, Style: Blocky Cartoon.</p>



 ]]></description>
  <category>Wissenschaft</category>
  <guid>https://kantel.github.io/posts/2024021802_mailab/</guid>
  <pubDate>Sun, 18 Feb 2024 17:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021802_mailab/images/ehrendoktorin.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>»Neues« (?) vom Webdesign: Iframe responsive</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021801_iframe_respnonsive/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53432093827/"><img src="https://kantel.github.io/posts/2024021801_iframe_respnonsive/images/designresp-b.jpg" class="img-fluid"></a></p>
<p>Da ich doch recht froh war, mit meinem <a href="https://kantel.github.io/posts/2022120602_schockwellenreiteronline/">Umzug zu Quarto</a> diese Seiten doch weitestgehend responsiv gestaltet zu haben, hatte ich von den noch offenen Baustellen erst einmal die Finger gelassen. Ich bin kein Webdesigner und wollte einfach das Erreichte nicht wieder gefährden.</p>
<p>Zu den noch offenen Baustellen gehören insbesondere die <code>Iframes</code> – bisher hielt ich die ihre responsive Gestaltung für doch <a href="https://www.w3schools.com/howto/howto_css_responsive_iframes.asp">recht kompliziert</a> (vor allem, da ich alle diese CSS-Klassen auch noch irgendwie <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a> beibringen müßte). Daher hatte ich mich im großen und ganzen bei den <code>Iframes</code> auf die Einbindung von Videos beschränkt und es einfach hingenommen, daß in diesem Fall die Darstellung auf meinem Smartphone-Monitor (zumindest im Hochformat) doch recht suboptimal war.</p>
<p>Mit meiner frisch erwachten Liebe zu JavaScript jedoch wurde das Problem wieder dringender: Programme erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a> (-<a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5xjswidget.html">Widget</a>), <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/microstudio.html">microStudio</a> und nicht zuletzt all die einbindbaren <a href="https://kantel.itch.io/">Apps von Itch.io</a> – sie sie und noch vieles mehr schreit alles nach <code>IFrames</code>. Daher habe ich die Suchmaschine unserer aller Datenkrake noch einmal angeworfen und nachgeschaut, ob sie dafür eine Lösung <em>in petto</em> hat. Und wenig überraschend – sie hatte:</p>
<p>Der Aufsatz »<a href="https://benmarshall.me/responsive-iframes/">Responsive iframes: Native CSS aspect-ratio Guide</a>« von <em>Ben Marshall</em> sagt, daß es eine »neue« <code>aspect-ratio</code> Eigenschaft in CSS gäbe und damit würde es genügen, in die CSS-Datei</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb1-1">iframe {</span>
<span id="cb1-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">aspect-ratio</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>/<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">}</span></code></pre></div>
<p>einzugeben und schon wäre alles gelaufen. Die Eigenschaft würde mittlerweile von <a href="https://caniuse.com/mdn-css_properties_aspect-ratio">allen wichtigen Browsern unterstützt</a>, so daß man sich in dieser Hinsicht keine Gedanken machen müßte.</p>
<p>Ich muß jetzt noch ausprobieren, ob <code>aspect-ratio</code> auch mit CSS-Klassen funktioniert, da bei mir <code>Iframes</code> unterschiedliche Seitenverhältnisse haben können (neben 16:9 zumindest auch noch 4:3, aber auch andere wären vorstellbar). In einem der nächsten Beiträge werde ich das mal an einem YouTube-Video testen. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53432093827/">Schlange erschrickt vor responsiven Design-Anforderungen</a></em>, erstellt mit <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>. Prompt: »<em>A python stands in front of an easel in a laboratory with strange technical devices and paints colorful pictures. colored steampunk style</em>«, Modell: Stable Diffusion XL, Style: Comic Book.</p>



 ]]></description>
  <category>Quarto</category>
  <category>Webworking</category>
  <category>Interna</category>
  <guid>https://kantel.github.io/posts/2024021801_iframe_respnonsive/</guid>
  <pubDate>Sun, 18 Feb 2024 15:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021801_iframe_respnonsive/images/designresp.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Life is Life: Conways Game of Life in Python und P5.js</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021601_life_is_life/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53533306985/"><img src="https://kantel.github.io/posts/2024021601_life_is_life/images/life03-b.jpg" class="img-fluid"></a></p>
<p>Mit seinem »<a href="https://de.wikipedia.org/wiki/Conways_Spiel_des_Lebens">Spiel des Lebens</a>« <em>(Game of Life)</em> hat der britische Mathematiker <em><a href="https://de.wikipedia.org/wiki/John_Horton_Conway">John Horton Conway</a></em> 1970 eine Ikone der theoretischen Informatik und der Automatentheorie geschaffen, die auch <a href="https://mathematikalpha.de/game-of-life">heute noch fasziniert</a>. Aufgrund der einfachen Regeln ist dieses Spiel leich zu programmieren, überrascht aber doch immer wieder mit unerwarteten Ergebnissen. Hier zwei ganz frische Implementierungen, eine in Python und eine in JavaScript/P5.js:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/PpywbmIcUhM?si=bsoWVHrGQwWSWytd" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>In »<a href="https://www.youtube.com/watch?v=PpywbmIcUhM">Create Conway’s Game of Life in Python</a>« wird eine <a href="https://realpython.com/courses/conway-game-of-life-python/">Implementierung gezeigt</a>, die auch <a href="https://realpython.com/conway-game-of-life-python/">im Terminal läuft</a>. Damit erinnert sie mich nicht nur an <em>Al Sweigart</em> legendärem »<a href="http://blog.schockwellenreiter.de/2022/08/2022082901.html">Big Book of Small Python Projects</a>« (der auf Seite 59ff ebenfalls eine Terminal-Implementierung von Life vorstellt), sondern durch den Einsatz der Herzchen (♥︎) auch an <em>Nick Caseys</em> bahnbrechenden Aufsatz »<a href="https://ncase.me/simulating/index_old.html">Simulating the World in Emojis</a>« aus dem Jahre 2016.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/lsWulRIWzdo?si=koJFVpneandoinbo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Wenn ich an <em>Nick Caseys</em> Aufsatz denke, denke ich automatisch auch immer an <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>, weil mit dem dort vorhandenen DOM-Modell sich sehr leicht Slider, Checkboxen oder andere GUI-Elemente in einen Sketch integrieren lassen. Daher möchte ich Euch auch noch das Video-Tutorial »<a href="https://www.youtube.com/watch?v=lsWulRIWzdo">Conway’s Game of Life</a>« vorstellen, das <em>Patt Vira</em> erst vor wenigen Stunden hochgeladen hat – zwar ohne DOM-Elemente, aber <em>Patt Viras</em> P5.js-Tutorials sind immer anschauenswert.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/zH3eH3hlGoo?si=r5F7VQdLz139hHe3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p><strong>War sonst noch was?</strong> Ach ja, die Herzchen, Jörg, vergiß die verdammten Herzchen nicht. Wie könnte ich? Vor zwei Tagen war Valentins-Tag und aus diesem Anlaß hat <em>Patt Vira</em> mit »<a href="https://www.youtube.com/watch?v=zH3eH3hlGoo">Falling Hearts</a>« ein weiteres P5.js-Tutorial auf YouTube veröffentlicht – mit Herzchen bis zum Abwinken.</p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53533306985/">Conways Game of Life</a></em>, wie es die <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/playgroundai.html">Playground AI</a> sieht. Prompt (ganz simpel): »<em>Conway’s Game of Life</em>«, Modell: Playground V2, Style: None.</p>



 ]]></description>
  <category>Creative Coding</category>
  <category>Informatik</category>
  <category>Python</category>
  <category>P5.js</category>
  <guid>https://kantel.github.io/posts/2024021601_life_is_life/</guid>
  <pubDate>Fri, 16 Feb 2024 17:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021601_life_is_life/images/life03.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Dancing Downtown (mit Scenario)</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021501_dancing_downtown/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53530270222/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown00-b.jpg" class="img-fluid"></a></p>
<p>Es ist schon <a href="https://kantel.github.io/posts/2024012501_dock_of_the_bay/">etwas länger her</a>, seitdem ich Euch das letzte Mal auf diesen Seiten mit einer Galerie von Bildern, die eine gekünstelte Intelligenzia verbrochen hatte, langweilte. Doch nachdem ich heute für ein anderes Projekt ein Bild mit Sofas, die mit Menschen und Autos auf Neuköllns Straßen tanzen, benötigte, fand ich die Ergebnisse, die <a href="https://app.scenario.com/">Scenario</a> mir präsentierte, so nett, daß ich der Versuchung nicht widerstehen konnte:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53531508169/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531190366/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531507399/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53531189736/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown04.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531369128/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown05.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531368763/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown06.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53530281712/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown07.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531176731/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown08.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53531597235/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown09.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53531596900/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown10.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53530268682/"><img src="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown11.jpg" class="img-fluid"></a></p>
<p><em>Mit einem Klick auf die Vorschaubilder kommt Ihr je auf eine Seite mit einer Vergrößerung.</em></p>
<p>Okay, das Ambiente erinnert mehr an ein mediterranes Städtchen denn an Neukölln (und das trotz des Stils »Belgian School Comic« – ich wußte gar nicht, daß Belgien am Mittelmeer liegt), aber Sofas sind da, Menschen sind da und Autos sind ebenfalls da. Mehr kann man von einer strunzdummen, künstlichen Intelligenz eigentlich nicht erwarten.</p>
<p>Und dank des »<a href="https://help.scenario.com/">Scenario Knowledge Centers</a>« und etlicher Tutorials, die die Macher von Scenario auf X (das früher einmal Twitter hieß) veröffentlichten, und die auf jeden Fall hilfreicher sind, als die offiziellen, meist sehr kryptischen Videos, verstehe ich so langsam, wie Scenario funktioniert. Vielleicht schaffe ich es doch noch, damit wirklich konsistente Charaktere zu entwickeln. <em>Still digging!</em></p>
<hr>
<p><strong>Bilder</strong>: <em>Dancing Downtown</em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>abandoned sofas+ and armchairs party and dance happily along with few people on the streets in downtown. there are a few cars on the street too</em>«. Negative Prompt: »<em>people, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, missing legs, extra legs+</em>«, Modell: Stable Diffusion XL, Style: Belgian School Comics.</p>



 ]]></description>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <category>Stable Diffusion</category>
  <category>Scenario</category>
  <guid>https://kantel.github.io/posts/2024021501_dancing_downtown/</guid>
  <pubDate>Thu, 15 Feb 2024 19:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021501_dancing_downtown/images/dancingdowntown00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Sicherheitsupdate für Adobe Reader und Acrobat</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021402_reader_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/"><img src="https://kantel.github.io/posts/2024021402_reader_update/images/femalereader-b.jpg" class="img-fluid"></a></p>
<p>Adobe liefert mit dem Update APSB24-07 wieder <a href="https://helpx.adobe.com/security/products/acrobat/apsb24-07.html">Korrekturen für Sicherheitslücken</a> im Reader und in Acrobat (unter Windows und Mac).</p>
<p>Das Update gelingt am einfachsten über den internen Update-Mechanismus. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53493700935/">Female Reader</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A young woman with red lips, blue eyes, slim, brown, curly hair and glasses in a colorful checked shirt and vest, short blue skirt and high heels. full body, sitting in an office in front of a computer. In the background are shelves with files and books. The sun shines through a large window. colored french comic style</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers, gloves, backpack, shoulder bag, bag, (((shoulder bag)))</em>«, Modell: Stable Diffusion XL, Style: Illustrated Anime + Creepy Nordic.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024021402_reader_update/</guid>
  <pubDate>Wed, 14 Feb 2024 15:10:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021402_reader_update/images/femalereader.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Google korrigiert mit Version 121 seines Browsers Chrome kritische Sicherheitslücken</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021401_chrome_update/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53499388967/"><img src="https://kantel.github.io/posts/2024021401_chrome_update/images/datenkrake02202402-b.jpg" class="img-fluid"></a></p>
<p>Google veröffentlicht das Update der Version 121 (121.6167.184/185) seines Browsers Chrome und schließt damit auch wieder <a href="https://chromereleases.googleblog.com/2024/02/stable-channel-update-for-desktop_13.html">kritische Sicherheitslücken</a>.</p>
<p>Chrome aktualisiert sich (außer bei Linux) über die integrierte Update-Funktion, kann aber – wenn es pressiert – auch <a href="https://www.google.com/intl/de/chrome/browser/">hier geladen</a> werden. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53499388967/">Octopussy</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>A female robot flees from a gigantic data octopus</em>«. Negative Prompt: »<em>ugly, deformed, noisy, blurry, distorted, out of focus, bad anatomy, extra limbs, poorly drawn face, poorly drawn hands, missing fingers</em>«, Modell: Stable Diffusion XL, Style: Scifi Magic + Belgian School.</p>



 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024021401_chrome_update/</guid>
  <pubDate>Wed, 14 Feb 2024 14:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021401_chrome_update/images/datenkrake02202402.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Das Abenteuer Bitsy geht weiter: Neue Tutorials von Dan Cox</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021302_bitsy_tuts_2/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53527691505/"><img src="https://kantel.github.io/posts/2024021302_bitsy_tuts_2/images/bitsyplayground-b.jpg" class="img-fluid"></a></p>
<p>Es sind nicht nur die interaktiven Geschichten mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a>, <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, die mich umtreiben, sondern auch das »Abenteuer <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/bitsy.html">Bitsy</a>« geht weiter, denn <em>Dan Cox</em> hat seine Tutorialreihe in seiner neu gestarteten <a href="https://www.youtube.com/playlist?list=PLlXuD3kyVEr6bprFqUBCOEWT47xqYmVQ4">Playlist zu Bitsy 8</a> mit neuen Videos gefüttert. Seit meiner <a href="https://kantel.github.io/posts/2024020102_bitsy_tuts/">ersten Erwähnung</a> vor knapp zwei Wochen sind diese Tutorials ganz frisch hinzugekommen:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=UmCYKlwR7ro">Crafting Dialogue</a> und <a href="https://www.youtube.com/watch?v=xv228U3mUAQ">Sequence, Cycle, and Shuffle Lists</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=ajZRsuhx9rU">Example: Having Conversations</a>.</li>
<li><a href="https://www.youtube.com/watch?v=cjfPvPzUJ0o">Items and Inventory</a> und <a href="https://www.youtube.com/watch?v=Br25SvLmUTQ">Branching List using Items</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=Zgyj9iYtPWQ">Collecting Papers</a>.</li>
<li><a href="https://www.youtube.com/watch?v=_FIfHbT-Kqo">Locking and Unlocking Exits</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=izSZHCalpbA">Using Keys</a>.</li>
<li><a href="https://www.youtube.com/watch?v=Y902SYlQs0I">Exit Interaction Actions</a> mit dem Beispiel <a href="https://www.youtube.com/watch?v=oMeMqgBHzGA">Teleporting Puzzle</a>.</li>
</ul>
<p>Wieder schafft es <em>Dan</em>, die Faszination dieser Engine in seinen Tutorials herüberzubringen und motiviert mich damit – nicht nur, weil ich die <a href="https://ledoux.itch.io/bitsybox">Bitsybox</a> im letzten Monat <a href="https://kantel.github.io/posts/2024010702_bitsybox/">entdeckt hatte</a> – auch meine Experimente mit dieser minimalistischen Engine fortzusetzen (genauer: endlich wieder aufzunehmen).</p>
<p>Auch von seinen <a href="https://kantel.github.io/posts/2024020201_harlowe_tuts/">Twine-Tutorials mit Harlowe</a> gibt es Updates. Darauf werde ich in einem separaten Beitrag in den nächsten Tagen zurückkommen.</p>



 ]]></description>
  <category>Bitsy</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024021302_bitsy_tuts_2/</guid>
  <pubDate>Tue, 13 Feb 2024 20:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021302_bitsy_tuts_2/images/bitsyplayground.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Notion</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021301_notion/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53527238053/"><img src="https://kantel.github.io/posts/2024021301_notion/images/notion-b.jpg" class="img-fluid"></a></p>
<p><strong><a href="https://www.notion.so/de-de">Notion</a></strong> ist eine Freemium-Webanwendung (proprietär, aber für Privatanwender kostenlos) für Produktivität und Notizen, die von <em>Notion Labs Inc.</em> entwickelt wurde. Sie bietet Organisationstools wie Aufgabenverwaltung, Projektverfolgung, Aufgabenlisten und Lesezeichen.</p>
<p>Da in meinem Workflow zwischen Zettelkasten (<a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/logseq.html">Logseq</a>) und Publikationswerkzeug (<a href="http://cognitiones.kantel-chaos-team.de/webworking/auszeichnungssprachen/pandoc.html">Pandoc</a> und <a href="http://cognitiones.kantel-chaos-team.de/webworking/staticsites/quarto.html">Quarto</a>) immer noch eine Lücke für ein Entwurfswerkzeug klafft, habe ich mir testweise mal einen Notion-Account gegönnt und auch die Desktop App heruntergeladen.</p>
<p>Wohlgemerkt, das ist erst einmal ein Test und sonst gar nichts. Aber wie immer in solchen Fällen habe ich dem Teil <strong><a href="http://cognitiones.kantel-chaos-team.de/produktivitaet/notion.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert. <em>Still digging!</em></p>



 ]]></description>
  <category>Zettelkasten</category>
  <category>Notion</category>
  <guid>https://kantel.github.io/posts/2024021301_notion/</guid>
  <pubDate>Tue, 13 Feb 2024 18:00:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021301_notion/images/notion.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Es geht noch geiler: Web2Executable</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021201_web2exec/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53524181232/"><img src="https://kantel.github.io/posts/2024021201_web2exec/images/web2exe-b.jpg" class="img-fluid"></a></p>
<p>Vor <a href="https://kantel.github.io/posts/2024010702_bitsybox/">etwa einen Monat</a> berichtete ich über die <a href="https://ledoux.itch.io/bitsybox">Bitsybox</a>, einen Emulator für Windows, macOS und Linux, mit dem man Bitsy-Spiele »native« auf den genannten Plattformen abspielen kann, und kommentiere dies mit »wie geil ist das denn?«</p>
<p>Es geht aber noch geiler: Denn bei meiner <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">jüngsten Erkundung</a> von <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> stolperte ich auch über den Beitrag »<a href="https://kirill-live.itch.io/tuesday-js/devlog/241616/creation-html-desctop-app-for-windows-macos-and-linux">Creation html desctop app for windows macos and linux</a>«. Im Kontext, in dem er stand, vermutete ich zunächst, daß es um eine Anwendung ging, die Tuesday-JS-Spiele für den Desktop fit machen kann. Aber <a href="https://github.com/nwutils/Web2Executable">Web2Executable</a>, das Teil, um das es in diesem Beitrag geht, kann viel mehr – es kann nahezu jede JavaScript/HTML-App mit Hilfe von Node (genauer: <a href="https://github.com/nwutils/Web2Executable">NW.js</a> (das früher mal <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/nodewebkit.html">Node Webkit</a> hieß)), in eine Standalone-App für Windows, macOS und Linux verwandeln, ohne daß man einen Rechner mit den genannten Betriebssystemen besitzen muß (Okay, mindestens auf einen Rechner muß man natürlich Zugriff haben, aber auf dem kann man die Binaries auch für die »fremden« Betriebssysteme erzeugen).</p>
<p>Das alles ist natürlich mehr als geil: Nicht nur, daß ich damit Desktop-Apps für Tuesday JS erzeugen kann, sondern auch aus interaktiven Geschichten mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/inkle.html">Ink</a>, oder Spielen mit der <a href="https://kantel.github.io/posts/2024021001_ctJS/">jüngst entdeckten</a> JavaScript-Spiele-Engine <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">Ct.js</a> könnte ich »native« Anwendungen »stricken«. Und das ist noch nicht alles: Wegen meiner frisch erwachten JavaScript Begeisterung träume schon von <a href="http://cognitiones.kantel-chaos-team.de/programmierung/creativecoding/processing/p5js.html">P5.js</a>-Applikationen auf dem Desktop, die die DOM-Erweiterungen von P5.js nutzen, und noch an vieles mehr. Die Möglichkeiten sind nahezu grenzenlos. <em>Still dreaming!</em></p>
<p>Aber erst einmal habe ich aus meinem <a href="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/">gestern erstellten</a> Tuesday-JS-Prototypen eine Desktop-Anwendung erstellt. Die Mac-Version läuft, da ich jedoch keine Hardware habe, um die Linux- oder Windows-Version zu testen, habe ich alles <a href="https://kantel.itch.io/poirots-abenteuer">auf Itch.io hochgeladen</a> und bitte Euch da draußen, das auch mal unter Windows oder Linux anzuwerfen (Vorsicht, die Downloads sind naturgemäß (133 MB bis 157 MB) recht fett). Über Erfolgs- oder Mißerfolgsberichte in meinen Kommentaren wäre ich dankbar.</p>
<p>Wenn Ihr das Teil selber testen wollt, gibt es zwei Hürden zu überwinden: Die jüngste <a href="https://github.com/nwutils/Web2Executable/releases/tag/v0.7.2b">Version 0.7.2b</a> gibt es momentan als Binariy nur für Windows, Nutzer »richtiger« Betriebssysteme müssen auf die <a href="https://github.com/nwutils/Web2Executable/releases/tag/v0.7.1b">Version 0.7.1b</a> zurückgreifen. Und Apple-Nutzer kämpfen wie gewohnt mit der Überfürsorge ihres Betriebssystems, das den Download als potentiell gefährlich einstuft. Dagegen hat vermutlich jede und jeder von Euch da draußen seine eigene Strategie entwickelt.</p>
<p>Natürlich habe ich <strong><a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/web2executable.html">Web2Executable</a></strong> auch eine Seite in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert.</p>
<p><strong>War sonst noch was?</strong> Ach ja, wer lieber mit <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/electron.html">Electron</a> statt mit NW.js hantiert, für den hat der gleiche Autor das Tool <a href="http://cognitiones.kantel-chaos-team.de/webworking/frameworks/electrify.html">Electrify</a> entwickelt, das ähnlich wie Web2Executable funktioniert. Aber diese Anwendung ist seit etlichen Jahren verwaist und wird nicht mehr weiterentwickelt. Aber mir persönlich gefiel sowieso <a href="http://blog.schockwellenreiter.de/essays/nodewebkit01.html">Node Webkit/NW.js besser</a> als Electron, denn der Ansatz, zuerst eine HTML-Seite für die Applikation zu schreiben und dann das JavaScript drumherum zu stricken, <a href="http://blog.schockwellenreiter.de/2017/12/2017121105.html">liegt mir mehr</a>, als ausgehend von einer JavaScript-Datei <code>main.js</code> die Applikation zu erzeugen. Aber das ist vermutlich Geschmackssache – beide Anwedungen erzeugen – das liegt ein der Natur der Sache – gleich fette Dateien.</p>



 ]]></description>
  <category>JavaScript</category>
  <category>Creative Coding</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024021201_web2exec/</guid>
  <pubDate>Mon, 12 Feb 2024 19:35:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021201_web2exec/images/web2exe.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Erste Schritte mit Tuesday JS</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53523114788/"><img src="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/images/poirottuesday-b.jpg" class="img-fluid"></a></p>
<p>Ich habe meine <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">Ankündigung vom Donnerstag</a> wahrgemacht und so etwas wie erste Schritte mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday JS</a> unternommen, der freien (Apache-2.0-Lizenz) JavaScript-basierten Engine für <em>Visual Novels</em>, interaktive Geschichten und anderes. Und wenn ich ehrlich bin: Trotz der für mich ungewohnten Klicki-Bunti-Oberfläche hat es nicht wirklich wehgetan, sondern sogar ein wenig Spaß gemacht.</p>
<p>Zwar habe ich mich häufig – trotz der <a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial">Anleitung</a> – durch die Menüs wühlen müssen und einiges auch nur durch <em>Trial and Error</em> erreicht, aber <em>voilà</em>, hier ist er: Mein erster, echter Versuch mit Tuesday&nbsp;JS (und ein Nachbau meines <a href="http://blog.schockwellenreiter.de/2021/10/2021101502.html">ersten Ren’Py-Tutorials</a>):</p>
<iframe src="anim/index.html" width="640" height="366" name="Tuesday JS 1st Steps">
</iframe>
<p>Wie ich schon einmal schrieb, ist das Geniale an dieser Engine, daß sich die fertigen Ergebnisse problemlos in jede Webseite einbinden lassen und es damit ermöglicht, auch kleine Web-Comics oder ähnliche Experimente zu veröffentlichen. Ich werde darüber noch ein paar mal schlafen müssen.</p>
<p>Und wenn ich wirklich verstanden habe, wie diese Maschine funktioniert, wird es auch kleine Tutorials dazu hier im <em>Schockwellenreiter</em> geben. <em>Still digging!</em></p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <guid>https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/</guid>
  <pubDate>Sun, 11 Feb 2024 19:30:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021102_tuesdayjs_1st_steps/images/poirottuesday.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Rembg - Kann die KI auch weiße Kaninchen?</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021101_white_rabbit/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53520935501/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit_bgrem-b.jpg" class="img-fluid"></a></p>
<p>Gestern hatte ich mir <a href="https://kantel.github.io/posts/2024020702_rembg/">noch einmal Rembg</a> vorgeknöpft, denn mich interessierte natürlich brennend die Frage, ohne deren Antwort Ihr vermutlich auch nicht mehr ruhig schlafen könnt: Kann die gekünstelte Intelligenzia auch weiße Kaninchen freistellen? Spoiler: Sie kann – wenn auch mit Abstrichen.</p>
<p>Die Frage ist nicht so unsinnig, wie es zunächst scheint. Denn vermutlich ist die KI, die hinter <a href="https://github.com/danielgatis/rembg">Rembg</a> werkelt, mit Bildern von Menschen trainiert worden. Daher ist die Frage »Kann das Teil auch etwas anderes als Menschen freistellen?« durchaus berechtigt. Um es der KI nicht allzu schwer zu machen, habe ich als Testobjekt ein anthropomorphes weißes Kaninchen ausgewählt, dessen Bilder ich schon <a href="https://kantel.github.io/posts/2023102601_big_apple_patchday/">im Oktober letzten Jahres</a> von der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/comicfactory.html">AI Comic Factory</a> habe generieren lassen.</p>
<p>Dabei hat sich die KI ganz wacker geschlagen. Die Fehler in den freigestellten Bildern sind sicher zum großen Teil darauf zurückzuführen, daß der Konstrast zwischen Vorder- und Hintergrund zu gering war:</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53520073552/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit01.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53521396730/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit02.jpg" class="img-fluid"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53520967381/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit03.jpg" class="img-fluid"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53520967381/"><img src="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit04.jpg" class="img-fluid"></a></p>
<p>Trotzdem scheint die KI bei den freigestellten Kaninchen doch größere Probleme als bei Bildern von Menschen zu haben (so werden zum Beispiel die »Ohren« des Sessels als zum Kaninchen gehörend erkannt) – auch wenn sie ebenfalls im Comic-Stil gezeichnet sind. Jedenfalls scheinen auch bei Rembg durchaus noch Tests notwendig zu sein, vor allem wenn man so alltägliche Gegenstände wie Hexenbesen, Giftflaschen oder Zauberbücher freistellen will.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/65LQ1v-sidU?si=mLIaU6ov722eyDvw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="">
</iframe>
<p>Für diese Tests habe ich eine Erweiterung in meinem Skript eingebaut, die ich beim User <em>Gravitar</em> in seinem Video »<a href="https://www.youtube.com/watch?v=65LQ1v-sidU">Python Tutorial deutsch, Objekte in Photos freistellen</a>« gefunden habe: Er läßt beide Bilder in einer Art »Vorher - Nacher«-Ansicht in einem Fenster anzeigen. Das mußte ich natürlich <em>stante pede</em> meinem Skipt ebenfalls gönnen:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> rembg</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-5"></span>
<span id="cb1-6">DATAPATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(os.getcwd(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"images"</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whiterabbit03_02.png"</span>)</span>
<span id="cb1-9">output_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(DATAPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"whiterabbit03_02_output.png"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the input image</span></span>
<span id="cb1-12">input_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(input_path)</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input image to a numpy array</span></span>
<span id="cb1-15">input_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_image)</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply background removal using rembg</span></span>
<span id="cb1-18">output_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rembg.remove(input_array)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a PIL Image from the output array</span></span>
<span id="cb1-21">output_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(output_array)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the output image</span></span>
<span id="cb1-24">output_image.save(output_path)</span>
<span id="cb1-25">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGBA'</span>, (input_image.width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, input_image.height))</span>
<span id="cb1-26">result.paste(input_image, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-27">result.paste(output_image, (input_image.width, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb1-28">result.show()</span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I did it, Babe!"</span>)</span></code></pre></div>
<p><em>Gravatar</em> ist die Idee zu diesem Video durch <a href="https://kantel.github.io/posts/2024020702_rembg/">meinen Beitrag</a> hier in diesem ~<del>Blog</del>~ Kritzelheft gekommen, worauf er auch in seinem Video hinweist. Das war <a href="http://blog.schockwellenreiter.de/2022/10/2022101101.html">nicht das erste Mal</a> und ich freue mich natürlich immer über Feedback. Und noch ein Hinweis: <code>PIL</code> war ursprünglich der Name der <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pil.html">Python Image Library</a>, die lange Jahre so etwas wie ein Standard für Bildbearbeitung in Python war. Aus Lizenzgründen war sie jedoch nie Bestandteil der Standardbibliothek, sondern mußte separat installiert werden. Seit etlichen Jahren wird sie jedoch nicht mehr weiterentwickelt und läuft daher auch nicht mehr unter Python&nbsp;3. Um diesem unerfreulichen Umstand abzuhelfen, hat eine Gruppe von Enthusiasten eine »befreundete« <em>(friendly)</em> Fork <a href="http://cognitiones.kantel-chaos-team.de/programmierung/python/pillow.html">Pillow</a> ins Leben gerufen, die weitestgehen aufrufkompatibel zu PIL sein will. Jedoch sollte man – um Verwirrung zu vermeiden – nicht mit <code>import PIL</code> arbeiten, sondern mit <code>from PIL import Image</code>.</p>
<hr>
<p><strong>Bilder</strong>: Die Kaninchenbilder wurden im Original mit der <a href="http://cognitiones.kantel-chaos-team.de/multimedia/computergraphik/comicfactory.html">AI Comic Factory</a> erstellt. Prompt: »<em>a white rabbit with a pocket watch in his hand, wearing jacket and west, and a marabou with looking glasses, sitting on a coffeetable in the zoo</em>«, Style: Franco-Belgian</p>



 ]]></description>
  <category>Python</category>
  <category>Creative Coding</category>
  <category>Pillow</category>
  <guid>https://kantel.github.io/posts/2024021101_white_rabbit/</guid>
  <pubDate>Sun, 11 Feb 2024 13:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021101_white_rabbit/images/whiterabbit_bgrem.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Neu in meinem Wiki: Ct.js – eine Spiele-Engine in pure JavaScript</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024021001_ctJS/</link>
  <description><![CDATA[ 




<p><a href="https://raw.githubusercontent.com/ct-js/ct-js/develop/branding/GithubHeader.png"><img src="https://kantel.github.io/posts/2024021001_ctJS/images/ctjs_banner-b.jpg" class="img-fluid"></a></p>
<p>Soeben trudelte in meinem Feedreader die Meldung herein, daß <a href="https://ctjs.rocks/">Ct.js</a>, eine kleine, feine und vor allem freie (MIT-Lizenz) JavaScript-Game-Engine, in der <a href="https://ctjs.rocks/changelog/">Version 4.0</a> freigegeben wurde. Ich hatte das Teil vor etwa zwei Jahren schon einmal auf dem Schirm, aber nicht weiter beachtet. Nun aber – mit meiner frisch erwachten Begeisterung für JavaScript – finde ich, daß ich das Teil unbedingt einmal testen sollte.</p>
<p>Denn es behauptet von sich, eine 2D-Game-Engine mit hochwertiger Dokumentation, visuellen Tools für die Asset-Verwaltung und einem intelligenten Code-Editor, alles integriert in einer IDE, zu sein. Dammit ich meine guten Vorsätze nicht vergesse, habe ich ihm erst einmal <strong><a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/ctjs.html">eine Seite</a></strong> in <a href="http://cognitiones.kantel-chaos-team.de/index.html">meinem Wiki</a> spendiert.</p>
<p>Auf der eigenen Homepage macht das Teil massiven Gebrauch von den freien (<a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>) <a href="https://www.kenney.nl/assets">Kenney-Game-Assets</a> (siehe auch Bannerbild oben). Das brachte mich auf eine Idee: Wenn ich rechtzeitig mit meinen Tests der Engine beginne und mit ihr ein wenig vertraut bin, könnte ich vielleicht damit an der <a href="https://kantel.github.io/posts/2024012901_kenney_jam_2024/">Kenney Jam 2024</a> teilnehmen. Die Idee hat einen gewissen Charme. <em>Still digging!</em></p>



 ]]></description>
  <category>Spieleprogrammierung</category>
  <category>JavaScript</category>
  <guid>https://kantel.github.io/posts/2024021001_ctJS/</guid>
  <pubDate>Sat, 10 Feb 2024 15:05:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024021001_ctJS/images/ctjs_banner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Konsistente Charaktere und Künstliche Intelligenz</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020902_ki_kons_char/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53518059577/"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/entrancehallmockup-b.jpg" class="img-fluid"></a></p>
<p>Es ist ziemlich schwierig, mit den derzeitigen Werkzeugen der gekünstelten Intelligenzia wenigstens einigermaßen konsistente Charaktere zu generieren. Zwar gibt es auf YouTube eine große Anzahl von Videos, die behaupten, Lösungen für das Problem gefunden zu haben, jedoch ist das, was sie unter »Charakterkonsistenz« verstehen, meist weit von dem entfernt, was man zum Beispiel bei Avataren für eine <em>Visual Novel</em> benötigt.</p>
<p>Bei interaktiven Geschichten, die man etwa mit <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/twine2.html">Twine</a> erstellt, kann man das Problem meistens großzügig ignorieren und einfach hoffen, daß der Leserin/Spielerin oder dem Leser/Spieler die Brüche in den Zeichnungen nicht störend auffallen, da meist in der Regel die Abbildung je auf einer separaten Seite für sich alleine steht (vergleiche die <a href="https://kantel.github.io/posts/2023111901_smashing_pumpkins_devlog_3/">Smashing Pumpkins</a>, wo ich wild Bilder zusammengemixt hatte). Aber zum Beispiel bei <em>Visual Novels</em> in <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> oder <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a> sieht die Sache schon anders aus.</p>
<p>Und da ich momentan an <a href="https://kantel.github.io/posts/2024020801_tuesdayjs_update/">ersten Tests mit Tuesday&nbsp;JS</a> arbeite, wurde ich mit dem Problem konfrontiert, und ich glaube, eine Lösung gefunden zu haben, die mich erst einmal zufriedenstellt. Für diesen Prototypen habe ich zwei Charaktere (einen Privatdetektiv und ein Zimmermädchen) mit <a href="https://app.scenario.com/">Scenario</a> generiert (ich habe jeweils bestimmt je 100 Versuche gestartet, bis ich endlich mit den Ergebnissen zufrieden war).</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53515278291/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid_orig.jpg" class="img-fluid" alt="Zimmermädchen"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53517612235/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye_orig.jpg" class="img-fluid" alt="Privatdetektiv"></a></p>
<p>Diese Bilder habe ich dann in <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a> importiert und als Grundlage für ein <em>»Image to Image« Refinement</em> genommen (das geht auch in Scenario, aber ich bin momentan einfach mit DreamStudio vertrauter – die vielen LoRAS in Scenario verwirren mich einfach, da greife ich doch lieber auf das gewohnte <em>Comic Book</em> zurück). Dort habe ich dann mit dem gleichen Prompt Variationen generiert, in dem ich an zweiter Position den Prompt um die gewünschten <em>facial expressions</em> ergänzt hatte (zum Beispiel <em>angry</em>, <em>confused</em>, <em>sad</em>, <em>smiling</em> oder <em>talking</em>). Und weil ich den Detektiv eigentlich ohne Brille haben wollte, habe ich seinem Negativ-Prompt noch ein <em>looking glass</em> spendiert. Nicht alle Bilder waren produktionsreif, aber die besten sahen so aus – bei dem Zimmermädchen (Auswahl):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53519145519/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid01.jpg" class="img-fluid" alt="Zimmermädchen sehr traurig"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519142594/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid02.jpg" class="img-fluid" alt="Zimmermädchen sprechend"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53518827531/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid03.jpg" class="img-fluid" alt="Zimmermädchen fröhlich"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53519248330/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid04.jpg" class="img-fluid" alt="Zimmermädchen verwirrt"></a>&nbsp;<span class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/maid05.jpg" class="img-fluid" alt="Zimmermädchen verärgert"></span></p>
<p>Oder bei dem Detektiv (ebenfalls nur eine Auswahl):</p>
<p><a href="https://www.flickr.com/photos/schockwellenreiter/53519169229/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye01.jpg" class="img-fluid" alt="Privatdetektiv sehr traurig"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519168809/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye02.jpg" class="img-fluid" alt="Privatdetektiv sprechend"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53517964722/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye03.jpg" class="img-fluid" alt="Privatdetektiv fröhlich"></a><br><br> <a href="https://www.flickr.com/photos/schockwellenreiter/53519012558/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye04.jpg" class="img-fluid" alt="Privatdetektiv verwirrt"></a>&nbsp;<a href="https://www.flickr.com/photos/schockwellenreiter/53519156939/" class="lightbox"><img src="https://kantel.github.io/posts/2024020902_ki_kons_char/images/priveye05.jpg" class="img-fluid" alt="Privatdetektiv verärgert"></a></p>
<p>Diese Bilder habe ich dann mit dem <a href="https://kantel.github.io/posts/2024020702_rembg/">kürzlich entdecken Rembg</a> vom Hintergrund freigestellt und kann sie nun als Avatare in (m)einer <em>Visual Novel</em> nutzen. Als <em>Proof of Concept</em> habe ich zwei von ihnen in das <em>Mockup</em> des Bannerbilds oben einkopiert.</p>
<p>Ich will ehrlich sein: Erstens ist es mit Sicherheit nicht das, was versierte Pixelartisten daraus hätten machen können (aber hey, es ist nur eine Maschine ohne Kreativität und Verstand, die ich damit beauftragt habe). Zweitens sind trotz aller Auswahl und vieler verworfener Versuche noch immer einige Inkonsistenzen zu entdecken. Einige davon habe ich schon für das obige Mockup mit der Bildbearbeitung meines Vertrauens zu eliminieren versucht, aber noch einmal – ich bin kein Pixelartist.</p>
<p>Trotzdem bin ich mit dem Ergebnis recht zufrieden und werde die Bildchen in meinem geplanten Tuesday&nbsp;JS Test einsetzen. Denn erst in der Anwendung zeigt sich, ob das Erreichte wirklich etwas taugt. <em>Still digging!</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53518059577/">Mockup für eine Visual Novel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a> und <a href="https://beta.dreamstudio.ai/generate">DreamStudio</a>.</p>



 ]]></description>
  <category>Künstliche Intelligenz</category>
  <category>Bilder</category>
  <category>Stable Diffusion</category>
  <category>DreamStudio</category>
  <category>Scenario</category>
  <category>Spieleprogrammierung</category>
  <category>Interactive Fiction</category>
  <category>Tuesday JS</category>
  <guid>https://kantel.github.io/posts/2024020902_ki_kons_char/</guid>
  <pubDate>Fri, 09 Feb 2024 19:45:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020902_ki_kons_char/images/entrancehallmockup.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Apple Patchday Februar 2024 – erste Lieferung</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020901_apple_patchday/</link>
  <description><![CDATA[ 




<p><a href="https://www.flickr.com/photos/schockwellenreiter/53482831798/"><img src="https://kantel.github.io/posts/2024020901_apple_patchday/images/apple20240201-b.jpg" class="img-fluid"></a></p>
<p>Die Firma aus Cupertino mit dem angebissenen Apfel im Logo hatte gestern ihren monatlichen Flickentag. Auch wenn sie vermutlich noch nicht alle Updates unters Volk gebracht hat, sind es doch so viele, daß ich sie wieder <em>en bloc</em> veröffentlichen möchte:</p>
<section id="apple-veröffentlicht-macos-sonoma-14.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-macos-sonoma-14.3.1">Apple veröffentlicht macOS Sonoma 14.3.1</h3>
<p>Apple hat das Update auf die neue Betriebssystemversion macOS Sonoma 14.3.1 freigegeben und korrigiert damit auch wieder Sicherheitsprobleme.</p>
<p>Das Update steht über die Systemeinstellungen zur Verfügung.</p>
</section>
<section id="apple-veröffentlicht-ios-17.3.1-und-ipados-17.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-ios-17.3.1-und-ipados-17.3.1">Apple veröffentlicht iOS 17.3.1 und iPadOS 17.3.1</h3>
<p>Wie angekündigt hat Apple das Update auf iOS 17.3.1 und iPadOS 17.3.1 bereitgestellt. Die Updates bieten Fehlerbehebungen und korrigieren kritische Sicherheitslücken.</p>
<p>Das Update auf auf iOS 17.3.1 iPadOS 17.3.1 kann über OTA (<em>Over the Air</em> - in <code>Einstellungen &gt; Allgemein &gt; Softwareaktualisierung</code>, an ausreichender Akku-Kapazität und freien Speicherplatz sollte gedacht werden) oder über iTunes erfolgen.</p>
<p>Eine vorherige Sicherung des Geräts ist wie immer sehr zu empfehlen.</p>
</section>
<section id="apple-veröffentlicht-watchos-10.3.1" class="level3">
<h3 class="anchored" data-anchor-id="apple-veröffentlicht-watchos-10.3.1">Apple veröffentlicht watchOS 10.3.1</h3>
<p>Apple hat für die Apple Watch watchOS 10.3.1 bereitgestellt und behebt damit auch wieder Sicherheitsprobleme.</p>
<p>Die Aktualisierung wird über die Apple-Watch-App auf dem iPhone gestartet unter <code>Allgemein &gt; Softwareupdate</code>. Dabei sollte sich die Uhr in Reichweite des iPhones befinden, mit dem Ladekabel verbunden und mindestens zu 50 Prozent geladen sein.</p>
<p>Die übrigen, noch fehlenden Updates für die älteren, noch unterstützten Betriebssystemversionen werden sicher in den nächsten Tagen folgen. <em>(Mein <a href="http://www.gwdg.de/~mreiman1/">persönlicher CERT</a> per Email.)</em></p>
<hr>
<p><strong>Bild</strong>: <em><a href="https://www.flickr.com/photos/schockwellenreiter/53482831798/">Schneewittchen, die Hexe und die Äpfel</a></em>, erstellt mit <a href="http://cognitiones.kantel-chaos-team.de/technikgeschichte/rechnerundnetze/scenario.html">Scenario</a>. Prompt: »<em>The evil witch gives Snow White a half-eaten apple in the fairytale forest</em>«, Modell: Stable Diffusion XL, Style: Hyper-Realistic Digital Watercolor + Vibrant Storybook.</p>


</section>

 ]]></description>
  <category>Security</category>
  <guid>https://kantel.github.io/posts/2024020901_apple_patchday/</guid>
  <pubDate>Fri, 09 Feb 2024 14:25:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020901_apple_patchday/images/apple20240201.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kurios und kurioser: Tuesday JS v42 freigegeben</title>
  <dc:creator>Jörg Kantel</dc:creator>
  <link>https://kantel.github.io/posts/2024020801_tuesdayjs_update/</link>
  <description><![CDATA[ 




<p><a href="https://kirilllive.github.io/tuesday-js/screenshots/script_structure.jpg"><img src="https://kantel.github.io/posts/2024020801_tuesdayjs_update/images/tuesday_script_struct-b.jpg" class="img-fluid"></a></p>
<p>Meine <a href="https://kantel.github.io/posts/2024020702_rembg/">gestrigen Experimente</a> mit dem Freistellen von Bildern hatte ich nicht grundlos durchgeführt. Denn gestern schneite in meinen Feedreader die Meldung herein, daß <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/tuesdayjs.html">Tuesday&nbsp;JS</a>, die freie (Apache 2.0-Lizenz) JavaScript-basierte Engine für <em>Visual Novels</em> und interaktive Geschichten (und noch einiges mehr) in der <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/42.0.0">Version 4.2 erschienen</a> sei (bisher fuhr ich mit der Version 35, das (wichtige!) Update auf die <a href="https://github.com/Kirilllive/tuesday-js/releases/tag/41.0.0">Version 41</a> vom 21. Dezember letzten Jahres hatte ich wohl im Festtagsstreß verschlafen).</p>
<p>Das erinnerte mich – unabhängig davon, daß die Engine sowieso auf meiner Testliste steht – an eine Idee von mir: Schon lange wollte ich mal so etwas wie kurze, interaktive Geschichten entwickeln, die man im Netz (also vor allem auch in diesem <del>Blog</del> Kritzelheft) einbinden und präsentieren kann, kurze, bebilderte Nachrichten, satirische Kommentare oder ähnliches. Ursprünglich hatte ich dafür <a href="http://cognitiones.kantel-chaos-team.de/multimedia/spieleprogrammierung/renpy.html">Ren’Py</a> vorgesehen (hier der <a href="https://kantel.itch.io/neuklln-ist-arm">Link zu einem Prototyp</a> auf Itch.io), aber der Ballast, den Ren’Py in seiner HTML-Version mitschleppt, ist so fett, daß die Ladezeit länger dauert als die Zeit, die das Skript zur Ausführung benötigt. Da ist Tuesday JS doch bedeutend schlanker und schneller (hier ebenfalls ein <a href="https://kantel.itch.io/tuesday-js-test">Link zu einem Prototyp</a> auf Itch.io) und zusätzlich kann die Applikation direkt vom eigenen Server in die Webseite eingebunden werden (ohne von einem dritten Anbieter kommen zu müssen) und lädt auch recht schnell:</p>
<iframe src="anim/index.html" width="640" height="480" name="Tuesday JS Test">
</iframe>
<p>Daher will ich nun ein wenig mit Tuesday JS experimentieren und dazu gehört nicht nur, daß ich mir von einer gekünstelten Intelligenzia dafür die Bilder und Avatare erstellen lasse, sondern daß ich mir auch die Tutorials dazu reinziehe. Denn wie ich <a href="https://kantel.github.io/posts/2023101901_tuesdayjs_1st_steps/">hier schon schrieb</a>, ist für einen Menschen wie mich, der am liebsten in seinem Texteditor herumsaut, die <em>Point-and-Click</em>-Oberfläche eines Tools wie Tuesday JS doch recht gewöhnungsbedürftig.</p>
<p>Daher hier (teilweise noch einmal) die Tutorials, die mir bisher zu dieser Engine untergekommen waren:</p>
<ul>
<li><a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#quick_tutorial">Tuesday JS Quick Guide</a></li>
<li><a href="https://kirill-live.itch.io/tuesday-js/devlog/241616/creation-html-desctop-app-for-windows-macos-and-linux">Creation html desctop app for windows macos and linux</a></li>
<li>Creating Interactive Narratives Made Easy: <a href="https://medevel.com/tuseday-js/">Introducing Tuesday JS, the Open-Source Visual Novel Engine</a></li>
</ul>
<p>Als erstes habe ich vor, ich ein <a href="http://blog.schockwellenreiter.de/2021/10/2021101202.html">frühes</a> Ren’Py-Tutorial, das ich vor Jahren mal <a href="http://blog.schockwellenreiter.de/2021/10/2021101502.html">verbrochen hatte</a>, nach Tuesday zu portieren, um ein Gefühl für die Engine zu bekommen.</p>
<p>Parallel dazu möchte ich mir mit den Bildern, die ich mit KI-Applikationen erstellen werde, eine Repertoire an Charakteren, Avataren und Hintergrundbildern zusammenstellen, die ein einigermaßen konsistentes Erscheinungsbild dieser Experimente ermöglchen. Da ich mit beiden Tools – der Bildergenerierung mit Hilfe Künstlicher Intelligenz, wie auch mit Tuesday JS – Neuland betrete, bin ich selber gespannt ob und wenn ja, was dabei herauskommen wird. <em>Still digging!</em></p>
<p><strong>Was sonst noch was?</strong> Ach ja, <a href="https://kirilllive.github.io/tuesday-js/doc_editor.html#bot_telegram">Tuesday JS kann auch Chatbot</a>. Ein weiterer Grund, sich mit der Engine zu befassen.</p>



 ]]></description>
  <category>Tuesday JS</category>
  <category>Interactive Fiction</category>
  <category>Spieleprogrammierung</category>
  <category>Bilder</category>
  <category>Künstliche Intelligenz</category>
  <guid>https://kantel.github.io/posts/2024020801_tuesdayjs_update/</guid>
  <pubDate>Thu, 08 Feb 2024 16:15:00 GMT</pubDate>
  <media:content url="https://kantel.github.io/posts/2024020801_tuesdayjs_update/images/tuesday_script_struct.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
